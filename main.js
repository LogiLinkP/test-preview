"use strict";
(self["webpackChunkpraxus"] = self["webpackChunkpraxus"] || []).push([["main"],{

/***/ 94114:
/*!***************************************!*\
  !*** ./src/app/app-routing.module.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.routingComponents = exports.AppRoutingModule = void 0;
const router_1 = __webpack_require__(/*! @angular/router */ 95072);
const alumno_component_1 = __webpack_require__(/*! ./vistas/alumno/alumno.component */ 94805);
const login_component_1 = __webpack_require__(/*! ./vistas/login/login.component */ 75935);
const registro_component_1 = __webpack_require__(/*! ./vistas/registro/registro.component */ 72691);
const blank_component_1 = __webpack_require__(/*! ./vistas/blank/blank.component */ 15523);
const forgot_password_component_1 = __webpack_require__(/*! ./vistas/forgot-password/forgot-password.component */ 39227);
const estadisticas_component_1 = __webpack_require__(/*! ./vistas/estadisticas/estadisticas.component */ 49603);
const detalle_practica_component_1 = __webpack_require__(/*! ./vistas/detalle-practica/detalle-practica.component */ 62659);
const empresas_component_1 = __webpack_require__(/*! ./vistas/empresas/empresas.component */ 79905);
const cuestionario_component_1 = __webpack_require__(/*! ./vistas/cuestionario/cuestionario.component */ 81431);
const resumen_practicas_component_1 = __webpack_require__(/*! ./vistas/resumen_practicas/resumen_practicas.component */ 6451);
const configuracion_practica_component_1 = __webpack_require__(/*! ./vistas/configuracion-practica/configuracion-practica.component */ 53711);
const encuesta_fin_practica_component_1 = __webpack_require__(/*! ./vistas/encuesta-fin-practica/encuesta-fin-practica.component */ 48923);
const explicacion_consistencia_component_1 = __webpack_require__(/*! ./vistas/explicacion-consistencia/explicacion-consistencia.component */ 43171);
const vista_supervisor_component_1 = __webpack_require__(/*! ./vistas/vista-supervisor/vista-supervisor/vista-supervisor.component */ 55384);
const pnf_component_1 = __webpack_require__(/*! ./componentes/pnf/pnf.component */ 36432);
const revision_component_1 = __webpack_require__(/*! ./componentes/revision/revision.component */ 57892);
const evaluacion_supervisor_component_1 = __webpack_require__(/*! ./vistas/evaluacion_supervisor/evaluacion_supervisor.component */ 66163);
const iniciar_practica_component_1 = __webpack_require__(/*! ./componentes/iniciar-practica/iniciar-practica.component */ 83588);
const file_component_1 = __webpack_require__(/*! ./componentes/file/file.component */ 34806);
const chat_component_1 = __webpack_require__(/*! ./componentes/chat/chat.component */ 10462);
const informe_component_1 = __webpack_require__(/*! ./vistas/informe/informe.component */ 32331);
const notis_historial_component_1 = __webpack_require__(/*! ./vistas/notis-historial/notis-historial.component */ 20835);
const ramos_alumnos_component_1 = __webpack_require__(/*! ./vistas/ramos-alumnos/ramos-alumnos.component */ 57575);
const ramos_encargado_component_1 = __webpack_require__(/*! ./vistas/ramos-encargado/ramos-encargado.component */ 33627);
const estadistica_empresas_component_1 = __webpack_require__(/*! ./vistas/estadistica-empresas/estadistica-empresas.component */ 87975);
const admin_component_1 = __webpack_require__(/*! ./vistas/admin/admin.component */ 51512);
const registro_encargado_component_1 = __webpack_require__(/*! ./vistas/registro-encargado/registro-encargado.component */ 74905);
const ingreso_informe_component_1 = __webpack_require__(/*! ./vistas/ingreso-informe/ingreso-informe.component */ 42875);
const estudiante_ver_informe_component_1 = __webpack_require__(/*! ./vistas/estudiante-ver-informe/estudiante-ver-informe.component */ 11735);
const info_y_evaluacion_estudiante_component_1 = __webpack_require__(/*! ./vistas/wizards/info-y-evaluacion-estudiante/info-y-evaluacion-estudiante.component */ 69688);
const detalle_estudiante_component_1 = __webpack_require__(/*! ./vistas/wizards/detalle-estudiante/detalle-estudiante.component */ 36126);
const config_practica_component_1 = __webpack_require__(/*! ./vistas/wizards/config-practica/config-practica.component */ 98880);
const aptitudes_component_1 = __webpack_require__(/*! ./vistas/aptitudes/aptitudes.component */ 39843);
const confirmar_inicio_practica_component_1 = __webpack_require__(/*! ./vistas/confirmar-inicio-practica/confirmar-inicio-practica.component */ 89779);
const confirmacion_usuario_component_1 = __webpack_require__(/*! ./vistas/confirmacion-usuario/confirmacion-usuario.component */ 43475);
const environment_1 = __webpack_require__(/*! src/environments/environment */ 45312);
const perfil_component_1 = __webpack_require__(/*! ./vistas/perfil/perfil.component */ 17645);
const publicaciones_component_1 = __webpack_require__(/*! ./vistas/publicaciones/publicaciones.component */ 33387);
const vista_configs_practica_component_1 = __webpack_require__(/*! ./vistas/vista-configs-practica/vista-configs-practica.component */ 92379);
const plagios_component_1 = __webpack_require__(/*! ./vistas/plagios/plagios.component */ 32815);
const documentacion_component_1 = __webpack_require__(/*! ./vistas/documentacion/documentacion.component */ 76451);
const password_recovery_component_1 = __webpack_require__(/*! ./vistas/password-recovery/password-recovery.component */ 12043);
const i0 = __webpack_require__(/*! @angular/core */ 37580);
const i1 = __webpack_require__(/*! @angular/router */ 95072);
const routes = [{
  path: '',
  component: login_component_1.LoginComponent
}, {
  path: environment_1.environment.ruta_practicas,
  component: resumen_practicas_component_1.TablaComponent
}, {
  path: environment_1.environment.ruta_practicas + '/:id',
  component: detalle_practica_component_1.DetallePracticaComponent
}, {
  path: environment_1.environment.ruta_practicas + '/:id/revision/:n',
  component: revision_component_1.RevisionComponent
}, {
  path: environment_1.environment.ruta_alumno,
  children: [{
    path: ':id',
    component: alumno_component_1.DetalleAlumnoComponent,
    children: [{
      path: 'cuestionario/:n',
      component: cuestionario_component_1.CuestionarioComponent
    }, {
      path: 'empresas',
      component: empresas_component_1.EmpresasComponent
    }, {
      path: 'iniciarpractica/:n',
      component: iniciar_practica_component_1.IniciarPracticaComponent
    }, {
      path: 'perfil',
      component: perfil_component_1.PerfilComponent
    }, {
      path: 'publicaciones',
      component: publicaciones_component_1.PublicacionesComponent
    }]
  }]
}, {
  path: 'home_supervisor',
  component: vista_supervisor_component_1.VistaSupervisorComponent
}, {
  path: environment_1.environment.ruta_supervisor + '/evaluacion',
  component: evaluacion_supervisor_component_1.EvaluacionComponent
}, {
  path: environment_1.environment.ruta_registro,
  component: registro_component_1.RegistroComponent,
  data: {
    title: 'Registro'
  }
}, {
  path: environment_1.environment.ruta_login,
  component: login_component_1.LoginComponent,
  data: {
    title: 'Login'
  }
}, {
  path: 'blank',
  component: blank_component_1.BlankComponent
}, {
  path: environment_1.environment.ruta_reset_pass,
  component: forgot_password_component_1.ForgotPasswordComponent
}, {
  path: 'password_recovery/:n/:token',
  component: password_recovery_component_1.PasswordRecoveryComponent
}, {
  path: 'estadisticas',
  component: estadisticas_component_1.EstadisticasComponent
}, {
  path: 'documentacion',
  component: documentacion_component_1.DocumentacionComponent
}, {
  path: 'admin',
  children: [{
    path: '',
    component: admin_component_1.AdminComponent
  }]
}, {
  path: 'encargado/registro/:token',
  component: registro_encargado_component_1.RegistroEncargadoComponent
}, {
  path: 'encargado/aptitudes',
  component: aptitudes_component_1.AptitudesComponent
}, {
  path: 'configurar/:nombre',
  component: configuracion_practica_component_1.ConfiguracionPracticaComponent
}, {
  path: 'configurar/:nombre/copia',
  component: configuracion_practica_component_1.ConfiguracionPracticaComponent
}, {
  path: 'detalles/practicas',
  component: vista_configs_practica_component_1.VistaConfigsPracticaComponent
}, {
  path: environment_1.environment.ruta_alumno + '/:id/chat/:room/:id1/:id2/:tipo',
  component: chat_component_1.ChatComponent
}, {
  path: environment_1.environment.ruta_alumno + '/:id/historial',
  component: notis_historial_component_1.NotisHistorialComponent
}, {
  path: "historial",
  component: notis_historial_component_1.NotisHistorialComponent
}, {
  path: 'publicaciones',
  component: publicaciones_component_1.PublicacionesComponent
}, {
  path: 'chat/:room/:id1/:id2/:tipo',
  component: chat_component_1.ChatComponent
}, {
  path: 'informe/:id_practica/:id_informe',
  component: informe_component_1.InformeComponent
}, {
  path: 'encuestaFinal/:id_practica',
  component: encuesta_fin_practica_component_1.EncuestaFinPracticaComponent
}, {
  path: 'consistencia',
  component: explicacion_consistencia_component_1.ExplicacionConsistenciaComponent
}, {
  path: 'estadisticaRamos',
  component: ramos_alumnos_component_1.RamosAlumnosComponent
}, {
  path: 'ramos',
  component: ramos_encargado_component_1.RamosEncargadoComponent
}, {
  path: 'estadisticaEmpresas',
  component: estadistica_empresas_component_1.EstadisticaEmpresasComponent
}, {
  path: 'ingreso-informe',
  component: ingreso_informe_component_1.IngresoInformeComponent
}, {
  path: 'estudiante-ver-informe/:id_practica/:id_informe',
  component: estudiante_ver_informe_component_1.EstudianteVerInformeComponent
}, {
  path: 'guias/info_y_eval_estudiante',
  component: info_y_evaluacion_estudiante_component_1.InfoYEvaluacionEstudianteComponent
}, {
  path: 'guias/detalle-estudiante',
  component: detalle_estudiante_component_1.DetalleEstudianteComponent
}, {
  path: 'guias/config-practica',
  component: config_practica_component_1.ConfigPracticaComponent
}, {
  path: 'perfil',
  component: perfil_component_1.PerfilComponent
}, {
  path: "plagios/:id_practica",
  component: plagios_component_1.PlagiosComponent
}, {
  path: 'documentacion',
  component: documentacion_component_1.DocumentacionComponent
}, {
  path: 'confirmar-inicio-practica',
  component: confirmar_inicio_practica_component_1.ConfirmarInicioPracticaComponent
}, {
  path: 'usuario/confirmacion',
  component: confirmacion_usuario_component_1.ConfirmacionUsuarioComponent
}, {
  path: '**',
  component: pnf_component_1.PnfComponent
}];
class AppRoutingModule {
  static {
    this.ɵfac = function AppRoutingModule_Factory(__ngFactoryType__) {
      return new (__ngFactoryType__ || AppRoutingModule)();
    };
  }
  static {
    this.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({
      type: AppRoutingModule
    });
  }
  static {
    this.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({
      imports: [router_1.RouterModule.forRoot(routes), router_1.RouterModule]
    });
  }
}
exports.AppRoutingModule = AppRoutingModule;
(function () {
  (typeof ngJitMode === "undefined" || ngJitMode) && i0.ɵɵsetNgModuleScope(AppRoutingModule, {
    imports: [i1.RouterModule],
    exports: [router_1.RouterModule]
  });
})();
exports.routingComponents = [pnf_component_1.PnfComponent, alumno_component_1.DetalleAlumnoComponent, detalle_practica_component_1.DetallePracticaComponent, revision_component_1.RevisionComponent, evaluacion_supervisor_component_1.EvaluacionComponent, iniciar_practica_component_1.IniciarPracticaComponent, file_component_1.FileComponent, login_component_1.LoginComponent, registro_component_1.RegistroComponent, blank_component_1.BlankComponent, forgot_password_component_1.ForgotPasswordComponent, estadisticas_component_1.EstadisticasComponent, empresas_component_1.EmpresasComponent, cuestionario_component_1.CuestionarioComponent, chat_component_1.ChatComponent, configuracion_practica_component_1.ConfiguracionPracticaComponent, admin_component_1.AdminComponent, registro_encargado_component_1.RegistroEncargadoComponent, encuesta_fin_practica_component_1.EncuestaFinPracticaComponent, perfil_component_1.PerfilComponent, ingreso_informe_component_1.IngresoInformeComponent, estudiante_ver_informe_component_1.EstudianteVerInformeComponent, info_y_evaluacion_estudiante_component_1.InfoYEvaluacionEstudianteComponent, detalle_estudiante_component_1.DetalleEstudianteComponent, encuesta_fin_practica_component_1.EncuestaFinPracticaComponent, publicaciones_component_1.PublicacionesComponent, plagios_component_1.PlagiosComponent, password_recovery_component_1.PasswordRecoveryComponent];

/***/ }),

/***/ 20092:
/*!**********************************!*\
  !*** ./src/app/app.component.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.AppComponent = void 0;
const router_1 = __webpack_require__(/*! @angular/router */ 95072);
const operators_1 = __webpack_require__(/*! rxjs/operators */ 45630);
const i0 = __webpack_require__(/*! @angular/core */ 37580);
const i1 = __webpack_require__(/*! @angular/router */ 95072);
const i2 = __webpack_require__(/*! @angular/platform-browser */ 80436);
class AppComponent {
  constructor(router, activatedRoute, titleService) {
    this.router = router;
    this.activatedRoute = activatedRoute;
    this.titleService = titleService;
    this.router.events.pipe((0, operators_1.filter)(event => event instanceof router_1.NavigationEnd), (0, operators_1.map)(() => {
      let child = this.activatedRoute.firstChild;
      while (child) {
        if (child.firstChild) {
          child = child.firstChild;
        } else if (child.snapshot.data && child.snapshot.data['title']) {
          return child.snapshot.data['title'];
        } else {
          return null;
        }
      }
      return null;
    })).subscribe(data => {
      if (data) {
        this.titleService.setTitle('Praxus | ' + data);
      }
    });
  }
  static {
    this.ɵfac = function AppComponent_Factory(__ngFactoryType__) {
      return new (__ngFactoryType__ || AppComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Title));
    };
  }
  static {
    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({
      type: AppComponent,
      selectors: [["app-root"]],
      decls: 2,
      vars: 0,
      template: function AppComponent_Template(rf, ctx) {
        if (rf & 1) {
          i0.ɵɵelementStart(0, "body");
          i0.ɵɵelement(1, "router-outlet");
          i0.ɵɵelementEnd();
        }
      },
      dependencies: [i1.RouterOutlet],
      styles: ["html[_ngcontent-%COMP%], body[_ngcontent-%COMP%] {\n  height: 100%;\n}\n\nbody[_ngcontent-%COMP%] {\n  background: linear-gradient(rgba(255, 255, 255, 0.6), rgba(255, 255, 255, 0.6));\n}\n\n.mat-toolbar[_ngcontent-%COMP%] {\n  background-color: #3f51b5;\n  color: white;\n  position: relative;\n}\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYXBwLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksWUFBQTtBQUNKOztBQUVBO0VBQ0ksK0VBQUE7QUFDSjs7QUFFQTtFQUNJLHlCQUFBO0VBQ0EsWUFBQTtFQUNBLGtCQUFBO0FBQ0oiLCJzb3VyY2VzQ29udGVudCI6WyJodG1sLCBib2R5IHtcbiAgICBoZWlnaHQ6IDEwMCU7XG4gIH1cblxuYm9keSB7XG4gICAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KHJnYmEoMjU1LCAyNTUsIDI1NSwgMC42KSwgcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjYpKVxufVxuXG4ubWF0LXRvb2xiYXIge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICMzZjUxYjU7XG4gICAgY29sb3I6IHdoaXRlO1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgfVxuIl0sInNvdXJjZVJvb3QiOiIifQ== */"]
    });
  }
}
exports.AppComponent = AppComponent;

/***/ }),

/***/ 50635:
/*!*******************************!*\
  !*** ./src/app/app.module.ts ***!
  \*******************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.AppModule = void 0;
const platform_browser_1 = __webpack_require__(/*! @angular/platform-browser */ 80436);
const snack_bar_1 = __webpack_require__(/*! @angular/material/snack-bar */ 3347);
const animations_1 = __webpack_require__(/*! @angular/platform-browser/animations */ 43835);
const http_1 = __webpack_require__(/*! @angular/common/http */ 46443);
const toolbar_1 = __webpack_require__(/*! @angular/material/toolbar */ 39552);
const forms_1 = __webpack_require__(/*! @angular/forms */ 34456);
const common_1 = __webpack_require__(/*! @angular/common */ 60316);
const button_1 = __webpack_require__(/*! @angular/material/button */ 84175);
const input_1 = __webpack_require__(/*! @angular/material/input */ 95541);
const card_1 = __webpack_require__(/*! @angular/material/card */ 53777);
const list_1 = __webpack_require__(/*! @angular/material/list */ 20943);
const datepicker_1 = __webpack_require__(/*! @angular/material/datepicker */ 61977);
const select_1 = __webpack_require__(/*! @angular/material/select */ 25175);
const text_field_1 = __webpack_require__(/*! @angular/cdk/text-field */ 69940);
const table_1 = __webpack_require__(/*! @angular/material/table */ 77697);
const sort_1 = __webpack_require__(/*! @angular/material/sort */ 22047);
const dialog_1 = __webpack_require__(/*! @angular/material/dialog */ 12587);
const core_1 = __webpack_require__(/*! @angular/material/core */ 74646);
const core_2 = __webpack_require__(/*! @angular/material/core */ 74646);
const radio_1 = __webpack_require__(/*! @angular/material/radio */ 53804);
const tooltip_1 = __webpack_require__(/*! @angular/material/tooltip */ 80640);
const tabs_1 = __webpack_require__(/*! @angular/material/tabs */ 38223);
const archivos_service_1 = __webpack_require__(/*! ./servicios/archivos/archivos.service */ 79894);
const resumen_practicas_service_1 = __webpack_require__(/*! ./servicios/encargado/resumen_practicas.service */ 11274);
const decision_service_1 = __webpack_require__(/*! ./servicios/encargado/decision.service */ 70182);
const supervisor_service_1 = __webpack_require__(/*! ./servicios/supervisor/supervisor.service */ 40588);
const evaluacion_supervisor_component_1 = __webpack_require__(/*! ./vistas/evaluacion_supervisor/evaluacion_supervisor.component */ 66163);
const detalle_practica_component_1 = __webpack_require__(/*! ./vistas/detalle-practica/detalle-practica.component */ 62659);
const login_component_1 = __webpack_require__(/*! ./vistas/login/login.component */ 75935);
const blank_component_1 = __webpack_require__(/*! ./vistas/blank/blank.component */ 15523);
const registro_component_1 = __webpack_require__(/*! ./vistas/registro/registro.component */ 72691);
const forgot_password_component_1 = __webpack_require__(/*! ./vistas/forgot-password/forgot-password.component */ 39227);
const estadisticas_component_1 = __webpack_require__(/*! ./vistas/estadisticas/estadisticas.component */ 49603);
const password_recovery_component_1 = __webpack_require__(/*! ./vistas/password-recovery/password-recovery.component */ 12043);
const footer_component_1 = __webpack_require__(/*! ./componentes/footer/footer.component */ 89024);
const barra_superior_component_1 = __webpack_require__(/*! ./componentes/barra-superior/barra-superior.component */ 36370);
const logout_modal_component_1 = __webpack_require__(/*! ./componentes/logout-modal/logout-modal.component */ 15562);
const barra_lateral_alumno_component_1 = __webpack_require__(/*! ./componentes/barra-lateral-alumno/barra-lateral-alumno.component */ 72756);
const barra_lateral_encargado_component_1 = __webpack_require__(/*! ./componentes/barra-lateral-encargado/barra-lateral-encargado.component */ 43560);
const resumen_practicas_component_1 = __webpack_require__(/*! ./vistas/resumen_practicas/resumen_practicas.component */ 6451);
const chat_component_1 = __webpack_require__(/*! ./componentes/chat/chat.component */ 10462);
const progress_spinner_1 = __webpack_require__(/*! @angular/material/progress-spinner */ 41134);
const app_routing_module_1 = __webpack_require__(/*! ./app-routing.module */ 94114);
const app_component_1 = __webpack_require__(/*! ./app.component */ 20092);
const angular_datatables_1 = __webpack_require__(/*! angular-datatables */ 21541);
const ngx_cookie_service_1 = __webpack_require__(/*! ngx-cookie-service */ 39213);
const boton_solicitar_archivo_component_1 = __webpack_require__(/*! ./componentes/boton-solicitar-archivo/boton-solicitar-archivo.component */ 62280);
const subir_archivo_extra_component_1 = __webpack_require__(/*! ./componentes/subir-archivo-extra/subir-archivo-extra.component */ 51052);
const subir_archivo_component_1 = __webpack_require__(/*! ./componentes/subir-archivo/subir-archivo.component */ 75296);
const encuesta_fin_practica_component_1 = __webpack_require__(/*! ./vistas/encuesta-fin-practica/encuesta-fin-practica.component */ 48923);
const fragmentos_component_1 = __webpack_require__(/*! ./componentes/fragmentos/fragmentos.component */ 7902);
const informe_component_1 = __webpack_require__(/*! ./vistas/informe/informe.component */ 32331);
const notis_historial_component_1 = __webpack_require__(/*! ./vistas/notis-historial/notis-historial.component */ 20835);
const import_modal_component_1 = __webpack_require__(/*! ./componentes/import-modal/import-modal.component */ 28412);
const migrar_modal_component_1 = __webpack_require__(/*! ./componentes/migrar-modal/migrar-modal.component */ 6074);
const explicacion_consistencia_component_1 = __webpack_require__(/*! ./vistas/explicacion-consistencia/explicacion-consistencia.component */ 43171);
const vista_supervisor_component_1 = __webpack_require__(/*! ./vistas/vista-supervisor/vista-supervisor/vista-supervisor.component */ 55384);
const ramos_alumnos_component_1 = __webpack_require__(/*! ./vistas/ramos-alumnos/ramos-alumnos.component */ 57575);
const ramos_encargado_component_1 = __webpack_require__(/*! ./vistas/ramos-encargado/ramos-encargado.component */ 33627);
const estadistica_empresas_component_1 = __webpack_require__(/*! ./vistas/estadistica-empresas/estadistica-empresas.component */ 87975);
const admin_component_1 = __webpack_require__(/*! ./vistas/admin/admin.component */ 51512);
const barra_lateral_admin_component_1 = __webpack_require__(/*! ./componentes/barra-lateral-admin/barra-lateral-admin.component */ 53524);
const registro_encargado_component_1 = __webpack_require__(/*! ./vistas/registro-encargado/registro-encargado.component */ 74905);
const ingreso_informe_component_1 = __webpack_require__(/*! ./vistas/ingreso-informe/ingreso-informe.component */ 42875);
const estudiante_ver_informe_component_1 = __webpack_require__(/*! ./vistas/estudiante-ver-informe/estudiante-ver-informe.component */ 11735);
const info_y_evaluacion_estudiante_component_1 = __webpack_require__(/*! ./vistas/wizards/info-y-evaluacion-estudiante/info-y-evaluacion-estudiante.component */ 69688);
const detalle_estudiante_component_1 = __webpack_require__(/*! ./vistas/wizards/detalle-estudiante/detalle-estudiante.component */ 36126);
const editar_encargado_modal_component_1 = __webpack_require__(/*! ./componentes/editar-encargado-modal/editar-encargado-modal.component */ 9034);
const crear_encargado_modal_component_1 = __webpack_require__(/*! ./componentes/crear-encargado-modal/crear-encargado-modal.component */ 38096);
const crear_carrera_modal_component_1 = __webpack_require__(/*! ./componentes/crear-carrera-modal/crear-carrera-modal.component */ 69836);
const editar_carrera_modal_component_1 = __webpack_require__(/*! ./componentes/editar-carrera-modal/editar-carrera-modal.component */ 9582);
const registro_supervisor_component_1 = __webpack_require__(/*! ./vistas/registro-supervisor/registro-supervisor.component */ 58535);
const config_practica_component_1 = __webpack_require__(/*! ./vistas/wizards/config-practica/config-practica.component */ 98880);
const aptitudes_component_1 = __webpack_require__(/*! ./vistas/aptitudes/aptitudes.component */ 39843);
const crear_aptitud_modal_component_1 = __webpack_require__(/*! ./componentes/crear-aptitud-modal/crear-aptitud-modal.component */ 63172);
const editar_aptitud_modal_component_1 = __webpack_require__(/*! ./componentes/editar-aptitud-modal/editar-aptitud-modal.component */ 34980);
const rango_modal_component_1 = __webpack_require__(/*! ./componentes/rango-modal/rango-modal.component */ 51108);
const vista_configs_practica_component_1 = __webpack_require__(/*! ./vistas/vista-configs-practica/vista-configs-practica.component */ 92379);
const edicion_simple_modal_component_1 = __webpack_require__(/*! ./componentes/edicion-simple-modal/edicion-simple-modal.component */ 34662);
const plagios_component_1 = __webpack_require__(/*! ./vistas/plagios/plagios.component */ 32815);
const comentarios_modal_component_1 = __webpack_require__(/*! ./componentes/comentarios-modal/comentarios-modal.component */ 69504);
const documentacion_component_1 = __webpack_require__(/*! ./vistas/documentacion/documentacion.component */ 76451);
const subir_documento_encargado_component_1 = __webpack_require__(/*! ./componentes/subir-documento-encargado/subir-documento-encargado.component */ 54452);
const subir_plantilla_informe_final_component_1 = __webpack_require__(/*! ./componentes/subir-plantilla-informe-final/subir-plantilla-informe-final.component */ 9604);
const confirmar_inicio_practica_component_1 = __webpack_require__(/*! ./vistas/confirmar-inicio-practica/confirmar-inicio-practica.component */ 89779);
const confirmacion_usuario_component_1 = __webpack_require__(/*! ./vistas/confirmacion-usuario/confirmacion-usuario.component */ 43475);
const subir_archivo_informe_final_component_1 = __webpack_require__(/*! ./componentes/subir-archivo-informe-final/subir-archivo-informe-final.component */ 66760);
const editar_archivo_encargado_component_1 = __webpack_require__(/*! ./componentes/editar-archivo-encargado/editar-archivo-encargado.component */ 41164);
const agregar_dominio_modal_component_1 = __webpack_require__(/*! ./componentes/agregar-dominio-modal/agregar-dominio-modal.component */ 71892);
const auth_interceptor_1 = __webpack_require__(/*! ./interceptores/auth/auth.interceptor */ 45090);
const i0 = __webpack_require__(/*! @angular/core */ 37580);
const i1 = __webpack_require__(/*! ./componentes/pnf/pnf.component */ 36432);
const i2 = __webpack_require__(/*! ./vistas/alumno/alumno.component */ 94805);
const i3 = __webpack_require__(/*! ./vistas/detalle-practica/detalle-practica.component */ 62659);
const i4 = __webpack_require__(/*! ./componentes/revision/revision.component */ 57892);
const i5 = __webpack_require__(/*! ./vistas/evaluacion_supervisor/evaluacion_supervisor.component */ 66163);
const i6 = __webpack_require__(/*! ./componentes/iniciar-practica/iniciar-practica.component */ 83588);
const i7 = __webpack_require__(/*! ./componentes/file/file.component */ 34806);
const i8 = __webpack_require__(/*! ./vistas/login/login.component */ 75935);
const i9 = __webpack_require__(/*! ./vistas/registro/registro.component */ 72691);
const i10 = __webpack_require__(/*! ./vistas/blank/blank.component */ 15523);
const i11 = __webpack_require__(/*! ./vistas/forgot-password/forgot-password.component */ 39227);
const i12 = __webpack_require__(/*! ./vistas/estadisticas/estadisticas.component */ 49603);
const i13 = __webpack_require__(/*! ./vistas/empresas/empresas.component */ 79905);
const i14 = __webpack_require__(/*! ./vistas/cuestionario/cuestionario.component */ 81431);
const i15 = __webpack_require__(/*! ./componentes/chat/chat.component */ 10462);
const i16 = __webpack_require__(/*! ./vistas/configuracion-practica/configuracion-practica.component */ 53711);
const i17 = __webpack_require__(/*! ./vistas/admin/admin.component */ 51512);
const i18 = __webpack_require__(/*! ./vistas/registro-encargado/registro-encargado.component */ 74905);
const i19 = __webpack_require__(/*! ./vistas/encuesta-fin-practica/encuesta-fin-practica.component */ 48923);
const i20 = __webpack_require__(/*! ./vistas/perfil/perfil.component */ 17645);
const i21 = __webpack_require__(/*! ./vistas/ingreso-informe/ingreso-informe.component */ 42875);
const i22 = __webpack_require__(/*! ./vistas/estudiante-ver-informe/estudiante-ver-informe.component */ 11735);
const i23 = __webpack_require__(/*! ./vistas/wizards/info-y-evaluacion-estudiante/info-y-evaluacion-estudiante.component */ 69688);
const i24 = __webpack_require__(/*! ./vistas/wizards/detalle-estudiante/detalle-estudiante.component */ 36126);
const i25 = __webpack_require__(/*! ./vistas/publicaciones/publicaciones.component */ 33387);
const i26 = __webpack_require__(/*! ./vistas/plagios/plagios.component */ 32815);
const i27 = __webpack_require__(/*! ./vistas/password-recovery/password-recovery.component */ 12043);
class AppModule {
  static {
    this.ɵfac = function AppModule_Factory(__ngFactoryType__) {
      return new (__ngFactoryType__ || AppModule)();
    };
  }
  static {
    this.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({
      type: AppModule,
      bootstrap: [app_component_1.AppComponent]
    });
  }
  static {
    this.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({
      providers: [resumen_practicas_service_1.GetDetallesAlumnoService, decision_service_1.SetDetallesAlumnoService, archivos_service_1.ArchivosService, supervisor_service_1.SupervisorService, common_1.DatePipe, resumen_practicas_service_1.GetDetallesAlumnoService, decision_service_1.SetDetallesAlumnoService, archivos_service_1.ArchivosService, supervisor_service_1.SupervisorService, ngx_cookie_service_1.CookieService, (0, http_1.provideHttpClient)((0, http_1.withInterceptors)([auth_interceptor_1.authInterceptor])), {
        provide: core_2.MAT_DATE_LOCALE,
        useValue: 'es-ES'
      }, (0, http_1.provideHttpClient)((0, http_1.withInterceptorsFromDi)())],
      imports: [platform_browser_1.BrowserModule, app_routing_module_1.AppRoutingModule, angular_datatables_1.DataTablesModule, button_1.MatButtonModule, animations_1.NoopAnimationsModule, snack_bar_1.MatSnackBarModule, input_1.MatInputModule, card_1.MatCardModule, list_1.MatListModule, datepicker_1.MatDatepickerModule, core_1.MatNativeDateModule, select_1.MatSelectModule, toolbar_1.MatToolbarModule, text_field_1.TextFieldModule, forms_1.FormsModule, table_1.MatTableModule, sort_1.MatSortModule, forms_1.FormsModule, forms_1.ReactiveFormsModule, dialog_1.MatDialogModule, radio_1.MatRadioModule, tooltip_1.MatTooltipModule, progress_spinner_1.MatProgressSpinnerModule, tabs_1.MatTabsModule]
    });
  }
}
exports.AppModule = AppModule;
(function () {
  (typeof ngJitMode === "undefined" || ngJitMode) && i0.ɵɵsetNgModuleScope(AppModule, {
    declarations: [app_component_1.AppComponent, i1.PnfComponent, i2.DetalleAlumnoComponent, i3.DetallePracticaComponent, i4.RevisionComponent, i5.EvaluacionComponent, i6.IniciarPracticaComponent, i7.FileComponent, i8.LoginComponent, i9.RegistroComponent, i10.BlankComponent, i11.ForgotPasswordComponent, i12.EstadisticasComponent, i13.EmpresasComponent, i14.CuestionarioComponent, i15.ChatComponent, i16.ConfiguracionPracticaComponent, i17.AdminComponent, i18.RegistroEncargadoComponent, i19.EncuestaFinPracticaComponent, i20.PerfilComponent, i21.IngresoInformeComponent, i22.EstudianteVerInformeComponent, i23.InfoYEvaluacionEstudianteComponent, i24.DetalleEstudianteComponent, i19.EncuestaFinPracticaComponent, i25.PublicacionesComponent, i26.PlagiosComponent, i27.PasswordRecoveryComponent, evaluacion_supervisor_component_1.EvaluacionComponent, detalle_practica_component_1.DetallePracticaComponent, footer_component_1.FooterComponent, barra_superior_component_1.BarraSuperiorComponent, logout_modal_component_1.LogoutModalComponent, login_component_1.LoginComponent, barra_lateral_alumno_component_1.BarraLateralAlumnoComponent, blank_component_1.BlankComponent, registro_component_1.RegistroComponent, forgot_password_component_1.ForgotPasswordComponent, barra_lateral_encargado_component_1.BarraLateralEncargadoComponent, estadisticas_component_1.EstadisticasComponent, boton_solicitar_archivo_component_1.BotonSolicitarArchivoComponent, resumen_practicas_component_1.TablaComponent, chat_component_1.ChatComponent, subir_archivo_extra_component_1.SubirArchivoExtraComponent, subir_archivo_component_1.SubirArchivoComponent, encuesta_fin_practica_component_1.EncuestaFinPracticaComponent, fragmentos_component_1.FragmentosComponent, informe_component_1.InformeComponent, notis_historial_component_1.NotisHistorialComponent, import_modal_component_1.ImportModalComponent, migrar_modal_component_1.MigrarModalComponent, explicacion_consistencia_component_1.ExplicacionConsistenciaComponent, vista_supervisor_component_1.VistaSupervisorComponent, ramos_alumnos_component_1.RamosAlumnosComponent, ramos_encargado_component_1.RamosEncargadoComponent, estadistica_empresas_component_1.EstadisticaEmpresasComponent, admin_component_1.AdminComponent, barra_lateral_admin_component_1.BarraLateralAdminComponent, registro_encargado_component_1.RegistroEncargadoComponent, ingreso_informe_component_1.IngresoInformeComponent, estudiante_ver_informe_component_1.EstudianteVerInformeComponent, info_y_evaluacion_estudiante_component_1.InfoYEvaluacionEstudianteComponent, detalle_estudiante_component_1.DetalleEstudianteComponent, editar_encargado_modal_component_1.EditarEncargadoModalComponent, crear_encargado_modal_component_1.CrearEncargadoModalComponent, crear_carrera_modal_component_1.CrearCarreraModalComponent, editar_carrera_modal_component_1.EditarCarreraModalComponent, registro_supervisor_component_1.RegistroSupervisorComponent, config_practica_component_1.ConfigPracticaComponent, aptitudes_component_1.AptitudesComponent, crear_aptitud_modal_component_1.CrearAptitudModalComponent, editar_aptitud_modal_component_1.EditarAptitudModalComponent, rango_modal_component_1.RangoModalComponent, vista_configs_practica_component_1.VistaConfigsPracticaComponent, edicion_simple_modal_component_1.EdicionSimpleModalComponent, plagios_component_1.PlagiosComponent, comentarios_modal_component_1.ComentariosModalComponent, documentacion_component_1.DocumentacionComponent, subir_documento_encargado_component_1.SubirDocumentoEncargadoComponent, subir_plantilla_informe_final_component_1.SubirPlantillaInformeFinalComponent, confirmar_inicio_practica_component_1.ConfirmarInicioPracticaComponent, confirmacion_usuario_component_1.ConfirmacionUsuarioComponent, subir_archivo_informe_final_component_1.SubirArchivoInformeFinalComponent, editar_archivo_encargado_component_1.EditarArchivoEncargadoComponent, agregar_dominio_modal_component_1.AgregarDominioModalComponent, password_recovery_component_1.PasswordRecoveryComponent],
    imports: [platform_browser_1.BrowserModule, app_routing_module_1.AppRoutingModule, angular_datatables_1.DataTablesModule, button_1.MatButtonModule, animations_1.NoopAnimationsModule, snack_bar_1.MatSnackBarModule, input_1.MatInputModule, card_1.MatCardModule, list_1.MatListModule, datepicker_1.MatDatepickerModule, core_1.MatNativeDateModule, select_1.MatSelectModule, toolbar_1.MatToolbarModule, text_field_1.TextFieldModule, forms_1.FormsModule, table_1.MatTableModule, sort_1.MatSortModule, forms_1.FormsModule, forms_1.ReactiveFormsModule, dialog_1.MatDialogModule, radio_1.MatRadioModule, tooltip_1.MatTooltipModule, progress_spinner_1.MatProgressSpinnerModule, tabs_1.MatTabsModule]
  });
})();

/***/ }),

/***/ 71892:
/*!**************************************************************************************!*\
  !*** ./src/app/componentes/agregar-dominio-modal/agregar-dominio-modal.component.ts ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.AgregarDominioModalComponent = void 0;
const forms_1 = __webpack_require__(/*! @angular/forms */ 34456);
const i0 = __webpack_require__(/*! @angular/core */ 37580);
const i1 = __webpack_require__(/*! @angular/forms */ 34456);
const i2 = __webpack_require__(/*! src/app/servicios/dominios_aceptados/dominios-aceptados.service */ 93360);
const i3 = __webpack_require__(/*! @angular/material/snack-bar */ 3347);
class AgregarDominioModalComponent {
  constructor(fb, dominios_service, _snackBar) {
    this.fb = fb;
    this.dominios_service = dominios_service;
    this._snackBar = _snackBar;
    this.createForm();
  }
  ngOnInit() {}
  createForm() {
    this.dominiosForm = this.fb.group({
      dominios: ['', [forms_1.Validators.required]]
    });
  }
  crear() {
    const data = this.dominiosForm.value;
    let dominios = data.dominios;
    let lista = this.listar(dominios);
    let _data = {};
    this.dominios_service.put_multi(lista).subscribe({
      next: data => {
        _data = {
          ..._data,
          ...data
        };
      },
      complete: () => {
        if (_data.status == 200) {
          this._snackBar.open("Dominio(s) creado(s) exitosamente", "Cerrar", {
            panelClass: ['green-snackbar'],
            duration: 2000
          });
          setTimeout(function () {
            window.location.reload();
          }, 2000);
        } else {
          this._snackBar.open("Error al agregar dominios", "Cerrar", {
            panelClass: ['red-snackbar'],
            duration: 2000
          });
        }
      },
      error: error => {
        this._snackBar.open("Error al agregar dominios", "Cerrar", {
          panelClass: ['red-snackbar'],
          duration: 2000
        });
      }
    });
  }
  listar(nombre) {
    let lista = nombre.split('\n');
    for (let i = 0; i < lista.length; i++) {
      lista[i] = lista[i].trim();
    }
    return lista;
  }
  static {
    this.ɵfac = function AgregarDominioModalComponent_Factory(__ngFactoryType__) {
      return new (__ngFactoryType__ || AgregarDominioModalComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.DominiosAceptadosService), i0.ɵɵdirectiveInject(i3.MatSnackBar));
    };
  }
  static {
    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({
      type: AgregarDominioModalComponent,
      selectors: [["app-agregar-dominio-modal"]],
      decls: 16,
      vars: 1,
      consts: [["id", "agregar-dominio-modal", "tabindex", "-1", "role", "dialog", "aria-labelledby", "exampleModalLabel", "aria-hidden", "true", 1, "modal", "fade"], ["role", "document", 1, "modal-dialog"], [1, "modal-content"], [1, "modal-header"], ["id", "exampleModalLabel", 1, "modal-title"], [1, "modal-body"], [1, "asignacion", 3, "formGroup"], ["id", "exampleFirstName", "placeholder", "Ingrese una o varios dominios aqui...", "formControlName", "dominios", "name", "dominios", 1, "form-control", "form-control-user"], [1, "modal-footer"], ["type", "button", "data-dismiss", "modal", 1, "btn", "btn-secondary"], ["id", "myBtn", "type", "submit", "data-dismiss", "modal", 1, "btn", "btn-primary", 3, "click"]],
      template: function AgregarDominioModalComponent_Template(rf, ctx) {
        if (rf & 1) {
          i0.ɵɵelementStart(0, "div", 0)(1, "div", 1)(2, "div", 2)(3, "div", 3)(4, "h2", 4);
          i0.ɵɵtext(5, "Asignar");
          i0.ɵɵelementEnd()();
          i0.ɵɵelementStart(6, "div", 5);
          i0.ɵɵtext(7, " Ingrese una o varios dominios, para hacerlo utilice una linea por dominio. ");
          i0.ɵɵelementStart(8, "form", 6)(9, "textarea", 7);
          i0.ɵɵtext(10, "                    ");
          i0.ɵɵelementEnd()()();
          i0.ɵɵelementStart(11, "div", 8)(12, "button", 9);
          i0.ɵɵtext(13, "Cancelar");
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(14, "button", 10);
          i0.ɵɵlistener("click", function AgregarDominioModalComponent_Template_button_click_14_listener() {
            return ctx.crear();
          });
          i0.ɵɵtext(15, " Crear ");
          i0.ɵɵelementEnd()()()()();
        }
        if (rf & 2) {
          i0.ɵɵadvance(8);
          i0.ɵɵproperty("formGroup", ctx.dominiosForm);
        }
      },
      dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],
      styles: ["/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */"]
    });
  }
}
exports.AgregarDominioModalComponent = AgregarDominioModalComponent;

/***/ }),

/***/ 53524:
/*!**********************************************************************************!*\
  !*** ./src/app/componentes/barra-lateral-admin/barra-lateral-admin.component.ts ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.BarraLateralAdminComponent = void 0;
const i0 = __webpack_require__(/*! @angular/core */ 37580);
class BarraLateralAdminComponent {
  constructor() {
    this.idUsuario = "";
    // obtener id usuario desde local storage en la variable auth-user.userdata.id, verficando que no esté vacío
    if (localStorage.getItem('auth-user') !== null) {
      const authUser = localStorage.getItem('auth-user');
      if (authUser !== null) {
        this.idUsuario = JSON.parse(authUser).userdata.id;
      }
    }
  }
  static {
    this.ɵfac = function BarraLateralAdminComponent_Factory(__ngFactoryType__) {
      return new (__ngFactoryType__ || BarraLateralAdminComponent)();
    };
  }
  static {
    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({
      type: BarraLateralAdminComponent,
      selectors: [["app-barra-lateral-admin"]],
      decls: 15,
      vars: 0,
      consts: [["id", "accordionSidebar", 1, "navbar-nav", "bg-gradient-primary", "sidebar", "sidebar-dark", "accordion"], ["href", "", 1, "navbar-brand"], ["id", "logo", "src", "./assets/img/logo.svg", "width", "70%", "height", "70%", "alt", "Praxus"], [1, "sidebar-divider", "my-0"], [1, "sidebar-divider"], [1, "sidebar-heading"], [1, "nav-item"], [1, "nav-link", "collapsed"], [1, "fas", "fa-fw", "fa-cog"]],
      template: function BarraLateralAdminComponent_Template(rf, ctx) {
        if (rf & 1) {
          i0.ɵɵelementStart(0, "ul", 0)(1, "a", 1);
          i0.ɵɵelement(2, "img", 2);
          i0.ɵɵelementEnd();
          i0.ɵɵelement(3, "hr", 3)(4, "hr", 4);
          i0.ɵɵelementStart(5, "div", 5);
          i0.ɵɵtext(6, " Administrador ");
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(7, "li", 6)(8, "a", 7);
          i0.ɵɵelement(9, "i", 8);
          i0.ɵɵelementStart(10, "span");
          i0.ɵɵtext(11, "Administrador");
          i0.ɵɵelementEnd()();
          i0.ɵɵelementStart(12, "div", 5);
          i0.ɵɵtext(13, " Opciones ");
          i0.ɵɵelementEnd();
          i0.ɵɵelement(14, "hr", 4);
          i0.ɵɵelementEnd()();
        }
      },
      styles: ["#logo[_ngcontent-%COMP%] {\n  margin: 10px 25px;\n}\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50ZXMvYmFycmEtbGF0ZXJhbC1hZG1pbi9iYXJyYS1sYXRlcmFsLWFkbWluLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksaUJBQUE7QUFDSiIsInNvdXJjZXNDb250ZW50IjpbIiNsb2dvIHtcbiAgICBtYXJnaW46IDEwcHggMjVweDtcbn0iXSwic291cmNlUm9vdCI6IiJ9 */"]
    });
  }
}
exports.BarraLateralAdminComponent = BarraLateralAdminComponent;

/***/ }),

/***/ 72756:
/*!************************************************************************************!*\
  !*** ./src/app/componentes/barra-lateral-alumno/barra-lateral-alumno.component.ts ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.BarraLateralAlumnoComponent = void 0;
const i0 = __webpack_require__(/*! @angular/core */ 37580);
class BarraLateralAlumnoComponent {
  constructor() {
    this.idUsuario = "";
    // obtener id usuario desde local storage en la variable auth-user.userdata.id, verficando que no esté vacío
    if (localStorage.getItem('auth-user') !== null) {
      const authUser = localStorage.getItem('auth-user');
      if (authUser !== null) {
        this.idUsuario = JSON.parse(authUser).userdata.id;
      }
    }
  }
  static {
    this.ɵfac = function BarraLateralAlumnoComponent_Factory(__ngFactoryType__) {
      return new (__ngFactoryType__ || BarraLateralAlumnoComponent)();
    };
  }
  static {
    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({
      type: BarraLateralAlumnoComponent,
      selectors: [["app-barra-lateral-alumno"]],
      decls: 38,
      vars: 4,
      consts: [["id", "accordionSidebar", 1, "navbar-nav", "bg-gradient-primary", "sidebar", "sidebar-dark", "accordion"], [1, "navbar-brand", 3, "href"], ["id", "logo", "src", "./assets/img/logo.svg", "width", "70%", "height", "70%", "alt", "Praxus"], [1, "sidebar-divider", "my-0"], [1, "sidebar-divider"], [1, "sidebar-heading"], [1, "nav-item"], [1, "nav-link", "collapsed", 3, "href"], [1, "fas", "fa-fw", "fa-cog"], ["href", "/estadisticaRamos", 1, "same-col", "nav-link", "collapsed"], [1, "fas", "fa-fw", "fa-list-alt"], ["href", "/estadisticaEmpresas", 1, "same-col", "nav-link", "collapsed"], [1, "fas", "fa-fw", "fa-building"], ["href", "/documentacion", 1, "same-col", "nav-link", "collapsed"], ["href", "/publicaciones", 1, "same-col", "nav-link", "collapsed"]],
      template: function BarraLateralAlumnoComponent_Template(rf, ctx) {
        if (rf & 1) {
          i0.ɵɵelementStart(0, "ul", 0)(1, "a", 1);
          i0.ɵɵelement(2, "img", 2);
          i0.ɵɵelementEnd();
          i0.ɵɵelement(3, "hr", 3)(4, "hr", 4);
          i0.ɵɵelementStart(5, "div", 5);
          i0.ɵɵtext(6, " Pr\u00E1cticas ");
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(7, "li", 6)(8, "a", 7);
          i0.ɵɵelement(9, "i", 8);
          i0.ɵɵelementStart(10, "span");
          i0.ɵɵtext(11, "Mis Practicas");
          i0.ɵɵelementEnd()()();
          i0.ɵɵelementStart(12, "div", 5);
          i0.ɵɵtext(13, " Estad\u00EDsticas ");
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(14, "li", 6)(15, "a", 9);
          i0.ɵɵelement(16, "i", 10);
          i0.ɵɵelementStart(17, "span");
          i0.ɵɵtext(18, "Ramos");
          i0.ɵɵelementEnd()()();
          i0.ɵɵelementStart(19, "li", 6)(20, "a", 11);
          i0.ɵɵelement(21, "i", 12);
          i0.ɵɵelementStart(22, "span");
          i0.ɵɵtext(23, "Empresas");
          i0.ɵɵelementEnd()()();
          i0.ɵɵelement(24, "p");
          i0.ɵɵelementStart(25, "div", 5);
          i0.ɵɵtext(26, " Informaciones ");
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(27, "li", 6)(28, "a", 13);
          i0.ɵɵelement(29, "i", 10);
          i0.ɵɵelementStart(30, "span");
          i0.ɵɵtext(31, "Documentaci\u00F3n");
          i0.ɵɵelementEnd()()();
          i0.ɵɵelementStart(32, "li", 6)(33, "a", 14);
          i0.ɵɵelement(34, "i", 10);
          i0.ɵɵelementStart(35, "span");
          i0.ɵɵtext(36, "Publicaciones");
          i0.ɵɵelementEnd()()();
          i0.ɵɵelement(37, "hr", 4);
          i0.ɵɵelementEnd();
        }
        if (rf & 2) {
          i0.ɵɵadvance();
          i0.ɵɵpropertyInterpolate1("href", "/alumno/", ctx.idUsuario, "", i0.ɵɵsanitizeUrl);
          i0.ɵɵadvance(7);
          i0.ɵɵpropertyInterpolate1("href", "/alumno/", ctx.idUsuario, "", i0.ɵɵsanitizeUrl);
        }
      },
      styles: ["#logo[_ngcontent-%COMP%] {\n  margin: 10px 25px;\n}\n\n.same-col[_ngcontent-%COMP%] {\n  padding-bottom: 0 !important;\n}\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50ZXMvYmFycmEtbGF0ZXJhbC1hbHVtbm8vYmFycmEtbGF0ZXJhbC1hbHVtbm8uY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxpQkFBQTtBQUNKOztBQUVBO0VBQ0ksNEJBQUE7QUFDSiIsInNvdXJjZXNDb250ZW50IjpbIiNsb2dvIHtcbiAgICBtYXJnaW46IDEwcHggMjVweDtcbn1cblxuLnNhbWUtY29sIHtcbiAgICBwYWRkaW5nLWJvdHRvbTogMCAhaW1wb3J0YW50O1xufSJdLCJzb3VyY2VSb290IjoiIn0= */"]
    });
  }
}
exports.BarraLateralAlumnoComponent = BarraLateralAlumnoComponent;

/***/ }),

/***/ 43560:
/*!******************************************************************************************!*\
  !*** ./src/app/componentes/barra-lateral-encargado/barra-lateral-encargado.component.ts ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.BarraLateralEncargadoComponent = void 0;
const environment_1 = __webpack_require__(/*! src/environments/environment */ 45312);
const i0 = __webpack_require__(/*! @angular/core */ 37580);
const i1 = __webpack_require__(/*! src/app/servicios/encargado/barra-lateral/barra-lateral.service */ 99539);
const i2 = __webpack_require__(/*! @angular/material/snack-bar */ 3347);
const i3 = __webpack_require__(/*! src/app/servicios/encargado/ramos/ramos.service */ 41595);
const i4 = __webpack_require__(/*! src/app/servicios/encargado/aptitud.service */ 41591);
const i5 = __webpack_require__(/*! @angular/router */ 95072);
const i6 = __webpack_require__(/*! ../import-modal/import-modal.component */ 28412);
const _c0 = () => ["/practicas"];
const _c1 = () => ["/ramos"];
const _c2 = () => ["/encargado/aptitudes"];
const _c3 = () => ["/estadisticas"];
const _c4 = () => ["/guias/info_y_eval_estudiante"];
const _c5 = () => ["/guias/config-practica"];
class BarraLateralEncargadoComponent {
  constructor(service, _snackBar, serviceRamos, aptitudService) {
    this.service = service;
    this._snackBar = _snackBar;
    this.serviceRamos = serviceRamos;
    this.aptitudService = aptitudService;
    this.rutas = environment_1.environment;
    this.practicas_creadas = [];
    this.configs_nombres = [];
    this.ramos_creados = false;
    this.aptitudes_creadas = false;
    this.user = window.localStorage.getItem('auth-user');
    this.id_carrera = JSON.parse(this.user).userdata.encargado.id_carrera;
    let respuesta = {};
    this.service.obtenerPracticasCreadas().subscribe({
      next: data => {
        respuesta = {
          ...respuesta,
          ...data
        };
      },
      error: error => {
        this._snackBar.open("Error al buscar practicas creadas", "Cerrar", {
          duration: 5000,
          panelClass: ['red-snackbar']
        });
        console.log("error:", error);
      },
      complete: () => {
        //console.log("respuesta:", respuesta.body)
        if (respuesta.body.length > 0) {
          let aux = [];
          for (let i = 0; i < respuesta.body.length; i++) {
            //si es que no es la planilla
            if (respuesta.body[i].nombre != "configBase" && respuesta.body[i].activada == true) {
              //this.practicas_creadas.push(respuesta.body[i])
              //console.log("respuesta.body[i].id_carrera", respuesta.body[i].id_carrera)
              //console.log("this.id_carrera", this.id_carrera)
              if (respuesta.body[i].id_carrera == this.id_carrera) {
                //console.log("entro")
                aux.push(respuesta.body[i].nombre);
              }
            }
          }
          this.configs_nombres = aux;
          //console.log("nombres:",this.configs_nombres)
        }
      }
    });
    this.serviceRamos.getRamos(this.id_carrera).subscribe({
      next: data => {
        respuesta = {
          ...respuesta,
          ...data
        };
      },
      error: error => {
        this._snackBar.open("Error al buscar ramos creados", "Cerrar", {
          duration: 5000,
          panelClass: ['red-snackbar']
        });
        console.log("error:", error);
      },
      complete: () => {
        if (respuesta.body.ramos != "" && respuesta.body.ramos != null) {
          this.ramos_creados = true;
        }
      }
    });
    let res_aptitudes = {};
    this.aptitudService.getAptitudes(this.id_carrera).subscribe({
      next: data => {
        res_aptitudes = {
          ...res_aptitudes,
          ...data
        };
      },
      error: error => {},
      complete: () => {
        if (res_aptitudes.status == 200 && res_aptitudes.body.data && res_aptitudes.body.data.length > 0) {
          this.aptitudes_creadas = true;
        }
      }
    });
  }
  static {
    this.ɵfac = function BarraLateralEncargadoComponent_Factory(__ngFactoryType__) {
      return new (__ngFactoryType__ || BarraLateralEncargadoComponent)(i0.ɵɵdirectiveInject(i1.BarraLateralService), i0.ɵɵdirectiveInject(i2.MatSnackBar), i0.ɵɵdirectiveInject(i3.RamosService), i0.ɵɵdirectiveInject(i4.AptitudService));
    };
  }
  static {
    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({
      type: BarraLateralEncargadoComponent,
      selectors: [["app-barra-lateral-encargado"]],
      decls: 53,
      vars: 12,
      consts: [["id", "accordionSidebar", 1, "navbar-nav", "bg-gradient-primary", "sidebar", "sidebar-dark", "accordion"], [1, "navbar-brand", 3, "routerLink"], ["id", "logo", "src", "./assets/img/logo.svg", "width", "70%", "height", "70%", "alt", "Praxus"], [1, "sidebar-divider", "my-0"], [1, "nav-item"], ["href", "/practicas", 1, "nav-link"], [1, "fas", "fa-fw", "fa-table"], [1, "sidebar-divider"], [1, "sidebar-heading"], [1, "nav-link", 3, "routerLink"], [1, "fas", "fa-fw", "fa-regular", "fa-pen-to-square"], [1, "sidebar-divider", "d-none", "d-md-block"], [1, "fas", "fa-fw", "fa-chart-area"], ["href", "#", "data-toggle", "collapse", "data-target", "#menu_guias", "aria-expanded", "true", "aria-controls", "menu_guias", 1, "nav-link", "collapsed"], [1, "fas", "fa-fw", "fa-bookmark"], ["id", "menu_guias", "aria-labelledby", "menu_guias", "data-parent", "#accordionSidebar", 1, "collapse"], [1, "bg-white", "py-2", "collapse-inner", "rounded"], ["data-toggle", "modal", 1, "collapse-item", 2, "white-space", "break-spaces", "word-wrap", "break-word", 3, "routerLink"], ["href", "/publicaciones", 1, "same-col", "nav-link", "collapsed"], [1, "fas", "fa-fw", "fa-list-alt"], ["href", "/documentacion", 1, "same-col", "nav-link", "collapsed"]],
      template: function BarraLateralEncargadoComponent_Template(rf, ctx) {
        if (rf & 1) {
          i0.ɵɵelementStart(0, "ul", 0)(1, "a", 1);
          i0.ɵɵelement(2, "img", 2);
          i0.ɵɵelementEnd();
          i0.ɵɵelement(3, "hr", 3);
          i0.ɵɵelementStart(4, "li", 4)(5, "a", 5);
          i0.ɵɵelement(6, "i", 6);
          i0.ɵɵelementStart(7, "span");
          i0.ɵɵtext(8, "Resumen");
          i0.ɵɵelementEnd()()();
          i0.ɵɵelement(9, "hr", 7);
          i0.ɵɵelementStart(10, "div", 8);
          i0.ɵɵtext(11, " Configuracion ");
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(12, "li", 4)(13, "a", 9);
          i0.ɵɵelement(14, "i", 10);
          i0.ɵɵelementStart(15, "span");
          i0.ɵɵtext(16, "Editar ramos");
          i0.ɵɵelementEnd()()();
          i0.ɵɵelementStart(17, "li", 4)(18, "a", 9);
          i0.ɵɵelement(19, "i", 10);
          i0.ɵɵelementStart(20, "span");
          i0.ɵɵtext(21, "Editar competencias");
          i0.ɵɵelementEnd()()();
          i0.ɵɵelement(22, "hr", 11);
          i0.ɵɵelementStart(23, "div", 8);
          i0.ɵɵtext(24, " Otros ");
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(25, "li", 4)(26, "a", 9);
          i0.ɵɵelement(27, "i", 12);
          i0.ɵɵelementStart(28, "span");
          i0.ɵɵtext(29, "Estad\u00EDsticas");
          i0.ɵɵelementEnd()()();
          i0.ɵɵelementStart(30, "li", 4)(31, "a", 13);
          i0.ɵɵelement(32, "i", 14);
          i0.ɵɵelementStart(33, "span");
          i0.ɵɵtext(34, "Gu\u00EDas");
          i0.ɵɵelementEnd()();
          i0.ɵɵelementStart(35, "div", 15)(36, "div", 16)(37, "a", 17);
          i0.ɵɵtext(38, " Evaluar estudiantes ");
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(39, "a", 17);
          i0.ɵɵtext(40, " Crear configuraci\u00F3n de pr\u00E1ctica ");
          i0.ɵɵelementEnd()()()();
          i0.ɵɵelementStart(41, "li", 4)(42, "a", 18);
          i0.ɵɵelement(43, "i", 19);
          i0.ɵɵelementStart(44, "span");
          i0.ɵɵtext(45, "Publicaciones");
          i0.ɵɵelementEnd()()();
          i0.ɵɵelementStart(46, "li", 4)(47, "a", 20);
          i0.ɵɵelement(48, "i", 19);
          i0.ɵɵelementStart(49, "span");
          i0.ɵɵtext(50, "Documentaci\u00F3n");
          i0.ɵɵelementEnd()()();
          i0.ɵɵelement(51, "hr", 11);
          i0.ɵɵelementEnd();
          i0.ɵɵelement(52, "app-import-modal");
        }
        if (rf & 2) {
          i0.ɵɵadvance();
          i0.ɵɵproperty("routerLink", i0.ɵɵpureFunction0(6, _c0));
          i0.ɵɵadvance(12);
          i0.ɵɵproperty("routerLink", i0.ɵɵpureFunction0(7, _c1));
          i0.ɵɵadvance(5);
          i0.ɵɵproperty("routerLink", i0.ɵɵpureFunction0(8, _c2));
          i0.ɵɵadvance(8);
          i0.ɵɵproperty("routerLink", i0.ɵɵpureFunction0(9, _c3));
          i0.ɵɵadvance(11);
          i0.ɵɵproperty("routerLink", i0.ɵɵpureFunction0(10, _c4));
          i0.ɵɵadvance(2);
          i0.ɵɵproperty("routerLink", i0.ɵɵpureFunction0(11, _c5));
        }
      },
      dependencies: [i5.RouterLink, i6.ImportModalComponent],
      styles: ["#logo[_ngcontent-%COMP%] {\n  margin: 10px 25px;\n}\n\n.disabled[_ngcontent-%COMP%] {\n  color: gray;\n  cursor: not-allowed;\n  text-decoration: underline;\n}\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50ZXMvYmFycmEtbGF0ZXJhbC1lbmNhcmdhZG8vYmFycmEtbGF0ZXJhbC1lbmNhcmdhZG8uY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxpQkFBQTtBQUNKOztBQUVBO0VBQ0ksV0FBQTtFQUNBLG1CQUFBO0VBQ0EsMEJBQUE7QUFDSiIsInNvdXJjZXNDb250ZW50IjpbIiNsb2dvIHtcbiAgICBtYXJnaW46IDEwcHggMjVweDtcbn1cblxuLmRpc2FibGVkIHtcbiAgICBjb2xvcjogZ3JheTtcbiAgICBjdXJzb3I6IG5vdC1hbGxvd2VkO1xuICAgIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xufSJdLCJzb3VyY2VSb290IjoiIn0= */"]
    });
  }
}
exports.BarraLateralEncargadoComponent = BarraLateralEncargadoComponent;

/***/ }),

/***/ 36370:
/*!************************************************************************!*\
  !*** ./src/app/componentes/barra-superior/barra-superior.component.ts ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.BarraSuperiorComponent = void 0;
const dayjs = __webpack_require__(/*! dayjs */ 49645);
const i0 = __webpack_require__(/*! @angular/core */ 37580);
const i1 = __webpack_require__(/*! src/app/servicios/data_usuario/data-usuario.service */ 94160);
const i2 = __webpack_require__(/*! src/app/servicios/notificaciones/notificaciones.service */ 22004);
const i3 = __webpack_require__(/*! @angular/common */ 60316);
const i4 = __webpack_require__(/*! @angular/router */ 95072);
const i5 = __webpack_require__(/*! @angular/forms */ 34456);
const i6 = __webpack_require__(/*! @angular/material/radio */ 53804);
function BarraSuperiorComponent_div_18_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div")(1, "span", 29);
    i0.ɵɵtext(2);
    i0.ɵɵelementEnd()();
  }
  if (rf & 2) {
    const ctx_r1 = i0.ɵɵnextContext();
    i0.ɵɵadvance(2);
    i0.ɵɵtextInterpolate(ctx_r1.notificaciones.length);
  }
}
function BarraSuperiorComponent_div_25_Template(rf, ctx) {
  if (rf & 1) {
    const _r3 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "div")(1, "mat-radio-button", 46);
    i0.ɵɵlistener("click", function BarraSuperiorComponent_div_25_Template_mat_radio_button_click_1_listener() {
      const estado_r4 = i0.ɵɵrestoreView(_r3).$implicit;
      const ctx_r1 = i0.ɵɵnextContext();
      return i0.ɵɵresetView(ctx_r1.cambiar_configuracion_notificacion(ctx_r1.id_usuario, estado_r4.nombre));
    });
    i0.ɵɵtext(2);
    i0.ɵɵelementEnd()();
  }
  if (rf & 2) {
    const estado_r4 = ctx.$implicit;
    i0.ɵɵadvance();
    i0.ɵɵproperty("checked", estado_r4.seleccionado);
    i0.ɵɵadvance();
    i0.ɵɵtextInterpolate1(" ", estado_r4.nombre, "");
  }
}
function BarraSuperiorComponent_div_28_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div")(1, "a", 47)(2, "div", 48)(3, "div", 49);
    i0.ɵɵelement(4, "i", 50);
    i0.ɵɵelementEnd()();
    i0.ɵɵelementStart(5, "div")(6, "a", 51)(7, "div", 52);
    i0.ɵɵtext(8);
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(9, "span", 53);
    i0.ɵɵtext(10);
    i0.ɵɵelementEnd()()()()();
  }
  if (rf & 2) {
    const noti_r5 = ctx.$implicit;
    i0.ɵɵadvance(6);
    i0.ɵɵpropertyInterpolate("href", noti_r5 == null ? null : noti_r5.link, i0.ɵɵsanitizeUrl);
    i0.ɵɵadvance(2);
    i0.ɵɵtextInterpolate(noti_r5 == null ? null : noti_r5.fecha);
    i0.ɵɵadvance(2);
    i0.ɵɵtextInterpolate(noti_r5 == null ? null : noti_r5.texto);
  }
}
function BarraSuperiorComponent_div_38_div_4_Template(rf, ctx) {
  if (rf & 1) {
    const _r6 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "div")(1, "div", 56);
    i0.ɵɵlistener("click", function BarraSuperiorComponent_div_38_div_4_Template_div_click_1_listener() {
      const persona_r7 = i0.ɵɵrestoreView(_r6).$implicit;
      const ctx_r1 = i0.ɵɵnextContext(2);
      return i0.ɵɵresetView(ctx_r1.redirect_to_chat(persona_r7.usuario.id, "estudiante"));
    });
    i0.ɵɵelementStart(2, "div", 57);
    i0.ɵɵelement(3, "img", 58)(4, "div", 59);
    i0.ɵɵelementEnd();
    i0.ɵɵtext(5);
    i0.ɵɵelementEnd()();
  }
  if (rf & 2) {
    const persona_r7 = ctx.$implicit;
    i0.ɵɵadvance(5);
    i0.ɵɵtextInterpolate1(" Encargado ", persona_r7 == null ? null : persona_r7.usuario == null ? null : persona_r7.usuario.nombre, " ");
  }
}
function BarraSuperiorComponent_div_38_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div")(1, "h6", 54);
    i0.ɵɵtext(2, "Encargados disponibles");
    i0.ɵɵelementEnd();
    i0.ɵɵelement(3, "p", 55);
    i0.ɵɵtemplate(4, BarraSuperiorComponent_div_38_div_4_Template, 6, 1, "div", 24);
    i0.ɵɵelementEnd();
  }
  if (rf & 2) {
    const ctx_r1 = i0.ɵɵnextContext();
    i0.ɵɵadvance(4);
    i0.ɵɵproperty("ngForOf", ctx_r1.personas);
  }
}
function BarraSuperiorComponent_ng_template_39_div_2_Template(rf, ctx) {
  if (rf & 1) {
    const _r8 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "div")(1, "div", 56);
    i0.ɵɵlistener("click", function BarraSuperiorComponent_ng_template_39_div_2_Template_div_click_1_listener() {
      const persona_r9 = i0.ɵɵrestoreView(_r8).$implicit;
      const ctx_r1 = i0.ɵɵnextContext(2);
      return i0.ɵɵresetView(ctx_r1.redirect_to_chat(persona_r9.usuario.id, "encargado"));
    });
    i0.ɵɵelementStart(2, "div", 57);
    i0.ɵɵelement(3, "img", 58)(4, "div", 59);
    i0.ɵɵelementEnd();
    i0.ɵɵtext(5);
    i0.ɵɵelement(6, "div", 53);
    i0.ɵɵelementEnd()();
  }
  if (rf & 2) {
    const persona_r9 = ctx.$implicit;
    i0.ɵɵadvance(5);
    i0.ɵɵtextInterpolate1(" Estudiante ", persona_r9 == null ? null : persona_r9.usuario == null ? null : persona_r9.usuario.nombre, " ");
  }
}
function BarraSuperiorComponent_ng_template_39_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "h6", 54);
    i0.ɵɵtext(1, "Alumnos disponibles");
    i0.ɵɵelementEnd();
    i0.ɵɵtemplate(2, BarraSuperiorComponent_ng_template_39_div_2_Template, 7, 1, "div", 24);
  }
  if (rf & 2) {
    const ctx_r1 = i0.ɵɵnextContext();
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngForOf", ctx_r1.personas);
  }
}
dayjs().format();
const customParseFormat = __webpack_require__(/*! dayjs/plugin/customParseFormat */ 30001);
dayjs.extend(customParseFormat);
class BarraSuperiorComponent {
  constructor(Service, service_noti, cdr, datetime, router) {
    this.Service = Service;
    this.service_noti = service_noti;
    this.cdr = cdr;
    this.datetime = datetime;
    this.router = router;
    this.es_alumno = -1;
    this.tipo = "";
    this.id_usuario = 0;
    this.respuesta = [];
    this.nombre_usuario = "";
    this.personas = [];
    this.id_personas = [];
    this.id_persona = 0;
    this.estado_config = "";
    this.notificaciones = [];
    this.estados_configuracion = [{
      nombre: "Notificaciones y Correo",
      seleccionado: false
    }, {
      nombre: "Sólo Notificaciones",
      seleccionado: false
    }, {
      nombre: "Sólo Correo",
      seleccionado: false
    }, {
      nombre: "Ninguno",
      seleccionado: false
    }];
    // get user id from the local storage, in the key auth-user, userdata.id
    let auth_user = JSON.parse(localStorage.getItem("auth-user") || "{}");
    //console.log("Auth User:", auth_user);
    if (auth_user.userdata != undefined) {
      let userdata = auth_user.userdata;
      //console.log("Userdata:", userdata);
      if (userdata.id != undefined) {
        this.id_usuario = userdata.id;
        this.Service.obtener_usuario(this.id_usuario).subscribe({
          next: data => {
            this.respuesta = {
              ...this.respuesta,
              ...data
            };
          },
          error: error => {
            //console.log(error);
            return;
          },
          complete: () => {
            //console.log("RESPUESTA:",this.respuesta);
            this.nombre_usuario = this.respuesta.body.nombre;
            this.estado_config = this.respuesta.body.config;
            for (let i = 0; i < this.estados_configuracion.length; i++) {
              if (this.estados_configuracion[i].nombre == this.estado_config) {
                this.estados_configuracion[i].seleccionado = true;
              }
            }
            //console.log("ESTADO ACTUAL",this.estado_config)
            //console.log("estados::::",this.estados_configuracion,)
            cdr.detectChanges();
          }
        });
      }
    }
    this.service_noti.callback.subscribe(res => {
      let fechaF = res.fecha;
      //console.log(fechaF);
      let mensaje = res.message;
      //console.log("EL ESTADO ACTUAL ES", this.estado_config);
      if (this.estado_config == "Notificaciones y Correo" || this.estado_config == "Sólo Notificaciones") {
        //console.log("Notificacion recibida2, el mensaje es", mensaje);
        this.notificaciones.push({
          fecha: fechaF,
          texto: mensaje,
          link: res.link
        });
      }
      this.cdr.detectChanges();
    });
  }
  cambiar_configuracion_notificacion(Id, estado) {
    this.service_noti.cambiar_configuración_notificaciones(Id, estado).subscribe({
      next: data => {
        this.respuesta = {
          ...this.respuesta,
          ...data
        };
      },
      error: error => {
        console.log(error);
        return;
      },
      complete: () => {
        //console.log("Estado cambiado con éxito");
        this.respuesta = [];
        this.estado_config = estado;
      }
    });
  }
  obtener_personas(ID, IS) {
    if (IS == 1) {
      this.Service.obtener_encargados_practicas(ID).subscribe({
        next: data => {
          this.respuesta = {
            ...this.respuesta,
            ...data
          };
        },
        error: error => {
          console.log(error);
          return;
        },
        complete: () => {
          //console.log("respuesta", this.respuesta)
          // Se muestran todos los encargados en la misma carrera que el estudiante
          if (this.respuesta.body.hasOwnProperty("carrera") == true) {
            if (this.respuesta.body.carrera.hasOwnProperty("encargados") == true) {
              this.personas = this.respuesta.body.carrera.encargados;
            }
          }
          this.respuesta = [];
          //console.log("ENCARGADOS:",this.personas);
        }
      });
    } else {
      this.Service.obtener_estudiantes_practicas(ID).subscribe({
        next: data => {
          this.respuesta = {
            ...this.respuesta,
            ...data
          };
        },
        error: error => {
          console.log(error);
          return;
        },
        complete: () => {
          //console.log("respuesta", this.respuesta)
          // Se muestran todos los encargados en la misma carrera que el estudiante
          if (this.respuesta.body.hasOwnProperty("carrera") == true) {
            if (this.respuesta.body.carrera.hasOwnProperty("estudiantes") == true) {
              this.personas = this.respuesta.body.carrera.estudiantes;
            }
          }
          this.respuesta = [];
          //console.log("ENCARGADOS:",this.personas);
        }
      });
    }
  }
  ngOnInit() {
    //console.log(this.id_usuario);
    //console.log(this.estado_config);
    /*
    if(this.estado_config == "Correos y Notificaciones" || this.estado_config == "Sólo Notificaciones"){
      this.Service.obtener_notificaciones(this.id_usuario, this.estado_config).subscribe({
        next: (data:any) => {
          this.respuesta = { ...this.respuesta, ...data}
        },
        error: (error: any) => {
          console.log(error);
        },
        complete: () => {
          this.notificaciones = this.respuesta.body;
          this.notificaciones = this.notificaciones.map((notificacion:any ) => {
            notificacion.fecha = dayjs(notificacion.fecha, "YYYY-MM-DDTHH:mm:ssZ").format("DD/MM/YYYY HH:mm");
            return notificacion;
          });
          this.respuesta = [];
        }
      })
    }
    */
    this.Service.obtener_usuario(this.id_usuario).subscribe({
      next: data => {
        this.respuesta = {
          ...this.respuesta,
          ...data
        };
      },
      error: error => {
        console.log(error);
        return;
      },
      complete: () => {
        this.estado_config = this.respuesta.body.config;
        //console.log(this.estado_config)
        if (this.estado_config == "Notificaciones y Correo" || this.estado_config == "Sólo Notificaciones") {
          this.Service.obtener_notificaciones(this.id_usuario, this.estado_config).subscribe({
            next: data => {
              this.respuesta = {
                ...this.respuesta,
                ...data
              };
            },
            error: error => {
              console.log(error);
            },
            complete: () => {
              let aux = this.respuesta.body.map(notificacion => {
                notificacion.fecha_og = notificacion.fecha;
                notificacion.fecha = dayjs(notificacion.fecha, "YYYY-MM-DDTHH:mm:ssZ").format("DD/MM/YYYY HH:mm");
                return notificacion;
              });
              aux.sort(function (a, b) {
                if (a.fecha_og > b.fecha_og) return -1;
                if (a.fecha_og < b.fecha_og) return 1;
                return 0;
              });
              this.notificaciones = aux;
              this.respuesta = [];
            }
          });
        }
        if (this.respuesta.body.es_estudiante == true) {
          this.es_alumno = 1;
          this.Service.obtener_estudiante(this.id_usuario).subscribe({
            next: data => {
              this.respuesta = {
                ...this.respuesta,
                ...data
              };
            },
            error: error => {
              console.log(error);
              return;
            },
            complete: () => {
              this.id_persona = this.respuesta.body.id;
              this.obtener_personas(this.id_persona, this.es_alumno);
            }
          });
        } else if (this.respuesta.body.es_encargado == true) {
          this.es_alumno = 0;
          this.Service.obtener_encargado(this.id_usuario).subscribe({
            next: data => {
              this.respuesta = {
                ...this.respuesta,
                ...data
              };
            },
            error: error => {
              console.log(error);
              return;
            },
            complete: () => {
              this.id_persona = this.respuesta.body.id;
              this.obtener_personas(this.id_persona, this.es_alumno);
            }
          });
        } else {
          return;
        }
        this.respuesta = [];
      }
    });
    /*
    if(this.estado_config == "Correos y Notificaciones" || this.estado_config == "Sólo Notificaciones"){
      this.Service.obtener_notificaciones(this.id_usuario, this.estado_config).subscribe({
        next: (data:any) => {
          this.respuesta = { ...this.respuesta, ...data}
        },
        error: (error: any) => {
          console.log(error);
        },
        complete: () => {
          this.notificaciones = this.respuesta.body;
          this.notificaciones = this.notificaciones.map((notificacion:any ) => {
            notificacion.fecha = dayjs(notificacion.fecha, "YYYY-MM-DDTHH:mm:ssZ").format("DD/MM/YYYY HH:mm");
            return notificacion;
          });
          this.respuesta = [];
        }
      })
    }
    */
    //console.log(this.personas);
  }
  eliminar_notificaciones(id) {
    this.service_noti.notificaciones_vistas(id).subscribe({
      next: data => {
        this.respuesta = {
          ...this.respuesta,
          ...data
        };
      },
      error: error => {
        console.log(error);
        return;
      },
      complete: () => {
        this.notificaciones = [];
        //console.log("Notificaciones cambiadas");
        this.respuesta = [];
      }
    });
  }
  redirect_to_chat(userid_otro_participante, tipo) {
    if (tipo == "encargado") {
      if (this.router.url.includes("chat/sala")) {
        this.router.navigate(['/chat/sala' + userid_otro_participante + this.id_usuario + "/" + this.id_usuario + "/" + userid_otro_participante + "/encargado"]);
        // reload the page after 1 second
        setTimeout(() => {
          window.location.reload(); // esto es porque si ya se estaba en un chat, no recargaba los mensajes
        }, 300);
      } else {
        this.router.navigate(['/chat/sala' + userid_otro_participante + this.id_usuario + "/" + this.id_usuario + "/" + userid_otro_participante + "/encargado"]);
      }
    } else if (tipo == "estudiante") {
      if (this.router.url.includes("chat/sala")) {
        this.router.navigate(['/chat/sala' + this.id_usuario + userid_otro_participante + "/" + this.id_usuario + "/" + userid_otro_participante + "/estudiante"]);
        // reload the page after 1 second
        setTimeout(() => {
          window.location.reload(); // esto es porque si ya se estaba en un chat, no recargaba los mensajes
        }, 300);
      } else {
        this.router.navigate(['/chat/sala' + this.id_usuario + userid_otro_participante + "/" + this.id_usuario + "/" + userid_otro_participante + "/estudiante"]);
      }
    }
  }
  static {
    this.ɵfac = function BarraSuperiorComponent_Factory(__ngFactoryType__) {
      return new (__ngFactoryType__ || BarraSuperiorComponent)(i0.ɵɵdirectiveInject(i1.DataUsuarioService), i0.ɵɵdirectiveInject(i2.NotificacionesService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i3.DatePipe), i0.ɵɵdirectiveInject(i4.Router));
    };
  }
  static {
    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({
      type: BarraSuperiorComponent,
      selectors: [["app-barra-superior"]],
      decls: 61,
      vars: 6,
      consts: [["elseblock", ""], [1, "navbar", "navbar-expand", "navbar-light", "bg-white", "topbar", "mb-0", "static-top", "shadow"], [1, "form-inline"], ["id", "sidebarToggleTop", 1, "btn", "btn-link", "d-md-none", "rounded-circle", "mr-3"], [1, "fa", "fa-bars"], [1, "navbar-nav", "ml-auto"], [1, "nav-item", "dropdown", "no-arrow", "d-sm-none"], ["href", "#", "id", "searchDropdown", "role", "button", "data-toggle", "dropdown", "aria-haspopup", "true", "aria-expanded", "false", 1, "nav-link", "dropdown-toggle"], [1, "fas", "fa-search", "fa-fw"], ["aria-labelledby", "searchDropdown", 1, "dropdown-menu", "dropdown-menu-right", "p-3", "shadow", "animated--grow-in"], [1, "form-inline", "mr-auto", "w-100", "navbar-search"], [1, "input-group"], ["type", "text", "placeholder", "Search for...", "aria-label", "Search", "aria-describedby", "basic-addon2", 1, "form-control", "bg-light", "border-0", "small"], [1, "input-group-append"], ["type", "button", 1, "btn", "btn-primary"], [1, "fas", "fa-search", "fa-sm"], [1, "nav-item", "dropdown", "no-arrow", "mx-1"], ["href", "#", "id", "alertsDropdown", "role", "button", "data-toggle", "dropdown", "aria-haspopup", "true", "aria-expanded", "false", 1, "nav-link", "dropdown-toggle"], [1, "fas", "fa-bell", "fa-fw"], [4, "ngIf"], ["aria-labelledby", "alertsDropdown", 1, "dropdown-list", "dropdown-menu", "dropdown-menu-right", "shadow", "animated--grow-in"], [1, "dropdown-header"], ["aria-label", "Seleccione su configuraci\u00F3n de notificaciones"], [1, "dropdown-item"], [4, "ngFor", "ngForOf"], [1, "dropdown-item", "text-center", "small", "text-gray-500", 3, "click"], ["routerLink", "/historial", 1, "dropdown-item", "text-center", "small", "text-gray-500"], ["href", "#", "id", "messagesDropdown", "role", "button", "data-toggle", "dropdown", "aria-haspopup", "true", "aria-expanded", "false", 1, "nav-link", "dropdown-toggle"], [1, "fas", "fa-comment", "fa-fw"], [1, "badge", "badge-danger", "badge-counter"], ["aria-labelledby", "messagesDropdown", 1, "dropdown-list", "dropdown-menu", "dropdown-menu-right", "shadow", "animated--grow-in", "chatWidget"], [4, "ngIf", "ngIfElse"], [1, "topbar-divider", "d-none", "d-sm-block"], [1, "nav-item", "dropdown", "no-arrow"], ["href", "#", "id", "userDropdown", "role", "button", "data-toggle", "dropdown", "aria-haspopup", "true", "aria-expanded", "false", 1, "nav-link", "dropdown-toggle"], [1, "mr-2", "d-none", "d-lg-inline", "text-gray-600", "small"], ["src", "../../../assets/img/undraw_profile.svg", 1, "img-profile", "rounded-circle"], ["aria-labelledby", "userDropdown", 1, "dropdown-menu", "dropdown-menu-right", "shadow", "animated--grow-in"], ["routerLink", "/perfil", 1, "dropdown-item"], [1, "fas", "fa-user", "fa-sm", "fa-fw", "mr-2", "text-gray-400"], ["href", "#", 1, "dropdown-item"], [1, "fas", "fa-cogs", "fa-sm", "fa-fw", "mr-2", "text-gray-400"], [1, "fas", "fa-list", "fa-sm", "fa-fw", "mr-2", "text-gray-400"], [1, "dropdown-divider"], ["href", "#", "data-toggle", "modal", "data-target", "#logoutModal", 1, "dropdown-item"], [1, "fas", "fa-sign-out-alt", "fa-sm", "fa-fw", "mr-2", "text-gray-400"], [3, "click", "checked"], ["href", "#", 1, "dropdown-item", "d-flex", "align-items-center"], [1, "mr-3"], [1, "icon-circle", "bg-primary"], [1, "fas", "fa-file-alt", "text-white"], [3, "href"], [1, "small", "text-gray-500"], [1, "font-weight-bold"], [1, "dropdown-header", "fixed-header"], [2, "margin-left", "5%", "margin-top", "4%"], [1, "dropdown-item", "d-flex", "align-items-center", 3, "click"], [1, "dropdown-list-image", "mr-3"], ["src", "../../../assets/img/undraw_profile_1.svg", "alt", "...", 1, "rounded-circle"], [1, "status-indicator", "bg-success"]],
      template: function BarraSuperiorComponent_Template(rf, ctx) {
        if (rf & 1) {
          const _r1 = i0.ɵɵgetCurrentView();
          i0.ɵɵelementStart(0, "nav", 1)(1, "form", 2)(2, "button", 3);
          i0.ɵɵelement(3, "i", 4);
          i0.ɵɵelementEnd()();
          i0.ɵɵelementStart(4, "ul", 5)(5, "li", 6)(6, "a", 7);
          i0.ɵɵelement(7, "i", 8);
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(8, "div", 9)(9, "form", 10)(10, "div", 11);
          i0.ɵɵelement(11, "input", 12);
          i0.ɵɵelementStart(12, "div", 13)(13, "button", 14);
          i0.ɵɵelement(14, "i", 15);
          i0.ɵɵelementEnd()()()()()();
          i0.ɵɵelementStart(15, "li", 16)(16, "a", 17);
          i0.ɵɵelement(17, "i", 18);
          i0.ɵɵtemplate(18, BarraSuperiorComponent_div_18_Template, 3, 1, "div", 19);
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(19, "div", 20)(20, "h6", 21);
          i0.ɵɵtext(21, "Notificaciones");
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(22, "mat-radio-group", 22)(23, "h6", 23);
          i0.ɵɵtext(24, " Seleccione su configuraci\u00F3n de notificaciones");
          i0.ɵɵelementEnd();
          i0.ɵɵtemplate(25, BarraSuperiorComponent_div_25_Template, 3, 2, "div", 24);
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(26, "h6", 23);
          i0.ɵɵtext(27, "Notificaciones Recibidas");
          i0.ɵɵelementEnd();
          i0.ɵɵtemplate(28, BarraSuperiorComponent_div_28_Template, 11, 3, "div", 24);
          i0.ɵɵelementStart(29, "a", 25);
          i0.ɵɵlistener("click", function BarraSuperiorComponent_Template_a_click_29_listener() {
            i0.ɵɵrestoreView(_r1);
            return i0.ɵɵresetView(ctx.eliminar_notificaciones(ctx.id_usuario));
          });
          i0.ɵɵtext(30, "Eliminar Notificaciones");
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(31, "a", 26);
          i0.ɵɵtext(32, " M\u00E1s Notificaciones ");
          i0.ɵɵelementEnd()()();
          i0.ɵɵelementStart(33, "li", 16)(34, "a", 27);
          i0.ɵɵelement(35, "i", 28)(36, "span", 29);
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(37, "div", 30);
          i0.ɵɵtemplate(38, BarraSuperiorComponent_div_38_Template, 5, 1, "div", 31)(39, BarraSuperiorComponent_ng_template_39_Template, 3, 1, "ng-template", null, 0, i0.ɵɵtemplateRefExtractor);
          i0.ɵɵelementEnd()();
          i0.ɵɵelement(41, "div", 32);
          i0.ɵɵelementStart(42, "li", 33)(43, "a", 34)(44, "span", 35);
          i0.ɵɵtext(45);
          i0.ɵɵelementEnd();
          i0.ɵɵelement(46, "img", 36);
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(47, "div", 37)(48, "a", 38);
          i0.ɵɵelement(49, "i", 39);
          i0.ɵɵtext(50, " Mi Perfil ");
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(51, "a", 40);
          i0.ɵɵelement(52, "i", 41);
          i0.ɵɵtext(53, " Configuraciones ");
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(54, "a", 40);
          i0.ɵɵelement(55, "i", 42);
          i0.ɵɵtext(56, " Registro de Actividad ");
          i0.ɵɵelementEnd();
          i0.ɵɵelement(57, "div", 43);
          i0.ɵɵelementStart(58, "a", 44);
          i0.ɵɵelement(59, "i", 45);
          i0.ɵɵtext(60, " Cerrar Sesi\u00F3n ");
          i0.ɵɵelementEnd()()()()();
        }
        if (rf & 2) {
          const elseblock_r10 = i0.ɵɵreference(40);
          i0.ɵɵadvance(18);
          i0.ɵɵproperty("ngIf", ctx.notificaciones.length > 0);
          i0.ɵɵadvance(7);
          i0.ɵɵproperty("ngForOf", ctx.estados_configuracion);
          i0.ɵɵadvance(3);
          i0.ɵɵproperty("ngForOf", ctx.notificaciones);
          i0.ɵɵadvance(10);
          i0.ɵɵproperty("ngIf", ctx.es_alumno == 1)("ngIfElse", elseblock_r10);
          i0.ɵɵadvance(7);
          i0.ɵɵtextInterpolate(ctx.nombre_usuario);
        }
      },
      dependencies: [i3.NgForOf, i3.NgIf, i4.RouterLink, i5.ɵNgNoValidate, i5.NgControlStatusGroup, i5.NgForm, i6.MatRadioGroup, i6.MatRadioButton],
      styles: [".chatWidget[_ngcontent-%COMP%] {\n  max-height: 500px;\n  overflow: auto;\n}\n\n.fixed-header[_ngcontent-%COMP%] {\n  position: sticky;\n  top: 0;\n  background-color: #fff; \n\n  z-index: 1;\n}\n\n.navbar[_ngcontent-%COMP%] {\n  height: 60px;\n}\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50ZXMvYmFycmEtc3VwZXJpb3IvYmFycmEtc3VwZXJpb3IuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxpQkFBQTtFQUNBLGNBQUE7QUFDSjs7QUFFQTtFQUNJLGdCQUFBO0VBQ0EsTUFBQTtFQUNBLHNCQUFBLEVBQUEsZ0RBQUE7RUFDQSxVQUFBO0FBQ0o7O0FBRUE7RUFDSSxZQUFBO0FBQ0oiLCJzb3VyY2VzQ29udGVudCI6WyIuY2hhdFdpZGdldCB7XG4gICAgbWF4LWhlaWdodDogNTAwcHg7XG4gICAgb3ZlcmZsb3c6IGF1dG87XG59XG5cbi5maXhlZC1oZWFkZXIge1xuICAgIHBvc2l0aW9uOiBzdGlja3k7XG4gICAgdG9wOiAwO1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmY7IC8qIFNldCBhIGJhY2tncm91bmQgY29sb3IgdG8gbWF0Y2ggeW91ciBkZXNpZ24gKi9cbiAgICB6LWluZGV4OiAxO1xufVxuXG4ubmF2YmFyIHtcbiAgICBoZWlnaHQ6IDYwcHhcbn1cbiJdLCJzb3VyY2VSb290IjoiIn0= */"]
    });
  }
}
exports.BarraSuperiorComponent = BarraSuperiorComponent;

/***/ }),

/***/ 62280:
/*!******************************************************************************************!*\
  !*** ./src/app/componentes/boton-solicitar-archivo/boton-solicitar-archivo.component.ts ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.Dialog = exports.BotonSolicitarArchivoComponent = void 0;
const dialog_1 = __webpack_require__(/*! @angular/material/dialog */ 12587);
const button_1 = __webpack_require__(/*! @angular/material/button */ 84175);
const forms_1 = __webpack_require__(/*! @angular/forms */ 34456);
const input_1 = __webpack_require__(/*! @angular/material/input */ 95541);
const form_field_1 = __webpack_require__(/*! @angular/material/form-field */ 24950);
const select_1 = __webpack_require__(/*! @angular/material/select */ 25175);
const common_1 = __webpack_require__(/*! @angular/common */ 60316);
const environment_1 = __webpack_require__(/*! src/environments/environment */ 45312);
const i0 = __webpack_require__(/*! @angular/core */ 37580);
const i1 = __webpack_require__(/*! @angular/material/dialog */ 12587);
const i2 = __webpack_require__(/*! ../../servicios/encargado/documentos.service */ 3367);
const i3 = __webpack_require__(/*! @angular/material/snack-bar */ 3347);
const i4 = __webpack_require__(/*! src/app/servicios/notificaciones/notificaciones.service */ 22004);
const i5 = __webpack_require__(/*! @angular/material/form-field */ 24950);
const i6 = __webpack_require__(/*! @angular/material/input */ 95541);
const i7 = __webpack_require__(/*! @angular/forms */ 34456);
const i8 = __webpack_require__(/*! @angular/material/button */ 84175);
const i9 = __webpack_require__(/*! @angular/material/select */ 25175);
const i10 = __webpack_require__(/*! @angular/material/core */ 74646);
const i11 = __webpack_require__(/*! @angular/common */ 60316);
const _c0 = () => [false];
const _c1 = (a0, a1, a2) => [true, a0, a1, a2];
function Dialog_mat_option_19_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "mat-option", 10);
    i0.ɵɵtext(1);
    i0.ɵɵelementEnd();
  }
  if (rf & 2) {
    const par_r1 = ctx.$implicit;
    i0.ɵɵproperty("value", par_r1.extensiones);
    i0.ɵɵadvance();
    i0.ɵɵtextInterpolate1(" ", par_r1.formato, " ");
  }
}
class BotonSolicitarArchivoComponent {
  constructor(dialog, doc_service, _snackBar, service_noti) {
    this.dialog = dialog;
    this.doc_service = doc_service;
    this._snackBar = _snackBar;
    this.service_noti = service_noti;
    this.formatos = [{
      formato: 'PDF',
      extensiones: ['pdf']
    }, {
      formato: "Imagen",
      extensiones: ["jpg", "jpeg", "png"]
    }, {
      formato: 'Word',
      extensiones: ['docx', "doc"]
    }, {
      formato: 'Excel',
      extensiones: ['xlsx', "xls"]
    }];
    this.id_alumno = -1;
    this.correo_alumno = "";
    this.configuración_alumno = "";
    this.id_practica = -1;
  }
  openDialog(enterAnimationDuration, exitAnimationDuration) {
    const dialogRef = this.dialog.open(Dialog, {
      width: '300px',
      enterAnimationDuration,
      exitAnimationDuration,
      data: {
        formatos: this.formatos
      }
    });
    dialogRef.afterClosed().subscribe(result => {
      console.log(result);
      if (!result || !result[0]) {
        console.log("No se ha seleccionado ningún archivo");
        return;
      }
      let [, nombre, descripcion, formato] = result;
      let datos = {
        id_practica: this.id_practica,
        nombre_solicitud: nombre,
        descripcion: descripcion || "",
        tipo_archivo: formato.join(","),
        key: null
      };
      this.doc_service.solicitar_documento_extra(datos).subscribe({
        next: data => {},
        error: error => {
          this._snackBar.open("Error al solicitar documento", "Cerrar", {
            panelClass: ['red-snackbar'],
            duration: 3000
          });
        },
        complete: () => {
          let respuesta = {};
          let enlace = environment_1.environment.url_front + "/" + this.id_alumno;
          this.service_noti.postnotificacion(this.id_alumno, "Se le solicita un documento extra para su práctica", this.correo_alumno, this.configuración_alumno, enlace).subscribe({
            next: data => {
              respuesta = {
                ...respuesta,
                ...data
              };
            },
            error: error => {
              console.log(error);
              return;
            },
            complete: () => {
              console.log("Notificación enviada con éxito");
            }
          });
          this._snackBar.open("Documento Solicitado", "Cerrar", {
            panelClass: ['green-snackbar'],
            duration: 3000
          });
        }
      });
    });
  }
  static {
    this.ɵfac = function BotonSolicitarArchivoComponent_Factory(__ngFactoryType__) {
      return new (__ngFactoryType__ || BotonSolicitarArchivoComponent)(i0.ɵɵdirectiveInject(i1.MatDialog), i0.ɵɵdirectiveInject(i2.DocumentosService), i0.ɵɵdirectiveInject(i3.MatSnackBar), i0.ɵɵdirectiveInject(i4.NotificacionesService));
    };
  }
  static {
    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({
      type: BotonSolicitarArchivoComponent,
      selectors: [["app-boton-solicitar-archivo"]],
      inputs: {
        id_alumno: "id_alumno",
        correo_alumno: "correo_alumno",
        configuración_alumno: "configuraci\u00F3n_alumno",
        id_practica: "id_practica"
      },
      decls: 2,
      vars: 0,
      consts: [[1, "btn", "btn-primary", "btn-lg", "btn-block", 3, "click"]],
      template: function BotonSolicitarArchivoComponent_Template(rf, ctx) {
        if (rf & 1) {
          i0.ɵɵelementStart(0, "button", 0);
          i0.ɵɵlistener("click", function BotonSolicitarArchivoComponent_Template_button_click_0_listener() {
            return ctx.openDialog("100ms", "100ms");
          });
          i0.ɵɵtext(1, "Solicitar Archivo Extra");
          i0.ɵɵelementEnd();
        }
      },
      styles: ["/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */"]
    });
  }
}
exports.BotonSolicitarArchivoComponent = BotonSolicitarArchivoComponent;
class Dialog {
  constructor(dialogRef, data) {
    this.dialogRef = dialogRef;
    this.data = data;
  }
  onNoClick() {
    this.dialogRef.close();
  }
  static {
    this.ɵfac = function Dialog_Factory(__ngFactoryType__) {
      return new (__ngFactoryType__ || Dialog)(i0.ɵɵdirectiveInject(i1.MatDialogRef), i0.ɵɵdirectiveInject(dialog_1.MAT_DIALOG_DATA));
    };
  }
  static {
    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({
      type: Dialog,
      selectors: [["app-dialog"]],
      standalone: true,
      features: [i0.ɵɵStandaloneFeature],
      decls: 27,
      vars: 12,
      consts: [["mat-dialog-title", "", 2, "text-align", "center"], ["mat-dialog-content", ""], [2, "width", "250px"], ["matInput", "", "required", "", 3, "ngModelChange", "ngModel"], ["matInput", "", 3, "ngModelChange", "ngModel"], ["required", "", 3, "ngModelChange", "ngModel"], [3, "value", 4, "ngFor", "ngForOf"], ["mat-dialog-actions", "", 1, "justify-content-center"], ["mat-button", "", 3, "click", "mat-dialog-close"], ["mat-button", "", 3, "mat-dialog-close", "disabled"], [3, "value"]],
      template: function Dialog_Template(rf, ctx) {
        if (rf & 1) {
          i0.ɵɵelementStart(0, "h1", 0);
          i0.ɵɵtext(1, "\u00BFQu\u00E9 archivo desea solicitar?");
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(2, "div", 1)(3, "p");
          i0.ɵɵtext(4, "Nombre del Documento");
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(5, "mat-form-field", 2)(6, "mat-label");
          i0.ɵɵtext(7, "Ej. Boleta de honorarios Junio");
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(8, "input", 3);
          i0.ɵɵtwoWayListener("ngModelChange", function Dialog_Template_input_ngModelChange_8_listener($event) {
            i0.ɵɵtwoWayBindingSet(ctx.nombre, $event) || (ctx.nombre = $event);
            return $event;
          });
          i0.ɵɵelementEnd()();
          i0.ɵɵelementStart(9, "p");
          i0.ɵɵtext(10, "Descripci\u00F3n (opcional)");
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(11, "mat-form-field", 2)(12, "mat-label");
          i0.ɵɵtext(13, "Descripci\u00F3n");
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(14, "textarea", 4);
          i0.ɵɵtwoWayListener("ngModelChange", function Dialog_Template_textarea_ngModelChange_14_listener($event) {
            i0.ɵɵtwoWayBindingSet(ctx.descripcion, $event) || (ctx.descripcion = $event);
            return $event;
          });
          i0.ɵɵelementEnd()();
          i0.ɵɵelementStart(15, "p");
          i0.ɵɵtext(16, "Formato aceptado");
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(17, "mat-form-field", 2)(18, "mat-select", 5);
          i0.ɵɵtwoWayListener("ngModelChange", function Dialog_Template_mat_select_ngModelChange_18_listener($event) {
            i0.ɵɵtwoWayBindingSet(ctx.formato, $event) || (ctx.formato = $event);
            return $event;
          });
          i0.ɵɵtemplate(19, Dialog_mat_option_19_Template, 2, 2, "mat-option", 6);
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(20, "mat-label");
          i0.ɵɵtext(21, "Elija formato");
          i0.ɵɵelementEnd()()();
          i0.ɵɵelementStart(22, "div", 7)(23, "button", 8);
          i0.ɵɵlistener("click", function Dialog_Template_button_click_23_listener() {
            return ctx.onNoClick();
          });
          i0.ɵɵtext(24, "Cancelar");
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(25, "button", 9);
          i0.ɵɵtext(26, "Aceptar");
          i0.ɵɵelementEnd()();
        }
        if (rf & 2) {
          i0.ɵɵadvance(8);
          i0.ɵɵtwoWayProperty("ngModel", ctx.nombre);
          i0.ɵɵadvance(6);
          i0.ɵɵtwoWayProperty("ngModel", ctx.descripcion);
          i0.ɵɵadvance(4);
          i0.ɵɵtwoWayProperty("ngModel", ctx.formato);
          i0.ɵɵadvance();
          i0.ɵɵproperty("ngForOf", ctx.data.formatos);
          i0.ɵɵadvance(4);
          i0.ɵɵproperty("mat-dialog-close", i0.ɵɵpureFunction0(7, _c0));
          i0.ɵɵadvance(2);
          i0.ɵɵproperty("mat-dialog-close", i0.ɵɵpureFunction3(8, _c1, ctx.nombre, ctx.descripcion, ctx.formato))("disabled", !ctx.nombre || !ctx.formato);
        }
      },
      dependencies: [dialog_1.MatDialogModule, i1.MatDialogClose, i1.MatDialogTitle, i1.MatDialogActions, i1.MatDialogContent, form_field_1.MatFormFieldModule, i5.MatFormField, i5.MatLabel, input_1.MatInputModule, i6.MatInput, forms_1.FormsModule, i7.DefaultValueAccessor, i7.NgControlStatus, i7.RequiredValidator, i7.NgModel, button_1.MatButtonModule, i8.MatButton, select_1.MatSelectModule, i9.MatSelect, i10.MatOption, common_1.CommonModule, i11.NgForOf],
      encapsulation: 2
    });
  }
}
exports.Dialog = Dialog;

/***/ }),

/***/ 10462:
/*!****************************************************!*\
  !*** ./src/app/componentes/chat/chat.component.ts ***!
  \****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.ChatComponent = void 0;
const notis_chat_service_1 = __webpack_require__(/*! src/app/servicios/notis-chat/notis-chat.service */ 17284);
const environment_1 = __webpack_require__(/*! src/environments/environment */ 45312);
const i0 = __webpack_require__(/*! @angular/core */ 37580);
const i1 = __webpack_require__(/*! @angular/common/http */ 46443);
const i2 = __webpack_require__(/*! @angular/router */ 95072);
const i3 = __webpack_require__(/*! @angular/common */ 60316);
const i4 = __webpack_require__(/*! ngx-cookie-service */ 39213);
const i5 = __webpack_require__(/*! src/app/servicios/notificaciones/notificaciones.service */ 22004);
const i6 = __webpack_require__(/*! src/app/servicios/data_usuario/data-usuario.service */ 94160);
const i7 = __webpack_require__(/*! @angular/forms */ 34456);
const i8 = __webpack_require__(/*! ../barra-superior/barra-superior.component */ 36370);
const i9 = __webpack_require__(/*! ../barra-lateral-alumno/barra-lateral-alumno.component */ 72756);
const i10 = __webpack_require__(/*! ../barra-lateral-encargado/barra-lateral-encargado.component */ 43560);
const _c0 = ["messageContainer"];
const _c1 = ["sendButton"];
const _c2 = () => ({
  standalone: true
});
const _c3 = a0 => ({
  "disabled-button": a0
});
function ChatComponent_app_barra_lateral_encargado_1_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelement(0, "app-barra-lateral-encargado");
  }
}
function ChatComponent_app_barra_lateral_alumno_2_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelement(0, "app-barra-lateral-alumno");
  }
}
function ChatComponent_div_14_div_1_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 20)(1, "p", 21);
    i0.ɵɵtext(2);
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(3, "p", 22);
    i0.ɵɵtext(4);
    i0.ɵɵpipe(5, "date");
    i0.ɵɵpipe(6, "date");
    i0.ɵɵelementEnd()();
  }
  if (rf & 2) {
    const mensaje_r2 = ctx.$implicit;
    i0.ɵɵproperty("ngClass", mensaje_r2.emisor == "estudiante" ? "enviado" : "recibido");
    i0.ɵɵadvance(2);
    i0.ɵɵtextInterpolate(mensaje_r2.texto);
    i0.ɵɵadvance(2);
    i0.ɵɵtextInterpolate2("Enviado: ", i0.ɵɵpipeBind2(5, 4, mensaje_r2 == null ? null : mensaje_r2.fecha, "dd/MM/yyyy"), " a las ", i0.ɵɵpipeBind2(6, 7, mensaje_r2 == null ? null : mensaje_r2.fecha, "HH:mm"), "");
  }
}
function ChatComponent_div_14_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 18);
    i0.ɵɵtemplate(1, ChatComponent_div_14_div_1_Template, 7, 10, "div", 19);
    i0.ɵɵelementEnd();
  }
  if (rf & 2) {
    const ctx_r2 = i0.ɵɵnextContext();
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngForOf", ctx_r2.Historial == null ? null : ctx_r2.Historial.mensajes);
  }
}
function ChatComponent_div_15_div_1_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 20)(1, "p", 21);
    i0.ɵɵtext(2);
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(3, "p", 22);
    i0.ɵɵtext(4);
    i0.ɵɵpipe(5, "date");
    i0.ɵɵpipe(6, "date");
    i0.ɵɵelementEnd()();
  }
  if (rf & 2) {
    const mensaje_r4 = ctx.$implicit;
    i0.ɵɵproperty("ngClass", mensaje_r4.emisor == "encargado" ? "enviado" : "recibido");
    i0.ɵɵadvance(2);
    i0.ɵɵtextInterpolate(mensaje_r4.texto);
    i0.ɵɵadvance(2);
    i0.ɵɵtextInterpolate2("Enviado: ", i0.ɵɵpipeBind2(5, 4, mensaje_r4 == null ? null : mensaje_r4.fecha, "dd/MM/yyyy"), " a las ", i0.ɵɵpipeBind2(6, 7, mensaje_r4 == null ? null : mensaje_r4.fecha, "HH:mm"), "");
  }
}
function ChatComponent_div_15_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 18);
    i0.ɵɵtemplate(1, ChatComponent_div_15_div_1_Template, 7, 10, "div", 19);
    i0.ɵɵelementEnd();
  }
  if (rf & 2) {
    const ctx_r2 = i0.ɵɵnextContext();
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngForOf", ctx_r2.Historial == null ? null : ctx_r2.Historial.mensajes);
  }
}
class ChatComponent {
  constructor(_http, router, datetime, cookieService, cdr, service_noti, service_obtener) {
    this._http = _http;
    this.router = router;
    this.datetime = datetime;
    this.cookieService = cookieService;
    this.cdr = cdr;
    this.service_noti = service_noti;
    this.service_obtener = service_obtener;
    this.Id = -1;
    this.Id2 = -1;
    this.id_estudiante = -1;
    this.id_encargado = -1;
    this.id_usuario = -1;
    this.userid_otro_participante = -1;
    this.nombre_estudiante = "";
    this.nombre_encargado = "";
    this.tipo = "";
    this.Nmensaje = "";
    this.Historial = [];
    this.usuario_otro_participante = [];
    this.respuesta = [];
    this.room = "";
    this.estado_config_estudiante = "";
    this.estado_config_encargado = "";
    this.correo_estudiante = "";
    this.correo_encargado = "";
    let auth_user = JSON.parse(localStorage.getItem("auth-user") || "{}");
    this.router.params.subscribe(params => {
      this.Id = +params['id1'];
    });
    this.router.params.subscribe(params => {
      this.Id2 = +params['id2'];
    });
    this.id_usuario = auth_user.userdata.id;
    this.router.params.subscribe(params => {
      this.tipo = params['tipo'];
    });
    this.router.params.subscribe(params => {
      this.room = params['room'];
    });
    // check if the room is already set in the cookies, if it is destroy it
    if (this.cookieService.check("room")) {
      //console.log("Destruyendo cookie room", this.cookieService.get("room"));
      this.cookieService.delete("room");
    }
    this.cookieService.set("room", this.room);
    //console.log("Room seteada en cookies:", this.room);    
  }
  ngOnInit() {
    this.chatService = new notis_chat_service_1.NotisChatService(this._http, this.cookieService);
    this.chatService.outEven.subscribe(res => {
      this.enviarmensaje();
    });
    if (this.tipo == "estudiante") {
      this.id_estudiante = this.Id;
      this.id_encargado = this.Id2;
      this.userid_otro_participante = this.Id2;
    } else {
      this.id_encargado = this.Id;
      this.id_estudiante = this.Id2;
      this.userid_otro_participante = this.Id;
    }
    this.service_obtener.obtener_estudiante(this.id_estudiante).subscribe({
      next: data => {
        this.respuesta = {
          ...this.respuesta,
          ...data
        };
      },
      error: error => {
        console.log(error);
        return;
      },
      complete: () => {
        //console.log(this.respuesta.body);
        this.nombre_estudiante = this.respuesta.body.usuario.nombre;
        this.correo_estudiante = this.respuesta.body.usuario.correo;
        this.estado_config_estudiante = this.respuesta.body.usuario.config;
      }
    });
    this.service_obtener.obtener_encargado(this.id_encargado).subscribe({
      next: data => {
        this.respuesta = {
          ...this.respuesta,
          ...data
        };
      },
      error: error => {
        console.log(error);
        return;
      },
      complete: () => {
        //console.log(this.respuesta.body);
        this.nombre_encargado = this.respuesta.body.usuario.nombre;
        this.correo_encargado = this.respuesta.body.usuario.correo;
        this.estado_config_encargado = this.respuesta.body.usuario.config;
      }
    });
    // buscar si chat existe en BD
    this.chatService.getchat(this.id_estudiante, this.id_encargado).subscribe({
      next: data => {
        this.respuesta = {
          ...this.respuesta,
          ...data
        };
      },
      error: error => {
        //console.log(error);
        return;
      },
      complete: () => {
        this.Historial = JSON.parse(this.respuesta.body);
        //console.log("CHAT RECIBIDO: ",this.Historial);
        if (this.Historial == null) {
          //console.log("Chat no encontrado, creando");
          this.chatService.postchat(this.id_estudiante, this.id_encargado).subscribe({
            next: data => {
              this.respuesta = {
                ...this.respuesta,
                ...data
              };
              //console.log("Request aceptada");
            },
            error: error => console.log("Error en post chat:", error),
            complete: () => {
              //console.log("Chat creado");
              //console.log(this.respuesta);
              this.cdr.detectChanges();
              this.chatService.event$.subscribe(res => {
                this.cdr.detectChanges();
              });
              this.Historial = {
                mensajes: []
              };
            }
          });
        } else {
          this.cdr.detectChanges();
          this.chatService.event$.subscribe(res => {
            this.Historial.mensajes.push(res);
            this.cdr.detectChanges();
          });
        }
      }
    });
    // buscar datos del usuario otro participante
    if (this.userid_otro_participante != -1) {
      this.chatService.getusuario(this.userid_otro_participante).subscribe({
        next: data => {
          this.respuesta = {
            ...this.respuesta,
            ...data
          };
        },
        error: error => {
          //console.log(error);
          return;
        },
        complete: () => {
          this.usuario_otro_participante = this.respuesta.body;
          //console.log("Nombre del otro participante: ",this.usuario_otro_participante);
          this.cdr.detectChanges();
        }
      });
    }
  }
  enviarmensaje() {
    if (this.Nmensaje.trim() == "") {
      return;
    }
    let mensaje = {
      emisor: this.tipo,
      texto: this.Nmensaje,
      fecha: this.datetime.transform(new Date(), 'MM/dd/yyyy h:mm:ss')
    };
    this.chatService.postmensaje(this.id_estudiante, this.id_encargado, mensaje, this.correo_estudiante, this.correo_encargado).subscribe({
      next: data => {
        this.respuesta = {
          ...this.respuesta,
          ...data
        };
        //console.log("Request aceptada");
      },
      error: error => console.log("Error en enviar mensaje:", error),
      complete: () => {
        //console.log(this.tipo);
        let noti = "";
        if (mensaje.emisor == "encargado") {
          noti = "El encargado " + this.nombre_encargado + " te ha enviado un mensaje";
          let enlace = environment_1.environment.url_front + "/" + this.id_estudiante + this.id_encargado + "/" + this.id_estudiante + "/" + this.id_encargado + "/estudiante";
          this.service_noti.postnotificacion(this.id_estudiante, noti, this.correo_estudiante, this.estado_config_estudiante, enlace).subscribe({
            next: data => {
              this.respuesta = {
                ...this.respuesta,
                ...data
              };
            },
            error: error => {
              console.log(error);
              return;
            },
            complete: () => {}
          });
        } else if (mensaje.emisor == "estudiante") {
          noti = "El alumno " + this.nombre_estudiante + " te ha enviado un mensaje";
          let enlace = environment_1.environment.url_front + "/" + this.id_encargado + this.id_estudiante + "/" + this.id_encargado + "/" + this.id_estudiante + "/encargado";
          this.service_noti.postnotificacion(this.id_encargado, noti, this.correo_encargado, this.estado_config_encargado, enlace).subscribe({
            next: data => {
              this.respuesta = {
                ...this.respuesta,
                ...data
              };
            },
            error: error => {
              console.log(error);
              return;
            },
            complete: () => {
              //console.log("Notificación enviada con éxito");
            }
          });
        }
        //console.log("Mensaje Enviado", mensaje);
        //console.log(this.respuesta);
        this.chatService.emitEvent(mensaje);
        this.Nmensaje = "";
        this.Historial.mensajes.push(mensaje);
        this.sendButton.nativeElement.click();
        this.cdr.detectChanges();
      }
    });
  }
  isEnviarButtonDisabled() {
    return this.Nmensaje.trim() === ''; // Disable button if input field is empty
  }
  updateButtonState() {
    this.cdr.detectChanges(); // Trigger change detection
  }
  volver_atras() {
    window.history.back();
    // if the previous url contains /chat/sala, reload the page after 300 miliseconds
    setTimeout(() => {
      if (window.location.href.includes("/chat/sala")) {
        window.location.reload(); // esto es porque si ya se estaba en un chat, no recargaba los mensajes
      }
    }, 300);
  }
  ngAfterViewChecked() {
    this.scrollToBottom(); // Scroll to the bottom after view initialization
  }
  // Method to scroll to the bottom of the chat container
  scrollToBottom() {
    if (this.messageContainer) {
      const element = this.messageContainer.nativeElement;
      element.scrollTop = element.scrollHeight;
    }
  }
  onKeyDown(event) {
    if (event.key === 'Enter' && !event.shiftKey) {
      event.preventDefault(); // Prevent default Enter behavior (carriage return)
      this.enviarmensaje();
    }
  }
  static {
    this.ɵfac = function ChatComponent_Factory(__ngFactoryType__) {
      return new (__ngFactoryType__ || ChatComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i3.DatePipe), i0.ɵɵdirectiveInject(i4.CookieService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i5.NotificacionesService), i0.ɵɵdirectiveInject(i6.DataUsuarioService));
    };
  }
  static {
    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({
      type: ChatComponent,
      selectors: [["app-chat"]],
      viewQuery: function ChatComponent_Query(rf, ctx) {
        if (rf & 1) {
          i0.ɵɵviewQuery(_c0, 5);
          i0.ɵɵviewQuery(_c1, 5);
        }
        if (rf & 2) {
          let _t;
          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.messageContainer = _t.first);
          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.sendButton = _t.first);
        }
      },
      decls: 24,
      vars: 11,
      consts: [["messageContainer", ""], ["sendButton", ""], ["id", "wrapper", 1, "wrapper"], [4, "ngIf"], ["id", "content-wrapper", 1, "d-flex", "flex-column"], ["id", "content", 1, "content"], [1, "container-fluid"], [1, "row"], [1, "col-lg-12"], [1, "card", "shadow", "text-center", "cardcontainer"], [1, "card-header"], [1, "card-body", "overflow-auto"], ["class", "contenedordemensajes", 4, "ngIf"], ["name", "formulario", 1, "card-footer", "text-muted", "input-group", "pb-3"], ["type", "text", "placeholder", "Escriba su Mensaje...", 1, "form-control", 3, "ngModelChange", "input", "keydown", "ngModel", "ngModelOptions"], [1, "input-group-append", 3, "click"], ["id", "basic-addon2", 1, "input-group-text", "btn", "btn-primary", 3, "ngClass"], [1, "btn", "btn-primary", 3, "click"], [1, "contenedordemensajes"], [3, "ngClass", 4, "ngFor", "ngForOf"], [3, "ngClass"], [1, "texto", 2, "white-space", "pre-line"], [1, "horafecha"]],
      template: function ChatComponent_Template(rf, ctx) {
        if (rf & 1) {
          const _r1 = i0.ɵɵgetCurrentView();
          i0.ɵɵelementStart(0, "div", 2);
          i0.ɵɵtemplate(1, ChatComponent_app_barra_lateral_encargado_1_Template, 1, 0, "app-barra-lateral-encargado", 3)(2, ChatComponent_app_barra_lateral_alumno_2_Template, 1, 0, "app-barra-lateral-alumno", 3);
          i0.ɵɵelementStart(3, "div", 4)(4, "div", 5);
          i0.ɵɵelement(5, "app-barra-superior");
          i0.ɵɵelementStart(6, "div", 6)(7, "div", 7)(8, "div", 8)(9, "div", 9)(10, "div", 10);
          i0.ɵɵtext(11);
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(12, "div", 11, 0);
          i0.ɵɵtemplate(14, ChatComponent_div_14_Template, 2, 1, "div", 12)(15, ChatComponent_div_15_Template, 2, 1, "div", 12);
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(16, "form", 13)(17, "textarea", 14);
          i0.ɵɵtwoWayListener("ngModelChange", function ChatComponent_Template_textarea_ngModelChange_17_listener($event) {
            i0.ɵɵrestoreView(_r1);
            i0.ɵɵtwoWayBindingSet(ctx.Nmensaje, $event) || (ctx.Nmensaje = $event);
            return i0.ɵɵresetView($event);
          });
          i0.ɵɵlistener("input", function ChatComponent_Template_textarea_input_17_listener() {
            i0.ɵɵrestoreView(_r1);
            return i0.ɵɵresetView(ctx.updateButtonState());
          })("keydown", function ChatComponent_Template_textarea_keydown_17_listener($event) {
            i0.ɵɵrestoreView(_r1);
            return i0.ɵɵresetView(ctx.onKeyDown($event));
          });
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(18, "div", 15, 1);
          i0.ɵɵlistener("click", function ChatComponent_Template_div_click_18_listener() {
            i0.ɵɵrestoreView(_r1);
            return i0.ɵɵresetView(ctx.enviarmensaje());
          });
          i0.ɵɵelementStart(20, "span", 16);
          i0.ɵɵtext(21, "Enviar");
          i0.ɵɵelementEnd()()()();
          i0.ɵɵelementStart(22, "button", 17);
          i0.ɵɵlistener("click", function ChatComponent_Template_button_click_22_listener() {
            i0.ɵɵrestoreView(_r1);
            return i0.ɵɵresetView(ctx.volver_atras());
          });
          i0.ɵɵtext(23, " Volver ");
          i0.ɵɵelementEnd()()()()()()();
        }
        if (rf & 2) {
          i0.ɵɵadvance();
          i0.ɵɵproperty("ngIf", ctx.tipo == "encargado");
          i0.ɵɵadvance();
          i0.ɵɵproperty("ngIf", ctx.tipo == "estudiante");
          i0.ɵɵadvance(9);
          i0.ɵɵtextInterpolate1(" Chat con ", ctx.usuario_otro_participante == null ? null : ctx.usuario_otro_participante.nombre, " ");
          i0.ɵɵadvance(3);
          i0.ɵɵproperty("ngIf", ctx.tipo == "estudiante");
          i0.ɵɵadvance();
          i0.ɵɵproperty("ngIf", ctx.tipo == "encargado");
          i0.ɵɵadvance(2);
          i0.ɵɵtwoWayProperty("ngModel", ctx.Nmensaje);
          i0.ɵɵproperty("ngModelOptions", i0.ɵɵpureFunction0(8, _c2));
          i0.ɵɵadvance(3);
          i0.ɵɵproperty("ngClass", i0.ɵɵpureFunction1(9, _c3, ctx.isEnviarButtonDisabled()));
        }
      },
      dependencies: [i3.NgClass, i3.NgForOf, i3.NgIf, i7.ɵNgNoValidate, i7.DefaultValueAccessor, i7.NgControlStatus, i7.NgControlStatusGroup, i7.NgModel, i7.NgForm, i8.BarraSuperiorComponent, i9.BarraLateralAlumnoComponent, i10.BarraLateralEncargadoComponent, i3.DatePipe],
      styles: [".wrapper[_ngcontent-%COMP%]{\n    max-height: 100vh;\n}\n\n.col-lg-12[_ngcontent-%COMP%]{\n    max-height: 80vh;\n    padding: 0;\n}\n\n.cardcontainer[_ngcontent-%COMP%]{\n    max-width: 60%; \n    margin-top: 1%; \n    margin-left: 20%;\n    height: 100%;      \n}\n\n.cardheader[_ngcontent-%COMP%]{\n    background-color: #3f51b5;\n    font-weight: 700;\n}\n\n\n.contenedordemensajes[_ngcontent-%COMP%]::-webkit-scrollbar{\n    display: none;\n}\n\n.enviado[_ngcontent-%COMP%]{\n    display: block;\n    float: right;\n    background-color: #4a6ed3;\n    color: white;\n    min-width: 50.01%;\n    border-radius: 10px;\n    text-align: left;\n    padding-left: 2%;\n    padding-right: 2%;\n    padding-top: 1%;\n    padding-bottom: .5%;\n    margin-top: 1%;\n}\n\n.recibido[_ngcontent-%COMP%]{\n    display: block;\n    float: left;\n    background-color: #4a6ed3;\n    color: white;\n    min-width: 50.01%;\n    border-radius: 10px;\n    text-align: left;\n    padding-left: 2%;\n    padding-right: 2%;\n    padding-top: 1%;\n    padding-bottom: .5%;\n    margin-top: 1%;\n}\n\n.texto[_ngcontent-%COMP%]{\n    margin: 0;\n}\n\n.horafecha[_ngcontent-%COMP%]{\n    margin-bottom: 0;\n    text-align: right;\n    font-size: small;\n}\n\n.card-footer[_ngcontent-%COMP%]{\n    height: 100px;\n}\n\n\n.form-control[_ngcontent-%COMP%]{\n    resize: none;\n    overflow: auto;\n    height: 100%;\n}\n\n.disabled-button[_ngcontent-%COMP%] {\n    pointer-events: none;\n    opacity: 0.6;\n    cursor: not-allowed;\n}\n\n\n\n\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50ZXMvY2hhdC9jaGF0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxpQkFBaUI7QUFDckI7O0FBRUE7SUFDSSxnQkFBZ0I7SUFDaEIsVUFBVTtBQUNkOztBQUVBO0lBQ0ksY0FBYztJQUNkLGNBQWM7SUFDZCxnQkFBZ0I7SUFDaEIsWUFBWTtBQUNoQjs7QUFFQTtJQUNJLHlCQUF5QjtJQUN6QixnQkFBZ0I7QUFDcEI7OztBQUdBO0lBQ0ksYUFBYTtBQUNqQjs7QUFFQTtJQUNJLGNBQWM7SUFDZCxZQUFZO0lBQ1oseUJBQXlCO0lBQ3pCLFlBQVk7SUFDWixpQkFBaUI7SUFDakIsbUJBQW1CO0lBQ25CLGdCQUFnQjtJQUNoQixnQkFBZ0I7SUFDaEIsaUJBQWlCO0lBQ2pCLGVBQWU7SUFDZixtQkFBbUI7SUFDbkIsY0FBYztBQUNsQjs7QUFFQTtJQUNJLGNBQWM7SUFDZCxXQUFXO0lBQ1gseUJBQXlCO0lBQ3pCLFlBQVk7SUFDWixpQkFBaUI7SUFDakIsbUJBQW1CO0lBQ25CLGdCQUFnQjtJQUNoQixnQkFBZ0I7SUFDaEIsaUJBQWlCO0lBQ2pCLGVBQWU7SUFDZixtQkFBbUI7SUFDbkIsY0FBYztBQUNsQjs7QUFFQTtJQUNJLFNBQVM7QUFDYjs7QUFFQTtJQUNJLGdCQUFnQjtJQUNoQixpQkFBaUI7SUFDakIsZ0JBQWdCO0FBQ3BCOztBQUVBO0lBQ0ksYUFBYTtBQUNqQjs7O0FBR0E7SUFDSSxZQUFZO0lBQ1osY0FBYztJQUNkLFlBQVk7QUFDaEI7O0FBRUE7SUFDSSxvQkFBb0I7SUFDcEIsWUFBWTtJQUNaLG1CQUFtQjtBQUN2QiIsInNvdXJjZXNDb250ZW50IjpbIi53cmFwcGVye1xuICAgIG1heC1oZWlnaHQ6IDEwMHZoO1xufVxuXG4uY29sLWxnLTEye1xuICAgIG1heC1oZWlnaHQ6IDgwdmg7XG4gICAgcGFkZGluZzogMDtcbn1cblxuLmNhcmRjb250YWluZXJ7XG4gICAgbWF4LXdpZHRoOiA2MCU7IFxuICAgIG1hcmdpbi10b3A6IDElOyBcbiAgICBtYXJnaW4tbGVmdDogMjAlO1xuICAgIGhlaWdodDogMTAwJTsgICAgICBcbn1cblxuLmNhcmRoZWFkZXJ7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzNmNTFiNTtcbiAgICBmb250LXdlaWdodDogNzAwO1xufVxuXG5cbi5jb250ZW5lZG9yZGVtZW5zYWplczo6LXdlYmtpdC1zY3JvbGxiYXJ7XG4gICAgZGlzcGxheTogbm9uZTtcbn1cblxuLmVudmlhZG97XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgZmxvYXQ6IHJpZ2h0O1xuICAgIGJhY2tncm91bmQtY29sb3I6ICM0YTZlZDM7XG4gICAgY29sb3I6IHdoaXRlO1xuICAgIG1pbi13aWR0aDogNTAuMDElO1xuICAgIGJvcmRlci1yYWRpdXM6IDEwcHg7XG4gICAgdGV4dC1hbGlnbjogbGVmdDtcbiAgICBwYWRkaW5nLWxlZnQ6IDIlO1xuICAgIHBhZGRpbmctcmlnaHQ6IDIlO1xuICAgIHBhZGRpbmctdG9wOiAxJTtcbiAgICBwYWRkaW5nLWJvdHRvbTogLjUlO1xuICAgIG1hcmdpbi10b3A6IDElO1xufVxuXG4ucmVjaWJpZG97XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgZmxvYXQ6IGxlZnQ7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzRhNmVkMztcbiAgICBjb2xvcjogd2hpdGU7XG4gICAgbWluLXdpZHRoOiA1MC4wMSU7XG4gICAgYm9yZGVyLXJhZGl1czogMTBweDtcbiAgICB0ZXh0LWFsaWduOiBsZWZ0O1xuICAgIHBhZGRpbmctbGVmdDogMiU7XG4gICAgcGFkZGluZy1yaWdodDogMiU7XG4gICAgcGFkZGluZy10b3A6IDElO1xuICAgIHBhZGRpbmctYm90dG9tOiAuNSU7XG4gICAgbWFyZ2luLXRvcDogMSU7XG59XG5cbi50ZXh0b3tcbiAgICBtYXJnaW46IDA7XG59XG5cbi5ob3JhZmVjaGF7XG4gICAgbWFyZ2luLWJvdHRvbTogMDtcbiAgICB0ZXh0LWFsaWduOiByaWdodDtcbiAgICBmb250LXNpemU6IHNtYWxsO1xufVxuXG4uY2FyZC1mb290ZXJ7XG4gICAgaGVpZ2h0OiAxMDBweDtcbn1cblxuXG4uZm9ybS1jb250cm9se1xuICAgIHJlc2l6ZTogbm9uZTtcbiAgICBvdmVyZmxvdzogYXV0bztcbiAgICBoZWlnaHQ6IDEwMCU7XG59XG5cbi5kaXNhYmxlZC1idXR0b24ge1xuICAgIHBvaW50ZXItZXZlbnRzOiBub25lO1xuICAgIG9wYWNpdHk6IDAuNjtcbiAgICBjdXJzb3I6IG5vdC1hbGxvd2VkO1xufVxuXG5cblxuIl0sInNvdXJjZVJvb3QiOiIifQ== */"]
    });
  }
}
exports.ChatComponent = ChatComponent;

/***/ }),

/***/ 69504:
/*!******************************************************************************!*\
  !*** ./src/app/componentes/comentarios-modal/comentarios-modal.component.ts ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.ComentariosModalComponent = void 0;
const i0 = __webpack_require__(/*! @angular/core */ 37580);
const i1 = __webpack_require__(/*! src/app/servicios/alumno/obtener_datos.service */ 27095);
const i2 = __webpack_require__(/*! @angular/material/snack-bar */ 3347);
const i3 = __webpack_require__(/*! @angular/common */ 60316);
function ComentariosModalComponent_ng_template_7_tr_9_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "tr")(1, "td");
    i0.ɵɵtext(2);
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(3, "td");
    i0.ɵɵtext(4);
    i0.ɵɵelementEnd()();
  }
  if (rf & 2) {
    const comentario_r1 = ctx.$implicit;
    i0.ɵɵadvance(2);
    i0.ɵɵtextInterpolate(comentario_r1.pregunta);
    i0.ɵɵadvance(2);
    i0.ɵɵtextInterpolate(comentario_r1.respuesta);
  }
}
function ComentariosModalComponent_ng_template_7_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 10)(1, "table", 11)(2, "thead")(3, "tr")(4, "th", 12);
    i0.ɵɵtext(5, "Pregunta");
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(6, "th", 12);
    i0.ɵɵtext(7, "Respuesta");
    i0.ɵɵelementEnd()()();
    i0.ɵɵelementStart(8, "tbody");
    i0.ɵɵtemplate(9, ComentariosModalComponent_ng_template_7_tr_9_Template, 5, 2, "tr", 13);
    i0.ɵɵelementEnd()()();
  }
  if (rf & 2) {
    const ctx_r1 = i0.ɵɵnextContext();
    i0.ɵɵadvance(9);
    i0.ɵɵproperty("ngForOf", ctx_r1.data_response);
  }
}
function ComentariosModalComponent_ng_template_8_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵtext(0, "No hay comentarios en esta practica");
  }
}
class ComentariosModalComponent {
  constructor(servicio_datos, _snackBar) {
    this.servicio_datos = servicio_datos;
    this._snackBar = _snackBar;
    this.preguntas_respuestas = [];
  }
  ngOnInit() {}
  static {
    this.ɵfac = function ComentariosModalComponent_Factory(__ngFactoryType__) {
      return new (__ngFactoryType__ || ComentariosModalComponent)(i0.ɵɵdirectiveInject(i1.ObtenerDatosService), i0.ɵɵdirectiveInject(i2.MatSnackBar));
    };
  }
  static {
    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({
      type: ComentariosModalComponent,
      selectors: [["app-comentarios-modal"]],
      inputs: {
        id_p: "id_p",
        data_response: "data_response",
        flag: "flag"
      },
      decls: 13,
      vars: 2,
      consts: [["case", ""], ["id", "comentarios-modal", "tabindex", "-1", "role", "dialog", "aria-labelledby", "exampleModalLabel", "aria-hidden", "true", 1, "modal", "fade"], ["role", "document", 1, "modal-dialog"], [1, "modal-content"], [1, "modal-header"], ["id", "exampleModalLabel", 1, "modal-title"], [1, "modal-body"], [3, "ngIf", "ngIfElse"], [1, "modal-footer"], ["type", "button", "data-dismiss", "modal", 1, "btn", "btn-secondary"], [1, "table-responsive"], ["id", "dataTable", "width", "100%", "cellspacing", "0", 1, "table", "table-bordered", "hoverTable"], [2, "vertical-align", "bottom"], [4, "ngFor", "ngForOf"]],
      template: function ComentariosModalComponent_Template(rf, ctx) {
        if (rf & 1) {
          i0.ɵɵelementStart(0, "div", 1)(1, "div", 2)(2, "div", 3)(3, "div", 4)(4, "h5", 5);
          i0.ɵɵtext(5, "Comentarios de la evaluacion");
          i0.ɵɵelementEnd()();
          i0.ɵɵelementStart(6, "div", 6);
          i0.ɵɵtemplate(7, ComentariosModalComponent_ng_template_7_Template, 10, 1, "ng-template", 7)(8, ComentariosModalComponent_ng_template_8_Template, 1, 0, "ng-template", null, 0, i0.ɵɵtemplateRefExtractor);
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(10, "div", 8)(11, "button", 9);
          i0.ɵɵtext(12, "Volver");
          i0.ɵɵelementEnd()()()()();
        }
        if (rf & 2) {
          const case_r3 = i0.ɵɵreference(9);
          i0.ɵɵadvance(7);
          i0.ɵɵproperty("ngIf", ctx.flag)("ngIfElse", case_r3);
        }
      },
      dependencies: [i3.NgForOf, i3.NgIf],
      styles: ["/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */"]
    });
  }
}
exports.ComentariosModalComponent = ComentariosModalComponent;

/***/ }),

/***/ 63172:
/*!**********************************************************************************!*\
  !*** ./src/app/componentes/crear-aptitud-modal/crear-aptitud-modal.component.ts ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.CrearAptitudModalComponent = void 0;
const forms_1 = __webpack_require__(/*! @angular/forms */ 34456);
const i0 = __webpack_require__(/*! @angular/core */ 37580);
const i1 = __webpack_require__(/*! src/app/servicios/encargado/aptitud.service */ 41591);
const i2 = __webpack_require__(/*! @angular/material/snack-bar */ 3347);
const i3 = __webpack_require__(/*! @angular/forms */ 34456);
const i4 = __webpack_require__(/*! @angular/router */ 95072);
class CrearAptitudModalComponent {
  createForm() {
    this.aptitudForm = this.fb.group({
      nombre: ['', forms_1.Validators.required]
    });
  }
  constructor(aptitud, _snackBar, fb, router) {
    this.aptitud = aptitud;
    this._snackBar = _snackBar;
    this.fb = fb;
    this.router = router;
    this.user = JSON.parse(localStorage.getItem('auth-user') || "{}").userdata;
    this.createForm();
  }
  ngOnInit() {}
  crear() {
    let data = this.aptitudForm.value;
    let _data = {};
    let lista = this.listar(data.nombre);
    this.aptitud.crearAptitud(this.user.encargado.id_carrera, lista).subscribe({
      next: data => {
        _data = {
          ..._data,
          ...data
        };
      },
      error: error => {
        this._snackBar.open("Error al crear aptitud", "Cerrar", {
          panelClass: ['red-snackbar'],
          duration: 2000
        });
      },
      complete: () => {
        if (_data.status == 200) {
          this._snackBar.open("Aptitud creada exitosamente", "Cerrar", {
            panelClass: ['green-snackbar'],
            duration: 2000
          });
          setTimeout(function () {
            window.location.reload();
          }, 2000);
        } else {
          this._snackBar.open("Error al crear aptitud", "Cerrar", {
            panelClass: ['red-snackbar'],
            duration: 2000
          });
        }
      }
    });
  }
  listar(nombre) {
    let lista = nombre.split('\n');
    for (let i = 0; i < lista.length; i++) {
      lista[i] = lista[i].trim();
    }
    return lista;
  }
  static {
    this.ɵfac = function CrearAptitudModalComponent_Factory(__ngFactoryType__) {
      return new (__ngFactoryType__ || CrearAptitudModalComponent)(i0.ɵɵdirectiveInject(i1.AptitudService), i0.ɵɵdirectiveInject(i2.MatSnackBar), i0.ɵɵdirectiveInject(i3.FormBuilder), i0.ɵɵdirectiveInject(i4.Router));
    };
  }
  static {
    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({
      type: CrearAptitudModalComponent,
      selectors: [["app-crear-aptitud-modal"]],
      decls: 17,
      vars: 1,
      consts: [["id", "crear-aptitud-modal", "tabindex", "-1", "role", "dialog", "aria-labelledby", "exampleModalLabel", "aria-hidden", "true", 1, "modal", "fade"], ["role", "document", 1, "modal-dialog"], [1, "modal-content"], [1, "modal-header"], ["id", "exampleModalLabel", 1, "modal-title"], [1, "modal-body"], [1, "crearAptitud", 3, "formGroup"], ["id", "exampleFirstName", "placeholder", "Ingrese una o varias competencias aqui...", "formControlName", "nombre", "name", "nombre", 1, "form-control", "form-control-user"], [1, "modal-footer"], ["type", "button", "data-dismiss", "modal", 1, "btn", "btn-secondary"], ["id", "myBtn", "type", "submit", "data-dismiss", "modal", 1, "btn", "btn-primary", 3, "click"]],
      template: function CrearAptitudModalComponent_Template(rf, ctx) {
        if (rf & 1) {
          i0.ɵɵelementStart(0, "div", 0)(1, "div", 1)(2, "div", 2)(3, "div", 3)(4, "h2", 4);
          i0.ɵɵtext(5, "Asignar");
          i0.ɵɵelementEnd()();
          i0.ɵɵelementStart(6, "div", 5);
          i0.ɵɵtext(7, " Ingrese una competencia para evaluar a futuros estudiantes, para hacerlo utilice una linea por cada competencia. ");
          i0.ɵɵelementStart(8, "form", 6)(9, "div")(10, "textarea", 7);
          i0.ɵɵtext(11, "                    ");
          i0.ɵɵelementEnd()()()();
          i0.ɵɵelementStart(12, "div", 8)(13, "button", 9);
          i0.ɵɵtext(14, "Cancelar");
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(15, "button", 10);
          i0.ɵɵlistener("click", function CrearAptitudModalComponent_Template_button_click_15_listener() {
            return ctx.crear();
          });
          i0.ɵɵtext(16, " Crear ");
          i0.ɵɵelementEnd()()()()();
        }
        if (rf & 2) {
          i0.ɵɵadvance(8);
          i0.ɵɵproperty("formGroup", ctx.aptitudForm);
        }
      },
      dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName],
      styles: ["/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */"]
    });
  }
}
exports.CrearAptitudModalComponent = CrearAptitudModalComponent;

/***/ }),

/***/ 69836:
/*!**********************************************************************************!*\
  !*** ./src/app/componentes/crear-carrera-modal/crear-carrera-modal.component.ts ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.CrearCarreraModalComponent = void 0;
const forms_1 = __webpack_require__(/*! @angular/forms */ 34456);
const i0 = __webpack_require__(/*! @angular/core */ 37580);
const i1 = __webpack_require__(/*! src/app/servicios/admin/admin.service */ 32126);
const i2 = __webpack_require__(/*! @angular/forms */ 34456);
const i3 = __webpack_require__(/*! @angular/material/snack-bar */ 3347);
const i4 = __webpack_require__(/*! @angular/router */ 95072);
class CrearCarreraModalComponent {
  createForm() {
    this.carreraForm = this.fb.group({
      nombre: ['', [forms_1.Validators.required]]
    });
  }
  constructor(admin, fb, _snackBar, router) {
    this.admin = admin;
    this.fb = fb;
    this._snackBar = _snackBar;
    this.router = router;
    this.createForm();
  }
  ngOnInit() {}
  crear() {
    const data = this.carreraForm.value;
    this.nombre = data.nombre;
    let lista = this.listar(this.nombre);
    let _data = {};
    this.admin.crearCarrera(lista).subscribe({
      next: data => {
        _data = {
          ..._data,
          ...data
        };
      },
      complete: () => {
        if (_data.status == 200) {
          this._snackBar.open("Carrera(s) creada(s) exitosamente", "Cerrar", {
            panelClass: ['green-snackbar'],
            duration: 2000
          });
          setTimeout(function () {
            window.location.reload();
          }, 2000);
        } else {
          this._snackBar.open("Error al crear carrera", "Cerrar", {
            panelClass: ['red-snackbar'],
            duration: 2000
          });
        }
      },
      error: error => {
        this._snackBar.open("Error al crear carrera", "Cerrar", {
          panelClass: ['red-snackbar'],
          duration: 2000
        });
      }
    });
  }
  listar(nombre) {
    let lista = nombre.split('\n');
    for (let i = 0; i < lista.length; i++) {
      lista[i] = lista[i].trim();
    }
    return lista;
  }
  static {
    this.ɵfac = function CrearCarreraModalComponent_Factory(__ngFactoryType__) {
      return new (__ngFactoryType__ || CrearCarreraModalComponent)(i0.ɵɵdirectiveInject(i1.AdminService), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.MatSnackBar), i0.ɵɵdirectiveInject(i4.Router));
    };
  }
  static {
    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({
      type: CrearCarreraModalComponent,
      selectors: [["app-crear-carrera-modal"]],
      decls: 16,
      vars: 1,
      consts: [["id", "crear-carrera-modal", "tabindex", "-1", "role", "dialog", "aria-labelledby", "exampleModalLabel", "aria-hidden", "true", 1, "modal", "fade"], ["role", "document", 1, "modal-dialog"], [1, "modal-content"], [1, "modal-header"], ["id", "exampleModalLabel", 1, "modal-title"], [1, "modal-body"], [1, "asignacion", 3, "formGroup"], ["id", "exampleFirstName", "placeholder", "Ingrese una o varias carreras aqui...", "formControlName", "nombre", "name", "nombre", 1, "form-control", "form-control-user"], [1, "modal-footer"], ["type", "button", "data-dismiss", "modal", 1, "btn", "btn-secondary"], ["id", "myBtn", "type", "submit", "data-dismiss", "modal", 1, "btn", "btn-primary", 3, "click"]],
      template: function CrearCarreraModalComponent_Template(rf, ctx) {
        if (rf & 1) {
          i0.ɵɵelementStart(0, "div", 0)(1, "div", 1)(2, "div", 2)(3, "div", 3)(4, "h2", 4);
          i0.ɵɵtext(5, "Asignar");
          i0.ɵɵelementEnd()();
          i0.ɵɵelementStart(6, "div", 5);
          i0.ɵɵtext(7, " Ingrese una o varias carreras, para hacerlo utilice una linea por carrera. ");
          i0.ɵɵelementStart(8, "form", 6)(9, "textarea", 7);
          i0.ɵɵtext(10, "                    ");
          i0.ɵɵelementEnd()()();
          i0.ɵɵelementStart(11, "div", 8)(12, "button", 9);
          i0.ɵɵtext(13, "Cancelar");
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(14, "button", 10);
          i0.ɵɵlistener("click", function CrearCarreraModalComponent_Template_button_click_14_listener() {
            return ctx.crear();
          });
          i0.ɵɵtext(15, " Crear ");
          i0.ɵɵelementEnd()()()()();
        }
        if (rf & 2) {
          i0.ɵɵadvance(8);
          i0.ɵɵproperty("formGroup", ctx.carreraForm);
        }
      },
      dependencies: [i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName],
      styles: ["/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */"]
    });
  }
}
exports.CrearCarreraModalComponent = CrearCarreraModalComponent;

/***/ }),

/***/ 38096:
/*!**************************************************************************************!*\
  !*** ./src/app/componentes/crear-encargado-modal/crear-encargado-modal.component.ts ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.CrearEncargadoModalComponent = void 0;
const forms_1 = __webpack_require__(/*! @angular/forms */ 34456);
const i0 = __webpack_require__(/*! @angular/core */ 37580);
const i1 = __webpack_require__(/*! src/app/servicios/admin/admin.service */ 32126);
const i2 = __webpack_require__(/*! @angular/forms */ 34456);
const i3 = __webpack_require__(/*! @angular/material/snack-bar */ 3347);
const i4 = __webpack_require__(/*! @angular/router */ 95072);
const i5 = __webpack_require__(/*! @angular/common */ 60316);
function CrearEncargadoModalComponent_div_11_p_1_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "p");
    i0.ɵɵtext(1, " Se requiere correo ");
    i0.ɵɵelementEnd();
  }
}
function CrearEncargadoModalComponent_div_11_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 13);
    i0.ɵɵtemplate(1, CrearEncargadoModalComponent_div_11_p_1_Template, 2, 0, "p", 14);
    i0.ɵɵelementEnd();
  }
  if (rf & 2) {
    const ctx_r0 = i0.ɵɵnextContext();
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngIf", ctx_r0.encargadoForm.controls["email"].errors == null ? null : ctx_r0.encargadoForm.controls["email"].errors["required"]);
  }
}
class CrearEncargadoModalComponent {
  createForm() {
    this.encargadoForm = this.fb.group({
      email: ['', [forms_1.Validators.required]]
    });
  }
  constructor(admin, fb, _snackBar, router) {
    this.admin = admin;
    this.fb = fb;
    this._snackBar = _snackBar;
    this.router = router;
    this.createForm();
  }
  ngOnInit() {}
  crear() {
    const data = this.encargadoForm.value;
    this.email = data.email;
    let _data = {};
    this.admin.crearEncargado(this.email).subscribe({
      next: data => {
        _data = {
          ..._data,
          ...data
        };
      },
      complete: () => {
        if (_data.status == 200) {
          this._snackBar.open("Se le ha enviado un link al encargado para que pueda registrarse", "Cerrar", {
            panelClass: ['green-snackbar'],
            duration: 3000
          });
        } else {
          this._snackBar.open("Error al registrar encargado", "Cerrar", {
            panelClass: ['red-snackbar'],
            duration: 2000
          });
        }
      },
      error: error => {
        this._snackBar.open("Error al registrar encargado", "Cerrar", {
          panelClass: ['red-snackbar'],
          duration: 2000
        });
      }
    });
    this._snackBar.open("Se le ha enviado un link al encargado para que pueda registrarse", "Cerrar", {
      panelClass: ['green-snackbar'],
      duration: 2000
    });
  }
  static {
    this.ɵfac = function CrearEncargadoModalComponent_Factory(__ngFactoryType__) {
      return new (__ngFactoryType__ || CrearEncargadoModalComponent)(i0.ɵɵdirectiveInject(i1.AdminService), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.MatSnackBar), i0.ɵɵdirectiveInject(i4.Router));
    };
  }
  static {
    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({
      type: CrearEncargadoModalComponent,
      selectors: [["app-crear-encargado-modal"]],
      decls: 17,
      vars: 2,
      consts: [["id", "crear-encargado-modal", "tabindex", "-1", "role", "dialog", "aria-labelledby", "exampleModalLabel", "aria-hidden", "true", 1, "modal", "fade"], ["role", "document", 1, "modal-dialog"], [1, "modal-content"], [1, "modal-header"], ["id", "exampleModalLabel", 1, "modal-title"], [1, "modal-body"], [1, "asignacion", 3, "formGroup"], [1, "form-group"], ["type", "email", "id", "exampleInputEmail", "placeholder", "Correo Electr\u00F3nico", "formControlName", "email", "name", "email", 1, "form-control", "form-control-user"], ["class", "alert alert-danger", 4, "ngIf"], [1, "modal-footer"], ["type", "button", "data-dismiss", "modal", 1, "btn", "btn-secondary"], ["id", "myBtn", "type", "submit", "data-dismiss", "modal", 1, "btn", "btn-primary", 3, "click"], [1, "alert", "alert-danger"], [4, "ngIf"]],
      template: function CrearEncargadoModalComponent_Template(rf, ctx) {
        if (rf & 1) {
          i0.ɵɵelementStart(0, "div", 0)(1, "div", 1)(2, "div", 2)(3, "div", 3)(4, "h5", 4);
          i0.ɵɵtext(5, "Asignar");
          i0.ɵɵelementEnd()();
          i0.ɵɵelementStart(6, "div", 5);
          i0.ɵɵtext(7, " Ingrese correo de encargado a agregar ");
          i0.ɵɵelementStart(8, "form", 6)(9, "div", 7);
          i0.ɵɵelement(10, "input", 8);
          i0.ɵɵtemplate(11, CrearEncargadoModalComponent_div_11_Template, 2, 1, "div", 9);
          i0.ɵɵelementEnd()()();
          i0.ɵɵelementStart(12, "div", 10)(13, "button", 11);
          i0.ɵɵtext(14, "Cancelar");
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(15, "button", 12);
          i0.ɵɵlistener("click", function CrearEncargadoModalComponent_Template_button_click_15_listener() {
            return ctx.crear();
          });
          i0.ɵɵtext(16, " Enviar ");
          i0.ɵɵelementEnd()()()()();
        }
        if (rf & 2) {
          i0.ɵɵadvance(8);
          i0.ɵɵproperty("formGroup", ctx.encargadoForm);
          i0.ɵɵadvance(3);
          i0.ɵɵproperty("ngIf", ctx.encargadoForm.controls["email"].invalid && (ctx.encargadoForm.controls["email"].dirty || ctx.encargadoForm.controls["email"].touched));
        }
      },
      dependencies: [i5.NgIf, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName],
      styles: ["/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */"]
    });
  }
}
exports.CrearEncargadoModalComponent = CrearEncargadoModalComponent;

/***/ }),

/***/ 34662:
/*!************************************************************************************!*\
  !*** ./src/app/componentes/edicion-simple-modal/edicion-simple-modal.component.ts ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.EdicionSimpleModalComponent = void 0;
const core_1 = __webpack_require__(/*! @angular/core */ 37580);
const forms_1 = __webpack_require__(/*! @angular/forms */ 34456);
const i0 = __webpack_require__(/*! @angular/core */ 37580);
const i1 = __webpack_require__(/*! @angular/forms */ 34456);
const i2 = __webpack_require__(/*! src/app/servicios/encargado/edicion-simple/edicion.service */ 92836);
const i3 = __webpack_require__(/*! @angular/common */ 60316);
function EdicionSimpleModalComponent_div_9_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 27)(1, "p");
    i0.ɵɵtext(2, "Los estudiantes que est\u00E9n cursando (o hayan cursado) esta pr\u00E1ctica quedar\u00E1n con la versi\u00F3n anterior");
    i0.ɵɵelementEnd()();
  }
}
function EdicionSimpleModalComponent_div_12_div_1_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div");
    i0.ɵɵtext(1, " Campo requerido ");
    i0.ɵɵelementEnd();
  }
}
function EdicionSimpleModalComponent_div_12_div_2_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div");
    i0.ɵɵtext(1, " M\u00EDnimo 3 caracteres. ");
    i0.ɵɵelementEnd();
  }
}
function EdicionSimpleModalComponent_div_12_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 27);
    i0.ɵɵtemplate(1, EdicionSimpleModalComponent_div_12_div_1_Template, 2, 0, "div", 28)(2, EdicionSimpleModalComponent_div_12_div_2_Template, 2, 0, "div", 28);
    i0.ɵɵelementEnd();
  }
  if (rf & 2) {
    const ctx_r0 = i0.ɵɵnextContext();
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngIf", ctx_r0.editarForm.controls["nombre"].errors == null ? null : ctx_r0.editarForm.controls["nombre"].errors["required"]);
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngIf", ctx_r0.editarForm.controls["nombre"].errors == null ? null : ctx_r0.editarForm.controls["nombre"].errors["minlength"]);
  }
}
class EdicionSimpleModalComponent {
  constructor(fb, service) {
    this.fb = fb;
    this.service = service;
    this.mandarNombre = new core_1.EventEmitter();
    this.mandarMeses = new core_1.EventEmitter();
    this.mandarHoras = new core_1.EventEmitter();
    this.completo = new core_1.EventEmitter();
    this.tiene_alumnos = false;
    this.errors = true; //se sobreescribe el valor false cuando se apreto cancelar
  }
  ngOnInit() {
    console.log("tiene alumnos", this.tiene_alumnos);
    this.editarForm = this.fb.group({
      nombre: ['', [forms_1.Validators.required, forms_1.Validators.minLength(3)]],
      frecuencia_informes: ['', [forms_1.Validators.required]],
      informe_final: ['', [forms_1.Validators.required]]
    });
    //console.log(this.editarForm);
    this.editarForm.valueChanges.subscribe(change => {
      if (this.editarForm.dirty && this.editarForm.invalid) {
        this.errors = true;
      } else {
        this.errors = false;
      }
      //console.log(change);
    });
  }
  //cuando cambie la practica, se actualiza el formulario
  ngOnChanges() {
    if (this.practica) {
      console.log("practica", this.practica);
      let frecu_informe_aux = this.practica.frecuencia_informes.toLowerCase().trim();
      if (frecu_informe_aux == "sin informe de avance") {
        frecu_informe_aux = "sinAvance";
      }
      this.editarForm.setValue({
        nombre: this.practica.nombre,
        frecuencia_informes: frecu_informe_aux,
        informe_final: this.practica.informe_final
      });
      let respuesta = {};
      this.service.getConfigsConPractica(this.practica.id).subscribe({
        next: data => {
          respuesta = {
            ...respuesta,
            ...data
          };
        },
        error: error => {
          console.log("Error al buscar estudiantes", error);
        },
        complete: () => {
          console.log("request:", respuesta.body);
          this.tiene_alumnos = respuesta.body.practicas.length > 0 ? true : false;
        }
      });
    }
  }
  reset() {
    this.editarForm.reset();
    this.errors = false;
  }
  guardar() {
    //console.log("guardar", this.editarForm);
    this.mandarNombre.emit(this.editarForm.value.nombre);
    this.mandarMeses.emit(this.editarForm.value.frecuencia_informes);
    this.mandarHoras.emit(this.editarForm.value.informe_final);
    this.completo.emit([this.editarForm.value.nombre, this.editarForm.value.frecuencia_informes, this.editarForm.value.informe_final]);
  }
  static {
    this.ɵfac = function EdicionSimpleModalComponent_Factory(__ngFactoryType__) {
      return new (__ngFactoryType__ || EdicionSimpleModalComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.EdicionService));
    };
  }
  static {
    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({
      type: EdicionSimpleModalComponent,
      selectors: [["app-edicion-simple-modal"]],
      inputs: {
        seccion: "seccion",
        practica: "practica"
      },
      outputs: {
        mandarNombre: "mandarNombre",
        mandarMeses: "mandarMeses",
        mandarHoras: "mandarHoras",
        completo: "completo"
      },
      features: [i0.ɵɵNgOnChangesFeature],
      decls: 49,
      vars: 5,
      consts: [["id", "editarModal", "tabindex", "-1", "role", "dialog", "aria-hidden", "true", 1, "modal", "fade"], ["role", "document", 1, "modal-dialog"], [1, "modal-content"], [1, "modal-header"], [1, "modal-title"], [1, "modal-body"], [1, "user", 3, "formGroup"], [1, "form-group", "row"], ["class", "alert alert-danger", 4, "ngIf"], [1, "col-12", "mb-3", "mb-sm-0"], ["type", "text", "formControlName", "nombre", 1, "form-control", "form-control-user"], [1, "form-check", "form-check-inline"], ["type", "radio", "id", "informeDiario", "value", "diario", "formControlName", "frecuencia_informes", 1, "form-check-input"], ["for", "informeDiario", 1, "form-check-label"], ["type", "radio", "id", "infomreSemanal", "value", "semanal", "formControlName", "frecuencia_informes", 1, "form-check-input"], ["for", "infomreSemanal", 1, "form-check-label"], ["type", "radio", "id", "informeMensual", "value", "mensual", "formControlName", "frecuencia_informes", 1, "form-check-input"], ["for", "informeMensual", 1, "form-check-label"], ["type", "radio", "id", "sinAvance", "value", "sinAvance", "formControlName", "frecuencia_informes", 1, "form-check-input"], ["for", "sinAvance", 1, "form-check-label"], ["type", "radio", "id", "informeFinalSI", "value", "si", "formControlName", "informe_final", 1, "form-check-input"], ["for", "informeFinalSI", 1, "form-check-label"], ["type", "radio", "id", "informeFinalNO", "value", "no", "formControlName", "informe_final", 1, "form-check-input"], ["for", "informeFinalNO", 1, "form-check-label"], [1, "modal-footer"], ["data-dismiss", "modal", 1, "btn", "btn-secondary", 3, "click"], ["data-dismiss", "modal", 1, "btn", "btn-success", 3, "click", "disabled"], [1, "alert", "alert-danger"], [4, "ngIf"]],
      template: function EdicionSimpleModalComponent_Template(rf, ctx) {
        if (rf & 1) {
          i0.ɵɵelementStart(0, "div", 0)(1, "div", 1)(2, "div", 2)(3, "div", 3)(4, "h5", 4);
          i0.ɵɵtext(5);
          i0.ɵɵelementEnd()();
          i0.ɵɵelementStart(6, "div", 5)(7, "form", 6)(8, "div", 7);
          i0.ɵɵtemplate(9, EdicionSimpleModalComponent_div_9_Template, 3, 0, "div", 8);
          i0.ɵɵelementStart(10, "div", 9);
          i0.ɵɵelement(11, "input", 10);
          i0.ɵɵtemplate(12, EdicionSimpleModalComponent_div_12_Template, 3, 2, "div", 8);
          i0.ɵɵelement(13, "br");
          i0.ɵɵelementStart(14, "p");
          i0.ɵɵtext(15, "Frecuencia informe: ");
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(16, "div", 11);
          i0.ɵɵelement(17, "input", 12);
          i0.ɵɵelementStart(18, "label", 13);
          i0.ɵɵtext(19, "Diario");
          i0.ɵɵelementEnd()();
          i0.ɵɵelementStart(20, "div", 11);
          i0.ɵɵelement(21, "input", 14);
          i0.ɵɵelementStart(22, "label", 15);
          i0.ɵɵtext(23, "Semanal");
          i0.ɵɵelementEnd()();
          i0.ɵɵelementStart(24, "div", 11);
          i0.ɵɵelement(25, "input", 16);
          i0.ɵɵelementStart(26, "label", 17);
          i0.ɵɵtext(27, "Mensual");
          i0.ɵɵelementEnd()();
          i0.ɵɵelementStart(28, "div", 11);
          i0.ɵɵelement(29, "input", 18);
          i0.ɵɵelementStart(30, "label", 19);
          i0.ɵɵtext(31, "Ninguno");
          i0.ɵɵelementEnd()();
          i0.ɵɵelement(32, "br")(33, "br");
          i0.ɵɵelementStart(34, "p");
          i0.ɵɵtext(35, "Informe final: ");
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(36, "div", 11);
          i0.ɵɵelement(37, "input", 20);
          i0.ɵɵelementStart(38, "label", 21);
          i0.ɵɵtext(39, "Si");
          i0.ɵɵelementEnd()();
          i0.ɵɵelementStart(40, "div", 11);
          i0.ɵɵelement(41, "input", 22);
          i0.ɵɵelementStart(42, "label", 23);
          i0.ɵɵtext(43, "No");
          i0.ɵɵelementEnd()()()()()();
          i0.ɵɵelementStart(44, "div", 24)(45, "button", 25);
          i0.ɵɵlistener("click", function EdicionSimpleModalComponent_Template_button_click_45_listener() {
            return ctx.reset();
          });
          i0.ɵɵtext(46, "Cancelar");
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(47, "button", 26);
          i0.ɵɵlistener("click", function EdicionSimpleModalComponent_Template_button_click_47_listener() {
            return ctx.guardar();
          });
          i0.ɵɵtext(48, "Guardar");
          i0.ɵɵelementEnd()()()()();
        }
        if (rf & 2) {
          i0.ɵɵadvance(5);
          i0.ɵɵtextInterpolate1("Edici\u00F3n ", ctx.seccion, "");
          i0.ɵɵadvance(2);
          i0.ɵɵproperty("formGroup", ctx.editarForm);
          i0.ɵɵadvance(2);
          i0.ɵɵproperty("ngIf", ctx.tiene_alumnos);
          i0.ɵɵadvance(3);
          i0.ɵɵproperty("ngIf", ctx.editarForm.controls["nombre"].invalid && (ctx.editarForm.controls["nombre"].dirty || ctx.editarForm.controls["nombre"].touched));
          i0.ɵɵadvance(35);
          i0.ɵɵproperty("disabled", ctx.errors);
        }
      },
      dependencies: [i3.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.RadioControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],
      styles: ["/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */"]
    });
  }
}
exports.EdicionSimpleModalComponent = EdicionSimpleModalComponent;

/***/ }),

/***/ 34980:
/*!************************************************************************************!*\
  !*** ./src/app/componentes/editar-aptitud-modal/editar-aptitud-modal.component.ts ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.EditarAptitudModalComponent = void 0;
const forms_1 = __webpack_require__(/*! @angular/forms */ 34456);
const i0 = __webpack_require__(/*! @angular/core */ 37580);
const i1 = __webpack_require__(/*! src/app/servicios/encargado/aptitud.service */ 41591);
const i2 = __webpack_require__(/*! @angular/forms */ 34456);
const i3 = __webpack_require__(/*! @angular/material/snack-bar */ 3347);
class EditarAptitudModalComponent {
  createForm() {
    this.editarForm = this.fb.group({
      n_aptitud: ['', [forms_1.Validators.required]]
    });
  }
  constructor(aptitud, fb, _snackBar) {
    this.aptitud = aptitud;
    this.fb = fb;
    this._snackBar = _snackBar;
    this.createForm();
  }
  ngOnInit() {}
  editar() {
    let data = this.editarForm.value;
    let _data = {};
    this.nombre_aptitud = data.nombre;
    if (this.nombre_aptitud == "") {
      this.nombre_aptitud = this.n_aptitud;
    }
    this.aptitud.editarAptitud(this.id, this.id_carrera, this.nombre_aptitud).subscribe({
      next: data => {
        _data = {
          ..._data,
          ...data
        };
      },
      error: error => {
        this._snackBar.open("Error al editar aptitud", "Cerrar", {
          panelClass: ['red-snackbar'],
          duration: 2000
        });
      },
      complete: () => {
        if (_data.status == 200) {
          this._snackBar.open("Aptitud editada exitosamente", "Cerrar", {
            panelClass: ['green-snackbar'],
            duration: 2000
          });
          setTimeout(function () {
            window.location.reload();
          }, 2000);
        } else {
          this._snackBar.open("Error al editar aptitud", "Cerrar", {
            panelClass: ['red-snackbar'],
            duration: 2000
          });
        }
      }
    });
  }
  static {
    this.ɵfac = function EditarAptitudModalComponent_Factory(__ngFactoryType__) {
      return new (__ngFactoryType__ || EditarAptitudModalComponent)(i0.ɵɵdirectiveInject(i1.AptitudService), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.MatSnackBar));
    };
  }
  static {
    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({
      type: EditarAptitudModalComponent,
      selectors: [["app-editar-aptitud-modal"]],
      inputs: {
        id: "id",
        n_aptitud: "n_aptitud",
        id_carrera: "id_carrera"
      },
      decls: 17,
      vars: 2,
      consts: [["id", "editar-aptitud-modal", "tabindex", "-1", "role", "dialog", "aria-labelledby", "exampleModalLabel", "aria-hidden", "true", 1, "modal", "fade"], ["role", "document", 1, "modal-dialog"], [1, "modal-content"], [1, "modal-header"], ["id", "exampleModalLabel", 1, "modal-title"], [1, "modal-body"], [1, "asignacion", 3, "formGroup"], ["type", "text", "name", "nombre", "id", "nombre", "formControlName", "n_aptitud", 3, "value"], [1, "modal-footer"], ["type", "button", "data-dismiss", "modal", 1, "btn", "btn-secondary"], ["id", "myBtn", "type", "submit", "data-dismiss", "modal", 1, "btn", "btn-primary", 3, "click"]],
      template: function EditarAptitudModalComponent_Template(rf, ctx) {
        if (rf & 1) {
          i0.ɵɵelementStart(0, "div", 0)(1, "div", 1)(2, "div", 2)(3, "div", 3)(4, "h5", 4);
          i0.ɵɵtext(5, "Editar");
          i0.ɵɵelementEnd()();
          i0.ɵɵelementStart(6, "div", 5);
          i0.ɵɵtext(7, " Ingrese una o varias competencias a agregar, para hacerlo utilice una linea por cada una. ");
          i0.ɵɵelementStart(8, "form", 6)(9, "div");
          i0.ɵɵtext(10, " Nombre: ");
          i0.ɵɵelement(11, "input", 7);
          i0.ɵɵelementEnd()()();
          i0.ɵɵelementStart(12, "div", 8)(13, "button", 9);
          i0.ɵɵtext(14, "Cancelar");
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(15, "button", 10);
          i0.ɵɵlistener("click", function EditarAptitudModalComponent_Template_button_click_15_listener() {
            return ctx.editar();
          });
          i0.ɵɵtext(16, " Guardar ");
          i0.ɵɵelementEnd()()()()();
        }
        if (rf & 2) {
          i0.ɵɵadvance(8);
          i0.ɵɵproperty("formGroup", ctx.editarForm);
          i0.ɵɵadvance(3);
          i0.ɵɵproperty("value", ctx.n_aptitud);
        }
      },
      dependencies: [i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName],
      styles: ["/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */"]
    });
  }
}
exports.EditarAptitudModalComponent = EditarAptitudModalComponent;

/***/ }),

/***/ 41164:
/*!********************************************************************************************!*\
  !*** ./src/app/componentes/editar-archivo-encargado/editar-archivo-encargado.component.ts ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.Dialog3 = exports.EditarArchivoEncargadoComponent = void 0;
const dialog_1 = __webpack_require__(/*! @angular/material/dialog */ 12587);
const button_1 = __webpack_require__(/*! @angular/material/button */ 84175);
const forms_1 = __webpack_require__(/*! @angular/forms */ 34456);
const input_1 = __webpack_require__(/*! @angular/material/input */ 95541);
const form_field_1 = __webpack_require__(/*! @angular/material/form-field */ 24950);
const select_1 = __webpack_require__(/*! @angular/material/select */ 25175);
const common_1 = __webpack_require__(/*! @angular/common */ 60316);
const uuid_1 = __webpack_require__(/*! uuid */ 57379);
const i0 = __webpack_require__(/*! @angular/core */ 37580);
const i1 = __webpack_require__(/*! @angular/material/dialog */ 12587);
const i2 = __webpack_require__(/*! @angular/material/snack-bar */ 3347);
const i3 = __webpack_require__(/*! ../../servicios/archivos/archivos.service */ 79894);
const i4 = __webpack_require__(/*! @angular/router */ 95072);
const i5 = __webpack_require__(/*! src/app/servicios/documento_encargado/documentacion.service */ 39048);
const i6 = __webpack_require__(/*! @angular/forms */ 34456);
const _c0 = (a0, a1, a2) => [false, a0, a1, a2];
class EditarArchivoEncargadoComponent {
  constructor(dialog, _snackBar, archivo_service, router, docu_service, fb) {
    this.dialog = dialog;
    this._snackBar = _snackBar;
    this.archivo_service = archivo_service;
    this.router = router;
    this.docu_service = docu_service;
    this.fb = fb;
    this.id_encargado = -1;
    this.id_carrera = -1;
    this.id_archivo = -1;
    this.Nombre = "";
    this.Descripcion = "";
  }
  readfile(file, subscriber) {
    const filereader = new FileReader();
    filereader.readAsDataURL(file);
    filereader.onload = () => {
      subscriber.next(filereader.result);
      subscriber.complete;
    };
    filereader.onerror = () => {
      subscriber.error();
      subscriber.complete();
    };
  }
  editar_archivo() {
    let formatos = ["pdf", "doc", "docx", "xls", "xlsx"];
    const dialogRef = this.dialog.open(Dialog3, {
      data: {
        Nombre: this.Nombre,
        Descripcion: this.Descripcion
      },
      width: '400px',
      enterAnimationDuration: "100ms",
      exitAnimationDuration: "100ms"
    });
    dialogRef.afterClosed().subscribe(result => {
      if (!result || !result[0]) {
        console.log("CANCELADO");
        return;
      }
      if (!result[1] || !result[2]) {
        this._snackBar.open("Recuerda Ingresar Título y Descripción", "Cerrar", {
          panelClass: ['red-snackbar'],
          duration: 3000
        });
        return;
      }
      let [, file, nombre, descripcion] = result;
      if (file.size > 10000000) {
        this._snackBar.open("Este Archivo es Demasiado Grande", "Cerrar", {
          panelClass: ['red-snackbar'],
          duration: 3000
        });
        return;
      }
      this.archivo_service.checkFileType(file, formatos).then(type_file => {
        if (!type_file) {
          this._snackBar.open("Archivo con formato incorrecto", "Cerrar", {
            panelClass: ['red-snackbar'],
            duration: 3000
          });
          return;
        }
        let _data = {};
        let _filename = file.name.toLowerCase();
        let file_ext = _filename.slice((_filename.lastIndexOf(".") - 1 >>> 0) + 2);
        let key = (0, uuid_1.v4)() + "." + file_ext;
        this.docu_service.eliminar_documento(this.id_archivo).subscribe({
          next: data => {},
          error: error => {
            console.log(error);
            return;
          },
          complete: () => {}
        });
        this.docu_service.nuevo_documento(file, this.id_encargado, this.id_carrera, file_ext, nombre, key, descripcion).subscribe({
          next: data => {
            _data = {
              ..._data,
              ...data
            };
          },
          complete: () => {
            let upload_string = "";
            if (_data.status == 200) {
              upload_string = "?upload_success=success";
            } else if (_data.status == 415) {
              upload_string = "?upload_success=format";
            } else {
              upload_string = "?upload_success=error";
            }
            // check if the current url already has a query string and remove it
            let newUrl = this.router.url.split("?")[0];
            newUrl += upload_string;
            window.location.href = newUrl;
          },
          error: error => {
            if (error.status == 415) {
              this._snackBar.open("Archivo con formato incorrecto", "Cerrar", {
                panelClass: ['red-snackbar'],
                duration: 3000
              });
            } else {
              this._snackBar.open("Error al subir archivo", "Cerrar", {
                panelClass: ['red-snackbar'],
                duration: 3000
              });
            }
          }
        });
      });
    });
  }
  static {
    this.ɵfac = function EditarArchivoEncargadoComponent_Factory(__ngFactoryType__) {
      return new (__ngFactoryType__ || EditarArchivoEncargadoComponent)(i0.ɵɵdirectiveInject(i1.MatDialog), i0.ɵɵdirectiveInject(i2.MatSnackBar), i0.ɵɵdirectiveInject(i3.ArchivosService), i0.ɵɵdirectiveInject(i4.Router), i0.ɵɵdirectiveInject(i5.DocumentacionService), i0.ɵɵdirectiveInject(i6.FormBuilder));
    };
  }
  static {
    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({
      type: EditarArchivoEncargadoComponent,
      selectors: [["app-editar-archivo-encargado"]],
      inputs: {
        id_encargado: "id_encargado",
        id_carrera: "id_carrera",
        id_archivo: "id_archivo",
        Nombre: "Nombre",
        Descripcion: "Descripcion"
      },
      decls: 2,
      vars: 0,
      consts: [[1, "btn", "btn-primary", 2, "width", "150px", 3, "click"]],
      template: function EditarArchivoEncargadoComponent_Template(rf, ctx) {
        if (rf & 1) {
          i0.ɵɵelementStart(0, "button", 0);
          i0.ɵɵlistener("click", function EditarArchivoEncargadoComponent_Template_button_click_0_listener() {
            return ctx.editar_archivo();
          });
          i0.ɵɵtext(1, " Editar\n");
          i0.ɵɵelementEnd();
        }
      },
      styles: ["/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */"]
    });
  }
}
exports.EditarArchivoEncargadoComponent = EditarArchivoEncargadoComponent;
class Dialog3 {
  constructor(dialogRef, data, fb) {
    this.dialogRef = dialogRef;
    this.data = data;
    this.fb = fb;
    this.selectedFile = null;
    this.Nombre = "";
    this.Descripcion = "";
    this.createForm();
  }
  createForm() {
    this.publiForm = this.fb.group({
      Nombre: [this.data.Nombre, [forms_1.Validators.required]],
      Descripcion: [this.data.Descripcion, [forms_1.Validators.required]]
    });
  }
  onFileSelected(event) {
    this.selectedFile = event.target.files[0] ?? null;
    console.log(this.selectedFile);
  }
  onNoClick() {
    console.log("CANCELAR");
    this.dialogRef.close();
  }
  submitclick() {
    let data = this.publiForm.value;
    this.Nombre = data.Nombre;
    this.Descripcion = data.Descripcion;
    this.dialogRef.close([true, this.selectedFile, this.Nombre, this.Descripcion]);
  }
  static {
    this.ɵfac = function Dialog3_Factory(__ngFactoryType__) {
      return new (__ngFactoryType__ || Dialog3)(i0.ɵɵdirectiveInject(i1.MatDialogRef), i0.ɵɵdirectiveInject(dialog_1.MAT_DIALOG_DATA), i0.ɵɵdirectiveInject(i6.FormBuilder));
    };
  }
  static {
    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({
      type: Dialog3,
      selectors: [["app-dialog4"]],
      standalone: true,
      features: [i0.ɵɵStandaloneFeature],
      decls: 25,
      vars: 9,
      consts: [["fileInput", ""], [1, "row", "m-0", "p-0", 2, "max-width", "100%"], [1, "col-xl-12", "p-0"], [1, "card"], [1, "card-header"], [1, "m-0", "font-weight-bold", "text-primary", 2, "text-align", "center"], [1, "card-body", "text-gray-800", 2, "text-align", "center"], [1, "user", 2, "width", "100%", 3, "formGroup"], [1, "file-name"], ["type", "button", 1, "btn", "btn-primary", "btn-md", "btn-block", 3, "click"], ["hidden", "", "type", "file", "required", "", 3, "change"], ["type", "text", "id", "Nombre", "name", "Nombre", "formControlName", "Nombre", "placeholder", "Nombre", 1, "form-control", "form-control-user", 3, "value"], ["type", "textfield", "id", "Descripcion", "name", "Descripcion", "formControlName", "Descripcion", "placeholder", "Descripci\u00F3n", 1, "form-control", "form-control-user", 3, "value"], ["mat-dialog-actions", "", 1, "d-flex", "justify-content-center"], [1, "p-2"], [1, "btn", "btn-secondary", "btn-md", "btn-block", 3, "click", "mat-dialog-close"], ["type", "submit", 1, "btn", "btn-success", "btn-md", "btn-block", 3, "click"]],
      template: function Dialog3_Template(rf, ctx) {
        if (rf & 1) {
          const _r1 = i0.ɵɵgetCurrentView();
          i0.ɵɵelementStart(0, "div", 1)(1, "div", 2)(2, "div", 3)(3, "a", 4)(4, "h3", 5);
          i0.ɵɵtext(5, "Edici\u00F3n de documentos");
          i0.ɵɵelementEnd()();
          i0.ɵɵelementStart(6, "div", 6)(7, "form", 7)(8, "span", 8);
          i0.ɵɵtext(9);
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(10, "button", 9);
          i0.ɵɵlistener("click", function Dialog3_Template_button_click_10_listener() {
            i0.ɵɵrestoreView(_r1);
            const fileInput_r2 = i0.ɵɵreference(14);
            return i0.ɵɵresetView(fileInput_r2.click());
          });
          i0.ɵɵtext(11, "Elegir Archivo");
          i0.ɵɵelementEnd();
          i0.ɵɵelement(12, "br");
          i0.ɵɵelementStart(13, "input", 10, 0);
          i0.ɵɵlistener("change", function Dialog3_Template_input_change_13_listener($event) {
            i0.ɵɵrestoreView(_r1);
            return i0.ɵɵresetView(ctx.onFileSelected($event));
          });
          i0.ɵɵelementEnd();
          i0.ɵɵelement(15, "input", 11)(16, "br")(17, "input", 12);
          i0.ɵɵelementStart(18, "div", 13)(19, "div", 14)(20, "button", 15);
          i0.ɵɵlistener("click", function Dialog3_Template_button_click_20_listener() {
            i0.ɵɵrestoreView(_r1);
            return i0.ɵɵresetView(ctx.onNoClick());
          });
          i0.ɵɵtext(21, "Cancelar");
          i0.ɵɵelementEnd()();
          i0.ɵɵelementStart(22, "div", 14)(23, "button", 16);
          i0.ɵɵlistener("click", function Dialog3_Template_button_click_23_listener() {
            i0.ɵɵrestoreView(_r1);
            return i0.ɵɵresetView(ctx.submitclick());
          });
          i0.ɵɵtext(24, "Aceptar");
          i0.ɵɵelementEnd()()()()()()()();
        }
        if (rf & 2) {
          i0.ɵɵadvance(7);
          i0.ɵɵproperty("formGroup", ctx.publiForm);
          i0.ɵɵadvance(2);
          i0.ɵɵtextInterpolate(ctx.selectedFile == null ? null : ctx.selectedFile.name);
          i0.ɵɵadvance(6);
          i0.ɵɵpropertyInterpolate("value", ctx.Nombre);
          i0.ɵɵadvance(2);
          i0.ɵɵpropertyInterpolate("value", ctx.Descripcion);
          i0.ɵɵadvance(3);
          i0.ɵɵproperty("mat-dialog-close", i0.ɵɵpureFunction3(5, _c0, ctx.selectedFile, ctx.Nombre, ctx.Descripcion));
        }
      },
      dependencies: [dialog_1.MatDialogModule, i1.MatDialogClose, i1.MatDialogActions, form_field_1.MatFormFieldModule, input_1.MatInputModule, forms_1.FormsModule, i6.ɵNgNoValidate, i6.DefaultValueAccessor, i6.NgControlStatus, i6.NgControlStatusGroup, button_1.MatButtonModule, select_1.MatSelectModule, common_1.CommonModule, forms_1.ReactiveFormsModule, i6.FormGroupDirective, i6.FormControlName],
      encapsulation: 2
    });
  }
}
exports.Dialog3 = Dialog3;

/***/ }),

/***/ 9582:
/*!************************************************************************************!*\
  !*** ./src/app/componentes/editar-carrera-modal/editar-carrera-modal.component.ts ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.EditarCarreraModalComponent = void 0;
const forms_1 = __webpack_require__(/*! @angular/forms */ 34456);
const i0 = __webpack_require__(/*! @angular/core */ 37580);
const i1 = __webpack_require__(/*! src/app/servicios/admin/admin.service */ 32126);
const i2 = __webpack_require__(/*! @angular/forms */ 34456);
const i3 = __webpack_require__(/*! @angular/material/snack-bar */ 3347);
class EditarCarreraModalComponent {
  createForm() {
    this.editarForm = this.fb.group({
      nombre: ['', [forms_1.Validators.required]],
      correo_admitido: ['', [forms_1.Validators.required]]
    });
  }
  constructor(admin, fb, _snackBar) {
    this.admin = admin;
    this.fb = fb;
    this._snackBar = _snackBar;
  }
  ngOnInit() {
    this.createForm();
    // (document.getElementById("nombre") as HTMLInputElement).value = this.nombre_carrera;
    // (document.getElementById("correo_admitido") as HTMLInputElement).value = this.correos_admitidos;
  }
  editar() {
    // let data = this.editarForm.value;
    this.nombre = document.getElementById("nombre").value; //data.nombre;
    this.correos = document.getElementById("correo_admitido").value; //data.correo_admitido;
    let _data = {};
    this.admin.editarCarrera(this.id_carrera, this.nombre, this.correos).subscribe({
      next: data => {
        _data = {
          ..._data,
          ...data
        };
      },
      error: error => {
        this._snackBar.open("Error al editar carrera", "Cerrar", {
          panelClass: ['red-snackbar'],
          duration: 2000
        });
      },
      complete: () => {
        if (_data.status == 200) {
          this._snackBar.open("Carrera editada exitosamente", "Cerrar", {
            panelClass: ['green-snackbar'],
            duration: 2000
          });
          setTimeout(function () {
            window.location.reload();
          }, 2000);
        } else {
          this._snackBar.open("Error al editar carrera", "Cerrar", {
            panelClass: ['red-snackbar'],
            duration: 2000
          });
        }
      }
    });
  }
  static {
    this.ɵfac = function EditarCarreraModalComponent_Factory(__ngFactoryType__) {
      return new (__ngFactoryType__ || EditarCarreraModalComponent)(i0.ɵɵdirectiveInject(i1.AdminService), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.MatSnackBar));
    };
  }
  static {
    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({
      type: EditarCarreraModalComponent,
      selectors: [["app-editar-carrera-modal"]],
      inputs: {
        id_carrera: "id_carrera",
        nombre_carrera: "nombre_carrera",
        correos_admitidos: "correos_admitidos"
      },
      decls: 21,
      vars: 3,
      consts: [["id", "editar-carrera-modal", "tabindex", "-1", "role", "dialog", "aria-labelledby", "exampleModalLabel", "aria-hidden", "true", 1, "modal", "fade"], ["role", "document", 1, "modal-dialog"], [1, "modal-content"], [1, "modal-header"], ["id", "exampleModalLabel", 1, "modal-title"], [1, "modal-body"], [1, "asignacion", 3, "formGroup"], ["type", "text", "name", "nombre", "id", "nombre", "formControlName", "nombre", 3, "value"], ["type", "text", "name", "correo_admitido", "id", "correo_admitido", "formControlName", "correo_admitido", "ng-pattern", "/([\\w]*\\.)?[\\w]+\\.(cl|com)/", 3, "value"], [1, "modal-footer"], ["type", "button", "data-dismiss", "modal", 1, "btn", "btn-secondary"], ["id", "myBtn", "type", "submit", "data-dismiss", "modal", 1, "btn", "btn-primary", 3, "click"]],
      template: function EditarCarreraModalComponent_Template(rf, ctx) {
        if (rf & 1) {
          i0.ɵɵelementStart(0, "div", 0)(1, "div", 1)(2, "div", 2)(3, "div", 3)(4, "h5", 4);
          i0.ɵɵtext(5, "Asignar");
          i0.ɵɵelementEnd()();
          i0.ɵɵelementStart(6, "div", 5);
          i0.ɵɵtext(7, " Ingrese una o varias carreras a agregar, para hacerlo utilice una linea por carrera. ");
          i0.ɵɵelementStart(8, "form", 6)(9, "div");
          i0.ɵɵtext(10, " Nombre carrera: ");
          i0.ɵɵelement(11, "input", 7);
          i0.ɵɵelementEnd();
          i0.ɵɵelement(12, "br");
          i0.ɵɵelementStart(13, "div");
          i0.ɵɵtext(14, " Dominio Admitido: ");
          i0.ɵɵelement(15, "input", 8);
          i0.ɵɵelementEnd()()();
          i0.ɵɵelementStart(16, "div", 9)(17, "button", 10);
          i0.ɵɵtext(18, "Cancelar");
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(19, "button", 11);
          i0.ɵɵlistener("click", function EditarCarreraModalComponent_Template_button_click_19_listener() {
            return ctx.editar();
          });
          i0.ɵɵtext(20, " Guardar ");
          i0.ɵɵelementEnd()()()()();
        }
        if (rf & 2) {
          i0.ɵɵadvance(8);
          i0.ɵɵproperty("formGroup", ctx.editarForm);
          i0.ɵɵadvance(3);
          i0.ɵɵproperty("value", ctx.nombre_carrera);
          i0.ɵɵadvance(4);
          i0.ɵɵproperty("value", ctx.correos_admitidos);
        }
      },
      dependencies: [i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName],
      styles: ["/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */"]
    });
  }
}
exports.EditarCarreraModalComponent = EditarCarreraModalComponent;

/***/ }),

/***/ 9034:
/*!****************************************************************************************!*\
  !*** ./src/app/componentes/editar-encargado-modal/editar-encargado-modal.component.ts ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.EditarEncargadoModalComponent = void 0;
const forms_1 = __webpack_require__(/*! @angular/forms */ 34456);
const i0 = __webpack_require__(/*! @angular/core */ 37580);
const i1 = __webpack_require__(/*! src/app/servicios/admin/admin.service */ 32126);
const i2 = __webpack_require__(/*! @angular/forms */ 34456);
const i3 = __webpack_require__(/*! @angular/material/snack-bar */ 3347);
const i4 = __webpack_require__(/*! @angular/common */ 60316);
function EditarEncargadoModalComponent_option_10_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "option", 12);
    i0.ɵɵtext(1);
    i0.ɵɵelementEnd();
  }
  if (rf & 2) {
    const carrera_r1 = ctx.$implicit;
    i0.ɵɵpropertyInterpolate("value", carrera_r1.id);
    i0.ɵɵadvance();
    i0.ɵɵtextInterpolate1("", carrera_r1.nombre, " ");
  }
}
class EditarEncargadoModalComponent {
  createForm() {
    this.asignacionForm = this.fb.group({
      carrera: ['', [forms_1.Validators.required]]
    });
  }
  constructor(admin, fb, _snackBar) {
    this.admin = admin;
    this.fb = fb;
    this._snackBar = _snackBar;
    console.log(this.carrera_actual);
    this.createForm();
  }
  ngOnInit() {}
  comparador() {
    for (let i = 0; i < this.lista_carreras.length; i++) {
      if (this.lista_carreras[i].nombre == this.carrera_actual) {
        return this.lista_carreras[i].id;
      }
    }
  }
  asignar() {
    let _data = {};
    const data = this.asignacionForm.value;
    let tenia_carrera = true;
    if (this.id_carrera_actual == null) {
      tenia_carrera = false;
    }
    // this.id_carrera_actual = data.carrera;
    this.admin.getEncargadoCarrera(this.id_carrera_actual).subscribe({
      next: data => {
        _data = {
          ..._data,
          ...data
        };
      },
      error: error => {
        this._snackBar.open("Error al obtener encargados de carrera", "Cerrar", {
          panelClass: ['red-snackbar'],
          duration: 2000
        });
      },
      complete: () => {
        if (tenia_carrera && _data.body.encargados.length == 1) {
          let decision = confirm("Reasignando este encargado, la carrera se quedara sin encargados para evaluar futuras practicas, ¿Desea continuar?");
          if (decision) {
            this.admin.asignarEncargado(this.id_encargado, data.carrera).subscribe({
              next: data => {
                console.log(1);
                _data = {
                  ..._data,
                  ...data
                };
              },
              error: error => {
                this._snackBar.open("Error al asignar encargado", "Cerrar", {
                  panelClass: ['red-snackbar'],
                  duration: 2000
                });
              },
              complete: () => {
                console.log(2);
                if (_data.status == 200) {
                  window.location.reload();
                } else {
                  this._snackBar.open("Error al asignar encargado", "Cerrar", {
                    panelClass: ['red-snackbar'],
                    duration: 2000
                  });
                }
              }
            });
          }
        } else {
          this.admin.asignarEncargado(this.id_encargado, data.carrera).subscribe({
            next: data => {
              _data = {
                ..._data,
                ...data
              };
            },
            error: error => {
              this._snackBar.open("Error al asignar encargado", "Cerrar", {
                panelClass: ['red-snackbar'],
                duration: 2000
              });
            },
            complete: () => {
              if (_data.status == 200) {
                window.location.reload();
              } else {
                this._snackBar.open("Error al asignar encargado", "Cerrar", {
                  panelClass: ['red-snackbar'],
                  duration: 2000
                });
              }
            }
          });
        }
      }
    });
  }
  static {
    this.ɵfac = function EditarEncargadoModalComponent_Factory(__ngFactoryType__) {
      return new (__ngFactoryType__ || EditarEncargadoModalComponent)(i0.ɵɵdirectiveInject(i1.AdminService), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.MatSnackBar));
    };
  }
  static {
    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({
      type: EditarEncargadoModalComponent,
      selectors: [["app-editar-encargado-modal"]],
      inputs: {
        id_encargado: "id_encargado",
        lista_carreras: "lista_carreras",
        carrera_actual: "carrera_actual",
        id_carrera_actual: "id_carrera_actual"
      },
      decls: 16,
      vars: 3,
      consts: [["id", "editar-encargado-modal", "tabindex", "-1", "role", "dialog", "aria-labelledby", "exampleModalLabel", "aria-hidden", "true", 1, "modal", "fade"], ["role", "document", 1, "modal-dialog"], [1, "modal-content"], [1, "modal-header"], ["id", "exampleModalLabel", 1, "modal-title"], [1, "modal-body"], [1, "asignacion", 3, "formGroup"], ["name", "carrera", "id", "carrera", "formControlName", "carrera", 3, "value"], [3, "value", 4, "ngFor", "ngForOf"], [1, "modal-footer"], ["type", "button", "data-dismiss", "modal", 1, "btn", "btn-secondary"], ["id", "myBtn", "type", "submit", 1, "btn", "btn-primary", 3, "click"], [3, "value"]],
      template: function EditarEncargadoModalComponent_Template(rf, ctx) {
        if (rf & 1) {
          i0.ɵɵelementStart(0, "div", 0)(1, "div", 1)(2, "div", 2)(3, "div", 3)(4, "h5", 4);
          i0.ɵɵtext(5, "Crear configuracion de practica en base a otra");
          i0.ɵɵelementEnd()();
          i0.ɵɵelementStart(6, "div", 5);
          i0.ɵɵtext(7, " Seleccione carrera a modificar ");
          i0.ɵɵelementStart(8, "form", 6)(9, "select", 7);
          i0.ɵɵtemplate(10, EditarEncargadoModalComponent_option_10_Template, 2, 2, "option", 8);
          i0.ɵɵelementEnd()()();
          i0.ɵɵelementStart(11, "div", 9)(12, "button", 10);
          i0.ɵɵtext(13, "Cancelar");
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(14, "button", 11);
          i0.ɵɵlistener("click", function EditarEncargadoModalComponent_Template_button_click_14_listener() {
            return ctx.asignar();
          });
          i0.ɵɵtext(15, " Guardar ");
          i0.ɵɵelementEnd()()()()();
        }
        if (rf & 2) {
          i0.ɵɵadvance(8);
          i0.ɵɵproperty("formGroup", ctx.asignacionForm);
          i0.ɵɵadvance();
          i0.ɵɵproperty("value", ctx.comparador());
          i0.ɵɵadvance();
          i0.ɵɵproperty("ngForOf", ctx.lista_carreras);
        }
      },
      dependencies: [i4.NgForOf, i2.ɵNgNoValidate, i2.NgSelectOption, i2.ɵNgSelectMultipleOption, i2.SelectControlValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName],
      styles: ["/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */"]
    });
  }
}
exports.EditarEncargadoModalComponent = EditarEncargadoModalComponent;

/***/ }),

/***/ 34806:
/*!****************************************************!*\
  !*** ./src/app/componentes/file/file.component.ts ***!
  \****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.FileComponent = void 0;
const http_1 = __webpack_require__(/*! @angular/common/http */ 46443);
const forms_1 = __webpack_require__(/*! @angular/forms */ 34456);
const i0 = __webpack_require__(/*! @angular/core */ 37580);
const i1 = __webpack_require__(/*! src/app/servicios/archivos/archivos.service */ 79894);
const i2 = __webpack_require__(/*! @angular/material/snack-bar */ 3347);
const i3 = __webpack_require__(/*! @angular/router */ 95072);
const i4 = __webpack_require__(/*! src/app/servicios/notis-chat/notis-chat.service */ 17284);
const i5 = __webpack_require__(/*! @angular/material/button */ 84175);
class FileComponent {
  constructor(service, _snackBar, router, noti) {
    this.service = service;
    this._snackBar = _snackBar;
    this.router = router;
    this.noti = noti;
    this.myForm = new forms_1.FormGroup({
      file: new forms_1.FormControl('', [forms_1.Validators.required]),
      fileSource: new forms_1.FormControl('', [forms_1.Validators.required])
    });
    this.id_estudiante = -1;
    this.progress = 0;
    this.message = '';
    this.router.params.subscribe(params => {
      this.id_estudiante = +params['id'];
    });
  }
  selectFile(event) {
    this.selectedFiles = event.target.files;
  }
  upload() {
    this.progress = 0;
    console.log(this.selectedFiles);
    if (this.selectedFiles) {
      const file = this.selectedFiles.item(0);
      if (file) {
        this.currentFile = file;
        console.log(file);
        this.service.uploadFile(this.currentFile, this.id_estudiante).subscribe({
          next: event => {
            if (event.type === http_1.HttpEventType.UploadProgress) {
              this.progress = Math.round(100 * event.loaded / event.total);
            } else if (event instanceof http_1.HttpResponse) {
              this.message = event.body.message;
              //this.fileInfos = this.uploadService.getFiles();
              this._snackBar.open("Archivo subido", "Cerrar", {
                panelClass: ['green-snackbar']
              });
            }
          },
          error: err => {
            console.log(err);
            this.progress = 0;
            if (err.error && err.error.message) {
              this.message = err.error.message;
            } else {
              this.message = 'Could not upload the file!';
            }
            this._snackBar.open("Error al subir archivo", "Cerrar", {
              panelClass: ['red-snackbar']
            });
            this.currentFile = undefined;
          }
        });
      }
      this.selectedFiles = undefined;
    }
  }
  onFileChange(event) {
    if (event.target.files.length > 0) {
      const file = event.target.files[0];
      this.myForm.patchValue({
        fileSource: file
      });
    }
  }
  static {
    this.ɵfac = function FileComponent_Factory(__ngFactoryType__) {
      return new (__ngFactoryType__ || FileComponent)(i0.ɵɵdirectiveInject(i1.ArchivosService), i0.ɵɵdirectiveInject(i2.MatSnackBar), i0.ɵɵdirectiveInject(i3.ActivatedRoute), i0.ɵɵdirectiveInject(i4.NotisChatService));
    };
  }
  static {
    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({
      type: FileComponent,
      selectors: [["app-file"]],
      decls: 4,
      vars: 0,
      consts: [["id", "inputExcel", "type", "file", "name", "excel", 1, "form-control", 2, "width", "450px", 3, "change"], ["mat-button", "", 3, "click"]],
      template: function FileComponent_Template(rf, ctx) {
        if (rf & 1) {
          i0.ɵɵelementStart(0, "div")(1, "input", 0);
          i0.ɵɵlistener("change", function FileComponent_Template_input_change_1_listener($event) {
            return ctx.selectFile($event);
          });
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(2, "button", 1);
          i0.ɵɵlistener("click", function FileComponent_Template_button_click_2_listener() {
            return ctx.upload();
          });
          i0.ɵɵtext(3, "Subir archivo");
          i0.ɵɵelementEnd()();
        }
      },
      dependencies: [i5.MatButton],
      styles: ["/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */"]
    });
  }
}
exports.FileComponent = FileComponent;

/***/ }),

/***/ 89024:
/*!********************************************************!*\
  !*** ./src/app/componentes/footer/footer.component.ts ***!
  \********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.FooterComponent = void 0;
const i0 = __webpack_require__(/*! @angular/core */ 37580);
class FooterComponent {
  static {
    this.ɵfac = function FooterComponent_Factory(__ngFactoryType__) {
      return new (__ngFactoryType__ || FooterComponent)();
    };
  }
  static {
    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({
      type: FooterComponent,
      selectors: [["app-footer"]],
      decls: 5,
      vars: 0,
      consts: [[1, "sticky-footer", "bg-white", 2, "padding-top", "1.5vh", "padding-bottom", "1.5vh", "height", "5vh"], [1, "container", "my-auto"], [1, "copyright", "text-center", "my-auto"]],
      template: function FooterComponent_Template(rf, ctx) {
        if (rf & 1) {
          i0.ɵɵelementStart(0, "footer", 0)(1, "div", 1)(2, "div", 2)(3, "span");
          i0.ɵɵtext(4, "Copyright \u00A9 LogiLink 2023");
          i0.ɵɵelementEnd()()()();
        }
      },
      styles: ["/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */"]
    });
  }
}
exports.FooterComponent = FooterComponent;

/***/ }),

/***/ 7902:
/*!****************************************************************!*\
  !*** ./src/app/componentes/fragmentos/fragmentos.component.ts ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.FragmentosComponent = void 0;
const i0 = __webpack_require__(/*! @angular/core */ 37580);
const i1 = __webpack_require__(/*! @angular/router */ 95072);
const i2 = __webpack_require__(/*! ../../servicios/fragmentos/fragmentos.service */ 93844);
const i3 = __webpack_require__(/*! @angular/material/snack-bar */ 3347);
const i4 = __webpack_require__(/*! @angular/common */ 60316);
const i5 = __webpack_require__(/*! @angular/material/card */ 53777);
const i6 = __webpack_require__(/*! ../barra-superior/barra-superior.component */ 36370);
const i7 = __webpack_require__(/*! ../barra-lateral-encargado/barra-lateral-encargado.component */ 43560);
function FragmentosComponent_mat_card_6_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "mat-card", 5)(1, "p", 3);
    i0.ɵɵtext(2);
    i0.ɵɵelementStart(3, "span", 6);
    i0.ɵɵtext(4);
    i0.ɵɵelementEnd();
    i0.ɵɵtext(5);
    i0.ɵɵelementEnd()();
  }
  if (rf & 2) {
    const item_r1 = ctx.$implicit;
    i0.ɵɵadvance(2);
    i0.ɵɵtextInterpolate1(" ", item_r1[0], " ");
    i0.ɵɵadvance(2);
    i0.ɵɵtextInterpolate1(" ", item_r1[1], " ");
    i0.ɵɵadvance();
    i0.ɵɵtextInterpolate1(" ", item_r1[2], " ");
  }
}
function FragmentosComponent_mat_card_7_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "mat-card", 5)(1, "p", 3);
    i0.ɵɵtext(2);
    i0.ɵɵelementStart(3, "span", 6);
    i0.ɵɵtext(4);
    i0.ɵɵelementEnd();
    i0.ɵɵtext(5);
    i0.ɵɵelementEnd()();
  }
  if (rf & 2) {
    const item_r2 = ctx.$implicit;
    i0.ɵɵadvance(2);
    i0.ɵɵtextInterpolate1(" ", item_r2[0], " ");
    i0.ɵɵadvance(2);
    i0.ɵɵtextInterpolate1(" ", item_r2[1], " ");
    i0.ɵɵadvance();
    i0.ɵɵtextInterpolate1(" ", item_r2[2], " ");
  }
}
class FragmentosComponent {
  getFragmentosTexto() {
    let data = {};
    this.fragmentosService.get_fragmentos_practica(this.id_practica).subscribe({
      next: response => {
        data = {
          ...data,
          ...response
        };
      },
      complete: () => {
        if (data.status != 200 || !data.body) {
          this._snackBar.open("Error al recolectar los fragmentos", "Cerrar", {
            panelClass: ['red-snackbar'],
            duration: 3000
          });
          return;
        }
        console.log(data.body);
        if (data.body.informes) {
          let aux_informes = [];
          let [idx_frag_informes, textos_informe] = data.body.informes;
          for (let i = 0; i < idx_frag_informes.length; i++) {
            let palabras = textos_informe[i].split(" ");
            let frags = idx_frag_informes[i];
            frags.forEach(frag => {
              let part1 = palabras.slice(0, frag.fragmento[0]).join(" ");
              let part2 = palabras.slice(frag.fragmento[0], frag.fragmento[1] + 1).join(" ");
              let part3 = palabras.slice(frag.fragmento[1] + 1, palabras.length).join(" ");
              aux_informes.push([part1, part2, part3]);
            });
          }
          this.fragmentos_informes = aux_informes;
        }
        if (data.body.supervisor) {
          let aux_supervisor = [];
          let [idx_frag_supervisor, textos_supervisor] = data.body.superevisor;
          for (let i = 0; i < idx_frag_supervisor.length; i++) {
            let palabras = textos_supervisor[i].split(" ");
            let frags = idx_frag_supervisor[i];
            frags.forEach(frag => {
              let part1 = palabras.slice(0, frag.fragmento[0]).join(" ");
              let part2 = palabras.slice(frag.fragmento[0], frag.fragmento[1] + 1).join(" ");
              let part3 = palabras.slice(frag.fragmento[1] + 1, palabras.length).join(" ");
              aux_supervisor.push([part1, part2, part3]);
            });
          }
          this.fragmentos_supervisor = aux_supervisor;
        }
      },
      error: error => {
        if (error.status == 404) {
          return;
        }
        this._snackBar.open("Error al recolectar los fragmentos", "Cerrar", {
          panelClass: ['red-snackbar'],
          duration: 3000
        });
      }
    });
  }
  constructor(route, fragmentosService, _snackBar) {
    this.route = route;
    this.fragmentosService = fragmentosService;
    this._snackBar = _snackBar;
    this.fragmentos_informes = [];
    this.id_practica = parseInt(this.route.snapshot.url[1].path);
    this.getFragmentosTexto();
  }
  static {
    this.ɵfac = function FragmentosComponent_Factory(__ngFactoryType__) {
      return new (__ngFactoryType__ || FragmentosComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.FragmentosService), i0.ɵɵdirectiveInject(i3.MatSnackBar));
    };
  }
  static {
    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({
      type: FragmentosComponent,
      selectors: [["app-fragmentos"]],
      decls: 8,
      vars: 2,
      consts: [["id", "wrapper"], ["id", "content-wrapper", 1, "d-flex", "flex-column"], ["id", "content", 1, "main-content"], [1, "container"], ["class", "mt-2", 4, "ngFor", "ngForOf"], [1, "mt-2"], [1, "text-success-emphasis"]],
      template: function FragmentosComponent_Template(rf, ctx) {
        if (rf & 1) {
          i0.ɵɵelementStart(0, "div", 0);
          i0.ɵɵelement(1, "app-barra-lateral-encargado");
          i0.ɵɵelementStart(2, "div", 1)(3, "div", 2);
          i0.ɵɵelement(4, "app-barra-superior");
          i0.ɵɵelementStart(5, "div", 3);
          i0.ɵɵtemplate(6, FragmentosComponent_mat_card_6_Template, 6, 3, "mat-card", 4)(7, FragmentosComponent_mat_card_7_Template, 6, 3, "mat-card", 4);
          i0.ɵɵelementEnd()()()();
        }
        if (rf & 2) {
          i0.ɵɵadvance(6);
          i0.ɵɵproperty("ngForOf", ctx.fragmentos_informes);
          i0.ɵɵadvance();
          i0.ɵɵproperty("ngForOf", ctx.fragmentos_supervisor);
        }
      },
      dependencies: [i4.NgForOf, i5.MatCard, i6.BarraSuperiorComponent, i7.BarraLateralEncargadoComponent],
      styles: ["/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */"]
    });
  }
}
exports.FragmentosComponent = FragmentosComponent;

/***/ }),

/***/ 28412:
/*!********************************************************************!*\
  !*** ./src/app/componentes/import-modal/import-modal.component.ts ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.ImportModalComponent = void 0;
const environment_1 = __webpack_require__(/*! src/environments/environment */ 45312);
const i0 = __webpack_require__(/*! @angular/core */ 37580);
const i1 = __webpack_require__(/*! src/app/servicios/encargado/barra-lateral/barra-lateral.service */ 99539);
const i2 = __webpack_require__(/*! @angular/material/snack-bar */ 3347);
const i3 = __webpack_require__(/*! @angular/common */ 60316);
const i4 = __webpack_require__(/*! @angular/router */ 95072);
const _c0 = a0 => ["/configurar", a0, "copia"];
function ImportModalComponent_div_8_ul_3_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "ul")(1, "li")(2, "a", 11);
    i0.ɵɵtext(3);
    i0.ɵɵelementEnd()()();
  }
  if (rf & 2) {
    const practica_r1 = ctx.$implicit;
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("routerLink", i0.ɵɵpureFunction1(2, _c0, practica_r1));
    i0.ɵɵadvance();
    i0.ɵɵtextInterpolate1(" ", practica_r1, " ");
  }
}
function ImportModalComponent_div_8_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 9)(1, "h5");
    i0.ɵɵtext(2, "Practicas Activas:");
    i0.ɵɵelementEnd();
    i0.ɵɵtemplate(3, ImportModalComponent_div_8_ul_3_Template, 4, 4, "ul", 10);
    i0.ɵɵelementEnd();
  }
  if (rf & 2) {
    const ctx_r1 = i0.ɵɵnextContext();
    i0.ɵɵadvance(3);
    i0.ɵɵproperty("ngForOf", ctx_r1.configs_nombres);
  }
}
function ImportModalComponent_div_9_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 9)(1, "h5");
    i0.ɵɵtext(2, "No hay practicas activas");
    i0.ɵɵelementEnd()();
  }
}
class ImportModalComponent {
  constructor(service, _snackBar) {
    this.service = service;
    this._snackBar = _snackBar;
    this.rutas = environment_1.environment;
    this.practicas_creadas = [];
    this.configs_nombres = [];
    let respuesta = {};
    this.service.obtenerPracticasCreadas().subscribe({
      next: data => {
        respuesta = {
          ...respuesta,
          ...data
        };
      },
      error: error => {
        this._snackBar.open("Error al buscar practicas creadas", "Cerrar", {
          duration: 5000,
          panelClass: ['red-snackbar']
        });
        console.log("error:", error);
      },
      complete: () => {
        //console.log("respuesta:", respuesta.body)
        if (respuesta.body.length > 0) {
          for (let i = 0; i < respuesta.body.length; i++) {
            //si es que no es la planilla
            if (respuesta.body[i].nombre != "configBase" && respuesta.body[i].activada == true) {
              //this.practicas_creadas.push(respuesta.body[i])
              this.configs_nombres.push(respuesta.body[i].nombre);
            }
          }
          //console.log("nombres:",this.configs_nombres)
        }
      }
    });
  }
  static {
    this.ɵfac = function ImportModalComponent_Factory(__ngFactoryType__) {
      return new (__ngFactoryType__ || ImportModalComponent)(i0.ɵɵdirectiveInject(i1.BarraLateralService), i0.ɵɵdirectiveInject(i2.MatSnackBar));
    };
  }
  static {
    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({
      type: ImportModalComponent,
      selectors: [["app-import-modal"]],
      decls: 13,
      vars: 2,
      consts: [["id", "importModal", "tabindex", "-1", "role", "dialog", "aria-labelledby", "exampleModalLabel", "aria-hidden", "true", 1, "modal", "fade"], ["role", "document", 1, "modal-dialog"], [1, "modal-content"], [1, "modal-header"], ["id", "exampleModalLabel", 1, "modal-title"], [1, "modal-body"], ["class", "bg-white py-2 collapse-inner rounded", 4, "ngIf"], [1, "modal-footer"], ["type", "button", "data-dismiss", "modal", 1, "btn", "btn-secondary"], [1, "bg-white", "py-2", "collapse-inner", "rounded"], [4, "ngFor", "ngForOf"], ["data-dismiss", "modal", 3, "routerLink"]],
      template: function ImportModalComponent_Template(rf, ctx) {
        if (rf & 1) {
          i0.ɵɵelementStart(0, "div", 0)(1, "div", 1)(2, "div", 2)(3, "div", 3)(4, "h5", 4);
          i0.ɵɵtext(5, "Crear configuracion de practica en base a otra");
          i0.ɵɵelementEnd()();
          i0.ɵɵelementStart(6, "div", 5);
          i0.ɵɵtext(7, " Selecciona la practica que deseas importar para una nueva configuracion ");
          i0.ɵɵtemplate(8, ImportModalComponent_div_8_Template, 4, 1, "div", 6)(9, ImportModalComponent_div_9_Template, 3, 0, "div", 6);
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(10, "div", 7)(11, "button", 8);
          i0.ɵɵtext(12, "Cancelar");
          i0.ɵɵelementEnd()()()()();
        }
        if (rf & 2) {
          i0.ɵɵadvance(8);
          i0.ɵɵproperty("ngIf", ctx.configs_nombres.length > 0);
          i0.ɵɵadvance();
          i0.ɵɵproperty("ngIf", ctx.configs_nombres.length == 0);
        }
      },
      dependencies: [i3.NgForOf, i3.NgIf, i4.RouterLink],
      styles: ["/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */"]
    });
  }
}
exports.ImportModalComponent = ImportModalComponent;

/***/ }),

/***/ 83588:
/*!****************************************************************************!*\
  !*** ./src/app/componentes/iniciar-practica/iniciar-practica.component.ts ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.Dialog = exports.IniciarPracticaComponent = void 0;
const environment_1 = __webpack_require__(/*! src/environments/environment */ 45312);
const dialog_1 = __webpack_require__(/*! @angular/material/dialog */ 12587);
const form_field_1 = __webpack_require__(/*! @angular/material/form-field */ 24950);
const input_1 = __webpack_require__(/*! @angular/material/input */ 95541);
const forms_1 = __webpack_require__(/*! @angular/forms */ 34456);
const button_1 = __webpack_require__(/*! @angular/material/button */ 84175);
const select_1 = __webpack_require__(/*! @angular/material/select */ 25175);
const common_1 = __webpack_require__(/*! @angular/common */ 60316);
const card_1 = __webpack_require__(/*! @angular/material/card */ 53777);
const forms_2 = __webpack_require__(/*! @angular/forms */ 34456);
const i0 = __webpack_require__(/*! @angular/core */ 37580);
const i1 = __webpack_require__(/*! ../../servicios/alumno/gestionar_practica.service */ 6632);
const i2 = __webpack_require__(/*! ../../servicios/alumno/obtener_datos.service */ 27095);
const i3 = __webpack_require__(/*! @angular/material/snack-bar */ 3347);
const i4 = __webpack_require__(/*! @angular/router */ 95072);
const i5 = __webpack_require__(/*! src/app/servicios/notificaciones/notificaciones.service */ 22004);
const i6 = __webpack_require__(/*! src/app/servicios/data_usuario/data-usuario.service */ 94160);
const i7 = __webpack_require__(/*! @angular/common */ 60316);
const i8 = __webpack_require__(/*! ../../servicios/empresa/empresa.service */ 1022);
const i9 = __webpack_require__(/*! @angular/material/dialog */ 12587);
const i10 = __webpack_require__(/*! @angular/material/input */ 95541);
const i11 = __webpack_require__(/*! @angular/material/form-field */ 24950);
const i12 = __webpack_require__(/*! @angular/material/datepicker */ 61977);
const i13 = __webpack_require__(/*! @angular/forms */ 34456);
const i14 = __webpack_require__(/*! @angular/material/card */ 53777);
function IniciarPracticaComponent_option_11_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "option", 22);
    i0.ɵɵtext(1);
    i0.ɵɵelementEnd();
  }
  if (rf & 2) {
    const empresa_r2 = ctx.$implicit;
    i0.ɵɵpropertyInterpolate("value", empresa_r2.rut_empresa);
    i0.ɵɵadvance();
    i0.ɵɵtextInterpolate2(" ", empresa_r2.nombre_empresa, " - ", empresa_r2.rut_empresa, " ");
  }
}
function IniciarPracticaComponent_mat_hint_13_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "mat-hint", 23);
    i0.ɵɵtext(1, "\u00A1Empresa agregada!");
    i0.ɵɵelementEnd();
  }
}
function Dialog_div_6_Template(rf, ctx) {
  if (rf & 1) {
    const _r1 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "div", 7)(1, "form", 8)(2, "label");
    i0.ɵɵtext(3, " Rut Empresa: ");
    i0.ɵɵelementStart(4, "input", 9);
    i0.ɵɵlistener("input", function Dialog_div_6_Template_input_input_4_listener($event) {
      i0.ɵɵrestoreView(_r1);
      const ctx_r1 = i0.ɵɵnextContext();
      ctx_r1.completar_rut($event);
      return i0.ɵɵresetView(ctx_r1.habilitar_envio_auto($event));
    });
    i0.ɵɵelementEnd()()();
    i0.ɵɵelementStart(5, "div", 10)(6, "div", 11)(7, "button", 12);
    i0.ɵɵlistener("click", function Dialog_div_6_Template_button_click_7_listener() {
      i0.ɵɵrestoreView(_r1);
      const ctx_r1 = i0.ɵɵnextContext();
      return i0.ɵɵresetView(ctx_r1.onNoClick());
    });
    i0.ɵɵtext(8, " Cancelar ");
    i0.ɵɵelementEnd()();
    i0.ɵɵelementStart(9, "div", 11)(10, "button", 13);
    i0.ɵɵlistener("click", function Dialog_div_6_Template_button_click_10_listener() {
      i0.ɵɵrestoreView(_r1);
      const ctx_r1 = i0.ɵɵnextContext();
      return i0.ɵɵresetView(ctx_r1.agregar_empresa_auto());
    });
    i0.ɵɵtext(11, " Agregar ");
    i0.ɵɵelementEnd()()()();
  }
  if (rf & 2) {
    const ctx_r1 = i0.ɵɵnextContext();
    i0.ɵɵadvance(10);
    i0.ɵɵproperty("disabled", !ctx_r1.enviar_habilitado_auto);
  }
}
function Dialog_ng_template_7_Template(rf, ctx) {
  if (rf & 1) {
    const _r3 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "div", 7)(1, "mat-card", 14)(2, "mat-card-content");
    i0.ɵɵelement(3, "i", 15);
    i0.ɵɵtext(4, " No se pudo validar la empresa, por favor ingrese los datos manualmente. ");
    i0.ɵɵelementEnd()();
    i0.ɵɵelementStart(5, "form", 8)(6, "label");
    i0.ɵɵtext(7, " Nombre Empresa: ");
    i0.ɵɵelementStart(8, "input", 16);
    i0.ɵɵlistener("input", function Dialog_ng_template_7_Template_input_input_8_listener($event) {
      i0.ɵɵrestoreView(_r3);
      const ctx_r1 = i0.ɵɵnextContext();
      return i0.ɵɵresetView(ctx_r1.habilitar_envio_manual($event));
    });
    i0.ɵɵelementEnd()();
    i0.ɵɵelementStart(9, "label");
    i0.ɵɵtext(10, " Rut Empresa: ");
    i0.ɵɵelementStart(11, "input", 17);
    i0.ɵɵlistener("input", function Dialog_ng_template_7_Template_input_input_11_listener($event) {
      i0.ɵɵrestoreView(_r3);
      const ctx_r1 = i0.ɵɵnextContext();
      ctx_r1.completar_rut($event);
      return i0.ɵɵresetView(ctx_r1.habilitar_envio_manual($event));
    });
    i0.ɵɵelementEnd()()();
    i0.ɵɵelementStart(12, "div", 10)(13, "div", 11)(14, "button", 12);
    i0.ɵɵlistener("click", function Dialog_ng_template_7_Template_button_click_14_listener() {
      i0.ɵɵrestoreView(_r3);
      const ctx_r1 = i0.ɵɵnextContext();
      return i0.ɵɵresetView(ctx_r1.onNoClick());
    });
    i0.ɵɵtext(15, " Cancelar ");
    i0.ɵɵelementEnd()();
    i0.ɵɵelementStart(16, "div", 11)(17, "button", 13);
    i0.ɵɵlistener("click", function Dialog_ng_template_7_Template_button_click_17_listener() {
      i0.ɵɵrestoreView(_r3);
      const ctx_r1 = i0.ɵɵnextContext();
      return i0.ɵɵresetView(ctx_r1.agregar_empresa_manual());
    });
    i0.ɵɵtext(18, " Agregar ");
    i0.ɵɵelementEnd()()()();
  }
  if (rf & 2) {
    const ctx_r1 = i0.ɵɵnextContext();
    i0.ɵɵadvance(11);
    i0.ɵɵproperty("value", ctx_r1.default_rut);
    i0.ɵɵadvance(6);
    i0.ɵɵproperty("disabled", !ctx_r1.enviar_habilitado_manual);
  }
}
class IniciarPracticaComponent {
  constructor(service, service2, _snackBar, route, router, service_noti, service_obtener, datetime, empresaService, dialog) {
    this.service = service;
    this.service2 = service2;
    this._snackBar = _snackBar;
    this.route = route;
    this.router = router;
    this.service_noti = service_noti;
    this.service_obtener = service_obtener;
    this.datetime = datetime;
    this.empresaService = empresaService;
    this.dialog = dialog;
    this.id_estudiante = -1;
    this.nombre_practica = "";
    this.id_usuario = -1;
    this.id_config_practica = -1;
    this.config_practica = [];
    this.cantidades = [];
    this.modalidades = [];
    this.fecha_hoy = new forms_2.FormControl(new Date());
    this.estado_config = "";
    this.correo_encargado = "";
    this.respuesta = [];
    this.empresas = [];
    this.empresa_agregada = false;
    this.auth_user = JSON.parse(localStorage.getItem("auth-user") || "{}");
    let data = {};
    empresaService.get_empresas().subscribe({
      next: _data => {
        data = {
          ...data,
          ..._data
        };
      },
      error: error => {
        this.empresas = [];
      },
      complete: () => {
        if (data.status != 200) {
          this._snackBar.open("Se ha producido un error, por favor vuelva más tarde", "Cerrar", {
            panelClass: ['red-snackbar'],
            duration: 3000
          });
          return;
        }
        this.empresas = data.body;
      }
    });
  }
  enviar() {
    //validar que el rut ingresado sea del datalist
    let rut_empresa_elegida = document.getElementById(this.id_datalist + "_input").value;
    let opciones_ruts_empresas = document.getElementById(this.id_datalist).options;
    let empresa_valida = Object.values(opciones_ruts_empresas).map(element => element.value).includes(rut_empresa_elegida);
    if (!empresa_valida) {
      this._snackBar.open("Debe seleccionar una empresa válida", "Cerrar", {
        panelClass: ['red-snackbar'],
        duration: 3000
      });
      return;
    }
    // obtener los datos de los inputs
    let modalidad = document.getElementById("modalidad" + this.nombre_practica).value;
    let cantidad = document.getElementById("cantidad" + this.nombre_practica).value;
    let nombre_supervisor = document.getElementById("nombre_supervisor" + this.nombre_practica).value;
    let correo_supervisor = document.getElementById("correo_supervisor" + this.nombre_practica).value;
    let rut_empresa = document.getElementById(this.id_datalist + '_input').value;
    let fecha_inicio = document.getElementById("fecha_inicio" + this.nombre_practica).value;
    //convertir fecha_inicio a formato yyyy-mm-dd para que sea compatible con la base de datos
    let fecha_inicio_array = fecha_inicio.split("/");
    fecha_inicio = fecha_inicio_array[2] + "-" + fecha_inicio_array[1] + "-" + fecha_inicio_array[0];
    let aux = {};
    if (modalidad == "" || cantidad == "" || nombre_supervisor == "" || correo_supervisor == "" || rut_empresa == "" || fecha_inicio == "") {
      this._snackBar.open("Debe llenar todos los campos", "Cerrar", {
        panelClass: ['red-snackbar'],
        duration: 3000
      });
      return;
    }
    this.service2.obtener_config_practica(this.nombre_practica, this.auth_user.userdata.estudiante.id_carrera).subscribe({
      next: data => {
        aux = {
          ...aux,
          ...data
        };
      },
      error: error => {},
      complete: () => {
        this.id_config_practica = aux.body.id;
        this.service.buscar_modalidad(this.id_config_practica, modalidad, parseInt(cantidad)).subscribe({
          next: data => {
            aux = {
              ...aux,
              ...data
            };
          },
          error: error => {},
          complete: () => {
            let id_modalidad = aux.body.id;
            // INICIO DE CREACION DE EMPRESA, SUPERVISOR Y PRACTICA
            this.service.get_empresa_por_rut(rut_empresa).subscribe({
              next: data => {
                aux = {
                  ...aux,
                  ...data
                };
              },
              error: error => {},
              complete: () => {
                // parse de body as json
                let id_empresa = aux.body.id;
                this.service.registrar_supervisor(nombre_supervisor, correo_supervisor).subscribe({
                  next: data => {
                    aux = {
                      ...aux,
                      ...data
                    };
                  },
                  error: error => {},
                  complete: () => {
                    let id_supervisor = aux.body.id;
                    this.service.buscar_encargados().subscribe({
                      next: data => {
                        aux = {
                          ...aux,
                          ...data
                        };
                      },
                      error: error => {},
                      complete: () => {
                        //seleccionar el primer encargado
                        let id_encargado = aux.body.data[0].id;
                        this.service_obtener.obtener_encargado(aux.body.data[0].id_usuario).subscribe({
                          next: data => {
                            this.respuesta = {
                              ...this.respuesta,
                              ...data
                            };
                          },
                          error: error => {
                            return;
                          },
                          complete: () => {
                            this.correo_encargado = this.respuesta.body.correo;
                          }
                        });
                        this.service.registrar_practica(this.id_estudiante, id_modalidad, fecha_inicio, id_empresa, id_supervisor, id_encargado, +this.id_config_practica).subscribe({
                          next: data => {
                            aux = {
                              ...aux,
                              ...data
                            };
                          },
                          error: error => {
                            // use snackbar to show error
                            this._snackBar.open("Error al iniciar practica", "Cerrar", {
                              panelClass: ['red-snackbar'],
                              duration: 3000
                            });
                          },
                          complete: () => {
                            let texto = "El estudiante " + this.id_estudiante + " ha comenzado una nueva práctica";
                            let enlace = environment_1.environment.url_front + "/practicas/" + this.id_estudiante;
                            this.service_noti.postnotificacion(this.id_usuario, texto, this.correo_encargado, this.estado_config, enlace).subscribe({
                              next: data => {
                                this.respuesta = {
                                  ...this.respuesta,
                                  ...data
                                };
                              },
                              error: error => {
                                return;
                              },
                              complete: () => {}
                            });
                            let inscripcion_string = "";
                            if (aux.status == 200) {
                              inscripcion_string = "?inscripcion_success=success";
                            } else {
                              inscripcion_string = "?inscripcion_success=error";
                            }
                            let newUrl = this.router.url.split("?")[0];
                            newUrl += inscripcion_string;
                            window.location.href = newUrl;
                          }
                        });
                      }
                    });
                  }
                });
              }
            });
          }
        });
      }
    });
    // Crear empresa, supervisor y practica
  }
  manage_dialog_return(result) {
    switch (result[0]) {
      case "error":
        this._snackBar.open("Se ha producido un error, por favor vuelva más tarde", "Cerrar", {
          panelClass: ['red-snackbar'],
          duration: 3000
        });
        break;
      case "Empresa ya existe":
        this._snackBar.open("Esta empresa ya está registrada, ingrésala normalmente", "Cerrar", {
          panelClass: ['green-snackbar'],
          duration: 3000
        });
        break;
      case "Empresa agregada":
        this._snackBar.open("Empresa agregada correctamente", "Cerrar", {
          panelClass: ['green-snackbar'],
          duration: 3000
        });
        this.modificar_lista_empresas(result[1]);
        this.add_default_empresa(result[1]);
        this.empresa_agregada = true;
        break;
      default:
        break;
    }
  }
  modificar_lista_empresas(nueva_empresa) {
    let aux = [{
      nombre_empresa: nueva_empresa.nombre_empresa,
      rut_empresa: nueva_empresa.rut_empresa
    }];
    aux.push(...this.empresas);
    this.empresas = aux;
  }
  add_default_empresa(nueva_empresa) {
    // change value of input
    document.getElementById(this.id_datalist + "_input").value = nueva_empresa.rut_empresa;
  }
  agregar_empresa() {
    let nombre_solicitud = "";
    let descripcion = "";
    let tipo_archivo = "";
    const dialogRef = this.dialog.open(Dialog, {
      width: '300px',
      enterAnimationDuration: "100ms",
      exitAnimationDuration: "100ms",
      data: {
        nombre_solicitud,
        descripcion,
        tipo_archivo
      }
    });
    dialogRef.afterClosed().subscribe(result => {
      this.manage_dialog_return(result);
    });
  }
  ngOnInit() {
    this.id_datalist = 'rut_empresa_' + this.nombre_practica.replaceAll(" ", "_");
    let respuesta = {};
    this.service2.obtener_config_practica(this.nombre_practica, this.auth_user.userdata.estudiante.id_carrera).subscribe({
      next: data => {
        respuesta = {
          ...respuesta,
          ...data
        };
      },
      error: error => {},
      complete: () => {
        this.config_practica = respuesta.body;
        let modalidades_nombres = [];
        // iterar sobre config_practica y llenar el array de modalidades con config_practica.modalidad
        this.config_practica.modalidads.forEach(element => {
          this.modalidades.push(element);
          if (!modalidades_nombres.includes(element.tipo_modalidad)) {
            modalidades_nombres.push(element.tipo_modalidad);
          }
        });
        // hacer que el dropdown de modalidad se actualice al obtener la respuesta dela query
        var dropdown = document.getElementById("modalidad" + this.nombre_practica);
        // actualizar el dropdown de modalidad con el contenido de this.modalidades
        for (let i = 0; i < modalidades_nombres.length; i++) {
          var option = document.createElement("option");
          option.text = modalidades_nombres[i];
          option.value = modalidades_nombres[i];
          dropdown?.appendChild(option);
        }
      }
    });
  }
  actualizar_cantidades(modalidad) {
    // actualizar el dropdown de cantidad segun la modalidad seleccionada
    // borrar el contenido del dropdown de cantidad
    var dropdown_cantidad = document.getElementById("cantidad" + this.nombre_practica);
    while (dropdown_cantidad?.firstChild) {
      dropdown_cantidad.removeChild(dropdown_cantidad.firstChild);
    }
    this.cantidades = [];
    this.modalidades.forEach(element => {
      if (element.tipo_modalidad == modalidad.target.value) {
        if (!this.cantidades.includes(element.cantidad_tiempo)) {
          this.cantidades.push(element.cantidad_tiempo);
        }
      }
    });
    var dropdown_cantidad = document.getElementById("cantidad" + this.nombre_practica);
    // actualizar el dropdown de cantidad con el contenido de this.cantidades
    if (this.cantidades.length > 0) {
      if (this.cantidades[0] != null) {
        for (let i = 0; i < this.cantidades.length; i++) {
          //chequear si cantidades[i] es un numero
          if (isNaN(this.cantidades[i])) {
            continue;
          }
          var option = document.createElement("option");
          option.text = this.cantidades[i].toString();
          option.value = this.cantidades[i].toString();
          dropdown_cantidad?.appendChild(option);
        }
      }
    }
  }
  static {
    this.ɵfac = function IniciarPracticaComponent_Factory(__ngFactoryType__) {
      return new (__ngFactoryType__ || IniciarPracticaComponent)(i0.ɵɵdirectiveInject(i1.GestionarService), i0.ɵɵdirectiveInject(i2.ObtenerDatosService), i0.ɵɵdirectiveInject(i3.MatSnackBar), i0.ɵɵdirectiveInject(i4.ActivatedRoute), i0.ɵɵdirectiveInject(i4.Router), i0.ɵɵdirectiveInject(i5.NotificacionesService), i0.ɵɵdirectiveInject(i6.DataUsuarioService), i0.ɵɵdirectiveInject(i7.DatePipe), i0.ɵɵdirectiveInject(i8.EmpresaService), i0.ɵɵdirectiveInject(i9.MatDialog));
    };
  }
  static {
    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({
      type: IniciarPracticaComponent,
      selectors: [["app-iniciar-practica"]],
      inputs: {
        id_estudiante: "id_estudiante",
        nombre_practica: "nombre_practica",
        id_usuario: "id_usuario",
        estado_config: "estado_config"
      },
      decls: 61,
      vars: 19,
      consts: [["picker", ""], [2, "width", "500px", "place-self", "end-start"], ["cellspacing", "0", 1, "example-full-width"], [1, "row"], [1, "col-10", 3, "id"], [3, "id"], [3, "value", 4, "ngFor", "ngForOf"], ["matInput", "", "placeholder", "Rut Empresa", "type", "text", "autoComplete", "on", "required", "", 1, "form-control", 3, "id"], ["class", "text-success", 4, "ngIf"], [1, "col-2", "align-items-center", 2, "display", "flex"], [1, "position-absolute", "top-0"], ["title", "Agregar nueva empresa", 1, "btn", "btn-primary", "btn-circle", 3, "click"], [1, "fa-solid", "fa-circle-plus", "fa-lg"], ["matInput", "", "placeholder", "Nombre Supervisor", "type", "text", 1, "form-control", 3, "id"], ["matInput", "", "placeholder", "Correo Supervisor", "type", "text", 1, "form-control", 3, "id"], ["matInput", "", "placeholder", "Elige una fecha", 3, "matDatepicker", "id", "formControl"], ["matSuffix", "", 3, "for"], [2, "width", "100%"], ["name", "modalidad", 1, "form-select", 3, "change", "id"], ["value", "", "disabled", "", "selected", "", "hidden", ""], ["name", "cantidad", 1, "form-select", 3, "id"], [1, "btn", "btn-primary", "btn-lg", "btn-block", 3, "click"], [3, "value"], [1, "text-success"]],
      template: function IniciarPracticaComponent_Template(rf, ctx) {
        if (rf & 1) {
          const _r1 = i0.ɵɵgetCurrentView();
          i0.ɵɵelementStart(0, "div", 1)(1, "h2");
          i0.ɵɵtext(2, "Inscribe tu Pr\u00E1ctica");
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(3, "div")(4, "table", 2)(5, "tr")(6, "td");
          i0.ɵɵtext(7, " Rut Empresa: ");
          i0.ɵɵelementStart(8, "div", 3)(9, "div", 4)(10, "datalist", 5);
          i0.ɵɵtemplate(11, IniciarPracticaComponent_option_11_Template, 2, 3, "option", 6);
          i0.ɵɵelementEnd();
          i0.ɵɵelement(12, "input", 7);
          i0.ɵɵtemplate(13, IniciarPracticaComponent_mat_hint_13_Template, 2, 0, "mat-hint", 8);
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(14, "div", 9)(15, "div", 10)(16, "button", 11);
          i0.ɵɵlistener("click", function IniciarPracticaComponent_Template_button_click_16_listener() {
            i0.ɵɵrestoreView(_r1);
            return i0.ɵɵresetView(ctx.agregar_empresa());
          });
          i0.ɵɵelement(17, "i", 12);
          i0.ɵɵelementEnd()()()()();
          i0.ɵɵelementStart(18, "td");
          i0.ɵɵtext(19, " \u00A0 ");
          i0.ɵɵelementEnd()();
          i0.ɵɵelementStart(20, "tr")(21, "td");
          i0.ɵɵtext(22, "\u00A0");
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(23, "td");
          i0.ɵɵtext(24, "\u00A0");
          i0.ɵɵelementEnd()();
          i0.ɵɵelementStart(25, "tr")(26, "td");
          i0.ɵɵtext(27, " Nombre Supervisor: ");
          i0.ɵɵelement(28, "input", 13);
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(29, "td");
          i0.ɵɵtext(30, " Correo Supervisor: ");
          i0.ɵɵelement(31, "input", 14);
          i0.ɵɵelementEnd()()();
          i0.ɵɵelement(32, "br");
          i0.ɵɵtext(33, " Fecha Inicio: ");
          i0.ɵɵelementStart(34, "mat-form-field");
          i0.ɵɵelement(35, "input", 15)(36, "mat-datepicker-toggle", 16)(37, "mat-datepicker", null, 0);
          i0.ɵɵelementEnd();
          i0.ɵɵelement(39, "br");
          i0.ɵɵelementStart(40, "table", 17)(41, "tr")(42, "td");
          i0.ɵɵtext(43, " Modalidad de tiempo: ");
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(44, "td")(45, "select", 18);
          i0.ɵɵlistener("change", function IniciarPracticaComponent_Template_select_change_45_listener($event) {
            i0.ɵɵrestoreView(_r1);
            return i0.ɵɵresetView(ctx.actualizar_cantidades($event));
          });
          i0.ɵɵelementStart(46, "option", 19);
          i0.ɵɵtext(47, "Modalidad");
          i0.ɵɵelementEnd()()();
          i0.ɵɵelement(48, "br");
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(49, "tr")(50, "td");
          i0.ɵɵtext(51, " Cantidad de tiempo: ");
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(52, "td")(53, "select", 20)(54, "option", 19);
          i0.ɵɵtext(55, "Cantidad");
          i0.ɵɵelementEnd()()()()();
          i0.ɵɵelement(56, "br");
          i0.ɵɵelementStart(57, "table")(58, "td")(59, "button", 21);
          i0.ɵɵlistener("click", function IniciarPracticaComponent_Template_button_click_59_listener() {
            i0.ɵɵrestoreView(_r1);
            return i0.ɵɵresetView(ctx.enviar());
          });
          i0.ɵɵtext(60, "Enviar");
          i0.ɵɵelementEnd()()()()();
        }
        if (rf & 2) {
          const picker_r3 = i0.ɵɵreference(38);
          i0.ɵɵadvance(9);
          i0.ɵɵproperty("id", "tarjeta_" + ctx.nombre_practica.replaceAll(" ", "_"));
          i0.ɵɵadvance();
          i0.ɵɵproperty("id", ctx.id_datalist);
          i0.ɵɵadvance();
          i0.ɵɵproperty("ngForOf", ctx.empresas);
          i0.ɵɵadvance();
          i0.ɵɵproperty("id", ctx.id_datalist + "_input");
          i0.ɵɵattribute("list", ctx.id_datalist);
          i0.ɵɵadvance();
          i0.ɵɵproperty("ngIf", ctx.empresa_agregada);
          i0.ɵɵadvance(15);
          i0.ɵɵpropertyInterpolate1("id", "nombre_supervisor", ctx.nombre_practica, "");
          i0.ɵɵadvance(3);
          i0.ɵɵpropertyInterpolate1("id", "correo_supervisor", ctx.nombre_practica, "");
          i0.ɵɵadvance(4);
          i0.ɵɵpropertyInterpolate1("id", "fecha_inicio", ctx.nombre_practica, "");
          i0.ɵɵproperty("matDatepicker", picker_r3)("formControl", ctx.fecha_hoy);
          i0.ɵɵadvance();
          i0.ɵɵproperty("for", picker_r3);
          i0.ɵɵadvance(9);
          i0.ɵɵpropertyInterpolate1("id", "modalidad", ctx.nombre_practica, "");
          i0.ɵɵadvance(8);
          i0.ɵɵpropertyInterpolate1("id", "cantidad", ctx.nombre_practica, "");
        }
      },
      dependencies: [i7.NgForOf, i7.NgIf, i10.MatInput, i11.MatFormField, i11.MatHint, i11.MatSuffix, i12.MatDatepicker, i12.MatDatepickerInput, i12.MatDatepickerToggle, i13.NgSelectOption, i13.ɵNgSelectMultipleOption, i13.DefaultValueAccessor, i13.NgControlStatus, i13.FormControlDirective],
      styles: [".btn-enviar[_ngcontent-%COMP%] {\n  width: 20px;\n  align-self: flex-end;\n}\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50ZXMvaW5pY2lhci1wcmFjdGljYS9pbmljaWFyLXByYWN0aWNhLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksV0FBQTtFQUNBLG9CQUFBO0FBQ0oiLCJzb3VyY2VzQ29udGVudCI6WyIuYnRuLWVudmlhciB7XG4gICAgd2lkdGg6IDIwcHg7XG4gICAgYWxpZ24tc2VsZjogZmxleC1lbmQ7XG59Il0sInNvdXJjZVJvb3QiOiIifQ== */"]
    });
  }
}
exports.IniciarPracticaComponent = IniciarPracticaComponent;
class Dialog {
  constructor(dialogRef, data, empresaService, _snackBar) {
    this.dialogRef = dialogRef;
    this.data = data;
    this.empresaService = empresaService;
    this._snackBar = _snackBar;
    this.modo_auto = true;
    this.enviar_habilitado_auto = false;
    this.enviar_habilitado_manual = false;
    this.default_rut = "";
  }
  onNoClick() {
    this.dialogRef.close(["cerrar", false]);
  }
  habilitar_envio_auto(event) {
    this.enviar_habilitado_auto = event.target.value.trim() != "";
  }
  habilitar_envio_manual(event) {
    const campo_nom = document.getElementById("nombre_empresa_manual").value.trim();
    const campo_rut = document.getElementById("rut_empresa_manual").value.trim();
    this.enviar_habilitado_manual = campo_nom != "" && campo_rut != "";
  }
  agregar_empresa_auto() {
    const rut_empresa = document.getElementById("rut_empresa_auto");
    let data = {};
    this.empresaService.agregar_empresa_auto(rut_empresa.value).subscribe({
      next: _data => {
        data = {
          ...data,
          ..._data
        };
      },
      error: error => {
        if (error.status == 400 && error.error.message == "Empresa ya existe") {
          this.dialogRef.close(["Empresa ya existe", false]);
          return;
        }
        this.dialogRef.close(["error", false]);
      },
      complete: () => {
        if (data.status == 200) {
          if (data.body.message == "Empresa agregada") {
            this.dialogRef.close(["Empresa agregada", data.body]);
            return;
          } else if (data.body.message == "Empresa no encontrada") {
            this.default_rut = rut_empresa.value;
            this.modo_auto = false;
            return;
          } else {
            this.dialogRef.close(["error", false]);
            return;
          }
        }
        this.dialogRef.close(["error", false]);
      }
    });
  }
  completar_rut(evento) {
    let rut_escrito = evento.target.value;
    if (!rut_escrito || rut_escrito.length < 1) {
      evento.target.value = "";
      return;
    }
    let rut = rut_escrito.replace(/[^0-9kK]+/g, '');
    if (!rut || rut.length < 1) {
      evento.target.value = "";
      return;
    }
    let rut_splitted = rut.split("");
    let rut_parsed = rut_splitted.pop() + "-";
    let contador = 0;
    while (rut_splitted.length > 0) {
      rut_parsed += rut_splitted.pop();
      contador++;
      if (contador == 3 && rut_splitted.length > 0) {
        rut_parsed += ".";
        contador = 0;
      }
    }
    evento.target.value = rut_parsed.split("").reverse().join("");
  }
  agregar_empresa_manual() {
    const rut_empresa = document.getElementById("rut_empresa_manual").value.trim();
    const nombre_empresa = document.getElementById("nombre_empresa_manual").value.trim();
    let data = {};
    this.empresaService.agregar_empresa_manual(nombre_empresa, rut_empresa).subscribe({
      next: _data => {
        data = {
          ...data,
          ..._data
        };
      },
      error: error => {
        console.log(error);
        this.dialogRef.close(["error", false]);
        return;
      },
      complete: () => {
        console.log("on complete, data:", data);
        if (data.status == 200 && data.body.message == "Empresa agregada") {
          this.dialogRef.close(["Empresa agregada", data.body]);
          return;
        }
        this.dialogRef.close(["error", false]);
      }
    });
  }
  static {
    this.ɵfac = function Dialog_Factory(__ngFactoryType__) {
      return new (__ngFactoryType__ || Dialog)(i0.ɵɵdirectiveInject(i9.MatDialogRef), i0.ɵɵdirectiveInject(dialog_1.MAT_DIALOG_DATA), i0.ɵɵdirectiveInject(i8.EmpresaService), i0.ɵɵdirectiveInject(i3.MatSnackBar));
    };
  }
  static {
    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({
      type: Dialog,
      selectors: [["app-dialog"]],
      standalone: true,
      features: [i0.ɵɵStandaloneFeature],
      decls: 9,
      vars: 2,
      consts: [["modo_manual", ""], [1, "row", "m-0", "p-0", 2, "max-width", "100%"], [1, "col-xl-12", "p-0"], [1, "card"], [1, "card-header"], [1, "m-0", "font-weight-bold", "text-primary", 2, "text-align", "center"], ["class", "card-body text-gray-800", "style", "text-align: center;", 4, "ngIf", "ngIfElse"], [1, "card-body", "text-gray-800", 2, "text-align", "center"], [2, "width", "100%"], ["id", "rut_empresa_auto", "type", "text", "placeholder", "xx.xxx.xxx-x", "required", "", 3, "input"], ["mat-dialog-actions", "", 1, "d-flex", "justify-content-center"], [1, "p-2"], [1, "btn", "btn-secondary", "btn-md", "btn-block", 3, "click"], ["cdkFocusInitial", "", 1, "btn", "btn-success", "btn-md", "btn-block", 3, "click", "disabled"], [1, "bg-warning"], [1, "fa-solid", "fa-triangle-exclamation"], ["id", "nombre_empresa_manual", "type", "text", "placeholder", "Nombre Empresa", "required", "", 3, "input"], ["id", "rut_empresa_manual", "type", "text", "placeholder", "xx.xxx.xxx-x", "required", "", 3, "input", "value"]],
      template: function Dialog_Template(rf, ctx) {
        if (rf & 1) {
          i0.ɵɵelementStart(0, "div", 1)(1, "div", 2)(2, "div", 3)(3, "a", 4)(4, "h3", 5);
          i0.ɵɵtext(5, "Agregar Empresa");
          i0.ɵɵelementEnd()();
          i0.ɵɵtemplate(6, Dialog_div_6_Template, 12, 1, "div", 6)(7, Dialog_ng_template_7_Template, 19, 2, "ng-template", null, 0, i0.ɵɵtemplateRefExtractor);
          i0.ɵɵelementEnd()()();
        }
        if (rf & 2) {
          const modo_manual_r4 = i0.ɵɵreference(8);
          i0.ɵɵadvance(6);
          i0.ɵɵproperty("ngIf", ctx.modo_auto)("ngIfElse", modo_manual_r4);
        }
      },
      dependencies: [dialog_1.MatDialogModule, i9.MatDialogActions, form_field_1.MatFormFieldModule, input_1.MatInputModule, forms_1.FormsModule, i13.ɵNgNoValidate, i13.NgControlStatusGroup, i13.NgForm, button_1.MatButtonModule, select_1.MatSelectModule, common_1.CommonModule, i7.NgIf, card_1.MatCardModule, i14.MatCard, i14.MatCardContent],
      encapsulation: 2
    });
  }
}
exports.Dialog = Dialog;

/***/ }),

/***/ 15562:
/*!********************************************************************!*\
  !*** ./src/app/componentes/logout-modal/logout-modal.component.ts ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.LogoutModalComponent = void 0;
const i0 = __webpack_require__(/*! @angular/core */ 37580);
const i1 = __webpack_require__(/*! src/app/servicios/usuario/storage-user.service */ 57637);
const i2 = __webpack_require__(/*! src/app/servicios/usuario/usuario.service */ 31446);
const i3 = __webpack_require__(/*! @angular/router */ 95072);
class LogoutModalComponent {
  constructor(storage, usuario, router) {
    this.storage = storage;
    this.usuario = usuario;
    this.router = router;
  }
  ngOnInit() {
    if (this.storage.isLoggedIn()) {
      const user = this.storage.getUser();
      this.username = user.username;
    }
  }
  logout() {
    this.usuario.logout().subscribe({
      next: res => {
        console.log(res);
        this.storage.clean();
        this.router.navigate(['/']);
        const modalBackdrop = document.querySelector('.modal-backdrop');
        if (modalBackdrop) {
          modalBackdrop.remove();
        }
      },
      error: err => {
        console.log(err);
      }
    });
  }
  static {
    this.ɵfac = function LogoutModalComponent_Factory(__ngFactoryType__) {
      return new (__ngFactoryType__ || LogoutModalComponent)(i0.ɵɵdirectiveInject(i1.StorageUserService), i0.ɵɵdirectiveInject(i2.UsuarioService), i0.ɵɵdirectiveInject(i3.Router));
    };
  }
  static {
    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({
      type: LogoutModalComponent,
      selectors: [["app-logout-modal"]],
      decls: 16,
      vars: 0,
      consts: [["id", "logoutModal", "tabindex", "-1", "role", "dialog", "aria-labelledby", "exampleModalLabel", "aria-hidden", "true", 1, "modal", "fade"], ["role", "document", 1, "modal-dialog"], [1, "modal-content"], [1, "modal-header"], ["id", "exampleModalLabel", 1, "modal-title"], ["type", "button", "data-dismiss", "modal", "aria-label", "Close", 1, "close"], ["aria-hidden", "true"], [1, "modal-body"], [1, "modal-footer"], ["type", "button", "data-dismiss", "modal", 1, "btn", "btn-secondary"], [1, "btn", "btn-primary", 3, "click"]],
      template: function LogoutModalComponent_Template(rf, ctx) {
        if (rf & 1) {
          i0.ɵɵelementStart(0, "div", 0)(1, "div", 1)(2, "div", 2)(3, "div", 3)(4, "h5", 4);
          i0.ɵɵtext(5, "\u00BFSeguro que deseas salir?");
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(6, "button", 5)(7, "span", 6);
          i0.ɵɵtext(8, "\u00D7");
          i0.ɵɵelementEnd()()();
          i0.ɵɵelementStart(9, "div", 7);
          i0.ɵɵtext(10, "Presiona \"Cerrar Sesi\u00F3n\" para terminar tu sesi\u00F3n actual y volver al inicio.");
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(11, "div", 8)(12, "button", 9);
          i0.ɵɵtext(13, "Cancelar");
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(14, "a", 10);
          i0.ɵɵlistener("click", function LogoutModalComponent_Template_a_click_14_listener() {
            return ctx.logout();
          });
          i0.ɵɵtext(15, "Cerrar sesi\u00F3n");
          i0.ɵɵelementEnd()()()()();
        }
      },
      styles: ["/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */"]
    });
  }
}
exports.LogoutModalComponent = LogoutModalComponent;

/***/ }),

/***/ 6074:
/*!********************************************************************!*\
  !*** ./src/app/componentes/migrar-modal/migrar-modal.component.ts ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.MigrarModalComponent = void 0;
const core_1 = __webpack_require__(/*! @angular/core */ 37580);
const i0 = __webpack_require__(/*! @angular/core */ 37580);
const i1 = __webpack_require__(/*! @angular/common */ 60316);
function MigrarModalComponent_div_7_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div")(1, "p");
    i0.ɵɵtext(2, " Ha realizado cambios que afectan a estudiantes que estan cursando este tipo de practica ");
    i0.ɵɵelement(3, "br");
    i0.ɵɵtext(4, " \u00BFDesea migrar a los alumnos a la nueva configuracion? ");
    i0.ɵɵelementEnd()();
  }
}
function MigrarModalComponent_div_8_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div")(1, "p");
    i0.ɵɵtext(2, " Los cambios que ha realizado no son compatibles con migrar estudiantes. Intente creando una nueva practica. Si desea usar esta como base use la opcion ");
    i0.ɵɵelementStart(3, "i");
    i0.ɵɵtext(4, "Importar existente");
    i0.ɵɵelementEnd()()();
  }
}
class MigrarModalComponent {
  constructor() {
    this.mandarDatosMigrar = new core_1.EventEmitter();
  }
  callParent() {
    //console.log("clicked migrar");
    this.mandarDatosMigrar.emit(this.migrarLegal);
  }
  static {
    this.ɵfac = function MigrarModalComponent_Factory(__ngFactoryType__) {
      return new (__ngFactoryType__ || MigrarModalComponent)();
    };
  }
  static {
    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({
      type: MigrarModalComponent,
      selectors: [["app-migrar-modal"]],
      inputs: {
        migrarLegal: "migrarLegal"
      },
      outputs: {
        mandarDatosMigrar: "mandarDatosMigrar"
      },
      decls: 14,
      vars: 3,
      consts: [["id", "migrarModal", "tabindex", "-1", "role", "dialog", "aria-labelledby", "exampleModalLabel", "aria-hidden", "true", 1, "modal", "fade"], ["role", "document", 1, "modal-dialog"], [1, "modal-content"], [1, "modal-header"], ["id", "exampleModalLabel", 1, "modal-title"], [1, "modal-body"], [4, "ngIf"], [1, "modal-footer"], ["type", "button", "data-dismiss", "modal", 1, "btn", "btn-secondary"], ["data-dismiss", "modal", 1, "btn", "btn-primary", 3, "click", "disabled"]],
      template: function MigrarModalComponent_Template(rf, ctx) {
        if (rf & 1) {
          i0.ɵɵelementStart(0, "div", 0)(1, "div", 1)(2, "div", 2)(3, "div", 3)(4, "h5", 4);
          i0.ɵɵtext(5, "Finalizar configuracion de pratica");
          i0.ɵɵelementEnd()();
          i0.ɵɵelementStart(6, "div", 5);
          i0.ɵɵtemplate(7, MigrarModalComponent_div_7_Template, 5, 0, "div", 6)(8, MigrarModalComponent_div_8_Template, 5, 0, "div", 6);
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(9, "div", 7)(10, "button", 8);
          i0.ɵɵtext(11, "Cancelar");
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(12, "button", 9);
          i0.ɵɵlistener("click", function MigrarModalComponent_Template_button_click_12_listener() {
            return ctx.callParent();
          });
          i0.ɵɵtext(13, "Migrar");
          i0.ɵɵelementEnd()()()()();
        }
        if (rf & 2) {
          i0.ɵɵadvance(7);
          i0.ɵɵproperty("ngIf", ctx.migrarLegal);
          i0.ɵɵadvance();
          i0.ɵɵproperty("ngIf", !ctx.migrarLegal);
          i0.ɵɵadvance(4);
          i0.ɵɵproperty("disabled", !ctx.migrarLegal);
        }
      },
      dependencies: [i1.NgIf],
      styles: ["/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */"]
    });
  }
}
exports.MigrarModalComponent = MigrarModalComponent;

/***/ }),

/***/ 36432:
/*!**************************************************!*\
  !*** ./src/app/componentes/pnf/pnf.component.ts ***!
  \**************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.PnfComponent = void 0;
const i0 = __webpack_require__(/*! @angular/core */ 37580);
const i1 = __webpack_require__(/*! @angular/router */ 95072);
const i2 = __webpack_require__(/*! ../footer/footer.component */ 89024);
const i3 = __webpack_require__(/*! ../barra-superior/barra-superior.component */ 36370);
const i4 = __webpack_require__(/*! ../logout-modal/logout-modal.component */ 15562);
const i5 = __webpack_require__(/*! ../barra-lateral-encargado/barra-lateral-encargado.component */ 43560);
class PnfComponent {
  static {
    this.ɵfac = function PnfComponent_Factory(__ngFactoryType__) {
      return new (__ngFactoryType__ || PnfComponent)();
    };
  }
  static {
    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({
      type: PnfComponent,
      selectors: [["app-pnf"]],
      decls: 29,
      vars: 0,
      consts: [["lang", "en"], ["charset", "utf-8"], ["http-equiv", "X-UA-Compatible", "content", "IE=edge"], ["name", "viewport", "content", "width=device-width, initial-scale=1, shrink-to-fit=no"], ["name", "description", "content", ""], ["name", "praxus", "content", ""], ["id", "page-top"], ["id", "wrapper"], ["id", "content-wrapper", 1, "d-flex", "flex-column"], ["id", "content", 1, "main-content"], [1, "container-fluid"], [1, "text-center"], ["data-text", "404", 1, "error", "mx-auto"], [1, "lead", "text-gray-800", "mb-5"], [1, "text-gray-500", "mb-0"], ["routerLink", "/"], ["href", "#page-top", 1, "scroll-to-top", "rounded"], [1, "fas", "fa-angle-up"]],
      template: function PnfComponent_Template(rf, ctx) {
        if (rf & 1) {
          i0.ɵɵelementStart(0, "html", 0)(1, "head");
          i0.ɵɵelement(2, "meta", 1)(3, "meta", 2)(4, "meta", 3)(5, "meta", 4)(6, "meta", 5);
          i0.ɵɵelementStart(7, "title");
          i0.ɵɵtext(8, "Praxus - 404");
          i0.ɵɵelementEnd()();
          i0.ɵɵelementStart(9, "body", 6)(10, "div", 7);
          i0.ɵɵelement(11, "app-barra-lateral-encargado");
          i0.ɵɵelementStart(12, "div", 8)(13, "div", 9);
          i0.ɵɵelement(14, "app-barra-superior");
          i0.ɵɵelementStart(15, "div", 10)(16, "div", 11)(17, "div", 12);
          i0.ɵɵtext(18, "404");
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(19, "p", 13);
          i0.ɵɵtext(20, "Page Not Found");
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(21, "p", 14);
          i0.ɵɵtext(22, "It looks like you found a glitch in the matrix...");
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(23, "a", 15);
          i0.ɵɵtext(24, "\u2190 Back to Dashboard");
          i0.ɵɵelementEnd()()()();
          i0.ɵɵelement(25, "app-footer");
          i0.ɵɵelementEnd()();
          i0.ɵɵelementStart(26, "a", 16);
          i0.ɵɵelement(27, "i", 17);
          i0.ɵɵelementEnd();
          i0.ɵɵelement(28, "app-logout-modal");
          i0.ɵɵelementEnd()();
        }
      },
      dependencies: [i1.RouterLink, i2.FooterComponent, i3.BarraSuperiorComponent, i4.LogoutModalComponent, i5.BarraLateralEncargadoComponent],
      styles: ["/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */"]
    });
  }
}
exports.PnfComponent = PnfComponent;

/***/ }),

/***/ 51108:
/*!******************************************************************!*\
  !*** ./src/app/componentes/rango-modal/rango-modal.component.ts ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.RangoModalComponent = void 0;
const forms_1 = __webpack_require__(/*! @angular/forms */ 34456);
const i0 = __webpack_require__(/*! @angular/core */ 37580);
const i1 = __webpack_require__(/*! src/app/servicios/encargado/aptitud.service */ 41591);
const i2 = __webpack_require__(/*! @angular/forms */ 34456);
const i3 = __webpack_require__(/*! @angular/material/snack-bar */ 3347);
class RangoModalComponent {
  createForm() {
    this.editarForm = this.fb.group({
      rango: ['', [forms_1.Validators.required]]
    });
  }
  constructor(aptitud, fb, _snackBar) {
    this.aptitud = aptitud;
    this.fb = fb;
    this._snackBar = _snackBar;
    this.user = JSON.parse(localStorage.getItem('auth-user') || "{}").userdata;
    this.createForm();
    let response = {};
    this.aptitud.getRango(this.user.encargado.id_carrera).subscribe({
      next: data => {
        response = {
          ...response,
          ...data
        };
      },
      error: error => {
        this._snackBar.open("Error al obtener rango", "Cerrar", {
          panelClass: ['red-snackbar'],
          duration: 2000
        });
      },
      complete: () => {
        if (response.status == 200) {
          this.actual = response.body.data;
        } else {
          this._snackBar.open("Error al obtener rango", "Cerrar", {
            panelClass: ['red-snackbar'],
            duration: 2000
          });
        }
      }
    });
  }
  ngOnInit() {}
  actualizar() {
    let data = this.editarForm.value;
    let _data = {};
    this.rango = data.rango;
    if (this.rango == 0) {
      this.rango = this.actual;
    }
    this.aptitud.actualizarRango(this.user.encargado.id_carrera, this.rango).subscribe({
      next: data => {
        _data = {
          ..._data,
          ...data
        };
      },
      error: error => {
        this._snackBar.open("Error al actualizar rango", "Cerrar", {
          panelClass: ['red-snackbar'],
          duration: 2000
        });
      },
      complete: () => {
        if (_data.status == 200) {
          this._snackBar.open("Rango actualizado exitosamente", "Cerrar", {
            panelClass: ['green-snackbar'],
            duration: 2000
          });
          setTimeout(function () {
            window.location.reload();
          }, 2000);
        } else {
          this._snackBar.open("Error al actualizar rango", "Cerrar", {
            panelClass: ['red-snackbar'],
            duration: 2000
          });
        }
      }
    });
  }
  validar_num(evnt) {
    let val_escrito = evnt.target.value;
    console.log("val_escrito", val_escrito);
    if (!val_escrito || val_escrito.length < 1) {
      evnt.target.value = "";
      return;
    }
    let num = val_escrito.replace(/[^0-9]+/g, '');
    console.log("num", num);
    if (!num || num.length < 1) {
      evnt.target.value = "";
      return;
    }
    evnt.target.value = num;
  }
  static {
    this.ɵfac = function RangoModalComponent_Factory(__ngFactoryType__) {
      return new (__ngFactoryType__ || RangoModalComponent)(i0.ɵɵdirectiveInject(i1.AptitudService), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.MatSnackBar));
    };
  }
  static {
    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({
      type: RangoModalComponent,
      selectors: [["app-rango-modal"]],
      decls: 17,
      vars: 2,
      consts: [["id", "rango-modal", "tabindex", "-1", "role", "dialog", "aria-labelledby", "exampleModalLabel", "aria-hidden", "true", 1, "modal", "fade"], ["role", "document", 1, "modal-dialog"], [1, "modal-content"], [1, "modal-header"], ["id", "exampleModalLabel", 1, "modal-title"], [1, "modal-body"], [1, "asignacion", 3, "formGroup"], ["type", "text", "name", "nombre", "id", "nombre", "formControlName", "rango", 3, "input", "value"], [1, "modal-footer"], ["type", "button", "data-dismiss", "modal", 1, "btn", "btn-secondary"], ["id", "myBtn", "type", "submit", "data-dismiss", "modal", 1, "btn", "btn-primary", 3, "click"]],
      template: function RangoModalComponent_Template(rf, ctx) {
        if (rf & 1) {
          i0.ɵɵelementStart(0, "div", 0)(1, "div", 1)(2, "div", 2)(3, "div", 3)(4, "h5", 4);
          i0.ɵɵtext(5, "Editar");
          i0.ɵɵelementEnd()();
          i0.ɵɵelementStart(6, "div", 5);
          i0.ɵɵtext(7, " Ingrese un rango de evaluacion para todas las competencias ");
          i0.ɵɵelementStart(8, "form", 6)(9, "div");
          i0.ɵɵtext(10, " Valor: ");
          i0.ɵɵelementStart(11, "input", 7);
          i0.ɵɵlistener("input", function RangoModalComponent_Template_input_input_11_listener($event) {
            return ctx.validar_num($event);
          });
          i0.ɵɵelementEnd()()()();
          i0.ɵɵelementStart(12, "div", 8)(13, "button", 9);
          i0.ɵɵtext(14, "Cancelar");
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(15, "button", 10);
          i0.ɵɵlistener("click", function RangoModalComponent_Template_button_click_15_listener() {
            return ctx.actualizar();
          });
          i0.ɵɵtext(16, " Guardar ");
          i0.ɵɵelementEnd()()()()();
        }
        if (rf & 2) {
          i0.ɵɵadvance(8);
          i0.ɵɵproperty("formGroup", ctx.editarForm);
          i0.ɵɵadvance(3);
          i0.ɵɵproperty("value", ctx.actual);
        }
      },
      dependencies: [i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName],
      styles: ["\n\ninput[_ngcontent-%COMP%]::-webkit-outer-spin-button, \ninput[_ngcontent-%COMP%]::-webkit-inner-spin-button {\n  -webkit-appearance: none;\n  margin: 0;\n}\n\n\n\ninput[type=number][_ngcontent-%COMP%] {\n  -moz-appearance: textfield;\n}\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50ZXMvcmFuZ28tbW9kYWwvcmFuZ28tbW9kYWwuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsZ0NBQUE7QUFDQTs7RUFFSSx3QkFBQTtFQUNBLFNBQUE7QUFDSjs7QUFFQSxZQUFBO0FBQ0E7RUFDSSwwQkFBQTtBQUNKIiwic291cmNlc0NvbnRlbnQiOlsiLyogQ2hyb21lLCBTYWZhcmksIEVkZ2UsIE9wZXJhICovXG5pbnB1dDo6LXdlYmtpdC1vdXRlci1zcGluLWJ1dHRvbixcbmlucHV0Ojotd2Via2l0LWlubmVyLXNwaW4tYnV0dG9uIHtcbiAgICAtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmU7XG4gICAgbWFyZ2luOiAwO1xufVxuXG4vKiBGaXJlZm94ICovXG5pbnB1dFt0eXBlPW51bWJlcl0ge1xuICAgIC1tb3otYXBwZWFyYW5jZTogdGV4dGZpZWxkO1xufSJdLCJzb3VyY2VSb290IjoiIn0= */"]
    });
  }
}
exports.RangoModalComponent = RangoModalComponent;

/***/ }),

/***/ 57892:
/*!************************************************************!*\
  !*** ./src/app/componentes/revision/revision.component.ts ***!
  \************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.RevisionComponent = void 0;
const environment_1 = __webpack_require__(/*! src/environments/environment */ 45312);
const i0 = __webpack_require__(/*! @angular/core */ 37580);
const i1 = __webpack_require__(/*! ../../servicios/encargado/decision.service */ 70182);
const i2 = __webpack_require__(/*! @angular/router */ 95072);
const i3 = __webpack_require__(/*! @angular/material/snack-bar */ 3347);
const i4 = __webpack_require__(/*! src/app/servicios/data_usuario/data-usuario.service */ 94160);
const i5 = __webpack_require__(/*! src/app/servicios/notificaciones/notificaciones.service */ 22004);
const i6 = __webpack_require__(/*! @angular/common */ 60316);
function RevisionComponent_div_0_Template(rf, ctx) {
  if (rf & 1) {
    const _r1 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "div", 3)(1, "button", 4);
    i0.ɵɵlistener("click", function RevisionComponent_div_0_Template_button_click_1_listener() {
      i0.ɵɵrestoreView(_r1);
      const ctx_r1 = i0.ɵɵnextContext();
      return i0.ɵɵresetView(ctx_r1.aprobar(1));
    });
    i0.ɵɵtext(2, "Aprobar");
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(3, "button", 5);
    i0.ɵɵlistener("click", function RevisionComponent_div_0_Template_button_click_3_listener() {
      i0.ɵɵrestoreView(_r1);
      const ctx_r1 = i0.ɵɵnextContext();
      return i0.ɵɵresetView(ctx_r1.aprobar(0));
    });
    i0.ɵɵtext(4, "Reprobar");
    i0.ɵɵelementEnd()();
  }
}
function RevisionComponent_ng_template_1_div_0_Template(rf, ctx) {
  if (rf & 1) {
    const _r3 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "div", 3)(1, "button", 6);
    i0.ɵɵlistener("click", function RevisionComponent_ng_template_1_div_0_Template_button_click_1_listener() {
      i0.ɵɵrestoreView(_r3);
      const ctx_r1 = i0.ɵɵnextContext(2);
      return i0.ɵɵresetView(ctx_r1.aprobar(0));
    });
    i0.ɵɵtext(2, "Cambiar a \"Reprobada\"");
    i0.ɵɵelementEnd()();
  }
}
function RevisionComponent_ng_template_1_ng_template_1_Template(rf, ctx) {
  if (rf & 1) {
    const _r4 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "div", 3)(1, "button", 6);
    i0.ɵɵlistener("click", function RevisionComponent_ng_template_1_ng_template_1_Template_button_click_1_listener() {
      i0.ɵɵrestoreView(_r4);
      const ctx_r1 = i0.ɵɵnextContext(2);
      return i0.ɵɵresetView(ctx_r1.aprobar(1));
    });
    i0.ɵɵtext(2, "Cambiar a \"Aprobada\"");
    i0.ɵɵelementEnd()();
  }
}
function RevisionComponent_ng_template_1_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵtemplate(0, RevisionComponent_ng_template_1_div_0_Template, 3, 0, "div", 2)(1, RevisionComponent_ng_template_1_ng_template_1_Template, 3, 0, "ng-template", null, 1, i0.ɵɵtemplateRefExtractor);
  }
  if (rf & 2) {
    const cambiarAAprobada_r5 = i0.ɵɵreference(2);
    const ctx_r1 = i0.ɵɵnextContext();
    i0.ɵɵproperty("ngIf", ctx_r1.estado_practica == "Aprobada")("ngIfElse", cambiarAAprobada_r5);
  }
}
class RevisionComponent {
  constructor(service, route, _snackBar, service_obtener, service_noti) {
    this.service = service;
    this.route = route;
    this._snackBar = _snackBar;
    this.service_obtener = service_obtener;
    this.service_noti = service_noti;
    this.id_estudiante = -1;
    this.id_modalidad = -1;
    this.id_usuario_estudiante = -1;
    this.estado_practica = "";
    this.cambiar_estado = true;
    this.estado_config = "";
    this.correo_estudiante = "";
    this.respuesta = [];
  }
  ngOnInit() {
    if (this.estado_practica == "Aprobada" || this.estado_practica == "Reprobada") {
      this.cambiar_estado = false;
    }
    this.service_obtener.obtener_estudiante(this.id_usuario_estudiante).subscribe({
      next: data => {
        this.respuesta = {
          ...this.respuesta,
          ...data
        };
      },
      error: error => {
        console.log(error);
        return;
      },
      complete: () => {
        this.correo_estudiante = this.respuesta.body.usuario.correo;
        this.estado_config = this.respuesta.body.usuario.config;
      }
    });
  }
  aprobar(aprobacion) {
    let respuesta = {};
    //console.log("la modalidad es: ", this.id_modalidad);
    this.service.aprobar_practica(this.id_estudiante, this.id_modalidad, aprobacion).subscribe({
      next: data => {
        respuesta = {
          ...respuesta,
          ...data
        };
      },
      error: error => console.log(error),
      complete: () => {
        let mensaje = "";
        if (aprobacion == 0) {
          mensaje = "Desafortunadamente, has reprobado esta práctica";
        } else {
          mensaje = "Felicidades, has aprobado esta práctica";
        }
        let enlace = environment_1.environment.url_front + "/alumno/" + this.id_estudiante;
        this.service_noti.postnotificacion(this.id_estudiante, mensaje, this.correo_estudiante, this.estado_config, enlace).subscribe({
          next: data => {
            respuesta = {
              ...respuesta,
              ...data
            };
          },
          error: error => {
            console.log(error);
            return;
          },
          complete: () => {
            console.log("Notificación de resultado de revisión exitosa");
          }
        });
        if (respuesta.status == 200) {
          this._snackBar.open("Práctica actualizada", "Cerrar", {
            panelClass: ['green-snackbar'],
            duration: 2000
          });
        } else {
          this._snackBar.open("Se ha producido un error", "Cerrar", {
            panelClass: ['red-snackbar']
          });
        }
        window.location.reload();
      }
    });
  }
  cambiarEstado() {
    this.cambiar_estado = !this.cambiar_estado;
  }
  static {
    this.ɵfac = function RevisionComponent_Factory(__ngFactoryType__) {
      return new (__ngFactoryType__ || RevisionComponent)(i0.ɵɵdirectiveInject(i1.SetDetallesAlumnoService), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i3.MatSnackBar), i0.ɵɵdirectiveInject(i4.DataUsuarioService), i0.ɵɵdirectiveInject(i5.NotificacionesService));
    };
  }
  static {
    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({
      type: RevisionComponent,
      selectors: [["app-revision"]],
      inputs: {
        id_estudiante: "id_estudiante",
        id_modalidad: "id_modalidad",
        id_usuario_estudiante: "id_usuario_estudiante",
        estado_practica: "estado_practica"
      },
      decls: 3,
      vars: 2,
      consts: [["botonCambiarEstado", ""], ["cambiarAAprobada", ""], ["class", "container", 4, "ngIf", "ngIfElse"], [1, "container"], [1, "btn", "btn-success", "btn-sm", "ml-1", "mr-1", "mt-1", "mb-1", "revisionBtn", 3, "click"], [1, "btn", "btn-secondary", "btn-sm", "ml-1", "mr-1", "mt-1", "mb-1", "revisionBtn", 3, "click"], [1, "btn", "btn-secondary", "btn-sm", "ml-1", "mr-1", "mt-1", "mb-1", 3, "click"]],
      template: function RevisionComponent_Template(rf, ctx) {
        if (rf & 1) {
          i0.ɵɵtemplate(0, RevisionComponent_div_0_Template, 5, 0, "div", 2)(1, RevisionComponent_ng_template_1_Template, 3, 2, "ng-template", null, 0, i0.ɵɵtemplateRefExtractor);
        }
        if (rf & 2) {
          const botonCambiarEstado_r6 = i0.ɵɵreference(2);
          i0.ɵɵproperty("ngIf", ctx.cambiar_estado)("ngIfElse", botonCambiarEstado_r6);
        }
      },
      dependencies: [i6.NgIf],
      styles: [".mat-mdc-unelevated-button[_ngcontent-%COMP%]:not(:disabled, [_ngcontent-%COMP%]:hover).mat-success, \n.mat-mdc-raised-button.mat-success[_ngcontent-%COMP%], \n.mat-mdc-fab.mat-success[_ngcontent-%COMP%], \n.mat-mdc-mini-fab.mat-success[_ngcontent-%COMP%] {\n  color: #f0fff3;\n  background-color: #155724;\n}\n\n.revisionBtn[_ngcontent-%COMP%] {\n  width: 77px;\n}\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50ZXMvcmV2aXNpb24vcmV2aXNpb24uY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7RUFJSSxjQUFBO0VBQ0EseUJBQUE7QUFDSjs7QUFFQTtFQUNHLFdBQUE7QUFDSCIsInNvdXJjZXNDb250ZW50IjpbIi5tYXQtbWRjLXVuZWxldmF0ZWQtYnV0dG9uOm5vdCg6ZGlzYWJsZWQsIDpob3ZlcikubWF0LXN1Y2Nlc3MsXG4ubWF0LW1kYy1yYWlzZWQtYnV0dG9uLm1hdC1zdWNjZXNzLFxuLm1hdC1tZGMtZmFiLm1hdC1zdWNjZXNzLFxuLm1hdC1tZGMtbWluaS1mYWIubWF0LXN1Y2Nlc3Mge1xuICAgIGNvbG9yOiAjZjBmZmYzO1xuICAgIGJhY2tncm91bmQtY29sb3I6ICMxNTU3MjQ7XG59XG5cbi5yZXZpc2lvbkJ0biB7XG4gICB3aWR0aDogNzdweDtcbn0iXSwic291cmNlUm9vdCI6IiJ9 */"]
    });
  }
}
exports.RevisionComponent = RevisionComponent;

/***/ }),

/***/ 51052:
/*!**********************************************************************************!*\
  !*** ./src/app/componentes/subir-archivo-extra/subir-archivo-extra.component.ts ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.Dialog = exports.SubirArchivoExtraComponent = void 0;
const dialog_1 = __webpack_require__(/*! @angular/material/dialog */ 12587);
const button_1 = __webpack_require__(/*! @angular/material/button */ 84175);
const forms_1 = __webpack_require__(/*! @angular/forms */ 34456);
const input_1 = __webpack_require__(/*! @angular/material/input */ 95541);
const form_field_1 = __webpack_require__(/*! @angular/material/form-field */ 24950);
const select_1 = __webpack_require__(/*! @angular/material/select */ 25175);
const common_1 = __webpack_require__(/*! @angular/common */ 60316);
const environment_1 = __webpack_require__(/*! src/environments/environment */ 45312);
const i0 = __webpack_require__(/*! @angular/core */ 37580);
const i1 = __webpack_require__(/*! @angular/material/dialog */ 12587);
const i2 = __webpack_require__(/*! ../../servicios/encargado/documentos.service */ 3367);
const i3 = __webpack_require__(/*! @angular/router */ 95072);
const i4 = __webpack_require__(/*! @angular/material/snack-bar */ 3347);
const i5 = __webpack_require__(/*! ../../servicios/archivos/archivos.service */ 79894);
const i6 = __webpack_require__(/*! src/app/servicios/notificaciones/notificaciones.service */ 22004);
const i7 = __webpack_require__(/*! @angular/forms */ 34456);
const _c0 = a0 => [false, a0];
const _c1 = a0 => [true, a0];
class SubirArchivoExtraComponent {
  constructor(dialog, doc_service, router, activated_route, _snackBar, archivo_service, service_noti) {
    this.dialog = dialog;
    this.doc_service = doc_service;
    this.router = router;
    this.activated_route = activated_route;
    this._snackBar = _snackBar;
    this.archivo_service = archivo_service;
    this.service_noti = service_noti;
    this.id_documento_extra = -1;
    this.nombre_solicitud = "";
    this.descripcion = "";
    this.tipo_archivo = [];
    this.id_estudiante_usuario = -1;
    this.id_encargado_usuario = -1;
    this.correo_encargado = "";
    this.estado_config = "";
  }
  subir_archivos() {
    let id_documento_extra = this.id_documento_extra;
    let nombre_solicitud = this.nombre_solicitud;
    let descripcion = this.descripcion;
    let tipo_archivo = this.tipo_archivo;
    const dialogRef = this.dialog.open(Dialog, {
      width: '300px',
      enterAnimationDuration: "100ms",
      exitAnimationDuration: "100ms",
      data: {
        nombre_solicitud,
        descripcion,
        tipo_archivo
      }
    });
    dialogRef.afterClosed().subscribe(result => {
      if (!result || !result[0]) {
        return;
      }
      let [, file] = result;
      this.archivo_service.checkFileType(file, tipo_archivo).then(type_file => {
        if (!type_file) {
          this._snackBar.open("Archivo con formato incorrecto", "Cerrar", {
            panelClass: ['red-snackbar'],
            duration: 3000
          });
          return;
        }
        let _data = {};
        this.archivo_service.subirDocExtra(file, id_documento_extra).subscribe({
          next: data => {
            _data = {
              ..._data,
              ...data
            };
          },
          complete: () => {
            let respuesta = [];
            let enlace = environment_1.environment.url_front + "/practicas/" + this.id_estudiante_usuario;
            this.service_noti.postnotificacion(this.id_encargado_usuario, "El alumno ha subido el archivo extra solicitado", this.correo_encargado, this.estado_config, enlace).subscribe({
              next: data => {
                respuesta = {
                  ...respuesta,
                  ...data
                };
              },
              error: error => {
                console.log(error);
                return;
              },
              complete: () => {
                console.log("Notificacion enviada con exito");
              }
            });
            let upload_string = "";
            if (_data.status == 200) {
              upload_string = "?upload_success=success";
            } else if (_data.status == 415) {
              upload_string = "?upload_success=format";
            } else {
              upload_string = "?upload_success=error";
            }
            // check if the current url already has a query string and remove it
            let newUrl = this.router.url.split("?")[0];
            newUrl += upload_string;
            window.location.href = newUrl;
          },
          error: error => {
            if (error.status == 415) {
              this._snackBar.open("Archivo con formato incorrecto", "Cerrar", {
                panelClass: ['red-snackbar'],
                duration: 3000
              });
            } else {
              this._snackBar.open("Error al subir archivo", "Cerrar", {
                panelClass: ['red-snackbar'],
                duration: 3000
              });
            }
          }
        });
      });
    });
  }
  static {
    this.ɵfac = function SubirArchivoExtraComponent_Factory(__ngFactoryType__) {
      return new (__ngFactoryType__ || SubirArchivoExtraComponent)(i0.ɵɵdirectiveInject(i1.MatDialog), i0.ɵɵdirectiveInject(i2.DocumentosService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i3.ActivatedRoute), i0.ɵɵdirectiveInject(i4.MatSnackBar), i0.ɵɵdirectiveInject(i5.ArchivosService), i0.ɵɵdirectiveInject(i6.NotificacionesService));
    };
  }
  static {
    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({
      type: SubirArchivoExtraComponent,
      selectors: [["app-subir-archivo-extra"]],
      inputs: {
        id_documento_extra: "id_documento_extra",
        nombre_solicitud: "nombre_solicitud",
        descripcion: "descripcion",
        tipo_archivo: "tipo_archivo",
        id_estudiante_usuario: "id_estudiante_usuario",
        id_encargado_usuario: "id_encargado_usuario",
        correo_encargado: "correo_encargado",
        estado_config: "estado_config"
      },
      decls: 2,
      vars: 0,
      consts: [[1, "btn", "btn-primary", "btn-sm", "btn-block", 3, "click"]],
      template: function SubirArchivoExtraComponent_Template(rf, ctx) {
        if (rf & 1) {
          i0.ɵɵelementStart(0, "button", 0);
          i0.ɵɵlistener("click", function SubirArchivoExtraComponent_Template_button_click_0_listener() {
            return ctx.subir_archivos();
          });
          i0.ɵɵtext(1, " Subir\n");
          i0.ɵɵelementEnd();
        }
      },
      styles: [".file-name[_ngcontent-%COMP%] {\n  margin-left: 1rem;\n}\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50ZXMvc3ViaXItYXJjaGl2by1leHRyYS9zdWJpci1hcmNoaXZvLWV4dHJhLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksaUJBQUE7QUFDSiIsInNvdXJjZXNDb250ZW50IjpbIi5maWxlLW5hbWUge1xuICAgIG1hcmdpbi1sZWZ0OiAxcmVtO1xufSJdLCJzb3VyY2VSb290IjoiIn0= */"]
    });
  }
}
exports.SubirArchivoExtraComponent = SubirArchivoExtraComponent;
class Dialog {
  constructor(dialogRef, data) {
    this.dialogRef = dialogRef;
    this.data = data;
    this.selectedFile = null;
  }
  onFileSelected(event) {
    this.selectedFile = event.target.files[0] ?? null;
  }
  onNoClick() {
    this.dialogRef.close();
  }
  static {
    this.ɵfac = function Dialog_Factory(__ngFactoryType__) {
      return new (__ngFactoryType__ || Dialog)(i0.ɵɵdirectiveInject(i1.MatDialogRef), i0.ɵɵdirectiveInject(dialog_1.MAT_DIALOG_DATA));
    };
  }
  static {
    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({
      type: Dialog,
      selectors: [["app-dialog"]],
      standalone: true,
      features: [i0.ɵɵStandaloneFeature],
      decls: 29,
      vars: 10,
      consts: [["fileInput", ""], [1, "row", "m-0", "p-0", 2, "max-width", "100%"], [1, "col-xl-12", "p-0"], [1, "card"], [1, "card-header"], [1, "m-0", "font-weight-bold", "text-primary", 2, "text-align", "center"], [1, "card-body", "text-gray-800", 2, "text-align", "center"], [2, "width", "100%"], [1, "file-name"], ["type", "button", 1, "btn", "btn-primary", "btn-md", "btn-block", 3, "click"], ["hidden", "", "type", "file", "required", "", 3, "change"], ["mat-dialog-actions", "", 1, "d-flex", "justify-content-center"], [1, "p-2"], [1, "btn", "btn-secondary", "btn-md", "btn-block", 3, "click", "mat-dialog-close"], ["cdkFocusInitial", "", 1, "btn", "btn-success", "btn-md", "btn-block", 3, "mat-dialog-close", "disabled"]],
      template: function Dialog_Template(rf, ctx) {
        if (rf & 1) {
          const _r1 = i0.ɵɵgetCurrentView();
          i0.ɵɵelementStart(0, "div", 1)(1, "div", 2)(2, "div", 3)(3, "a", 4)(4, "h3", 5);
          i0.ɵɵtext(5, "Solicitud de documentos");
          i0.ɵɵelementEnd()();
          i0.ɵɵelementStart(6, "div", 6)(7, "h3")(8, "b");
          i0.ɵɵtext(9, "Archivo:");
          i0.ɵɵelementEnd();
          i0.ɵɵtext(10);
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(11, "h4")(12, "b");
          i0.ɵɵtext(13, "Descripci\u00F3n:");
          i0.ɵɵelementEnd();
          i0.ɵɵtext(14);
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(15, "form", 7)(16, "span", 8);
          i0.ɵɵtext(17);
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(18, "button", 9);
          i0.ɵɵlistener("click", function Dialog_Template_button_click_18_listener() {
            i0.ɵɵrestoreView(_r1);
            const fileInput_r2 = i0.ɵɵreference(21);
            return i0.ɵɵresetView(fileInput_r2.click());
          });
          i0.ɵɵtext(19, "Elegir Archivo");
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(20, "input", 10, 0);
          i0.ɵɵlistener("change", function Dialog_Template_input_change_20_listener($event) {
            i0.ɵɵrestoreView(_r1);
            return i0.ɵɵresetView(ctx.onFileSelected($event));
          });
          i0.ɵɵelementEnd()();
          i0.ɵɵelementStart(22, "div", 11)(23, "div", 12)(24, "button", 13);
          i0.ɵɵlistener("click", function Dialog_Template_button_click_24_listener() {
            i0.ɵɵrestoreView(_r1);
            return i0.ɵɵresetView(ctx.onNoClick());
          });
          i0.ɵɵtext(25, "Cancelar");
          i0.ɵɵelementEnd()();
          i0.ɵɵelementStart(26, "div", 12)(27, "button", 14);
          i0.ɵɵtext(28, "Aceptar");
          i0.ɵɵelementEnd()()()()()()();
        }
        if (rf & 2) {
          i0.ɵɵadvance(10);
          i0.ɵɵtextInterpolate1(" ", ctx.data.nombre_solicitud, "");
          i0.ɵɵadvance(4);
          i0.ɵɵtextInterpolate1(" ", ctx.data.descripcion, "");
          i0.ɵɵadvance(3);
          i0.ɵɵtextInterpolate(ctx.selectedFile == null ? null : ctx.selectedFile.name);
          i0.ɵɵadvance(7);
          i0.ɵɵproperty("mat-dialog-close", i0.ɵɵpureFunction1(6, _c0, ctx.selectedFile));
          i0.ɵɵadvance(3);
          i0.ɵɵproperty("mat-dialog-close", i0.ɵɵpureFunction1(8, _c1, ctx.selectedFile))("disabled", !ctx.selectedFile);
        }
      },
      dependencies: [dialog_1.MatDialogModule, i1.MatDialogClose, i1.MatDialogActions, form_field_1.MatFormFieldModule, input_1.MatInputModule, forms_1.FormsModule, i7.ɵNgNoValidate, i7.NgControlStatusGroup, i7.NgForm, button_1.MatButtonModule, select_1.MatSelectModule, common_1.CommonModule],
      encapsulation: 2
    });
  }
}
exports.Dialog = Dialog;

/***/ }),

/***/ 66760:
/*!**************************************************************************************************!*\
  !*** ./src/app/componentes/subir-archivo-informe-final/subir-archivo-informe-final.component.ts ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.Dialog3 = exports.SubirArchivoInformeFinalComponent = void 0;
const dialog_1 = __webpack_require__(/*! @angular/material/dialog */ 12587);
const button_1 = __webpack_require__(/*! @angular/material/button */ 84175);
const forms_1 = __webpack_require__(/*! @angular/forms */ 34456);
const input_1 = __webpack_require__(/*! @angular/material/input */ 95541);
const form_field_1 = __webpack_require__(/*! @angular/material/form-field */ 24950);
const select_1 = __webpack_require__(/*! @angular/material/select */ 25175);
const common_1 = __webpack_require__(/*! @angular/common */ 60316);
const uuid_1 = __webpack_require__(/*! uuid */ 57379);
const i0 = __webpack_require__(/*! @angular/core */ 37580);
const i1 = __webpack_require__(/*! @angular/material/dialog */ 12587);
const i2 = __webpack_require__(/*! @angular/material/snack-bar */ 3347);
const i3 = __webpack_require__(/*! ../../servicios/archivos/archivos.service */ 79894);
const i4 = __webpack_require__(/*! @angular/router */ 95072);
const i5 = __webpack_require__(/*! ../../servicios/alumno/gestionar_practica.service */ 6632);
const i6 = __webpack_require__(/*! @angular/forms */ 34456);
const _c0 = a0 => [false, a0];
const _c1 = a0 => [true, a0];
class SubirArchivoInformeFinalComponent {
  constructor(dialog, _snackBar, archivo_service, router, service_gestion) {
    this.dialog = dialog;
    this._snackBar = _snackBar;
    this.archivo_service = archivo_service;
    this.router = router;
    this.service_gestion = service_gestion;
    this.id_informe = 0;
    this.tipo_archivo = "";
  }
  readfile(file, subscriber) {
    const filereader = new FileReader();
    filereader.readAsDataURL(file);
    filereader.onload = () => {
      subscriber.next(filereader.result);
      subscriber.complete;
    };
    filereader.onerror = () => {
      subscriber.error();
      subscriber.complete();
    };
  }
  subir_archivos() {
    let formatos = this.tipo_archivo.split(",");
    console.log("Formatos permitidos:", formatos);
    const dialogRef = this.dialog.open(Dialog3, {
      width: '400px',
      enterAnimationDuration: "100ms",
      exitAnimationDuration: "100ms"
    });
    dialogRef.afterClosed().subscribe(result => {
      if (!result || !result[0]) {
        return;
      }
      let [, file] = result;
      if (file.size > 10000000) {
        this._snackBar.open("Este Archivo es Demasiado Grande", "Cerrar", {
          panelClass: ['red-snackbar'],
          duration: 3000
        });
        return;
      }
      this.archivo_service.checkFileType(file, formatos).then(type_file => {
        if (!type_file) {
          this._snackBar.open("Archivo con formato incorrecto", "Cerrar", {
            panelClass: ['red-snackbar'],
            duration: 3000
          });
          return;
        }
        let _filename = file.name.toLowerCase();
        let file_ext = _filename.slice((_filename.lastIndexOf(".") - 1 >>> 0) + 2);
        let key = {
          "filename": (0, uuid_1.v4)() + "." + file_ext
        };
        let respuesta;
        this.service_gestion.subir_informe(this.id_informe, key, file).subscribe({
          next: data => {
            respuesta = {
              ...respuesta,
              ...data
            };
          },
          error: error => console.log("Error en subir informe:", error),
          complete: () => {
            console.log("Informe subido con éxito");
            let currentUrl = this.router.url;
            //this.router.navigate([currentUrl], { queryParams: { upload_success: "success" } });
            //reload page
            this.router.navigateByUrl('/', {
              skipLocationChange: true
            }).then(() => {
              this.router.navigate([currentUrl], {
                queryParams: {
                  upload_success: "success"
                }
              });
            });
          }
        });
      });
    });
  }
  static {
    this.ɵfac = function SubirArchivoInformeFinalComponent_Factory(__ngFactoryType__) {
      return new (__ngFactoryType__ || SubirArchivoInformeFinalComponent)(i0.ɵɵdirectiveInject(i1.MatDialog), i0.ɵɵdirectiveInject(i2.MatSnackBar), i0.ɵɵdirectiveInject(i3.ArchivosService), i0.ɵɵdirectiveInject(i4.Router), i0.ɵɵdirectiveInject(i5.GestionarService));
    };
  }
  static {
    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({
      type: SubirArchivoInformeFinalComponent,
      selectors: [["app-subir-archivo-informe-final"]],
      inputs: {
        id_informe: "id_informe",
        tipo_archivo: "tipo_archivo"
      },
      decls: 2,
      vars: 0,
      consts: [["type", "button", 1, "btn", "btn-primary", "btn-sm", 3, "click"]],
      template: function SubirArchivoInformeFinalComponent_Template(rf, ctx) {
        if (rf & 1) {
          i0.ɵɵelementStart(0, "button", 0);
          i0.ɵɵlistener("click", function SubirArchivoInformeFinalComponent_Template_button_click_0_listener() {
            return ctx.subir_archivos();
          });
          i0.ɵɵtext(1, " Subir\n");
          i0.ɵɵelementEnd();
        }
      },
      styles: ["/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */"]
    });
  }
}
exports.SubirArchivoInformeFinalComponent = SubirArchivoInformeFinalComponent;
class Dialog3 {
  constructor(dialogRef, data) {
    this.dialogRef = dialogRef;
    this.data = data;
    this.selectedFile = null;
  }
  onFileSelected(event) {
    this.selectedFile = event.target.files[0] ?? null;
    //console.log(this.selectedFile)
  }
  onNoClick() {
    this.dialogRef.close();
  }
  static {
    this.ɵfac = function Dialog3_Factory(__ngFactoryType__) {
      return new (__ngFactoryType__ || Dialog3)(i0.ɵɵdirectiveInject(i1.MatDialogRef), i0.ɵɵdirectiveInject(dialog_1.MAT_DIALOG_DATA));
    };
  }
  static {
    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({
      type: Dialog3,
      selectors: [["app-dialogSubirInformeFinal"]],
      standalone: true,
      features: [i0.ɵɵStandaloneFeature],
      decls: 22,
      vars: 8,
      consts: [["fileInput", ""], [1, "row", "m-0", "p-0", 2, "max-width", "100%"], [1, "col-xl-12", "p-0"], [1, "card"], [1, "card-header"], [1, "m-0", "font-weight-bold", "text-primary", 2, "text-align", "center"], [1, "card-body", "text-gray-800", 2, "text-align", "center"], [2, "width", "100%"], [1, "file-name", "mb-1"], ["type", "button", 1, "btn", "btn-primary", "btn-md", 3, "click"], ["hidden", "", "type", "file", "required", "", 3, "change"], ["mat-dialog-actions", "", 1, "d-flex", "justify-content-center"], [1, "p-2"], [1, "btn", "btn-secondary", "btn-md", 3, "click", "mat-dialog-close"], ["cdkFocusInitial", "", 1, "btn", "btn-success", "btn-md", 3, "mat-dialog-close", "disabled"]],
      template: function Dialog3_Template(rf, ctx) {
        if (rf & 1) {
          const _r1 = i0.ɵɵgetCurrentView();
          i0.ɵɵelementStart(0, "div", 1)(1, "div", 2)(2, "div", 3)(3, "a", 4)(4, "h3", 5);
          i0.ɵɵtext(5, "Subir Informe Final");
          i0.ɵɵelementEnd()();
          i0.ɵɵelementStart(6, "div", 6)(7, "form", 7)(8, "div", 8);
          i0.ɵɵtext(9);
          i0.ɵɵelementEnd();
          i0.ɵɵelement(10, "br");
          i0.ɵɵelementStart(11, "button", 9);
          i0.ɵɵlistener("click", function Dialog3_Template_button_click_11_listener() {
            i0.ɵɵrestoreView(_r1);
            const fileInput_r2 = i0.ɵɵreference(14);
            return i0.ɵɵresetView(fileInput_r2.click());
          });
          i0.ɵɵtext(12, "Elegir Archivo");
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(13, "input", 10, 0);
          i0.ɵɵlistener("change", function Dialog3_Template_input_change_13_listener($event) {
            i0.ɵɵrestoreView(_r1);
            return i0.ɵɵresetView(ctx.onFileSelected($event));
          });
          i0.ɵɵelementEnd()();
          i0.ɵɵelementStart(15, "div", 11)(16, "div", 12)(17, "button", 13);
          i0.ɵɵlistener("click", function Dialog3_Template_button_click_17_listener() {
            i0.ɵɵrestoreView(_r1);
            return i0.ɵɵresetView(ctx.onNoClick());
          });
          i0.ɵɵtext(18, "Cancelar");
          i0.ɵɵelementEnd()();
          i0.ɵɵelementStart(19, "div", 12)(20, "button", 14);
          i0.ɵɵtext(21, "Aceptar");
          i0.ɵɵelementEnd()()()()()()();
        }
        if (rf & 2) {
          i0.ɵɵadvance(9);
          i0.ɵɵtextInterpolate(ctx.selectedFile == null ? null : ctx.selectedFile.name);
          i0.ɵɵadvance(8);
          i0.ɵɵproperty("mat-dialog-close", i0.ɵɵpureFunction1(4, _c0, ctx.selectedFile));
          i0.ɵɵadvance(3);
          i0.ɵɵproperty("mat-dialog-close", i0.ɵɵpureFunction1(6, _c1, ctx.selectedFile))("disabled", !ctx.selectedFile);
        }
      },
      dependencies: [dialog_1.MatDialogModule, i1.MatDialogClose, i1.MatDialogActions, form_field_1.MatFormFieldModule, input_1.MatInputModule, forms_1.FormsModule, i6.ɵNgNoValidate, i6.NgControlStatusGroup, i6.NgForm, button_1.MatButtonModule, select_1.MatSelectModule, common_1.CommonModule],
      encapsulation: 2
    });
  }
}
exports.Dialog3 = Dialog3;

/***/ }),

/***/ 75296:
/*!**********************************************************************!*\
  !*** ./src/app/componentes/subir-archivo/subir-archivo.component.ts ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.Dialog2 = exports.SubirArchivoComponent = void 0;
const dialog_1 = __webpack_require__(/*! @angular/material/dialog */ 12587);
const button_1 = __webpack_require__(/*! @angular/material/button */ 84175);
const forms_1 = __webpack_require__(/*! @angular/forms */ 34456);
const input_1 = __webpack_require__(/*! @angular/material/input */ 95541);
const form_field_1 = __webpack_require__(/*! @angular/material/form-field */ 24950);
const select_1 = __webpack_require__(/*! @angular/material/select */ 25175);
const common_1 = __webpack_require__(/*! @angular/common */ 60316);
const environment_1 = __webpack_require__(/*! src/environments/environment */ 45312);
const i0 = __webpack_require__(/*! @angular/core */ 37580);
const i1 = __webpack_require__(/*! @angular/material/dialog */ 12587);
const i2 = __webpack_require__(/*! @angular/material/snack-bar */ 3347);
const i3 = __webpack_require__(/*! ../../servicios/archivos/archivos.service */ 79894);
const i4 = __webpack_require__(/*! @angular/router */ 95072);
const i5 = __webpack_require__(/*! src/app/servicios/notificaciones/notificaciones.service */ 22004);
const i6 = __webpack_require__(/*! @angular/forms */ 34456);
const _c0 = a0 => [false, a0];
const _c1 = a0 => [true, a0];
class SubirArchivoComponent {
  constructor(dialog, _snackBar, archivo_service, router, activated_route, service_noti) {
    this.dialog = dialog;
    this._snackBar = _snackBar;
    this.archivo_service = archivo_service;
    this.router = router;
    this.activated_route = activated_route;
    this.service_noti = service_noti;
    this.id_solicitud = 0;
    this.id_practica = 0;
    this.nombre_solicitud = "";
    this.descripcion = "";
    this.tipo_archivo = [];
    this.id_usuario = 0;
    this.id_estudiante_usuario = -1;
    this.id_encargado_usuario = -1;
    this.correo_encargado = "";
    this.estado_config = "";
  }
  subir_archivos() {
    let id_solicitud = this.id_solicitud;
    let id_practica = this.id_practica;
    let nombre_solicitud = this.nombre_solicitud;
    let descripcion = this.descripcion;
    let tipo_archivo = this.tipo_archivo;
    const dialogRef = this.dialog.open(Dialog2, {
      width: '400px',
      enterAnimationDuration: "100ms",
      exitAnimationDuration: "100ms",
      data: {
        nombre_solicitud,
        descripcion,
        tipo_archivo
      }
    });
    dialogRef.afterClosed().subscribe(result => {
      if (!result || !result[0]) {
        return;
      }
      let [, file] = result;
      console.log(tipo_archivo, file);
      this.archivo_service.checkFileType(file, tipo_archivo).then(type_file => {
        if (!type_file) {
          this._snackBar.open("Archivo con formato incorrecto", "Cerrar", {
            panelClass: ['red-snackbar'],
            duration: 3000
          });
          return;
        }
        let _data = {};
        this.archivo_service.subirDocumento(file, id_solicitud, id_practica).subscribe({
          next: data => {
            _data = {
              ..._data,
              ...data
            };
          },
          complete: () => {
            let upload_string = "";
            if (_data.status == 200) {
              upload_string = "?upload_success=success";
              let respuesta = [];
              let enlace = environment_1.environment.url_front + "/practicas/" + this.id_estudiante_usuario;
              this.service_noti.postnotificacion(this.id_encargado_usuario, "El alumno ha subido el archivo extra solicitado", this.correo_encargado, this.estado_config, enlace).subscribe({
                next: data => {
                  respuesta = {
                    ...respuesta,
                    ...data
                  };
                },
                error: error => {
                  console.log(error);
                  return;
                },
                complete: () => {
                  console.log("Notificacion enviada con exito");
                }
              });
            } else if (_data.status == 415) {
              upload_string = "?upload_success=format";
            } else {
              upload_string = "?upload_success=error";
            }
            // check if the current url already has a query string and remove it
            let newUrl = this.router.url.split("?")[0];
            newUrl += upload_string;
            window.location.href = newUrl;
          },
          error: error => {
            if (error.status == 415) {
              this._snackBar.open("Archivo con formato incorrecto", "Cerrar", {
                panelClass: ['red-snackbar'],
                duration: 3000
              });
            } else {
              this._snackBar.open("Error al subir archivo", "Cerrar", {
                panelClass: ['red-snackbar'],
                duration: 3000
              });
            }
          }
        });
      });
    });
  }
  static {
    this.ɵfac = function SubirArchivoComponent_Factory(__ngFactoryType__) {
      return new (__ngFactoryType__ || SubirArchivoComponent)(i0.ɵɵdirectiveInject(i1.MatDialog), i0.ɵɵdirectiveInject(i2.MatSnackBar), i0.ɵɵdirectiveInject(i3.ArchivosService), i0.ɵɵdirectiveInject(i4.Router), i0.ɵɵdirectiveInject(i4.ActivatedRoute), i0.ɵɵdirectiveInject(i5.NotificacionesService));
    };
  }
  static {
    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({
      type: SubirArchivoComponent,
      selectors: [["app-subir-archivo"]],
      inputs: {
        id_solicitud: "id_solicitud",
        id_practica: "id_practica",
        nombre_solicitud: "nombre_solicitud",
        descripcion: "descripcion",
        tipo_archivo: "tipo_archivo",
        id_usuario: "id_usuario",
        id_estudiante_usuario: "id_estudiante_usuario",
        id_encargado_usuario: "id_encargado_usuario",
        correo_encargado: "correo_encargado",
        estado_config: "estado_config"
      },
      decls: 2,
      vars: 0,
      consts: [[1, "btn", "btn-primary", "btn-sm", "btn-block", 3, "click"]],
      template: function SubirArchivoComponent_Template(rf, ctx) {
        if (rf & 1) {
          i0.ɵɵelementStart(0, "button", 0);
          i0.ɵɵlistener("click", function SubirArchivoComponent_Template_button_click_0_listener() {
            return ctx.subir_archivos();
          });
          i0.ɵɵtext(1, " Subir\n");
          i0.ɵɵelementEnd();
        }
      },
      styles: ["/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */"]
    });
  }
}
exports.SubirArchivoComponent = SubirArchivoComponent;
class Dialog2 {
  constructor(dialogRef, data) {
    this.dialogRef = dialogRef;
    this.data = data;
    this.selectedFile = null;
  }
  onFileSelected(event) {
    this.selectedFile = event.target.files[0] ?? null;
  }
  onNoClick() {
    this.dialogRef.close();
  }
  static {
    this.ɵfac = function Dialog2_Factory(__ngFactoryType__) {
      return new (__ngFactoryType__ || Dialog2)(i0.ɵɵdirectiveInject(i1.MatDialogRef), i0.ɵɵdirectiveInject(dialog_1.MAT_DIALOG_DATA));
    };
  }
  static {
    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({
      type: Dialog2,
      selectors: [["app-dialog2"]],
      standalone: true,
      features: [i0.ɵɵStandaloneFeature],
      decls: 29,
      vars: 10,
      consts: [["fileInput", ""], [1, "row", "m-0", "p-0", 2, "max-width", "100%"], [1, "col-xl-12", "p-0"], [1, "card"], [1, "card-header"], [1, "m-0", "font-weight-bold", "text-primary", 2, "text-align", "center"], [1, "card-body", "text-gray-800", 2, "text-align", "center"], [2, "width", "100%"], [1, "file-name"], ["type", "button", 1, "btn", "btn-primary", "btn-md", "btn-block", 3, "click"], ["hidden", "", "type", "file", "required", "", 3, "change"], ["mat-dialog-actions", "", 1, "d-flex", "justify-content-center"], [1, "p-2"], [1, "btn", "btn-secondary", "btn-md", "btn-block", 3, "click", "mat-dialog-close"], ["cdkFocusInitial", "", 1, "btn", "btn-success", "btn-md", "btn-block", 3, "mat-dialog-close", "disabled"]],
      template: function Dialog2_Template(rf, ctx) {
        if (rf & 1) {
          const _r1 = i0.ɵɵgetCurrentView();
          i0.ɵɵelementStart(0, "div", 1)(1, "div", 2)(2, "div", 3)(3, "a", 4)(4, "h3", 5);
          i0.ɵɵtext(5, "Solicitud de documentos");
          i0.ɵɵelementEnd()();
          i0.ɵɵelementStart(6, "div", 6)(7, "h3")(8, "b");
          i0.ɵɵtext(9, "Archivo:");
          i0.ɵɵelementEnd();
          i0.ɵɵtext(10);
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(11, "h4")(12, "b");
          i0.ɵɵtext(13, "Descripci\u00F3n:");
          i0.ɵɵelementEnd();
          i0.ɵɵtext(14);
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(15, "form", 7)(16, "span", 8);
          i0.ɵɵtext(17);
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(18, "button", 9);
          i0.ɵɵlistener("click", function Dialog2_Template_button_click_18_listener() {
            i0.ɵɵrestoreView(_r1);
            const fileInput_r2 = i0.ɵɵreference(21);
            return i0.ɵɵresetView(fileInput_r2.click());
          });
          i0.ɵɵtext(19, "Elegir Archivo");
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(20, "input", 10, 0);
          i0.ɵɵlistener("change", function Dialog2_Template_input_change_20_listener($event) {
            i0.ɵɵrestoreView(_r1);
            return i0.ɵɵresetView(ctx.onFileSelected($event));
          });
          i0.ɵɵelementEnd()();
          i0.ɵɵelementStart(22, "div", 11)(23, "div", 12)(24, "button", 13);
          i0.ɵɵlistener("click", function Dialog2_Template_button_click_24_listener() {
            i0.ɵɵrestoreView(_r1);
            return i0.ɵɵresetView(ctx.onNoClick());
          });
          i0.ɵɵtext(25, "Cancelar");
          i0.ɵɵelementEnd()();
          i0.ɵɵelementStart(26, "div", 12)(27, "button", 14);
          i0.ɵɵtext(28, "Aceptar");
          i0.ɵɵelementEnd()()()()()()();
        }
        if (rf & 2) {
          i0.ɵɵadvance(10);
          i0.ɵɵtextInterpolate1(" ", ctx.data.nombre_solicitud, "");
          i0.ɵɵadvance(4);
          i0.ɵɵtextInterpolate1(" ", ctx.data.descripcion, "");
          i0.ɵɵadvance(3);
          i0.ɵɵtextInterpolate(ctx.selectedFile == null ? null : ctx.selectedFile.name);
          i0.ɵɵadvance(7);
          i0.ɵɵproperty("mat-dialog-close", i0.ɵɵpureFunction1(6, _c0, ctx.selectedFile));
          i0.ɵɵadvance(3);
          i0.ɵɵproperty("mat-dialog-close", i0.ɵɵpureFunction1(8, _c1, ctx.selectedFile))("disabled", !ctx.selectedFile);
        }
      },
      dependencies: [dialog_1.MatDialogModule, i1.MatDialogClose, i1.MatDialogActions, form_field_1.MatFormFieldModule, input_1.MatInputModule, forms_1.FormsModule, i6.ɵNgNoValidate, i6.NgControlStatusGroup, i6.NgForm, button_1.MatButtonModule, select_1.MatSelectModule, common_1.CommonModule],
      encapsulation: 2
    });
  }
}
exports.Dialog2 = Dialog2;

/***/ }),

/***/ 54452:
/*!**********************************************************************************************!*\
  !*** ./src/app/componentes/subir-documento-encargado/subir-documento-encargado.component.ts ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.Dialog3 = exports.SubirDocumentoEncargadoComponent = void 0;
const dialog_1 = __webpack_require__(/*! @angular/material/dialog */ 12587);
const button_1 = __webpack_require__(/*! @angular/material/button */ 84175);
const forms_1 = __webpack_require__(/*! @angular/forms */ 34456);
const input_1 = __webpack_require__(/*! @angular/material/input */ 95541);
const form_field_1 = __webpack_require__(/*! @angular/material/form-field */ 24950);
const select_1 = __webpack_require__(/*! @angular/material/select */ 25175);
const common_1 = __webpack_require__(/*! @angular/common */ 60316);
const uuid_1 = __webpack_require__(/*! uuid */ 57379);
const i0 = __webpack_require__(/*! @angular/core */ 37580);
const i1 = __webpack_require__(/*! @angular/material/dialog */ 12587);
const i2 = __webpack_require__(/*! @angular/material/snack-bar */ 3347);
const i3 = __webpack_require__(/*! ../../servicios/archivos/archivos.service */ 79894);
const i4 = __webpack_require__(/*! @angular/router */ 95072);
const i5 = __webpack_require__(/*! src/app/servicios/documento_encargado/documentacion.service */ 39048);
const i6 = __webpack_require__(/*! @angular/forms */ 34456);
const _c0 = (a0, a1, a2) => [false, a0, a1, a2];
class SubirDocumentoEncargadoComponent {
  constructor(dialog, _snackBar, archivo_service, router, docu_service, fb) {
    this.dialog = dialog;
    this._snackBar = _snackBar;
    this.archivo_service = archivo_service;
    this.router = router;
    this.docu_service = docu_service;
    this.fb = fb;
    this.id_encargado = -1;
    this.id_carrera = -1;
  }
  readfile(file, subscriber) {
    const filereader = new FileReader();
    filereader.readAsDataURL(file);
    filereader.onload = () => {
      subscriber.next(filereader.result);
      subscriber.complete;
    };
    filereader.onerror = () => {
      subscriber.error();
      subscriber.complete();
    };
  }
  subir_archivos() {
    let formatos = ["pdf", "doc", "docx", "xls", "xlsx"];
    const dialogRef = this.dialog.open(Dialog3, {
      width: '400px',
      enterAnimationDuration: "100ms",
      exitAnimationDuration: "100ms"
    });
    dialogRef.afterClosed().subscribe(result => {
      console.log(result);
      console.log(result[0]);
      if (!result || !result[0]) {
        console.log("CANCELADO");
        return;
      }
      if (!result[1] || !result[2]) {
        this._snackBar.open("Recuerda Ingresar Título y Descripción", "Cerrar", {
          panelClass: ['red-snackbar'],
          duration: 3000
        });
        return;
      }
      let [, file, nombre, descripcion] = result;
      if (file.size > 10000000) {
        this._snackBar.open("Este Archivo es Demasiado Grande", "Cerrar", {
          panelClass: ['red-snackbar'],
          duration: 3000
        });
        return;
      }
      this.archivo_service.checkFileType(file, formatos).then(type_file => {
        if (!type_file) {
          this._snackBar.open("Archivo con formato incorrecto", "Cerrar", {
            panelClass: ['red-snackbar'],
            duration: 3000
          });
          return;
        }
        let _data = {};
        let _filename = file.name.toLowerCase();
        let file_ext = _filename.slice((_filename.lastIndexOf(".") - 1 >>> 0) + 2);
        let key = (0, uuid_1.v4)() + "." + file_ext;
        this.docu_service.nuevo_documento(file, this.id_encargado, this.id_carrera, file_ext, nombre, key, descripcion).subscribe({
          next: data => {
            _data = {
              ..._data,
              ...data
            };
          },
          complete: () => {
            let upload_string = "";
            if (_data.status == 200) {
              upload_string = "?upload_success=success";
            } else if (_data.status == 415) {
              upload_string = "?upload_success=format";
            } else {
              upload_string = "?upload_success=error";
            }
            // check if the current url already has a query string and remove it
            let newUrl = this.router.url.split("?")[0];
            newUrl += upload_string;
            window.location.href = newUrl;
          },
          error: error => {
            if (error.status == 415) {
              this._snackBar.open("Archivo con formato incorrecto", "Cerrar", {
                panelClass: ['red-snackbar'],
                duration: 3000
              });
            } else {
              this._snackBar.open("Error al subir archivo", "Cerrar", {
                panelClass: ['red-snackbar'],
                duration: 3000
              });
            }
          }
        });
      });
    });
  }
  static {
    this.ɵfac = function SubirDocumentoEncargadoComponent_Factory(__ngFactoryType__) {
      return new (__ngFactoryType__ || SubirDocumentoEncargadoComponent)(i0.ɵɵdirectiveInject(i1.MatDialog), i0.ɵɵdirectiveInject(i2.MatSnackBar), i0.ɵɵdirectiveInject(i3.ArchivosService), i0.ɵɵdirectiveInject(i4.Router), i0.ɵɵdirectiveInject(i5.DocumentacionService), i0.ɵɵdirectiveInject(i6.FormBuilder));
    };
  }
  static {
    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({
      type: SubirDocumentoEncargadoComponent,
      selectors: [["app-subir-documento-encargado"]],
      inputs: {
        id_encargado: "id_encargado",
        id_carrera: "id_carrera"
      },
      decls: 2,
      vars: 0,
      consts: [[1, "btn", "btn-primary", "btn-sm", "btn-block", 2, "width", "150px", 3, "click"]],
      template: function SubirDocumentoEncargadoComponent_Template(rf, ctx) {
        if (rf & 1) {
          i0.ɵɵelementStart(0, "button", 0);
          i0.ɵɵlistener("click", function SubirDocumentoEncargadoComponent_Template_button_click_0_listener() {
            return ctx.subir_archivos();
          });
          i0.ɵɵtext(1, " Subir\n");
          i0.ɵɵelementEnd();
        }
      },
      styles: ["/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */"]
    });
  }
}
exports.SubirDocumentoEncargadoComponent = SubirDocumentoEncargadoComponent;
class Dialog3 {
  constructor(dialogRef, data, fb) {
    this.dialogRef = dialogRef;
    this.data = data;
    this.fb = fb;
    this.selectedFile = null;
    this.Nombre = "";
    this.Descripcion = "";
    this.createForm();
  }
  createForm() {
    this.publiForm = this.fb.group({
      Nombre: ['', [forms_1.Validators.required]],
      Descripcion: ['', [forms_1.Validators.required]]
    });
  }
  onFileSelected(event) {
    this.selectedFile = event.target.files[0] ?? null;
    console.log(this.selectedFile);
  }
  onNoClick() {
    console.log("CANCELAR");
    this.dialogRef.close();
  }
  submitclick() {
    let data = this.publiForm.value;
    this.Nombre = data.Nombre;
    this.Descripcion = data.Descripcion;
    this.dialogRef.close([true, this.selectedFile, this.Nombre, this.Descripcion]);
  }
  static {
    this.ɵfac = function Dialog3_Factory(__ngFactoryType__) {
      return new (__ngFactoryType__ || Dialog3)(i0.ɵɵdirectiveInject(i1.MatDialogRef), i0.ɵɵdirectiveInject(dialog_1.MAT_DIALOG_DATA), i0.ɵɵdirectiveInject(i6.FormBuilder));
    };
  }
  static {
    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({
      type: Dialog3,
      selectors: [["app-dialog3"]],
      standalone: true,
      features: [i0.ɵɵStandaloneFeature],
      decls: 25,
      vars: 7,
      consts: [["fileInput", ""], [1, "row", "m-0", "p-0", 2, "max-width", "100%"], [1, "col-xl-12", "p-0"], [1, "card"], [1, "card-header"], [1, "m-0", "font-weight-bold", "text-primary", 2, "text-align", "center"], [1, "card-body", "text-gray-800", 2, "text-align", "center"], [1, "user", 2, "width", "100%", 3, "formGroup"], [1, "file-name"], ["type", "button", 1, "btn", "btn-primary", "btn-md", "btn-block", 3, "click"], ["hidden", "", "type", "file", "required", "", 3, "change"], ["type", "text", "id", "Nombre", "name", "Nombre", "formControlName", "Nombre", "placeholder", "Nombre", 1, "form-control", "form-control-user"], ["type", "textfield", "id", "Descripcion", "name", "Descripcion", "formControlName", "Descripcion", "placeholder", "Descripci\u00F3n", 1, "form-control", "form-control-user"], ["mat-dialog-actions", "", 1, "d-flex", "justify-content-center"], [1, "p-2"], [1, "btn", "btn-secondary", "btn-md", "btn-block", 3, "click", "mat-dialog-close"], ["type", "submit", 1, "btn", "btn-success", "btn-md", "btn-block", 3, "click"]],
      template: function Dialog3_Template(rf, ctx) {
        if (rf & 1) {
          const _r1 = i0.ɵɵgetCurrentView();
          i0.ɵɵelementStart(0, "div", 1)(1, "div", 2)(2, "div", 3)(3, "a", 4)(4, "h3", 5);
          i0.ɵɵtext(5, "Solicitud de documentos");
          i0.ɵɵelementEnd()();
          i0.ɵɵelementStart(6, "div", 6)(7, "form", 7)(8, "span", 8);
          i0.ɵɵtext(9);
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(10, "button", 9);
          i0.ɵɵlistener("click", function Dialog3_Template_button_click_10_listener() {
            i0.ɵɵrestoreView(_r1);
            const fileInput_r2 = i0.ɵɵreference(14);
            return i0.ɵɵresetView(fileInput_r2.click());
          });
          i0.ɵɵtext(11, "Elegir Archivo");
          i0.ɵɵelementEnd();
          i0.ɵɵelement(12, "br");
          i0.ɵɵelementStart(13, "input", 10, 0);
          i0.ɵɵlistener("change", function Dialog3_Template_input_change_13_listener($event) {
            i0.ɵɵrestoreView(_r1);
            return i0.ɵɵresetView(ctx.onFileSelected($event));
          });
          i0.ɵɵelementEnd();
          i0.ɵɵelement(15, "input", 11)(16, "br")(17, "input", 12);
          i0.ɵɵelementStart(18, "div", 13)(19, "div", 14)(20, "button", 15);
          i0.ɵɵlistener("click", function Dialog3_Template_button_click_20_listener() {
            i0.ɵɵrestoreView(_r1);
            return i0.ɵɵresetView(ctx.onNoClick());
          });
          i0.ɵɵtext(21, "Cancelar");
          i0.ɵɵelementEnd()();
          i0.ɵɵelementStart(22, "div", 14)(23, "button", 16);
          i0.ɵɵlistener("click", function Dialog3_Template_button_click_23_listener() {
            i0.ɵɵrestoreView(_r1);
            return i0.ɵɵresetView(ctx.submitclick());
          });
          i0.ɵɵtext(24, "Aceptar");
          i0.ɵɵelementEnd()()()()()()()();
        }
        if (rf & 2) {
          i0.ɵɵadvance(7);
          i0.ɵɵproperty("formGroup", ctx.publiForm);
          i0.ɵɵadvance(2);
          i0.ɵɵtextInterpolate(ctx.selectedFile == null ? null : ctx.selectedFile.name);
          i0.ɵɵadvance(11);
          i0.ɵɵproperty("mat-dialog-close", i0.ɵɵpureFunction3(3, _c0, ctx.selectedFile, ctx.Nombre, ctx.Descripcion));
        }
      },
      dependencies: [dialog_1.MatDialogModule, i1.MatDialogClose, i1.MatDialogActions, form_field_1.MatFormFieldModule, input_1.MatInputModule, forms_1.FormsModule, i6.ɵNgNoValidate, i6.DefaultValueAccessor, i6.NgControlStatus, i6.NgControlStatusGroup, button_1.MatButtonModule, select_1.MatSelectModule, common_1.CommonModule, forms_1.ReactiveFormsModule, i6.FormGroupDirective, i6.FormControlName],
      encapsulation: 2
    });
  }
}
exports.Dialog3 = Dialog3;

/***/ }),

/***/ 9604:
/*!******************************************************************************************************!*\
  !*** ./src/app/componentes/subir-plantilla-informe-final/subir-plantilla-informe-final.component.ts ***!
  \******************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.Dialog3 = exports.SubirPlantillaInformeFinalComponent = void 0;
const core_1 = __webpack_require__(/*! @angular/core */ 37580);
const dialog_1 = __webpack_require__(/*! @angular/material/dialog */ 12587);
const button_1 = __webpack_require__(/*! @angular/material/button */ 84175);
const forms_1 = __webpack_require__(/*! @angular/forms */ 34456);
const input_1 = __webpack_require__(/*! @angular/material/input */ 95541);
const form_field_1 = __webpack_require__(/*! @angular/material/form-field */ 24950);
const select_1 = __webpack_require__(/*! @angular/material/select */ 25175);
const common_1 = __webpack_require__(/*! @angular/common */ 60316);
const uuid_1 = __webpack_require__(/*! uuid */ 57379);
const i0 = __webpack_require__(/*! @angular/core */ 37580);
const i1 = __webpack_require__(/*! @angular/material/dialog */ 12587);
const i2 = __webpack_require__(/*! @angular/material/snack-bar */ 3347);
const i3 = __webpack_require__(/*! ../../servicios/archivos/archivos.service */ 79894);
const i4 = __webpack_require__(/*! @angular/router */ 95072);
const i5 = __webpack_require__(/*! @angular/common */ 60316);
const i6 = __webpack_require__(/*! @angular/forms */ 34456);
function SubirPlantillaInformeFinalComponent_div_0_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div");
    i0.ɵɵtext(1);
    i0.ɵɵelementEnd();
  }
  if (rf & 2) {
    const ctx_r0 = i0.ɵɵnextContext();
    i0.ɵɵadvance();
    i0.ɵɵtextInterpolate1(" Archivo a subir: ", ctx_r0.nombre_archivo, "\n");
  }
}
const _c0 = a0 => [false, a0];
const _c1 = a0 => [true, a0];
class SubirPlantillaInformeFinalComponent {
  constructor(dialog, _snackBar, archivo_service, router) {
    this.dialog = dialog;
    this._snackBar = _snackBar;
    this.archivo_service = archivo_service;
    this.router = router;
    this.key_event = new core_1.EventEmitter();
    this.file_plantilla_event = new core_1.EventEmitter();
    this.nombre_archivo = "";
  }
  readfile(file, subscriber) {
    const filereader = new FileReader();
    filereader.readAsDataURL(file);
    filereader.onload = () => {
      subscriber.next(filereader.result);
      subscriber.complete;
    };
    filereader.onerror = () => {
      subscriber.error();
      subscriber.complete();
    };
  }
  subir_archivos() {
    let formatos = ["pdf", "doc", "docx"];
    const dialogRef = this.dialog.open(Dialog3, {
      width: '400px',
      enterAnimationDuration: "100ms",
      exitAnimationDuration: "100ms"
    });
    dialogRef.afterClosed().subscribe(result => {
      if (!result || !result[0]) {
        return;
      }
      let [, file] = result;
      if (file.size > 10000000) {
        this._snackBar.open("Este Archivo es Demasiado Grande", "Cerrar", {
          panelClass: ['red-snackbar'],
          duration: 3000
        });
        return;
      }
      this.archivo_service.checkFileType(file, formatos).then(type_file => {
        if (!type_file) {
          this._snackBar.open("Archivo con formato incorrecto", "Cerrar", {
            panelClass: ['red-snackbar'],
            duration: 3000
          });
          return;
        }
        let _filename = file.name.toLowerCase();
        this.nombre_archivo = _filename;
        let file_ext = _filename.slice((_filename.lastIndexOf(".") - 1 >>> 0) + 2);
        // wait for 1 second and then emit event
        this.key_event.emit((0, uuid_1.v4)() + "." + file_ext);
        this.file_plantilla_event.emit(file);
      });
    });
  }
  static {
    this.ɵfac = function SubirPlantillaInformeFinalComponent_Factory(__ngFactoryType__) {
      return new (__ngFactoryType__ || SubirPlantillaInformeFinalComponent)(i0.ɵɵdirectiveInject(i1.MatDialog), i0.ɵɵdirectiveInject(i2.MatSnackBar), i0.ɵɵdirectiveInject(i3.ArchivosService), i0.ɵɵdirectiveInject(i4.Router));
    };
  }
  static {
    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({
      type: SubirPlantillaInformeFinalComponent,
      selectors: [["app-subir-plantilla-informe-final"]],
      outputs: {
        key_event: "key_event",
        file_plantilla_event: "file_plantilla_event"
      },
      decls: 3,
      vars: 1,
      consts: [[4, "ngIf"], ["type", "button", 1, "btn", "btn-primary", "btn-md", 3, "click"]],
      template: function SubirPlantillaInformeFinalComponent_Template(rf, ctx) {
        if (rf & 1) {
          i0.ɵɵtemplate(0, SubirPlantillaInformeFinalComponent_div_0_Template, 2, 1, "div", 0);
          i0.ɵɵelementStart(1, "button", 1);
          i0.ɵɵlistener("click", function SubirPlantillaInformeFinalComponent_Template_button_click_1_listener() {
            return ctx.subir_archivos();
          });
          i0.ɵɵtext(2, " Subir\n");
          i0.ɵɵelementEnd();
        }
        if (rf & 2) {
          i0.ɵɵproperty("ngIf", ctx.nombre_archivo != "");
        }
      },
      dependencies: [i5.NgIf],
      styles: ["/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */"]
    });
  }
}
exports.SubirPlantillaInformeFinalComponent = SubirPlantillaInformeFinalComponent;
class Dialog3 {
  constructor(dialogRef, data) {
    this.dialogRef = dialogRef;
    this.data = data;
    this.selectedFile = null;
  }
  onFileSelected(event) {
    this.selectedFile = event.target.files[0] ?? null;
    console.log(this.selectedFile);
  }
  onNoClick() {
    this.dialogRef.close();
  }
  static {
    this.ɵfac = function Dialog3_Factory(__ngFactoryType__) {
      return new (__ngFactoryType__ || Dialog3)(i0.ɵɵdirectiveInject(i1.MatDialogRef), i0.ɵɵdirectiveInject(dialog_1.MAT_DIALOG_DATA));
    };
  }
  static {
    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({
      type: Dialog3,
      selectors: [["app-dialogPlantilla"]],
      standalone: true,
      features: [i0.ɵɵStandaloneFeature],
      decls: 22,
      vars: 8,
      consts: [["fileInput", ""], [1, "row", "m-0", "p-0", 2, "max-width", "100%"], [1, "col-xl-12", "p-0"], [1, "card"], [1, "card-header"], [1, "m-0", "font-weight-bold", "text-primary", 2, "text-align", "center"], [1, "card-body", "text-gray-800", 2, "text-align", "center"], [2, "width", "100%"], [1, "file-name", "mb-1"], ["type", "button", 1, "btn", "btn-primary", "btn-md", 3, "click"], ["hidden", "", "type", "file", "required", "", 3, "change"], ["mat-dialog-actions", "", 1, "d-flex", "justify-content-center"], [1, "p-2"], [1, "btn", "btn-secondary", "btn-md", 3, "click", "mat-dialog-close"], ["cdkFocusInitial", "", 1, "btn", "btn-success", "btn-md", 3, "mat-dialog-close", "disabled"]],
      template: function Dialog3_Template(rf, ctx) {
        if (rf & 1) {
          const _r1 = i0.ɵɵgetCurrentView();
          i0.ɵɵelementStart(0, "div", 1)(1, "div", 2)(2, "div", 3)(3, "a", 4)(4, "h3", 5);
          i0.ɵɵtext(5, "Plantilla para Informe Final");
          i0.ɵɵelementEnd()();
          i0.ɵɵelementStart(6, "div", 6)(7, "form", 7)(8, "span", 8);
          i0.ɵɵtext(9);
          i0.ɵɵelementEnd();
          i0.ɵɵelement(10, "br");
          i0.ɵɵelementStart(11, "button", 9);
          i0.ɵɵlistener("click", function Dialog3_Template_button_click_11_listener() {
            i0.ɵɵrestoreView(_r1);
            const fileInput_r2 = i0.ɵɵreference(14);
            return i0.ɵɵresetView(fileInput_r2.click());
          });
          i0.ɵɵtext(12, "Elegir Archivo");
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(13, "input", 10, 0);
          i0.ɵɵlistener("change", function Dialog3_Template_input_change_13_listener($event) {
            i0.ɵɵrestoreView(_r1);
            return i0.ɵɵresetView(ctx.onFileSelected($event));
          });
          i0.ɵɵelementEnd()();
          i0.ɵɵelementStart(15, "div", 11)(16, "div", 12)(17, "button", 13);
          i0.ɵɵlistener("click", function Dialog3_Template_button_click_17_listener() {
            i0.ɵɵrestoreView(_r1);
            return i0.ɵɵresetView(ctx.onNoClick());
          });
          i0.ɵɵtext(18, "Cancelar");
          i0.ɵɵelementEnd()();
          i0.ɵɵelementStart(19, "div", 12)(20, "button", 14);
          i0.ɵɵtext(21, "Aceptar");
          i0.ɵɵelementEnd()()()()()()();
        }
        if (rf & 2) {
          i0.ɵɵadvance(9);
          i0.ɵɵtextInterpolate(ctx.selectedFile == null ? null : ctx.selectedFile.name);
          i0.ɵɵadvance(8);
          i0.ɵɵproperty("mat-dialog-close", i0.ɵɵpureFunction1(4, _c0, ctx.selectedFile));
          i0.ɵɵadvance(3);
          i0.ɵɵproperty("mat-dialog-close", i0.ɵɵpureFunction1(6, _c1, ctx.selectedFile))("disabled", !ctx.selectedFile);
        }
      },
      dependencies: [dialog_1.MatDialogModule, i1.MatDialogClose, i1.MatDialogActions, form_field_1.MatFormFieldModule, input_1.MatInputModule, forms_1.FormsModule, i6.ɵNgNoValidate, i6.NgControlStatusGroup, i6.NgForm, button_1.MatButtonModule, select_1.MatSelectModule, common_1.CommonModule],
      encapsulation: 2
    });
  }
}
exports.Dialog3 = Dialog3;

/***/ }),

/***/ 45090:
/*!********************************************************!*\
  !*** ./src/app/interceptores/auth/auth.interceptor.ts ***!
  \********************************************************/
/***/ ((__unused_webpack_module, exports) => {



Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.authInterceptor = void 0;
const authInterceptor = (req, next) => {
  // const router = new Router();
  // const token = JSON.parse(localStorage.getItem("auth-user") ?? "{}").token;
  // const urls_no_auth: string[] = ["/", `/${environment.ruta_login}`, `/${environment.ruta_registro}`, `/${environment.ruta_reset_pass}`];
  // if (!urls_no_auth.includes(router.url)) {
  //   if (!token) {
  //     router.navigateByUrl(`/`);
  //   }
  // }
  // const authReq = req.clone({
  //   setHeaders: {
  //     Authorization: `${token}`
  //   }
  // });
  // return next(authReq);
  return next(req);
};
exports.authInterceptor = authInterceptor;

/***/ }),

/***/ 32126:
/*!**************************************************!*\
  !*** ./src/app/servicios/admin/admin.service.ts ***!
  \**************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.AdminService = void 0;
const http_1 = __webpack_require__(/*! @angular/common/http */ 46443);
const environment_1 = __webpack_require__(/*! ../../../environments/environment */ 45312);
const i0 = __webpack_require__(/*! @angular/core */ 37580);
const i1 = __webpack_require__(/*! @angular/common/http */ 46443);
class AdminService {
  constructor(http) {
    this.http = http;
    this.url = environment_1.environment.url_back;
  }
  crearCarrera(lista) {
    const req = new http_1.HttpRequest('POST', `${this.url}/carrera/crear-carrera`, {
      lista
    });
    return this.http.request(req);
  }
  crearEncargado(email) {
    const req = new http_1.HttpRequest('POST', `${this.url}/encargado/crear-encargado`, {
      email
    });
    return this.http.request(req);
  }
  getCarrera() {
    const req = new http_1.HttpRequest('GET', `${this.url}/carrera/todos`);
    return this.http.request(req);
  }
  getEncargado() {
    const req = new http_1.HttpRequest('GET', `${this.url}/encargado/todos`);
    return this.http.request(req);
  }
  asignarEncargado(id_encargado, id_carrera) {
    const req = new http_1.HttpRequest('POST', `${this.url}/admin/asignar-encargado`, {
      id_encargado,
      id_carrera
    });
    return this.http.request(req);
  }
  eliminarEncargado(id) {
    const req = new http_1.HttpRequest('POST', `${this.url}/admin/eliminar-encargado`, {
      id
    });
    return this.http.request(req);
  }
  getEncargadoCarrera(id) {
    const req = new http_1.HttpRequest('GET', `${this.url}/admin/todos-encargados-carreras?id=${id}`);
    return this.http.request(req);
  }
  editarCarrera(id_carrera, nombre, correos_admitidos) {
    const req = new http_1.HttpRequest('POST', `${this.url}/admin/editar-carrera`, {
      id_carrera,
      nombre,
      correos_admitidos
    });
    return this.http.request(req);
  }
  eliminarCarrera(id) {
    const req = new http_1.HttpRequest('POST', `${this.url}/admin/eliminar-carrera`, {
      id
    });
    return this.http.request(req);
  }
  static {
    this.ɵfac = function AdminService_Factory(__ngFactoryType__) {
      return new (__ngFactoryType__ || AdminService)(i0.ɵɵinject(i1.HttpClient));
    };
  }
  static {
    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({
      token: AdminService,
      factory: AdminService.ɵfac,
      providedIn: 'root'
    });
  }
}
exports.AdminService = AdminService;

/***/ }),

/***/ 6632:
/*!****************************************************************!*\
  !*** ./src/app/servicios/alumno/gestionar_practica.service.ts ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.GestionarService = void 0;
const http_1 = __webpack_require__(/*! @angular/common/http */ 46443);
const environment_1 = __webpack_require__(/*! ../../../environments/environment */ 45312);
const i0 = __webpack_require__(/*! @angular/core */ 37580);
const i1 = __webpack_require__(/*! @angular/common/http */ 46443);
class GestionarService {
  constructor(http) {
    this.http = http;
  }
  registrar_empresa(nombre_empresa, rut_empresa) {
    const nueva_empresa = {
      nombre_empresa: nombre_empresa,
      rut_empresa: rut_empresa,
      empresa_verificada: false,
      dominios_empresa: ""
    };
    const req = new http_1.HttpRequest('POST', `${environment_1.environment.url_back}/empresa/crear`, nueva_empresa, {
      responseType: 'json'
    });
    return this.http.request(req);
  }
  get_empresa_por_rut(rut) {
    const req = new http_1.HttpRequest('GET', `${environment_1.environment.url_back}/empresa/por_rut?rut=${rut}`, {
      responseType: 'json'
    });
    return this.http.request(req);
  }
  registrar_supervisor(nombre_supervisor, correo_supervisor) {
    const nuevo_supervisor = {
      id_usuario: null,
      nombre: nombre_supervisor,
      correo: correo_supervisor,
      carnet_rostro: false,
      es_correo_institucional: false
    };
    const req = new http_1.HttpRequest('POST', `${environment_1.environment.url_back}/supervisor/crear`, nuevo_supervisor, {
      responseType: 'json'
    });
    return this.http.request(req);
  }
  registrar_practica(id_estudiante, id_modalidad, fecha_inicio, id_empresa, id_supervisor, id_encargado, id_config_practica) {
    const nueva_practica = {
      estado: environment_1.environment.estado_practica.esperando_confirmacion,
      id_estudiante: id_estudiante,
      id_modalidad: id_modalidad,
      fecha_inicio: fecha_inicio,
      horas: 0,
      id_empresa: id_empresa,
      id_supervisor: id_supervisor,
      id_encargado: id_encargado,
      id_config_practica
    };
    const req = new http_1.HttpRequest('POST', `${environment_1.environment.url_back}/practica/crear_verifica_supervisor`, nueva_practica, {
      responseType: 'text'
    });
    return this.http.request(req);
  }
  finalizar_practica(id_estudiante, id_practica, estado, correo, nom_estudiante) {
    const req = new http_1.HttpRequest('PUT', `${environment_1.environment.url_back}/practica/finalizar`, {
      id_estudiante,
      id_practica,
      estado,
      correo,
      nom_estudiante
    }, {
      responseType: 'json'
    });
    return this.http.request(req);
  }
  buscar_config_practica(nombre, id_carrera) {
    console.log("Buscando configuracion de practica con nombre: ", nombre);
    const req = new http_1.HttpRequest('GET', `${environment_1.environment.url_back}/config_practica/nombre?nombre=${nombre}&id_carrera=${id_carrera}`, {
      responseType: 'json'
    });
    return this.http.request(req);
  }
  //buscar modalidad en base a id_config_practica, tipo_modalidad y cantidad_tiempo
  buscar_modalidad(id_config_practica, tipo_modalidad, cantidad_tiempo) {
    const req = new http_1.HttpRequest('GET', `${environment_1.environment.url_back}/modalidad/buscar?id_config_practica=${id_config_practica}&tipo_modalidad=${tipo_modalidad}&cantidad_tiempo=${cantidad_tiempo}`, {
      responseType: 'json'
    });
    return this.http.request(req);
  }
  buscar_encargados() {
    const req = new http_1.HttpRequest('GET', `${environment_1.environment.url_back}/encargado/todos`, {
      responseType: 'json'
    });
    return this.http.request(req);
  }
  subir_informe(id_informe, key, file_informe) {
    const formData = new FormData();
    formData.append('id', id_informe.toString());
    formData.append('key', JSON.stringify(key));
    formData.append('file_informe', file_informe);
    const req = new http_1.HttpRequest('PUT', `${environment_1.environment.url_back}/informe/subirInforme`, formData, {
      responseType: "json"
    });
    return this.http.request(req);
  }
  eliminar_informe_final(id_informe) {
    let key = {};
    const req = new http_1.HttpRequest('PUT', `${environment_1.environment.url_back}/informe/actualizar`, {
      id: id_informe,
      key,
      responseType: 'json'
    });
    return this.http.request(req);
  }
  static {
    this.ɵfac = function GestionarService_Factory(__ngFactoryType__) {
      return new (__ngFactoryType__ || GestionarService)(i0.ɵɵinject(i1.HttpClient));
    };
  }
  static {
    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({
      token: GestionarService,
      factory: GestionarService.ɵfac,
      providedIn: 'root'
    });
  }
}
exports.GestionarService = GestionarService;

/***/ }),

/***/ 27095:
/*!***********************************************************!*\
  !*** ./src/app/servicios/alumno/obtener_datos.service.ts ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.ObtenerDatosService = void 0;
const http_1 = __webpack_require__(/*! @angular/common/http */ 46443);
const environment_1 = __webpack_require__(/*! ../../../environments/environment */ 45312);
const i0 = __webpack_require__(/*! @angular/core */ 37580);
const i1 = __webpack_require__(/*! @angular/common/http */ 46443);
class ObtenerDatosService {
  constructor(_http) {
    this._http = _http;
  }
  obtener_estudiante(id_usuario) {
    const req = new http_1.HttpRequest('GET', `${environment_1.environment.url_back}/estudiante/usuario?id_usuario=${id_usuario}`);
    return this._http.request(req);
  }
  obtener_practica(id_estudiante) {
    const req = new http_1.HttpRequest('GET', `${environment_1.environment.url_back}/practica/get_asEstudiante?id_estudiante=${id_estudiante}`);
    return this._http.request(req);
  }
  obtener_practica_id(id_practica) {
    const req = new http_1.HttpRequest('GET', `${environment_1.environment.url_back}/practica?id=${id_practica}`);
    return this._http.request(req);
  }
  obtener_practica_encargado(id_encargado) {
    const req = new http_1.HttpRequest('GET', `${environment_1.environment.url_back}/practica/get_asEncargado?id_encargado=${id_encargado}`);
    return this._http.request(req);
  }
  obtener_config_practica(nombre, id_carrera) {
    const req = new http_1.HttpRequest('GET', `${environment_1.environment.url_back}/config_practica/nombre?nombre=${nombre}&id_carrera=${id_carrera}`);
    return this._http.request(req);
  }
  obtener_todos_config_practica() {
    const req = new http_1.HttpRequest('GET', `${environment_1.environment.url_back}/config_practica/todos`);
    return this._http.request(req);
  }
  ingresar_informe(id_practica, key, id_config_informe, horas_trabajadas, id_encargado) {
    const req = new http_1.HttpRequest('POST', `${environment_1.environment.url_back}/informe/crear`, {
      id_practica,
      key,
      id_config_informe,
      horas_trabajadas,
      id_encargado
    }, {
      responseType: 'text'
    });
    return this._http.request(req);
  }
  obtener_informes(id_practica) {
    const req = new http_1.HttpRequest('GET', `${environment_1.environment.url_back}/informe/todos_practica?id_practica=${id_practica}`);
    return this._http.request(req);
  }
  obtener_solicitudes_documentos_practica(id_config_practica, id_practica) {
    const req = new http_1.HttpRequest('GET', `${environment_1.environment.url_back}/solicitud_documento/todos_docs_practica?id=${id_config_practica}&id_practica=${id_practica}`);
    return this._http.request(req);
  }
  obtener_informe_preguntas(id_informe) {
    const req = new http_1.HttpRequest('GET', `${environment_1.environment.url_back}/informe/preguntas?id=${id_informe}`);
    return this._http.request(req);
  }
  obtener_comentarios_supervisor(id_practica) {
    const req = new http_1.HttpRequest('POST', `${environment_1.environment.url_back}/estudiante/get-comentarios`, {
      id_practica
    });
    return this._http.request(req);
  }
  static {
    this.ɵfac = function ObtenerDatosService_Factory(__ngFactoryType__) {
      return new (__ngFactoryType__ || ObtenerDatosService)(i0.ɵɵinject(i1.HttpClient));
    };
  }
  static {
    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({
      token: ObtenerDatosService,
      factory: ObtenerDatosService.ɵfac,
      providedIn: 'root'
    });
  }
}
exports.ObtenerDatosService = ObtenerDatosService;

/***/ }),

/***/ 44275:
/*!**********************************************************************!*\
  !*** ./src/app/servicios/alumno/preguntas-encuesta-final.service.ts ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.PreguntasEncuestaFinalService = void 0;
const http_1 = __webpack_require__(/*! @angular/common/http */ 46443);
const environment_1 = __webpack_require__(/*! ../../../environments/environment */ 45312);
const i0 = __webpack_require__(/*! @angular/core */ 37580);
const i1 = __webpack_require__(/*! @angular/common/http */ 46443);
class PreguntasEncuestaFinalService {
  constructor(_http) {
    this._http = _http;
  }
  obtener_preguntas(id_config_practica) {
    const req = new http_1.HttpRequest('GET', `${environment_1.environment.url_back}/pregunta_encuesta_final/id_config_practica?id_config_practica=${id_config_practica}`);
    return this._http.request(req);
  }
  agregar_respuesta(id_pregunta_encuesta_final, respuesta) {
    const req = new http_1.HttpRequest('POST', `${environment_1.environment.url_back}/respuesta_encuesta_final/crear`, {
      id_pregunta_encuesta_final: id_pregunta_encuesta_final,
      respuesta: respuesta
    });
    return this._http.request(req);
  }
  agregar_calificacion_empresa(id_practica, calificacion_empresa) {
    const req = new http_1.HttpRequest('PUT', `${environment_1.environment.url_back}/practica/actualizar`, {
      id: id_practica,
      calificacion_empresa: calificacion_empresa
    });
    return this._http.request(req);
  }
  agregar_comentario_empresa(id_practica, comentario_empresa) {
    const req = new http_1.HttpRequest('PUT', `${environment_1.environment.url_back}/practica/actualizar`, {
      id: id_practica,
      comentario_empresa: comentario_empresa
    });
    return this._http.request(req);
  }
  agregar_sueldo_practica(id_practica, remuneracion_practica) {
    const req = new http_1.HttpRequest('PUT', `${environment_1.environment.url_back}/practica/actualizar`, {
      id: id_practica,
      sueldo: remuneracion_practica
    });
    return this._http.request(req);
  }
  static {
    this.ɵfac = function PreguntasEncuestaFinalService_Factory(__ngFactoryType__) {
      return new (__ngFactoryType__ || PreguntasEncuestaFinalService)(i0.ɵɵinject(i1.HttpClient));
    };
  }
  static {
    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({
      token: PreguntasEncuestaFinalService,
      factory: PreguntasEncuestaFinalService.ɵfac,
      providedIn: 'root'
    });
  }
}
exports.PreguntasEncuestaFinalService = PreguntasEncuestaFinalService;

/***/ }),

/***/ 79894:
/*!********************************************************!*\
  !*** ./src/app/servicios/archivos/archivos.service.ts ***!
  \********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



var _asyncToGenerator = (__webpack_require__(/*! ./node_modules/@babel/runtime/helpers/asyncToGenerator.js */ 95386)["default"]);
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.ArchivosService = void 0;
const http_1 = __webpack_require__(/*! @angular/common/http */ 46443);
const magic_bytes_js_1 = __webpack_require__(/*! magic-bytes.js */ 57812);
const environment_1 = __webpack_require__(/*! ../../../environments/environment */ 45312);
const i0 = __webpack_require__(/*! @angular/core */ 37580);
const i1 = __webpack_require__(/*! @angular/common/http */ 46443);
class ArchivosService {
  constructor(_http) {
    this._http = _http;
  }
  uploadFile(file, id_estudiante) {
    const formData = new FormData();
    formData.append('file', file);
    formData.append('id_estudiante', `${id_estudiante}`);
    const req = new http_1.HttpRequest('POST', `${environment_1.environment.url_back}/documento/upload`, formData, {
      reportProgress: true,
      responseType: 'json'
    });
    return this._http.request(req);
  }
  hayInterseccion(a, b) {
    for (let i = 0; i < a.length; i++) {
      if (b.includes(a[i])) return true;
    }
    return false;
  }
  checkFileType(file, type, slicing = 100) {
    var _this = this;
    return _asyncToGenerator(function* () {
      if (typeof type == "string") {
        type = type.split(",");
      }
      if (!file || !type || type.length == 0) return false;
      let _filename = file.name.toLowerCase();
      // obtiene la extensión teniendo en cuenta que el nombre del archivo puede no tener puntos o partir con puntos
      let file_ext = _filename.slice((_filename.lastIndexOf(".") - 1 >>> 0) + 2);
      let _types = type.map(t => t.toLowerCase());
      if (!_types.includes(file_ext)) return false;
      let blob = file.slice(0, slicing);
      let data = new Uint8Array(yield blob.arrayBuffer());
      return _this.hayInterseccion((0, magic_bytes_js_1.filetypename)(data), _types);
    })();
  }
  subirDocExtra(file, id_documento_extra) {
    const formData = new FormData();
    formData.append('file', file);
    formData.append('id_documento_extra', `${id_documento_extra}`);
    const req = new http_1.HttpRequest('PUT', `${environment_1.environment.url_back}/${environment_1.environment.ruta_documento_extra}/agregar_documento`, formData, {
      reportProgress: true,
      responseType: 'text'
    });
    return this._http.request(req);
  }
  subirDocumento(file, id_solicitud, id_practica) {
    const formData = new FormData();
    formData.append('file', file);
    formData.append('id_solicitud', `${id_solicitud}`);
    formData.append('id_practica', `${id_practica}`);
    console.log("RUTA PARA SUBIR ARCHIVO", `${environment_1.environment.url_back}/${environment_1.environment.ruta_documento}/upload`);
    const req = new http_1.HttpRequest('POST', `${environment_1.environment.url_back}/${environment_1.environment.ruta_documento}/upload`, formData, {
      reportProgress: true,
      responseType: 'text'
    });
    return this._http.request(req);
  }
  static {
    this.ɵfac = function ArchivosService_Factory(__ngFactoryType__) {
      return new (__ngFactoryType__ || ArchivosService)(i0.ɵɵinject(i1.HttpClient));
    };
  }
  static {
    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({
      token: ArchivosService,
      factory: ArchivosService.ɵfac,
      providedIn: 'root'
    });
  }
}
exports.ArchivosService = ArchivosService;

/***/ }),

/***/ 37890:
/*!******************************************************!*\
  !*** ./src/app/servicios/carrera/carrera.service.ts ***!
  \******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.CarreraService = void 0;
const http_1 = __webpack_require__(/*! @angular/common/http */ 46443);
const environment_1 = __webpack_require__(/*! ../../../environments/environment */ 45312);
const i0 = __webpack_require__(/*! @angular/core */ 37580);
const i1 = __webpack_require__(/*! @angular/common/http */ 46443);
class CarreraService {
  constructor(_http) {
    this._http = _http;
  }
  obtener_carrera(id) {
    const req = new http_1.HttpRequest('GET', `${environment_1.environment.url_back}/carrera?id=${id}`);
    return this._http.request(req);
  }
  obtener_carreras() {
    const req = new http_1.HttpRequest('GET', `${environment_1.environment.url_back}/carrera/todos`);
    return this._http.request(req);
  }
  static {
    this.ɵfac = function CarreraService_Factory(__ngFactoryType__) {
      return new (__ngFactoryType__ || CarreraService)(i0.ɵɵinject(i1.HttpClient));
    };
  }
  static {
    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({
      token: CarreraService,
      factory: CarreraService.ɵfac,
      providedIn: 'root'
    });
  }
}
exports.CarreraService = CarreraService;

/***/ }),

/***/ 94160:
/*!****************************************************************!*\
  !*** ./src/app/servicios/data_usuario/data-usuario.service.ts ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.DataUsuarioService = void 0;
const http_1 = __webpack_require__(/*! @angular/common/http */ 46443);
const environment_1 = __webpack_require__(/*! ../../../environments/environment */ 45312);
const i0 = __webpack_require__(/*! @angular/core */ 37580);
const i1 = __webpack_require__(/*! @angular/common/http */ 46443);
class DataUsuarioService {
  constructor(_http) {
    this._http = _http;
  }
  obtener_estudiante(id_usuario) {
    const req = new http_1.HttpRequest('GET', `${environment_1.environment.url_back}/estudiante/usuario?id_usuario=${id_usuario}`);
    return this._http.request(req);
  }
  obtener_encargado(id_usuario) {
    const req = new http_1.HttpRequest('GET', `${environment_1.environment.url_back}/encargado/usuario?id_usuario=${id_usuario}`);
    return this._http.request(req);
  }
  obtener_usuario(id_usuario) {
    const req = new http_1.HttpRequest('GET', `${environment_1.environment.url_back}/usuario?id=${id_usuario}`);
    return this._http.request(req);
  }
  obtener_estudiantes_practicas(id_encargado) {
    const req = new http_1.HttpRequest('GET', `${environment_1.environment.url_back}/encargado/estudiantes?id_encargado=${id_encargado}`);
    return this._http.request(req);
  }
  obtener_encargados_practicas(id_estudiante) {
    const req = new http_1.HttpRequest('GET', `${environment_1.environment.url_back}/estudiante/encargados?id_estudiante=${id_estudiante}`);
    return this._http.request(req);
  }
  obtener_notificaciones(id_usuario, config) {
    const req = new http_1.HttpRequest('GET', `${environment_1.environment.url_back}/notificacion/todos?id_usuario=${id_usuario}`, {
      id_usuario,
      config
    });
    return this._http.request(req);
  }
  obtener_todas_notificaciones(id) {
    const req = new http_1.HttpRequest('GET', `${environment_1.environment.url_back}/notificacion/todas_hasta_vistas?id_usuario=${id}`, {
      id
    });
    return this._http.request(req);
  }
  cambiar_correo_linkedin(id, link) {
    const req = new http_1.HttpRequest('PUT', `${environment_1.environment.url_back}/estudiante/linkedin`, {
      id,
      link
    }, {
      responseType: "text"
    });
    return this._http.request(req);
  }
  cambiar_carrera(id, id_carrera) {
    const req = new http_1.HttpRequest('PUT', `${environment_1.environment.url_back}/estudiante/carrera`, {
      id,
      id_carrera
    }, {
      responseType: "text"
    });
    return this._http.request(req);
  }
  static {
    this.ɵfac = function DataUsuarioService_Factory(__ngFactoryType__) {
      return new (__ngFactoryType__ || DataUsuarioService)(i0.ɵɵinject(i1.HttpClient));
    };
  }
  static {
    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({
      token: DataUsuarioService,
      factory: DataUsuarioService.ɵfac,
      providedIn: 'root'
    });
  }
}
exports.DataUsuarioService = DataUsuarioService;

/***/ }),

/***/ 39048:
/*!************************************************************************!*\
  !*** ./src/app/servicios/documento_encargado/documentacion.service.ts ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.DocumentacionService = void 0;
const http_1 = __webpack_require__(/*! @angular/common/http */ 46443);
const environment_1 = __webpack_require__(/*! ../../../environments/environment */ 45312);
const i0 = __webpack_require__(/*! @angular/core */ 37580);
const i1 = __webpack_require__(/*! @angular/common/http */ 46443);
class DocumentacionService {
  constructor(_http) {
    this._http = _http;
  }
  obtener_todas(id_carrera) {
    const req = new http_1.HttpRequest('GET', `${environment_1.environment.url_back}/documento_encargado/todas?id_carrera=${id_carrera}`);
    return this._http.request(req);
  }
  obtener_encargado(id_encargado) {
    const req = new http_1.HttpRequest('GET', `${environment_1.environment.url_back}/documento_encargado/encargado?id_encargado=${id_encargado}`);
    return this._http.request(req);
  }
  nuevo_documento(archivo, id_encargado, id_carrera, tipo, nombre, key, descripcion) {
    const formData = new FormData();
    formData.append("file", archivo);
    formData.append("id_encargado", id_encargado.toString());
    formData.append("id_carrera", id_carrera.toString());
    formData.append("tipo", tipo);
    formData.append("nombre", nombre);
    formData.append("key", key);
    formData.append("descripcion", descripcion);
    const req = new http_1.HttpRequest('POST', `${environment_1.environment.url_back}/documento_encargado/crear`, formData, {
      responseType: "json"
    });
    return this._http.request(req);
  }
  eliminar_documento(id) {
    const req = new http_1.HttpRequest('DELETE', `${environment_1.environment.url_back}/documento_encargado/eliminar?id=${id}`, {
      responseType: "json"
    });
    return this._http.request(req);
  }
  static {
    this.ɵfac = function DocumentacionService_Factory(__ngFactoryType__) {
      return new (__ngFactoryType__ || DocumentacionService)(i0.ɵɵinject(i1.HttpClient));
    };
  }
  static {
    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({
      token: DocumentacionService,
      factory: DocumentacionService.ɵfac,
      providedIn: 'root'
    });
  }
}
exports.DocumentacionService = DocumentacionService;

/***/ }),

/***/ 93360:
/*!****************************************************************************!*\
  !*** ./src/app/servicios/dominios_aceptados/dominios-aceptados.service.ts ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.DominiosAceptadosService = void 0;
const http_1 = __webpack_require__(/*! @angular/common/http */ 46443);
const environment_1 = __webpack_require__(/*! ../../../environments/environment */ 45312);
const i0 = __webpack_require__(/*! @angular/core */ 37580);
const i1 = __webpack_require__(/*! @angular/common/http */ 46443);
class DominiosAceptadosService {
  constructor(_http) {
    this._http = _http;
  }
  get_all() {
    const req = new http_1.HttpRequest('GET', `${environment_1.environment.url_back}/dominios_aceptados`, {
      responseType: "json"
    });
    return this._http.request(req);
  }
  put(dominio) {
    const req = new http_1.HttpRequest('PUT', `${environment_1.environment.url_back}/dominios_aceptados`, {
      dominio
    }, {
      responseType: "json"
    });
    return this._http.request(req);
  }
  put_multi(dominios) {
    const req = new http_1.HttpRequest('PUT', `${environment_1.environment.url_back}/dominios_aceptados/multi`, {
      dominios
    }, {
      responseType: "json"
    });
    return this._http.request(req);
  }
  delete(id) {
    const req = new http_1.HttpRequest('DELETE', `${environment_1.environment.url_back}/dominios_aceptados/${id}`, {
      responseType: "json"
    });
    return this._http.request(req);
  }
  static {
    this.ɵfac = function DominiosAceptadosService_Factory(__ngFactoryType__) {
      return new (__ngFactoryType__ || DominiosAceptadosService)(i0.ɵɵinject(i1.HttpClient));
    };
  }
  static {
    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({
      token: DominiosAceptadosService,
      factory: DominiosAceptadosService.ɵfac,
      providedIn: 'root'
    });
  }
}
exports.DominiosAceptadosService = DominiosAceptadosService;

/***/ }),

/***/ 1022:
/*!******************************************************!*\
  !*** ./src/app/servicios/empresa/empresa.service.ts ***!
  \******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.EmpresaService = void 0;
const http_1 = __webpack_require__(/*! @angular/common/http */ 46443);
const environment_1 = __webpack_require__(/*! ../../../environments/environment */ 45312);
const i0 = __webpack_require__(/*! @angular/core */ 37580);
const i1 = __webpack_require__(/*! @angular/common/http */ 46443);
class EmpresaService {
  constructor(_http) {
    this._http = _http;
  }
  get_empresas() {
    const req = new http_1.HttpRequest('GET', `${environment_1.environment.url_back}/empresa/todos`);
    return this._http.request(req);
  }
  obtener_empresas() {
    const req = new http_1.HttpRequest('GET', `${environment_1.environment.url_back}/empresa/todos`);
    return this._http.request(req);
  }
  agregar_empresa_auto(rut_empresa) {
    const req = new http_1.HttpRequest('POST', `${environment_1.environment.url_back}/empresa/agregar_empresa_auto?rut=${rut_empresa}`, {}, {
      responseType: "json"
    });
    return this._http.request(req);
  }
  agregar_empresa_manual(nombre_empresa, rut_empresa) {
    const req = new http_1.HttpRequest('POST', `${environment_1.environment.url_back}/empresa/agregar_empresa_manual?rut=${rut_empresa}&nombre=${nombre_empresa}`, {}, {
      responseType: "json"
    });
    return this._http.request(req);
  }
  //terminar
  obtener_practicas_por_empresa(id) {
    const req = new http_1.HttpRequest('GET', `${environment_1.environment.url_back}/practica/empresa?id=${id}`);
    return this._http.request(req);
  }
  static {
    this.ɵfac = function EmpresaService_Factory(__ngFactoryType__) {
      return new (__ngFactoryType__ || EmpresaService)(i0.ɵɵinject(i1.HttpClient));
    };
  }
  static {
    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({
      token: EmpresaService,
      factory: EmpresaService.ɵfac,
      providedIn: 'root'
    });
  }
}
exports.EmpresaService = EmpresaService;

/***/ }),

/***/ 41591:
/*!********************************************************!*\
  !*** ./src/app/servicios/encargado/aptitud.service.ts ***!
  \********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.AptitudService = void 0;
const http_1 = __webpack_require__(/*! @angular/common/http */ 46443);
const environment_1 = __webpack_require__(/*! ../../../environments/environment */ 45312);
const i0 = __webpack_require__(/*! @angular/core */ 37580);
const i1 = __webpack_require__(/*! @angular/common/http */ 46443);
class AptitudService {
  constructor(http) {
    this.http = http;
    this.url = environment_1.environment.url_back;
  }
  crearAptitud(id_carrera, lista) {
    const req = new http_1.HttpRequest('POST', `${this.url}/encargado/crear-aptitud`, {
      id_carrera,
      lista
    });
    return this.http.request(req);
  }
  editarAptitud(id, id_carrera, nombre) {
    const req = new http_1.HttpRequest('POST', `${this.url}/encargado/editar-aptitud`, {
      id,
      id_carrera,
      nombre
    });
    return this.http.request(req);
  }
  eliminarAptitud(id) {
    const req = new http_1.HttpRequest('POST', `${this.url}/encargado/eliminar-aptitud`, {
      id
    });
    return this.http.request(req);
  }
  getAptitudes(id_carrera) {
    const req = new http_1.HttpRequest('POST', `${this.url}/encargado/todos-aptitudes`, {
      id_carrera
    });
    return this.http.request(req);
  }
  actualizarRango(id_carrera, rango) {
    const req = new http_1.HttpRequest('POST', `${this.url}/encargado/rango`, {
      id_carrera,
      rango
    });
    return this.http.request(req);
  }
  getRango(id_carrera) {
    const req = new http_1.HttpRequest('POST', `${this.url}/encargado/get-rango`, {
      id_carrera
    });
    return this.http.request(req);
  }
  ifAptitudes(id_carrera) {
    const req = new http_1.HttpRequest('POST', `${this.url}/encargado/if-aptitudes`, {
      id_carrera
    });
    return this.http.request(req);
  }
  static {
    this.ɵfac = function AptitudService_Factory(__ngFactoryType__) {
      return new (__ngFactoryType__ || AptitudService)(i0.ɵɵinject(i1.HttpClient));
    };
  }
  static {
    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({
      token: AptitudService,
      factory: AptitudService.ɵfac,
      providedIn: 'root'
    });
  }
}
exports.AptitudService = AptitudService;

/***/ }),

/***/ 99539:
/*!****************************************************************************!*\
  !*** ./src/app/servicios/encargado/barra-lateral/barra-lateral.service.ts ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.BarraLateralService = void 0;
const environment_1 = __webpack_require__(/*! src/environments/environment */ 45312);
const http_1 = __webpack_require__(/*! @angular/common/http */ 46443);
const i0 = __webpack_require__(/*! @angular/core */ 37580);
const i1 = __webpack_require__(/*! @angular/common/http */ 46443);
class BarraLateralService {
  constructor(_http) {
    this._http = _http;
  }
  obtenerPracticasCreadas() {
    const req = new http_1.HttpRequest('GET', `${environment_1.environment.url_back}/config_practica/todos`);
    return this._http.request(req);
  }
  obtenerConfigPorId(id) {
    const req = new http_1.HttpRequest('GET', `${environment_1.environment.url_back}/config_practica/?id=${id}`);
    return this._http.request(req);
  }
  obtenerConfigPracticaNombre(nombre, id_carrera) {
    if (nombre == null) {
      console.log("Configuracion de practica no encontrada (null)");
      nombre = "";
    }
    const req = new http_1.HttpRequest('GET', `${environment_1.environment.url_back}/config_practica/nombre?nombre=${nombre}&id_carrera=${id_carrera}`);
    return this._http.request(req);
  }
  static {
    this.ɵfac = function BarraLateralService_Factory(__ngFactoryType__) {
      return new (__ngFactoryType__ || BarraLateralService)(i0.ɵɵinject(i1.HttpClient));
    };
  }
  static {
    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({
      token: BarraLateralService,
      factory: BarraLateralService.ɵfac,
      providedIn: 'root'
    });
  }
}
exports.BarraLateralService = BarraLateralService;

/***/ }),

/***/ 55971:
/*!***********************************************************************!*\
  !*** ./src/app/servicios/encargado/config-practica/config.service.ts ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.ConfigService = void 0;
const environment_1 = __webpack_require__(/*! src/environments/environment */ 45312);
const http_1 = __webpack_require__(/*! @angular/common/http */ 46443);
const i0 = __webpack_require__(/*! @angular/core */ 37580);
const i1 = __webpack_require__(/*! @angular/common/http */ 46443);
class ConfigService {
  constructor(_http) {
    this._http = _http;
  }
  crearConfigPractica(nombre, frecuencia_informes, informe_final, id_carrera, doc_direst = false) {
    const config = {
      nombre: nombre,
      frecuencia_informes: frecuencia_informes,
      informe_final: informe_final,
      id_carrera,
      doc_direst
    };
    const req = new http_1.HttpRequest('POST', `${environment_1.environment.url_back}/config_practica/crear`, config, {
      responseType: 'json'
    });
    return this._http.request(req);
  }
  actualizarConfigPractica(id, activada) {
    const config = {
      id: id,
      activada: activada
    };
    const req = new http_1.HttpRequest('PUT', `${environment_1.environment.url_back}/config_practica/actualizar`, config, {
      responseType: 'json'
    });
    return this._http.request(req);
  }
  getAptitudes(id_config_practica) {
    const req = new http_1.HttpRequest('GET', `${environment_1.environment.url_back}/pregunta_supervisor/aptitudes?id=${id_config_practica}`, {
      responseType: 'json'
    });
    return this._http.request(req);
  }
  getModalidades(id_config_practica) {
    const req = new http_1.HttpRequest('GET', `${environment_1.environment.url_back}/modalidad/id_config_practica?id=${id_config_practica}`, {
      responseType: 'json'
    });
    return this._http.request(req);
  }
  getConfigInforme(id_config_practica) {
    const req = new http_1.HttpRequest('GET', `${environment_1.environment.url_back}/config_informe/id_config_practica?id=${id_config_practica}`, {
      responseType: 'json'
    });
    return this._http.request(req);
  }
  getPreguntaEncuestaFinal(id_config_practica) {
    const req = new http_1.HttpRequest('GET', `${environment_1.environment.url_back}/pregunta_encuesta_final/id_config_practica?id_config_practica=${id_config_practica}`, {
      responseType: 'json'
    });
    return this._http.request(req);
  }
  getPreguntaSupervisor(id_config_practica) {
    const req = new http_1.HttpRequest('GET', `${environment_1.environment.url_back}/pregunta_supervisor/id_config_practica?id=${id_config_practica}`, {
      responseType: 'json'
    });
    return this._http.request(req);
  }
  getSolicitudDocumento(id_config_practica) {
    const req = new http_1.HttpRequest('GET', `${environment_1.environment.url_back}/solicitud_documento/id_config_practica?id=${id_config_practica}`, {
      responseType: 'json'
    });
    return this._http.request(req);
  }
  getPreguntasInforme(id_config_practica) {
    const req = new http_1.HttpRequest('GET', `${environment_1.environment.url_back}/modalidad/id_config_practica?id=${id_config_practica}`, {
      responseType: 'json'
    });
    return this._http.request(req);
  }
  crearModalidad(id_config_practica, modalidad, cantidad_tiempo) {
    const config = {
      id_config_practica: id_config_practica,
      tipo_modalidad: modalidad,
      cantidad_tiempo: cantidad_tiempo
    };
    const req = new http_1.HttpRequest('POST', `${environment_1.environment.url_back}/modalidad/crear`, config, {
      responseType: 'json'
    });
    return this._http.request(req);
  }
  actualizarModalidad(id_config_practica, modalidad, cantidad_tiempo) {
    const config = {
      id_config_practica: id_config_practica,
      tipo_modalidad: modalidad,
      cantidad_tiempo: cantidad_tiempo
    };
    const req = new http_1.HttpRequest('PUT', `${environment_1.environment.url_back}/modalidad/actualizar`, config, {
      responseType: 'json'
    });
    return this._http.request(req);
  }
  crearConfigInforme(id_config_practica, tipo_informe, archivo_o_encuesta = "", tipo_archivo = "", plantilla = "", file_plantilla = new File([], "")) {
    //console.log("todo: ", id_config_practica, tipo_informe, archivo_o_encuesta, tipo_archivo, plantilla, file_plantilla)
    if (archivo_o_encuesta == "archivo" && plantilla != "") {
      const formData = new FormData();
      formData.append('id_config_practica', id_config_practica.toString());
      formData.append('tipo_informe', tipo_informe);
      formData.append('archivo_o_encuesta', archivo_o_encuesta);
      formData.append('tipo_archivo', tipo_archivo);
      formData.append('plantilla', plantilla);
      formData.append('file_plantilla', file_plantilla);
      const req = new http_1.HttpRequest('POST', `${environment_1.environment.url_back}/config_informe/crearConArchivo`, formData, {
        responseType: "json"
      });
      return this._http.request(req);
    } else {
      const config = {
        id_config_practica: id_config_practica,
        tipo_informe: tipo_informe,
        archivo_o_encuesta,
        tipo_archivo,
        plantilla
      };
      const req = new http_1.HttpRequest('POST', `${environment_1.environment.url_back}/config_informe/crear`, config, {
        responseType: 'json'
      });
      return this._http.request(req);
    }
  }
  actualizarConfigInforme(id_config_practica, tipo_informe) {
    const config = {
      id_config_practica: id_config_practica,
      tipo_informe: tipo_informe
    };
    const req = new http_1.HttpRequest('PUT', `${environment_1.environment.url_back}/config_informe/actualizar`, config, {
      responseType: 'json'
    });
    return this._http.request(req);
  }
  crearPreguntaInforme(id_config_informe, enunciado, tipo_respuesta, opciones) {
    const pregunta = {
      id_config_informe: id_config_informe,
      enunciado: enunciado,
      tipo_respuesta: tipo_respuesta,
      opciones: opciones
    };
    const req = new http_1.HttpRequest('POST', `${environment_1.environment.url_back}/pregunta_informe/crear`, pregunta, {
      responseType: 'json'
    });
    return this._http.request(req);
  }
  actualizarPreguntaInforme(id_config_informe, enunciado, tipo_respuesta, opciones) {
    const pregunta = {
      id_config_informe: id_config_informe,
      enunciado: enunciado,
      tipo_respuesta: tipo_respuesta,
      opciones: opciones
    };
    const req = new http_1.HttpRequest('PUT', `${environment_1.environment.url_back}/pregunta_informe/actualizar`, pregunta, {
      responseType: 'json'
    });
    return this._http.request(req);
  }
  crearPreguntaEncuestaFinal(id_config_practica, enunciado, tipo_respuesta, opciones) {
    const pregunta = {
      id_config_practica: id_config_practica,
      enunciado: enunciado,
      tipo_respuesta: tipo_respuesta,
      opciones: opciones
    };
    const req = new http_1.HttpRequest('POST', `${environment_1.environment.url_back}/pregunta_encuesta_final/crear`, pregunta, {
      responseType: 'json'
    });
    return this._http.request(req);
  }
  actualizarPreguntaEncuestaFinal(id_config_practica, enunciado, tipo_respuesta, opciones) {
    const pregunta = {
      id_config_practica: id_config_practica,
      enunciado: enunciado,
      tipo_respuesta: tipo_respuesta,
      opciones: opciones
    };
    const req = new http_1.HttpRequest('PUT', `${environment_1.environment.url_back}/pregunta_encuesta_final/actualizar`, pregunta, {
      responseType: 'json'
    });
    return this._http.request(req);
  }
  crearPreguntaSupervisor(id_config_practica, enunciado, tipo_respuesta, opciones, fija) {
    const pregunta = {
      id_config_practica: id_config_practica,
      enunciado: enunciado,
      tipo_respuesta: tipo_respuesta,
      opciones: opciones,
      fija: fija
    };
    const req = new http_1.HttpRequest('POST', `${environment_1.environment.url_back}/pregunta_supervisor/crear`, pregunta, {
      responseType: 'json'
    });
    return this._http.request(req);
  }
  actualizarPreguntaSupervisor(id_config_practica, enunciado, tipo_respuesta, opciones) {
    const pregunta = {
      id_config_practica: id_config_practica,
      enunciado: enunciado,
      tipo_respuesta: tipo_respuesta,
      opciones: opciones
    };
    const req = new http_1.HttpRequest('PUT', `${environment_1.environment.url_back}/pregunta_supervisor/actualizar`, pregunta, {
      responseType: 'json'
    });
    return this._http.request(req);
  }
  crearSolicitudDocumento(id_config_practica, nombre, descripcion, tipo) {
    const pregunta = {
      id_config_practica: id_config_practica,
      tipo_archivo: tipo,
      nombre_solicitud: nombre,
      descripcion: descripcion
    };
    const req = new http_1.HttpRequest('POST', `${environment_1.environment.url_back}/solicitud_documento/crear`, pregunta, {
      responseType: 'json'
    });
    return this._http.request(req);
  }
  actualizarSolicitudDocumento(id_config_practica, tipo, nombre, descripcion) {
    const pregunta = {
      id_config_practica: id_config_practica,
      tipo_archivo: tipo,
      nombre_solicitud: nombre,
      descripcion: descripcion
    };
    const req = new http_1.HttpRequest('PUT', `${environment_1.environment.url_back}/solicitud_documento/actualizar`, pregunta, {
      responseType: 'json'
    });
    return this._http.request(req);
  }
  crearConfigPracticaCompleto(tipo_entrada, nombre, modalidad, cant_horas, cant_meses, frecuencia_informes, informe_final) {
    let respuestas = [];
    for (let i = 0; i < modalidad.length; i++) {
      if (modalidad[i] == true) {
        const config = {
          nombre: nombre,
          modalidad: modalidad[i],
          cantidad_tiempo: cant_horas[0],
          //agregar otro for?
          frecuencia_informes: frecuencia_informes,
          informe_final: informe_final
        };
        const req = new http_1.HttpRequest('POST', `${environment_1.environment.url_back}/practica/crear`, config, {
          responseType: 'json'
        });
        respuestas.push(this._http.request(req));
      } else {
        const config = {
          nombre: nombre,
          modalidad: modalidad[i],
          cantidad_tiempo: cant_meses[0],
          frecuencia_informes: frecuencia_informes,
          informe_final: informe_final
        };
        const req = new http_1.HttpRequest('POST', `${environment_1.environment.url_back}/practica/crear`, config, {
          responseType: 'json'
        });
        respuestas.push(this._http.request(req));
      }
    }
    return respuestas;
  }
  delConfigPractica(id) {
    const req = new http_1.HttpRequest('DELETE', `${environment_1.environment.url_back}/config_practica/eliminar?id=${id}`, {
      responseType: 'json'
    });
    return this._http.request(req);
  }
  delModalidad(id_config_practica) {
    const req = new http_1.HttpRequest('DELETE', `${environment_1.environment.url_back}/modalidad/eliminar_config?id=${id_config_practica}`, {
      responseType: 'json'
    });
    return this._http.request(req);
  }
  delConfigInforme(id_config_practica) {
    const req = new http_1.HttpRequest('DELETE', `${environment_1.environment.url_back}/config_informe/eliminar_config?id=${id_config_practica}`, {
      responseType: 'json'
    });
    return this._http.request(req);
  }
  delPreguntaInforme(id_config_informe) {
    const req = new http_1.HttpRequest('DELETE', `${environment_1.environment.url_back}/pregunta_informe/eliminar_config?id=${id_config_informe}`, {
      responseType: 'json'
    });
    return this._http.request(req);
  }
  delPreguntaEncuestaFinal(id_config_practica) {
    const req = new http_1.HttpRequest('DELETE', `${environment_1.environment.url_back}/pregunta_encuesta_final/eliminar_config?id=${id_config_practica}`, {
      responseType: 'json'
    });
    return this._http.request(req);
  }
  delPreguntaSupervisor(id_config_practica) {
    const req = new http_1.HttpRequest('DELETE', `${environment_1.environment.url_back}/pregunta_supervisor/eliminar_config?id=${id_config_practica}`, {
      responseType: 'json'
    });
    return this._http.request(req);
  }
  delSolicitudDocumento(id_config_practica) {
    const req = new http_1.HttpRequest('DELETE', `${environment_1.environment.url_back}/solicitud_documento/eliminar_config?id=${id_config_practica}`, {
      responseType: 'json'
    });
    return this._http.request(req);
  }
  getPracticasConConfig(id_config_practica) {
    const req = new http_1.HttpRequest('GET', `${environment_1.environment.url_back}/practica/configs?id=${id_config_practica}`, {
      responseType: 'json'
    });
    return this._http.request(req);
  }
  actualizarEstudiantes(id_estudiante, id_config) {
    const payload = {
      id: id_estudiante,
      id_config_practica: id_config
    };
    const req = new http_1.HttpRequest('PUT', `${environment_1.environment.url_back}/estudiante/actualizarConfig`, payload, {
      responseType: 'json'
    });
    return this._http.request(req);
  }
  obtener_config_practica_carrera(id_carrera) {
    const req = new http_1.HttpRequest('GET', `${environment_1.environment.url_back}/config_practica/carrera?id_carrera=${id_carrera}`, {
      responseType: 'json'
    });
    return this._http.request(req);
  }
  obtener_practicas_config_practica(id_config_practica) {
    const req = new http_1.HttpRequest('GET', `${environment_1.environment.url_back}/practica/configs?id=${id_config_practica}`, {
      responseType: 'json'
    });
    return this._http.request(req);
  }
  getConfigsCarrera(id_carrera) {
    const req = new http_1.HttpRequest('GET', `${environment_1.environment.url_back}/config_practica/all/carrera?id=${id_carrera}`, {
      responseType: 'json'
    });
    return this._http.request(req);
  }
  static {
    this.ɵfac = function ConfigService_Factory(__ngFactoryType__) {
      return new (__ngFactoryType__ || ConfigService)(i0.ɵɵinject(i1.HttpClient));
    };
  }
  static {
    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({
      token: ConfigService,
      factory: ConfigService.ɵfac,
      providedIn: 'root'
    });
  }
}
exports.ConfigService = ConfigService;

/***/ }),

/***/ 70182:
/*!*********************************************************!*\
  !*** ./src/app/servicios/encargado/decision.service.ts ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.SetDetallesAlumnoService = void 0;
const http_1 = __webpack_require__(/*! @angular/common/http */ 46443);
const environment_1 = __webpack_require__(/*! ../../../environments/environment */ 45312);
const i0 = __webpack_require__(/*! @angular/core */ 37580);
const i1 = __webpack_require__(/*! @angular/common/http */ 46443);
class SetDetallesAlumnoService {
  constructor(_http) {
    this._http = _http;
  }
  aprobar_practica(id_estudiante, id_modalidad, aprobacion) {
    const req = new http_1.HttpRequest('PUT', `${environment_1.environment.url_back}/practica/aprobar`, {
      id_estudiante,
      id_modalidad,
      aprobacion
    }, {
      responseType: 'json'
    });
    return this._http.request(req);
  }
  static {
    this.ɵfac = function SetDetallesAlumnoService_Factory(__ngFactoryType__) {
      return new (__ngFactoryType__ || SetDetallesAlumnoService)(i0.ɵɵinject(i1.HttpClient));
    };
  }
  static {
    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({
      token: SetDetallesAlumnoService,
      factory: SetDetallesAlumnoService.ɵfac,
      providedIn: 'root'
    });
  }
}
exports.SetDetallesAlumnoService = SetDetallesAlumnoService;

/***/ }),

/***/ 58471:
/*!*****************************************************************!*\
  !*** ./src/app/servicios/encargado/detalle-practica.service.ts ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.DetallePracticaService = void 0;
const http_1 = __webpack_require__(/*! @angular/common/http */ 46443);
const environment_1 = __webpack_require__(/*! ../../../environments/environment */ 45312);
const i0 = __webpack_require__(/*! @angular/core */ 37580);
const i1 = __webpack_require__(/*! @angular/common/http */ 46443);
class DetallePracticaService {
  constructor(_http) {
    this._http = _http;
  }
  obtener_practica(id_practica) {
    const req = new http_1.HttpRequest('GET', `${environment_1.environment.url_back}/practica/?id=${id_practica}`);
    return this._http.request(req);
  }
  obtener_documentos(id_practica) {
    const req = new http_1.HttpRequest('GET', `${environment_1.environment.url_back}/documento/get?id_practica=${id_practica}`);
    return this._http.request(req);
  }
  obtener_documentos_extra(id_practica) {
    const req = new http_1.HttpRequest('GET', `${environment_1.environment.url_back}/documento_extra/get?id_practica=${id_practica}`);
    return this._http.request(req);
  }
  obtener_solicitudes_documentos(id_practica, id_config_practica) {
    const req = new http_1.HttpRequest('GET', `${environment_1.environment.url_back}/solicitud_documento/todos_docs_practica?id=${id_config_practica}&id_practica=${id_practica}`);
    return this._http.request(req);
  }
  evaluacion_encargado(id_practica, ev_encargado) {
    const req = new http_1.HttpRequest('PUT', `${environment_1.environment.url_back}/practica/eval_encargado`, {
      id_practica,
      ev_encargado
    }, {
      responseType: "text"
    });
    return this._http.request(req);
  }
  static {
    this.ɵfac = function DetallePracticaService_Factory(__ngFactoryType__) {
      return new (__ngFactoryType__ || DetallePracticaService)(i0.ɵɵinject(i1.HttpClient));
    };
  }
  static {
    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({
      token: DetallePracticaService,
      factory: DetallePracticaService.ɵfac,
      providedIn: 'root'
    });
  }
}
exports.DetallePracticaService = DetallePracticaService;

/***/ }),

/***/ 3367:
/*!***********************************************************!*\
  !*** ./src/app/servicios/encargado/documentos.service.ts ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.DocumentosService = void 0;
const http_1 = __webpack_require__(/*! @angular/common/http */ 46443);
const environment_1 = __webpack_require__(/*! ../../../environments/environment */ 45312);
const i0 = __webpack_require__(/*! @angular/core */ 37580);
const i1 = __webpack_require__(/*! @angular/common/http */ 46443);
class DocumentosService {
  constructor(_http) {
    this._http = _http;
    this.PATH_DOC_EXTRA = "documento_extra";
  }
  solicitar_documento_extra(datos) {
    const req = new http_1.HttpRequest('POST', `${environment_1.environment.url_back}/${this.PATH_DOC_EXTRA}/crear`, datos, {
      responseType: "text"
    });
    return this._http.request(req);
  }
  static {
    this.ɵfac = function DocumentosService_Factory(__ngFactoryType__) {
      return new (__ngFactoryType__ || DocumentosService)(i0.ɵɵinject(i1.HttpClient));
    };
  }
  static {
    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({
      token: DocumentosService,
      factory: DocumentosService.ɵfac,
      providedIn: 'root'
    });
  }
}
exports.DocumentosService = DocumentosService;

/***/ }),

/***/ 92836:
/*!***********************************************************************!*\
  !*** ./src/app/servicios/encargado/edicion-simple/edicion.service.ts ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.EdicionService = void 0;
const http_1 = __webpack_require__(/*! @angular/common/http */ 46443);
const environment_1 = __webpack_require__(/*! src/environments/environment */ 45312);
const i0 = __webpack_require__(/*! @angular/core */ 37580);
const i1 = __webpack_require__(/*! @angular/common/http */ 46443);
class EdicionService {
  constructor(_http) {
    this._http = _http;
  }
  actualizarConfigPractica(id, nombre, frec, final) {
    const payload = {
      id: id,
      nombre: nombre,
      frecuencia_informes: frec,
      informe_final: final
    };
    const req = new http_1.HttpRequest('PUT', `${environment_1.environment.url_back}/config_practica/actualizar`, payload, {
      responseType: 'json'
    });
    return this._http.request(req);
  }
  getConfigsConPractica(id_config_practica) {
    const req = new http_1.HttpRequest('GET', `${environment_1.environment.url_back}/config_practica/configConPractica?id=${id_config_practica}`, {
      responseType: 'json'
    });
    return this._http.request(req);
  }
  static {
    this.ɵfac = function EdicionService_Factory(__ngFactoryType__) {
      return new (__ngFactoryType__ || EdicionService)(i0.ɵɵinject(i1.HttpClient));
    };
  }
  static {
    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({
      token: EdicionService,
      factory: EdicionService.ɵfac,
      providedIn: 'root'
    });
  }
}
exports.EdicionService = EdicionService;

/***/ }),

/***/ 41595:
/*!************************************************************!*\
  !*** ./src/app/servicios/encargado/ramos/ramos.service.ts ***!
  \************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.RamosService = void 0;
const http_1 = __webpack_require__(/*! @angular/common/http */ 46443);
const environment_1 = __webpack_require__(/*! src/environments/environment */ 45312);
const i0 = __webpack_require__(/*! @angular/core */ 37580);
const i1 = __webpack_require__(/*! @angular/common/http */ 46443);
class RamosService {
  constructor(_http) {
    this._http = _http;
  }
  getRamos(id) {
    const req = new http_1.HttpRequest('GET', `${environment_1.environment.url_back}/carrera?id=${id}`, {
      responseType: 'json'
    });
    return this._http.request(req);
  }
  actualizarRamos(id, ramos) {
    const payload = {
      id: id,
      ramos: ramos
    };
    const req = new http_1.HttpRequest('PUT', `${environment_1.environment.url_back}/carrera/actualizar`, payload, {
      responseType: 'json'
    });
    return this._http.request(req);
  }
  static {
    this.ɵfac = function RamosService_Factory(__ngFactoryType__) {
      return new (__ngFactoryType__ || RamosService)(i0.ɵɵinject(i1.HttpClient));
    };
  }
  static {
    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({
      token: RamosService,
      factory: RamosService.ɵfac,
      providedIn: 'root'
    });
  }
}
exports.RamosService = RamosService;

/***/ }),

/***/ 11274:
/*!******************************************************************!*\
  !*** ./src/app/servicios/encargado/resumen_practicas.service.ts ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.GetDetallesAlumnoService = void 0;
const http_1 = __webpack_require__(/*! @angular/common/http */ 46443);
const environment_1 = __webpack_require__(/*! ../../../environments/environment */ 45312);
const i0 = __webpack_require__(/*! @angular/core */ 37580);
const i1 = __webpack_require__(/*! @angular/common/http */ 46443);
class GetDetallesAlumnoService {
  constructor(_http) {
    this._http = _http;
  }
  full_estudiante_practicas(id_carrera) {
    const req = new http_1.HttpRequest('GET', `${environment_1.environment.url_back}/practica/estudiantes_practicas`, {
      id_carrera
    });
    return this._http.request(req);
  }
  static {
    this.ɵfac = function GetDetallesAlumnoService_Factory(__ngFactoryType__) {
      return new (__ngFactoryType__ || GetDetallesAlumnoService)(i0.ɵɵinject(i1.HttpClient));
    };
  }
  static {
    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({
      token: GetDetallesAlumnoService,
      factory: GetDetallesAlumnoService.ɵfac,
      providedIn: 'root'
    });
  }
}
exports.GetDetallesAlumnoService = GetDetallesAlumnoService;

/***/ }),

/***/ 87738:
/*!****************************************************************!*\
  !*** ./src/app/servicios/estadisticas/estadisticas.service.ts ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.EstadisticasService = void 0;
const http_1 = __webpack_require__(/*! @angular/common/http */ 46443);
const environment_1 = __webpack_require__(/*! ../../../environments/environment */ 45312);
const i0 = __webpack_require__(/*! @angular/core */ 37580);
const i1 = __webpack_require__(/*! @angular/common/http */ 46443);
class EstadisticasService {
  constructor(_http) {
    this._http = _http;
  }
  obtener_todas_config_practicas() {
    const req = new http_1.HttpRequest('GET', `${environment_1.environment.url_back}/config_practica/todos`);
    return this._http.request(req);
  }
  obtener_respuestas_encuesta_final() {
    const req = new http_1.HttpRequest('GET', `${environment_1.environment.url_back}/respuesta_encuesta_final/todos`);
    return this._http.request(req);
  }
  obtener_todas_preguntas_encuesta_final() {
    const req = new http_1.HttpRequest('GET', `${environment_1.environment.url_back}/pregunta_encuesta_final/todos`);
    return this._http.request(req);
  }
  obtener_todas_estadisticas() {
    const req = new http_1.HttpRequest('GET', `${environment_1.environment.url_back}/estadistica/todos`);
    return this._http.request(req);
  }
  crear_estadistica(estadistica) {
    const req = new http_1.HttpRequest('POST', `${environment_1.environment.url_back}/estadistica/crear`, estadistica);
    return this._http.request(req);
  }
  actualizar_estadistica(estadistica) {
    const req = new http_1.HttpRequest('PUT', `${environment_1.environment.url_back}/estadistica/actualizar`, estadistica);
    return this._http.request(req);
  }
  borrar_estadistica(estadistica) {
    const req = new http_1.HttpRequest('DELETE', `${environment_1.environment.url_back}/estadistica/eliminar_todos`, estadistica);
    return this._http.request(req);
  }
  obtener_actualizacion_estadistica() {
    const req = new http_1.HttpRequest('GET', `${environment_1.environment.url_back}/actualizacion_estadistica?id=${1}`);
    return this._http.request(req);
  }
  static {
    this.ɵfac = function EstadisticasService_Factory(__ngFactoryType__) {
      return new (__ngFactoryType__ || EstadisticasService)(i0.ɵɵinject(i1.HttpClient));
    };
  }
  static {
    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({
      token: EstadisticasService,
      factory: EstadisticasService.ɵfac,
      providedIn: 'root'
    });
  }
}
exports.EstadisticasService = EstadisticasService;

/***/ }),

/***/ 93844:
/*!************************************************************!*\
  !*** ./src/app/servicios/fragmentos/fragmentos.service.ts ***!
  \************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.FragmentosService = void 0;
const http_1 = __webpack_require__(/*! @angular/common/http */ 46443);
const environment_1 = __webpack_require__(/*! src/environments/environment */ 45312);
const i0 = __webpack_require__(/*! @angular/core */ 37580);
const i1 = __webpack_require__(/*! @angular/common/http */ 46443);
class FragmentosService {
  constructor(http) {
    this.http = http;
  }
  get_fragmentos_practica(id_practica, cantidad = 10) {
    const req = new http_1.HttpRequest('GET', `${environment_1.environment.url_back}/similitud/frases_representativas_practica/${id_practica}?cantidad=${cantidad}`, {
      responseType: 'json'
    });
    return this.http.request(req);
  }
  update_fragmentos_practica(id_practica, cantidad = 10) {
    const req = new http_1.HttpRequest('PUT', `${environment_1.environment.url_back}/similitud/frases_representativas_practica/${id_practica}?cantidad=${cantidad}`, {
      responseType: 'json'
    });
    return this.http.request(req);
  }
  static {
    this.ɵfac = function FragmentosService_Factory(__ngFactoryType__) {
      return new (__ngFactoryType__ || FragmentosService)(i0.ɵɵinject(i1.HttpClient));
    };
  }
  static {
    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({
      token: FragmentosService,
      factory: FragmentosService.ɵfac,
      providedIn: 'root'
    });
  }
}
exports.FragmentosService = FragmentosService;

/***/ }),

/***/ 1142:
/*!******************************************************!*\
  !*** ./src/app/servicios/informe/informe.service.ts ***!
  \******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.InformeService = void 0;
const http_1 = __webpack_require__(/*! @angular/common/http */ 46443);
const environment_1 = __webpack_require__(/*! src/environments/environment */ 45312);
const i0 = __webpack_require__(/*! @angular/core */ 37580);
const i1 = __webpack_require__(/*! @angular/common/http */ 46443);
class InformeService {
  constructor(http) {
    this.http = http;
  }
  get_informe_preguntas(id_informe) {
    const req = new http_1.HttpRequest('GET', `${environment_1.environment.url_back}/${environment_1.environment.ruta_informe}/preguntas?id=${id_informe}`, {
      responseType: 'json'
    });
    return this.http.request(req);
  }
  get_pregunta_informe(id_pregunta) {
    const req = new http_1.HttpRequest('GET', `${environment_1.environment.url_back}/pregunta_informe?id=${id_pregunta}`, {
      responseType: 'json'
    });
    return this.http.request(req);
  }
  update_key_informe(id, key) {
    const req = new http_1.HttpRequest('PUT', `${environment_1.environment.url_back}/${environment_1.environment.ruta_informe}/actualizar`, {
      id,
      key
    }, {
      responseType: 'text'
    });
    return this.http.request(req);
  }
  static {
    this.ɵfac = function InformeService_Factory(__ngFactoryType__) {
      return new (__ngFactoryType__ || InformeService)(i0.ɵɵinject(i1.HttpClient));
    };
  }
  static {
    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({
      token: InformeService,
      factory: InformeService.ɵfac,
      providedIn: 'root'
    });
  }
}
exports.InformeService = InformeService;

/***/ }),

/***/ 22004:
/*!********************************************************************!*\
  !*** ./src/app/servicios/notificaciones/notificaciones.service.ts ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.NotificacionesService = void 0;
const http_1 = __webpack_require__(/*! @angular/common/http */ 46443);
const core_1 = __webpack_require__(/*! @angular/core */ 37580);
const ngx_socket_io_1 = __webpack_require__(/*! ngx-socket-io */ 24411);
const rxjs_1 = __webpack_require__(/*! rxjs */ 51184);
const environment_1 = __webpack_require__(/*! ../../../environments/environment */ 45312);
const i0 = __webpack_require__(/*! @angular/core */ 37580);
const i1 = __webpack_require__(/*! @angular/common/http */ 46443);
const i2 = __webpack_require__(/*! @angular/common */ 60316);
class NotificacionesService extends ngx_socket_io_1.Socket {
  constructor(_http, datetime) {
    super({
      url: environment_1.environment.url_back_chat,
      options: {
        query: {
          nameRoom: "notificaciones" + JSON.parse(localStorage.getItem("auth-user") || "{}").userdata?.id
        }
      }
    });
    this._http = _http;
    this.datetime = datetime;
    this.connectionReadySubject = new rxjs_1.Subject();
    this.connectionReady$ = this.connectionReadySubject.asObservable();
    this.eventSubject = new rxjs_1.Subject();
    this.event$ = this.eventSubject.asObservable();
    this.outEven = new core_1.EventEmitter();
    this.callback = new core_1.EventEmitter();
    this.listen = () => {
      this.ioSocket.on('notificacion', res => {
        console.log("notificacion recibida, el mensaje es", res.message);
        this.callback.emit(res);
      });
    };
    this.listen();
  }
  postnotificacion(id_usuario, mensaje, correo, estado, enlace = "") {
    let fecha = this.datetime.transform(new Date(), 'MM/dd/yyyy h:mm:ss');
    const req = new http_1.HttpRequest('POST', `${environment_1.environment.url_back}/notificacion/crear`, {
      id_usuario,
      fecha,
      mensaje,
      correo,
      estado,
      enlace
    }, {
      responseType: 'text'
    });
    return this._http.request(req);
  }
  notificaciones_vistas(id_usuario) {
    const req = new http_1.HttpRequest('PUT', `${environment_1.environment.url_back}/notificacion/visto`, {
      id_usuario
    }, {
      responseType: "text"
    });
    return this._http.request(req);
  }
  cambiar_configuración_notificaciones(id, estado) {
    const req = new http_1.HttpRequest('PUT', `${environment_1.environment.url_back}/usuario/estado_config`, {
      id,
      estado
    }, {
      responseType: "text"
    });
    return this._http.request(req);
  }
  static {
    this.ɵfac = function NotificacionesService_Factory(__ngFactoryType__) {
      return new (__ngFactoryType__ || NotificacionesService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.DatePipe));
    };
  }
  static {
    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({
      token: NotificacionesService,
      factory: NotificacionesService.ɵfac,
      providedIn: 'root'
    });
  }
}
exports.NotificacionesService = NotificacionesService;

/***/ }),

/***/ 17284:
/*!************************************************************!*\
  !*** ./src/app/servicios/notis-chat/notis-chat.service.ts ***!
  \************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.NotisChatService = void 0;
const http_1 = __webpack_require__(/*! @angular/common/http */ 46443);
const core_1 = __webpack_require__(/*! @angular/core */ 37580);
const ngx_socket_io_1 = __webpack_require__(/*! ngx-socket-io */ 24411);
const rxjs_1 = __webpack_require__(/*! rxjs */ 51184);
const environment_1 = __webpack_require__(/*! ../../../environments/environment */ 45312);
const i0 = __webpack_require__(/*! @angular/core */ 37580);
const i1 = __webpack_require__(/*! @angular/common/http */ 46443);
const i2 = __webpack_require__(/*! ngx-cookie-service */ 39213);
class NotisChatService extends ngx_socket_io_1.Socket {
  constructor(_http, cookie) {
    super({
      url: environment_1.environment.url_back_chat,
      options: {
        query: {
          nameRoom: cookie.get('room')
        }
      }
    });
    this._http = _http;
    this.cookie = cookie;
    this.connectionReadySubject = new rxjs_1.Subject();
    this.connectionReady$ = this.connectionReadySubject.asObservable();
    this.eventSubject = new rxjs_1.Subject();
    this.event$ = this.eventSubject.asObservable();
    this.outEven = new core_1.EventEmitter();
    this.listen = () => {
      this.ioSocket.on('evento', res => {
        console.log("Evento recibido", res);
        this.eventSubject.next(res);
      });
    };
    this.emitEvent = (payload = {}) => {
      //console.log('emitiendo Evento', payload);
      this.ioSocket.emit('evento', payload);
    };
    if (cookie.check('room')) {
      this.listen();
      //console.log("Conexion establecida en ROOM:", cookie.get('room'));
    } else {
      console.log("Conexion no establecida con socketIO al no encontrarse room");
    }
  }
  waitForCookieToBeSet() {
    return (0, rxjs_1.from)(new Promise(resolve => {
      const checkInterval = setInterval(() => {
        if (this.cookie.check('room')) {
          clearInterval(checkInterval);
          resolve();
        }
      }, 1000); // Check every 100ms
    }));
  }
  postchat(id_estudiante, id_encargado) {
    const req = new http_1.HttpRequest('POST', `${environment_1.environment.url_back}/chat/crear`, {
      id_estudiante,
      id_encargado
    }, {
      responseType: 'text'
    });
    return this._http.request(req);
  }
  getchat(id_estudiante, id_encargado) {
    const req = new http_1.HttpRequest('GET', `${environment_1.environment.url_back}/chat/get?id_estudiante=${id_estudiante}&id_encargado=${id_encargado}`, {
      responseType: "text"
    });
    return this._http.request(req);
  }
  postmensaje(id_estudiante, id_encargado, mensaje, correo) {
    const req = new http_1.HttpRequest('POST', `${environment_1.environment.url_back}/mensaje/crear`, {
      id_estudiante,
      id_encargado,
      mensaje: mensaje,
      correo
    }, {
      responseType: 'text'
    });
    return this._http.request(req);
  }
  getusuario(id_usuario) {
    const req = new http_1.HttpRequest('GET', `${environment_1.environment.url_back}/usuario/?id=${id_usuario}`);
    return this._http.request(req);
  }
  static {
    this.ɵfac = function NotisChatService_Factory(__ngFactoryType__) {
      return new (__ngFactoryType__ || NotisChatService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.CookieService));
    };
  }
  static {
    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({
      token: NotisChatService,
      factory: NotisChatService.ɵfac,
      providedIn: 'root'
    });
  }
}
exports.NotisChatService = NotisChatService;

/***/ }),

/***/ 5224:
/*!****************************************************!*\
  !*** ./src/app/servicios/plagio/plagio.service.ts ***!
  \****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.PlagioService = void 0;
const http_1 = __webpack_require__(/*! @angular/common/http */ 46443);
const environment_1 = __webpack_require__(/*! ../../../environments/environment */ 45312);
const i0 = __webpack_require__(/*! @angular/core */ 37580);
const i1 = __webpack_require__(/*! @angular/common/http */ 46443);
class PlagioService {
  constructor(_http) {
    this._http = _http;
  }
  get_plagio_por_practica(id_practica) {
    const req = new http_1.HttpRequest('GET', `${environment_1.environment.url_back}/plagio?id_practica=${id_practica}`, {
      responseType: 'json'
    });
    return this._http.request(req);
  }
  get_plagio_por_pratica_con_informes(id_practica) {
    const req = new http_1.HttpRequest('GET', `${environment_1.environment.url_back}/plagio/informe?id_practica=${id_practica}`, {
      responseType: 'json'
    });
    return this._http.request(req);
  }
  static {
    this.ɵfac = function PlagioService_Factory(__ngFactoryType__) {
      return new (__ngFactoryType__ || PlagioService)(i0.ɵɵinject(i1.HttpClient));
    };
  }
  static {
    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({
      token: PlagioService,
      factory: PlagioService.ɵfac,
      providedIn: 'root'
    });
  }
}
exports.PlagioService = PlagioService;

/***/ }),

/***/ 66222:
/*!******************************************************************!*\
  !*** ./src/app/servicios/publicaciones/publicaciones.service.ts ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.PublicacionesService = void 0;
const http_1 = __webpack_require__(/*! @angular/common/http */ 46443);
const environment_1 = __webpack_require__(/*! src/environments/environment */ 45312);
const i0 = __webpack_require__(/*! @angular/core */ 37580);
const i1 = __webpack_require__(/*! @angular/common/http */ 46443);
class PublicacionesService {
  constructor(_http) {
    this._http = _http;
  }
  obtener_todas(id_carrera) {
    const req = new http_1.HttpRequest('GET', `${environment_1.environment.url_back}/publicacion/todas?id_carrera=${id_carrera}`, {
      id_carrera
    });
    return this._http.request(req);
  }
  obtener_encargado(id_encargado) {
    const req = new http_1.HttpRequest('GET', `${environment_1.environment.url_back}/publicacion/encargado?id_encargado=${id_encargado}`, {
      id_encargado
    });
    return this._http.request(req);
  }
  nueva_publicacion(id_encargado, id_carrera, titulo, enunciado, fecha, isfijo, fecha_programada) {
    const req = new http_1.HttpRequest('POST', `${environment_1.environment.url_back}/publicacion/crear`, {
      id_encargado,
      id_carrera,
      titulo,
      enunciado,
      fecha,
      isfijo,
      fecha_programada
    }, {
      responseType: "json"
    });
    return this._http.request(req);
  }
  editar_publciacion(id, titulo, enunciado, isfijo) {
    const req = new http_1.HttpRequest('PUT', `${environment_1.environment.url_back}/publicacion/editar`, {
      id,
      titulo,
      enunciado,
      isfijo
    }, {
      responseType: "json"
    });
    return this._http.request(req);
  }
  eliminar_publicacion(id) {
    const req = new http_1.HttpRequest('DELETE', `${environment_1.environment.url_back}/publicacion/eliminar?id=${id}`, {
      id
    }, {
      responseType: "json"
    });
    return this._http.request(req);
  }
  static {
    this.ɵfac = function PublicacionesService_Factory(__ngFactoryType__) {
      return new (__ngFactoryType__ || PublicacionesService)(i0.ɵɵinject(i1.HttpClient));
    };
  }
  static {
    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({
      token: PublicacionesService,
      factory: PublicacionesService.ɵfac,
      providedIn: 'root'
    });
  }
}
exports.PublicacionesService = PublicacionesService;

/***/ }),

/***/ 37990:
/*!**********************************************************************!*\
  !*** ./src/app/servicios/respuesta-ramos/respuesta-ramos.service.ts ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.RespuestaRamosService = void 0;
const http_1 = __webpack_require__(/*! @angular/common/http */ 46443);
const environment_1 = __webpack_require__(/*! ../../../environments/environment */ 45312);
const i0 = __webpack_require__(/*! @angular/core */ 37580);
const i1 = __webpack_require__(/*! @angular/common/http */ 46443);
class RespuestaRamosService {
  constructor(_http) {
    this._http = _http;
  }
  obtener_respuesta_ramos(id) {
    const req = new http_1.HttpRequest('GET', `${environment_1.environment.url_back}/respuesta_ramos?id=${id}`);
    return this._http.request(req);
  }
  crear_respuesta_ramos(id_carrera, respuesta, id_practica) {
    const req = new http_1.HttpRequest('POST', `${environment_1.environment.url_back}/respuesta_ramos/crear`, {
      id_carrera: id_carrera,
      respuesta: respuesta,
      id_practica: id_practica
    });
    return this._http.request(req);
  }
  static {
    this.ɵfac = function RespuestaRamosService_Factory(__ngFactoryType__) {
      return new (__ngFactoryType__ || RespuestaRamosService)(i0.ɵɵinject(i1.HttpClient));
    };
  }
  static {
    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({
      token: RespuestaRamosService,
      factory: RespuestaRamosService.ɵfac,
      providedIn: 'root'
    });
  }
}
exports.RespuestaRamosService = RespuestaRamosService;

/***/ }),

/***/ 31070:
/*!******************************************************!*\
  !*** ./src/app/servicios/resumen/resumen.service.ts ***!
  \******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.ResumenService = void 0;
const http_1 = __webpack_require__(/*! @angular/common/http */ 46443);
const environment_1 = __webpack_require__(/*! src/environments/environment */ 45312);
const i0 = __webpack_require__(/*! @angular/core */ 37580);
const i1 = __webpack_require__(/*! @angular/common/http */ 46443);
class ResumenService {
  constructor(http) {
    this.http = http;
  }
  get_informe_preguntas(id_practica) {
    const req = new http_1.HttpRequest('POST', `${environment_1.environment.url_back}/practica/resumen?id_practica=${id_practica}`, {
      responseType: 'json'
    });
    return this.http.request(req);
  }
  static {
    this.ɵfac = function ResumenService_Factory(__ngFactoryType__) {
      return new (__ngFactoryType__ || ResumenService)(i0.ɵɵinject(i1.HttpClient));
    };
  }
  static {
    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({
      token: ResumenService,
      factory: ResumenService.ɵfac,
      providedIn: 'root'
    });
  }
}
exports.ResumenService = ResumenService;

/***/ }),

/***/ 40588:
/*!************************************************************!*\
  !*** ./src/app/servicios/supervisor/supervisor.service.ts ***!
  \************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.SupervisorService = void 0;
const http_1 = __webpack_require__(/*! @angular/common/http */ 46443);
const environment_1 = __webpack_require__(/*! ../../../environments/environment */ 45312);
const i0 = __webpack_require__(/*! @angular/core */ 37580);
const i1 = __webpack_require__(/*! @angular/common/http */ 46443);
class SupervisorService {
  constructor(_http) {
    this._http = _http;
  }
  sendAnswer(ids_preguntas_supervisor, id_practica, respuestas) {
    const data = {
      ids_preguntas_supervisor,
      id_practica,
      respuestas
    };
    const req = new http_1.HttpRequest('POST', `${environment_1.environment.url_back}/respuesta_supervisor/responder_encuesta`, data);
    return this._http.request(req);
  }
  /*ya no se usa porque se envía link en la misma función que la que finaliza la práctica
    enviarLink(id_practica:number, correo: string, nom_sup: string, nom_estudiante: string): Observable<any> {
    console.log("servicio correo",correo);
    console.log("servicio nom_sup",nom_sup);
    console.log("servicio nom_estudiante",nom_estudiante);
    const req = new HttpRequest('POST', `${environment.url_back}/evaluacion/gen_token`, { correo, nom_sup, nom_estudiante, id_practica });
    return this._http.request(req);
  }*/
  getPractica(token, iv) {
    const req = new http_1.HttpRequest('GET', `${environment_1.environment.url_back}/practica/encrypted?token=${token}&iv=${iv}`);
    return this._http.request(req);
  }
  getPracticaEncriptada(token, iv) {
    const req = new http_1.HttpRequest('GET', `${environment_1.environment.url_back}/practica/encrypted?token=${token}&iv=${iv}`);
    return this._http.request(req);
  }
  setFragmentos(id_practica, data) {
    const req = new http_1.HttpRequest('PUT', `${environment_1.environment.url_back}/similitud/frases_representativas_practica/${id_practica}`, data);
    return this._http.request(req);
  }
  setRepeticiones(id_practica) {
    const req = new http_1.HttpRequest('POST', `${environment_1.environment.url_back}/similitud/textos_repetidos`, {
      id_practica
    });
    return this._http.request(req);
  }
  getAptitudes(id_practica) {
    const req = new http_1.HttpRequest('POST', `${environment_1.environment.url_back}/pregunta_supervisor/aptitudes`, {
      id_practica
    });
    return this._http.request(req);
  }
  confirmarInicioPractica(id_practica) {
    const req = new http_1.HttpRequest('PUT', `${environment_1.environment.url_back}/practica/actualizar`, {
      id: id_practica,
      estado: environment_1.environment.estado_practica.en_curso
    });
    return this._http.request(req);
  }
  static {
    this.ɵfac = function SupervisorService_Factory(__ngFactoryType__) {
      return new (__ngFactoryType__ || SupervisorService)(i0.ɵɵinject(i1.HttpClient));
    };
  }
  static {
    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({
      token: SupervisorService,
      factory: SupervisorService.ɵfac,
      providedIn: 'root'
    });
  }
}
exports.SupervisorService = SupervisorService;

/***/ }),

/***/ 12926:
/*!****************************************************************************!*\
  !*** ./src/app/servicios/usuario-supervisor/usuario-supervisor.service.ts ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.UsuarioSupervisorService = void 0;
const http_1 = __webpack_require__(/*! @angular/common/http */ 46443);
const environment_1 = __webpack_require__(/*! src/environments/environment */ 45312);
const i0 = __webpack_require__(/*! @angular/core */ 37580);
const i1 = __webpack_require__(/*! @angular/common/http */ 46443);
class UsuarioSupervisorService {
  constructor(http) {
    this.http = http;
    this.url_back = environment_1.environment.url_back;
  }
  buscar_estudiantes(id_usuario) {
    const req = new http_1.HttpRequest('POST', `${this.url_back}/usuario/estudiantes_revisados`, {
      id_usuario
    });
    return this.http.request(req);
  }
  static {
    this.ɵfac = function UsuarioSupervisorService_Factory(__ngFactoryType__) {
      return new (__ngFactoryType__ || UsuarioSupervisorService)(i0.ɵɵinject(i1.HttpClient));
    };
  }
  static {
    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({
      token: UsuarioSupervisorService,
      factory: UsuarioSupervisorService.ɵfac,
      providedIn: 'root'
    });
  }
}
exports.UsuarioSupervisorService = UsuarioSupervisorService;

/***/ }),

/***/ 57637:
/*!***********************************************************!*\
  !*** ./src/app/servicios/usuario/storage-user.service.ts ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.StorageUserService = void 0;
const i0 = __webpack_require__(/*! @angular/core */ 37580);
const USER_KEY = 'auth-user';
class StorageUserService {
  constructor() {}
  clean() {
    window.localStorage.clear();
  }
  saveUser(user) {
    const {
      message,
      userdata,
      token
    } = user;
    window.localStorage.removeItem(USER_KEY);
    window.localStorage.setItem(USER_KEY, JSON.stringify(user));
  }
  getUser() {
    const user = window.localStorage.getItem(USER_KEY);
    if (user) {
      return JSON.parse(user);
    }
    return {};
  }
  isLoggedIn() {
    const user = window.localStorage.getItem(USER_KEY);
    if (user) {
      return true;
    }
    return false;
  }
  static {
    this.ɵfac = function StorageUserService_Factory(__ngFactoryType__) {
      return new (__ngFactoryType__ || StorageUserService)();
    };
  }
  static {
    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({
      token: StorageUserService,
      factory: StorageUserService.ɵfac,
      providedIn: 'root'
    });
  }
}
exports.StorageUserService = StorageUserService;

/***/ }),

/***/ 31446:
/*!******************************************************!*\
  !*** ./src/app/servicios/usuario/usuario.service.ts ***!
  \******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.UsuarioService = void 0;
const http_1 = __webpack_require__(/*! @angular/common/http */ 46443);
const environment_1 = __webpack_require__(/*! ../../../environments/environment */ 45312);
const i0 = __webpack_require__(/*! @angular/core */ 37580);
const i1 = __webpack_require__(/*! @angular/common/http */ 46443);
const i2 = __webpack_require__(/*! ngx-cookie-service */ 39213);
class UsuarioService {
  constructor(http, cookies) {
    this.http = http;
    this.cookies = cookies;
    this.url = environment_1.environment.url_back;
  }
  login(user, password, dominio) {
    const req = new http_1.HttpRequest('POST', `${this.url}/usuario/login`, {
      user,
      password,
      dominio
    });
    return this.http.request(req);
  }
  register(email, password, cnfPwd, nombre, es_encargado, es_supervisor, es_estudiante, es_admin, extras) {
    const req = new http_1.HttpRequest('POST', `${this.url}/usuario/register`, {
      email,
      password,
      cnfPwd,
      nombre,
      es_encargado,
      es_supervisor,
      es_estudiante,
      es_admin,
      extras
    });
    return this.http.request(req);
  }
  get_carreras() {
    const req = new http_1.HttpRequest('GET', `${environment_1.environment.url_back}/carrera/todos`);
    return this.http.request(req);
  }
  logout() {
    const req = new http_1.HttpRequest('POST', `${this.url}/usuario/logout`, {});
    return this.http.request(req);
  }
  get_usuario_encriptado(token, iv) {
    const req = new http_1.HttpRequest('GET', `${environment_1.environment.url_back}/usuario/confirmar_correo?token=${token}&iv=${iv}`);
    return this.http.request(req);
  }
  send_mail(mail) {
    const req = new http_1.HttpRequest('GET', `${environment_1.environment.url_back}/usuario/send_mail?mail=${mail}`);
    return this.http.request(req);
  }
  change_password(id, pass, token) {
    const req = new http_1.HttpRequest('PUT', `${environment_1.environment.url_back}/usuario/change_password?id=${id}&pass=${pass}&token=${token}`, {
      id,
      pass,
      token
    });
    return this.http.request(req);
  }
  static {
    this.ɵfac = function UsuarioService_Factory(__ngFactoryType__) {
      return new (__ngFactoryType__ || UsuarioService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.CookieService));
    };
  }
  static {
    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({
      token: UsuarioService,
      factory: UsuarioService.ɵfac,
      providedIn: 'root'
    });
  }
}
exports.UsuarioService = UsuarioService;

/***/ }),

/***/ 51512:
/*!*************************************************!*\
  !*** ./src/app/vistas/admin/admin.component.ts ***!
  \*************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.AdminComponent = void 0;
const forms_1 = __webpack_require__(/*! @angular/forms */ 34456);
const i0 = __webpack_require__(/*! @angular/core */ 37580);
const i1 = __webpack_require__(/*! src/app/servicios/admin/admin.service */ 32126);
const i2 = __webpack_require__(/*! src/app/servicios/dominios_aceptados/dominios-aceptados.service */ 93360);
const i3 = __webpack_require__(/*! @angular/material/snack-bar */ 3347);
const i4 = __webpack_require__(/*! @angular/forms */ 34456);
const i5 = __webpack_require__(/*! @angular/router */ 95072);
const i6 = __webpack_require__(/*! @angular/common */ 60316);
const i7 = __webpack_require__(/*! ../../componentes/barra-superior/barra-superior.component */ 36370);
const i8 = __webpack_require__(/*! ../../componentes/logout-modal/logout-modal.component */ 15562);
const i9 = __webpack_require__(/*! ../../componentes/barra-lateral-admin/barra-lateral-admin.component */ 53524);
const i10 = __webpack_require__(/*! ../../componentes/editar-encargado-modal/editar-encargado-modal.component */ 9034);
const i11 = __webpack_require__(/*! ../../componentes/crear-encargado-modal/crear-encargado-modal.component */ 38096);
const i12 = __webpack_require__(/*! ../../componentes/crear-carrera-modal/crear-carrera-modal.component */ 69836);
const i13 = __webpack_require__(/*! ../../componentes/editar-carrera-modal/editar-carrera-modal.component */ 9582);
const i14 = __webpack_require__(/*! ../../componentes/agregar-dominio-modal/agregar-dominio-modal.component */ 71892);
function AdminComponent_tr_27_Template(rf, ctx) {
  if (rf & 1) {
    const _r1 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "tr")(1, "td");
    i0.ɵɵtext(2);
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(3, "td");
    i0.ɵɵtext(4);
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(5, "td");
    i0.ɵɵtext(6);
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(7, "td")(8, "button", 23);
    i0.ɵɵlistener("click", function AdminComponent_tr_27_Template_button_click_8_listener() {
      const encargado_r2 = i0.ɵɵrestoreView(_r1).$implicit;
      const ctx_r2 = i0.ɵɵnextContext();
      return i0.ɵɵresetView(ctx_r2.editar(encargado_r2.id, encargado_r2.carrera == null ? null : encargado_r2.carrera.nombre, encargado_r2.carrera == null ? null : encargado_r2.carrera.id));
    });
    i0.ɵɵtext(9, "Editar");
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(10, "button", 24);
    i0.ɵɵlistener("click", function AdminComponent_tr_27_Template_button_click_10_listener() {
      const encargado_r2 = i0.ɵɵrestoreView(_r1).$implicit;
      const ctx_r2 = i0.ɵɵnextContext();
      return i0.ɵɵresetView(ctx_r2.eliminar(encargado_r2.id, encargado_r2.carrera == null ? null : encargado_r2.carrera.id));
    });
    i0.ɵɵtext(11, "Eliminar");
    i0.ɵɵelementEnd()()();
  }
  if (rf & 2) {
    const encargado_r2 = ctx.$implicit;
    i0.ɵɵadvance(2);
    i0.ɵɵtextInterpolate(encargado_r2.usuario == null ? null : encargado_r2.usuario.nombre);
    i0.ɵɵadvance(2);
    i0.ɵɵtextInterpolate(encargado_r2.carrera == null ? null : encargado_r2.carrera.nombre);
    i0.ɵɵadvance(2);
    i0.ɵɵtextInterpolate(encargado_r2.usuario == null ? null : encargado_r2.usuario.correo);
  }
}
function AdminComponent_tr_47_Template(rf, ctx) {
  if (rf & 1) {
    const _r4 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "tr")(1, "td");
    i0.ɵɵtext(2);
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(3, "td")(4, "button", 25);
    i0.ɵɵlistener("click", function AdminComponent_tr_47_Template_button_click_4_listener() {
      const carrera_r5 = i0.ɵɵrestoreView(_r4).$implicit;
      const ctx_r2 = i0.ɵɵnextContext();
      return i0.ɵɵresetView(ctx_r2.editar_carrera(carrera_r5.id, carrera_r5.nombre, carrera_r5.correo));
    });
    i0.ɵɵtext(5, "Editar");
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(6, "button", 24);
    i0.ɵɵlistener("click", function AdminComponent_tr_47_Template_button_click_6_listener() {
      const carrera_r5 = i0.ɵɵrestoreView(_r4).$implicit;
      const ctx_r2 = i0.ɵɵnextContext();
      return i0.ɵɵresetView(ctx_r2.eliminar_carrera(carrera_r5.id));
    });
    i0.ɵɵtext(7, "Eliminar");
    i0.ɵɵelementEnd()()();
  }
  if (rf & 2) {
    const carrera_r5 = ctx.$implicit;
    i0.ɵɵadvance(2);
    i0.ɵɵtextInterpolate(carrera_r5.nombre);
  }
}
function AdminComponent_tr_60_Template(rf, ctx) {
  if (rf & 1) {
    const _r6 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "tr")(1, "td");
    i0.ɵɵtext(2);
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(3, "td")(4, "button", 24);
    i0.ɵɵlistener("click", function AdminComponent_tr_60_Template_button_click_4_listener() {
      const obj_r7 = i0.ɵɵrestoreView(_r6).$implicit;
      const ctx_r2 = i0.ɵɵnextContext();
      return i0.ɵɵresetView(ctx_r2.eliminar_dominio(obj_r7.id));
    });
    i0.ɵɵtext(5, "Eliminar");
    i0.ɵɵelementEnd()()();
  }
  if (rf & 2) {
    const obj_r7 = ctx.$implicit;
    i0.ɵɵadvance(2);
    i0.ɵɵtextInterpolate1(" ", "@" + obj_r7.dominio, " ");
  }
}
class AdminComponent {
  createForm() {
    this.asignacionForm = this.fb.group({
      encargado: ['', [forms_1.Validators.required]],
      carrera: ['', [forms_1.Validators.required]]
    });
  }
  constructor(admin, dominios_service, _snackBar, fb, router) {
    this.admin = admin;
    this.dominios_service = dominios_service;
    this._snackBar = _snackBar;
    this.fb = fb;
    this.router = router;
    this.encargados = [];
    this.carreras = [];
    this.pares = [];
    this.flag = false;
    this.lista_dominios = [];
    let _data = {};
    this.admin.getCarrera().subscribe({
      next: data => {
        _data = {
          ..._data,
          ...data
        };
      },
      error: error => {
        this._snackBar.open("Error al obtener carreras", "Cerrar", {
          panelClass: ['red-snackbar'],
          duration: 2000
        });
      },
      complete: () => {
        for (let i = 0; i < _data.body.length; i++) {
          this.carreras.push({
            nombre: _data.body[i].nombre,
            id: _data.body[i].id,
            correo: _data.body[i].correos_admitidos
          });
        }
        console.log(this.carreras);
      }
    });
    this.admin.getEncargado().subscribe({
      next: data => {
        _data = {
          ..._data,
          ...data
        };
        console.log(_data);
      },
      error: error => {
        this._snackBar.open("Error al obtener encargados", "Cerrar", {
          panelClass: ['red-snackbar'],
          duration: 2000
        });
      },
      complete: () => {
        this.encargados = _data.body.data;
        console.log(this.encargados);
      }
    });
    let response_dominios = {};
    dominios_service.get_all().subscribe({
      next: data => {
        response_dominios = {
          ...response_dominios,
          ...data
        };
      },
      error: err => {},
      complete: () => {
        response_dominios.body.forEach(obj => {
          this.lista_dominios.push(obj);
        });
      }
    });
    this.createForm();
  }
  editar(id, carrera_actual, id_carrera_actual) {
    this.id_encargado = id;
    this.carrera_actual = carrera_actual;
    this.id_carrera_actual = id_carrera_actual;
  }
  editar_carrera(id, nombre, correos_admitidos) {
    this.id_carrera = id;
    this.nombre_carrera = nombre;
    this.correos_admitidos = correos_admitidos;
  }
  eliminar(id, id_carrera) {
    let _data = {};
    this.admin.getEncargadoCarrera(id_carrera).subscribe({
      next: data => {
        _data = {
          ..._data,
          ...data
        };
      },
      error: error => {
        this._snackBar.open("Error al obtener encargados", "Cerrar", {
          panelClass: ['red-snackbar'],
          duration: 2000
        });
      },
      complete: () => {
        console.log(_data.body);
        if (_data.body && _data.body.encargados.length == 1) {
          let decision = confirm("Si elimina a este encargado no habrá encargados en esta carrera, favor, asignar un encargado a esa carrera");
          if (decision) {
            this.admin.eliminarEncargado(id).subscribe({
              next: data => {
                _data = {
                  ..._data,
                  ...data
                };
              },
              error: error => {
                this._snackBar.open("Error al eliminar encargado", "Cerrar", {
                  panelClass: ['red-snackbar'],
                  duration: 2000
                });
              },
              complete: () => {
                if (_data.status == 200) {
                  this._snackBar.open("Encargado eliminado exitosamente, redirigiendo...", "Cerrar", {
                    panelClass: ['green-snackbar'],
                    duration: 2000
                  });
                  setTimeout(function () {
                    window.location.reload();
                  }, 2000);
                } else {
                  this._snackBar.open("Error al eliminar encargado", "Cerrar", {
                    panelClass: ['red-snackbar'],
                    duration: 2000
                  });
                }
              }
            });
          }
        } else {
          this.admin.eliminarEncargado(id).subscribe({
            next: data => {
              _data = {
                ..._data,
                ...data
              };
            },
            error: error => {
              this._snackBar.open("Error al eliminar encargado", "Cerrar", {
                panelClass: ['red-snackbar'],
                duration: 2000
              });
            },
            complete: () => {
              if (_data.status == 200) {
                this._snackBar.open("Encargado eliminado exitosamente, redirigiendo...", "Cerrar", {
                  panelClass: ['green-snackbar'],
                  duration: 2000
                });
                setTimeout(function () {
                  window.location.reload();
                }, 2000);
              } else {
                this._snackBar.open("Error al eliminar encargado", "Cerrar", {
                  panelClass: ['red-snackbar'],
                  duration: 2000
                });
              }
            }
          });
        }
      }
    });
  }
  eliminar_carrera(id) {
    let _data = {};
    this.admin.eliminarCarrera(id).subscribe({
      next: data => {
        _data = {
          ..._data,
          ...data
        };
      },
      error: error => {
        this._snackBar.open("Error al eliminar carrera", "Cerrar", {
          panelClass: ['red-snackbar'],
          duration: 2000
        });
      },
      complete: () => {
        if (_data.status == 200) {
          this._snackBar.open("Carrera eliminada exitosamente, redirigiendo...", "Cerrar", {
            panelClass: ['green-snackbar'],
            duration: 2000
          });
          setTimeout(function () {
            window.location.reload();
          }, 2000);
        } else {
          this._snackBar.open("Error al eliminar carrera", "Cerrar", {
            panelClass: ['red-snackbar'],
            duration: 2000
          });
        }
      }
    });
  }
  eliminar_dominio(id) {
    this.dominios_service.delete(id).subscribe({
      next: _ => {},
      error: err => {
        this._snackBar.open("Error al eliminar dominio", "Cerrar", {
          panelClass: ['red-snackbar'],
          duration: 2000
        });
      },
      complete: () => {
        this._snackBar.open("Dominio eliminado exitosamente, redirigiendo...", "Cerrar", {
          panelClass: ['green-snackbar'],
          duration: 2000
        });
        setTimeout(function () {
          window.location.reload();
        }, 2000);
      }
    });
  }
  static {
    this.ɵfac = function AdminComponent_Factory(__ngFactoryType__) {
      return new (__ngFactoryType__ || AdminComponent)(i0.ɵɵdirectiveInject(i1.AdminService), i0.ɵɵdirectiveInject(i2.DominiosAceptadosService), i0.ɵɵdirectiveInject(i3.MatSnackBar), i0.ɵɵdirectiveInject(i4.FormBuilder), i0.ɵɵdirectiveInject(i5.Router));
    };
  }
  static {
    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({
      type: AdminComponent,
      selectors: [["app-admin"]],
      decls: 69,
      vars: 10,
      consts: [["id", "wrapper"], ["id", "content-wrapper", 1, "d-flex", "flex-column"], ["id", "content", 1, "main-content"], [1, "container-fluid"], [1, "h2", "mb-2", "font-weight-bold", "text-gray-800"], [1, "mb-4"], [1, "card", "shadow", "mb-4"], [1, "card-body"], ["id", "myBtn", "data-target", "#crear-encargado-modal", "data-toggle", "modal", 1, "btn", "btn-primary", "mb-2"], [1, "table-responsive"], ["id", "dataTable", "width", "100%", "cellspacing", "0", 1, "table", "table-striped", "table-bordered", "table-hover"], [2, "vertical-align", "bottom"], [4, "ngFor", "ngForOf"], [1, "row"], [1, "col-6"], ["id", "myBtn", "data-target", "#crear-carrera-modal", "data-toggle", "modal", 1, "btn", "btn-primary", "mb-2"], ["id", "dataTable", "cellspacing", "0", 1, "table", "table-striped", "table-bordered", "table-hover"], ["id", "myBtn", "data-target", "#agregar-dominio-modal", "data-toggle", "modal", 1, "btn", "btn-primary", "mb-2"], ["cellspacing", "0", 1, "table", "table-striped", "table-bordered", "table-hover"], ["href", "#page-top", 1, "scroll-to-top", "rounded"], [1, "fas", "fa-angle-up"], [3, "id_encargado", "carrera_actual", "lista_carreras", "id_carrera_actual"], [3, "id_carrera", "nombre_carrera", "correos_admitidos"], ["data-target", "#editar-encargado-modal", "data-toggle", "modal", 1, "btn", "btn-primary", 3, "click"], [1, "btn", "btn-secondary", "ml-2", 3, "click"], ["data-target", "#editar-carrera-modal", "data-toggle", "modal", 1, "btn", "btn-primary", 3, "click"]],
      template: function AdminComponent_Template(rf, ctx) {
        if (rf & 1) {
          i0.ɵɵelementStart(0, "div", 0);
          i0.ɵɵelement(1, "app-barra-lateral-admin");
          i0.ɵɵelementStart(2, "div", 1)(3, "div", 2);
          i0.ɵɵelement(4, "app-barra-superior");
          i0.ɵɵelementStart(5, "div", 3)(6, "div", 4);
          i0.ɵɵtext(7, "Encargados");
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(8, "p", 5);
          i0.ɵɵtext(9, "Aqui se ve una lista de encargados");
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(10, "div", 6)(11, "div", 7)(12, "button", 8);
          i0.ɵɵtext(13, " Agregar Encargados ");
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(14, "div", 9)(15, "table", 10)(16, "thead")(17, "tr")(18, "th", 11);
          i0.ɵɵtext(19, "Nombre");
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(20, "th", 11);
          i0.ɵɵtext(21, "Carrera Actual");
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(22, "th", 11);
          i0.ɵɵtext(23, "Correo");
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(24, "th", 11);
          i0.ɵɵtext(25, "Acciones");
          i0.ɵɵelementEnd()()();
          i0.ɵɵelementStart(26, "tbody");
          i0.ɵɵtemplate(27, AdminComponent_tr_27_Template, 12, 3, "tr", 12);
          i0.ɵɵelementEnd()()()()();
          i0.ɵɵelementStart(28, "div", 4);
          i0.ɵɵtext(29, "Carreras");
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(30, "p", 5);
          i0.ɵɵtext(31, "Aqui se ve una lista de carreras");
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(32, "div", 6)(33, "div", 7)(34, "div", 13)(35, "div", 14)(36, "button", 15);
          i0.ɵɵtext(37, " Agregar Carreras ");
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(38, "div", 9)(39, "table", 16)(40, "thead")(41, "tr")(42, "th", 11);
          i0.ɵɵtext(43, "Carrera");
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(44, "th", 11);
          i0.ɵɵtext(45, "Acciones");
          i0.ɵɵelementEnd()()();
          i0.ɵɵelementStart(46, "tbody");
          i0.ɵɵtemplate(47, AdminComponent_tr_47_Template, 8, 1, "tr", 12);
          i0.ɵɵelementEnd()()()();
          i0.ɵɵelementStart(48, "div", 14)(49, "button", 17);
          i0.ɵɵtext(50, " Agregar Dominios ");
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(51, "div", 9)(52, "table", 18)(53, "thead")(54, "tr")(55, "th", 11);
          i0.ɵɵtext(56, "Dominios Admitidos");
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(57, "th", 11);
          i0.ɵɵtext(58, "Acci\u00F3n");
          i0.ɵɵelementEnd()()();
          i0.ɵɵelementStart(59, "tbody");
          i0.ɵɵtemplate(60, AdminComponent_tr_60_Template, 6, 1, "tr", 12);
          i0.ɵɵelementEnd()()()()()()()()()()();
          i0.ɵɵelementStart(61, "a", 19);
          i0.ɵɵelement(62, "i", 20);
          i0.ɵɵelementEnd();
          i0.ɵɵelement(63, "app-crear-carrera-modal")(64, "app-crear-encargado-modal")(65, "app-editar-encargado-modal", 21)(66, "app-editar-carrera-modal", 22)(67, "app-agregar-dominio-modal")(68, "app-logout-modal");
        }
        if (rf & 2) {
          i0.ɵɵadvance(27);
          i0.ɵɵproperty("ngForOf", ctx.encargados);
          i0.ɵɵadvance(20);
          i0.ɵɵproperty("ngForOf", ctx.carreras);
          i0.ɵɵadvance(13);
          i0.ɵɵproperty("ngForOf", ctx.lista_dominios);
          i0.ɵɵadvance(5);
          i0.ɵɵproperty("id_encargado", ctx.id_encargado)("carrera_actual", ctx.carrera_actual)("lista_carreras", ctx.carreras)("id_carrera_actual", ctx.id_carrera_actual);
          i0.ɵɵadvance();
          i0.ɵɵproperty("id_carrera", ctx.id_carrera)("nombre_carrera", ctx.nombre_carrera)("correos_admitidos", ctx.correos_admitidos);
        }
      },
      dependencies: [i6.NgForOf, i7.BarraSuperiorComponent, i8.LogoutModalComponent, i9.BarraLateralAdminComponent, i10.EditarEncargadoModalComponent, i11.CrearEncargadoModalComponent, i12.CrearCarreraModalComponent, i13.EditarCarreraModalComponent, i14.AgregarDominioModalComponent],
      styles: ["/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */"]
    });
  }
}
exports.AdminComponent = AdminComponent;

/***/ }),

/***/ 94805:
/*!***************************************************!*\
  !*** ./src/app/vistas/alumno/alumno.component.ts ***!
  \***************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



var _asyncToGenerator = (__webpack_require__(/*! ./node_modules/@babel/runtime/helpers/asyncToGenerator.js */ 95386)["default"]);
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.DetalleAlumnoComponent = void 0;
const environment_1 = __webpack_require__(/*! src/environments/environment */ 45312);
const i0 = __webpack_require__(/*! @angular/core */ 37580);
const i1 = __webpack_require__(/*! src/app/servicios/alumno/obtener_datos.service */ 27095);
const i2 = __webpack_require__(/*! @angular/router */ 95072);
const i3 = __webpack_require__(/*! @angular/material/snack-bar */ 3347);
const i4 = __webpack_require__(/*! src/app/servicios/alumno/gestionar_practica.service */ 6632);
const i5 = __webpack_require__(/*! src/app/servicios/supervisor/supervisor.service */ 40588);
const i6 = __webpack_require__(/*! src/app/servicios/notificaciones/notificaciones.service */ 22004);
const i7 = __webpack_require__(/*! src/app/servicios/data_usuario/data-usuario.service */ 94160);
const i8 = __webpack_require__(/*! @angular/common */ 60316);
const i9 = __webpack_require__(/*! @angular/material/datepicker */ 61977);
const i10 = __webpack_require__(/*! ../../componentes/iniciar-practica/iniciar-practica.component */ 83588);
const i11 = __webpack_require__(/*! ../../componentes/barra-superior/barra-superior.component */ 36370);
const i12 = __webpack_require__(/*! ../../componentes/logout-modal/logout-modal.component */ 15562);
const i13 = __webpack_require__(/*! ../../componentes/barra-lateral-alumno/barra-lateral-alumno.component */ 72756);
const i14 = __webpack_require__(/*! ../../componentes/subir-archivo-extra/subir-archivo-extra.component */ 51052);
const i15 = __webpack_require__(/*! ../../componentes/subir-archivo/subir-archivo.component */ 75296);
const i16 = __webpack_require__(/*! ../../componentes/subir-archivo-informe-final/subir-archivo-informe-final.component */ 66760);
function DetalleAlumnoComponent_div_13_div_4_div_8_div_1_div_3_Template(rf, ctx) {
  if (rf & 1) {
    const _r1 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "div")(1, "button", 44);
    i0.ɵɵlistener("click", function DetalleAlumnoComponent_div_13_div_4_div_8_div_1_div_3_Template_button_click_1_listener() {
      i0.ɵɵrestoreView(_r1);
      const practica_r2 = i0.ɵɵnextContext(4).$implicit;
      const ctx_r2 = i0.ɵɵnextContext();
      return i0.ɵɵresetView(ctx_r2.finalizar_practica(practica_r2[1]));
    });
    i0.ɵɵtext(2, " Finalizar Pr\u00E1ctica");
    i0.ɵɵelementEnd()();
  }
}
function DetalleAlumnoComponent_div_13_div_4_div_8_div_1_ng_template_4_Template(rf, ctx) {
  if (rf & 1) {
    const _r4 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "button", 45);
    i0.ɵɵlistener("click", function DetalleAlumnoComponent_div_13_div_4_div_8_div_1_ng_template_4_Template_button_click_0_listener() {
      i0.ɵɵrestoreView(_r4);
      const ctx_r2 = i0.ɵɵnextContext(5);
      return i0.ɵɵresetView(ctx_r2.warning_practica());
    });
    i0.ɵɵtext(1, " Finalizar Pr\u00E1ctica");
    i0.ɵɵelementEnd();
  }
  if (rf & 2) {
    const ctx_r2 = i0.ɵɵnextContext(5);
    i0.ɵɵpropertyInterpolate("title", ctx_r2.warning_text);
  }
}
function DetalleAlumnoComponent_div_13_div_4_div_8_div_1_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 11);
    i0.ɵɵelement(1, "div", 42);
    i0.ɵɵelementStart(2, "div", 43);
    i0.ɵɵtemplate(3, DetalleAlumnoComponent_div_13_div_4_div_8_div_1_div_3_Template, 3, 0, "div", 26)(4, DetalleAlumnoComponent_div_13_div_4_div_8_div_1_ng_template_4_Template, 2, 1, "ng-template", null, 2, i0.ɵɵtemplateRefExtractor);
    i0.ɵɵelementEnd()();
  }
  if (rf & 2) {
    const elsedocument_r5 = i0.ɵɵreference(5);
    const practica_r2 = i0.ɵɵnextContext(3).$implicit;
    const ctx_r2 = i0.ɵɵnextContext();
    i0.ɵɵadvance(3);
    i0.ɵɵproperty("ngIf", ctx_r2.documentos_enviados[practica_r2[1].id] == 1)("ngIfElse", elsedocument_r5);
  }
}
function DetalleAlumnoComponent_div_13_div_4_div_8_tr_36_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "tr")(1, "td");
    i0.ɵɵtext(2, "Frecuencia de Informes:");
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(3, "td");
    i0.ɵɵtext(4);
    i0.ɵɵelementEnd()();
  }
  if (rf & 2) {
    const practica_r2 = i0.ɵɵnextContext(3).$implicit;
    i0.ɵɵadvance(4);
    i0.ɵɵtextInterpolate(practica_r2[1] == null ? null : practica_r2[1].modalidad == null ? null : practica_r2[1].modalidad.config_practica == null ? null : practica_r2[1].modalidad.config_practica.frecuencia_informes);
  }
}
function DetalleAlumnoComponent_div_13_div_4_div_8_i_69_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelement(0, "i", 46);
  }
}
function DetalleAlumnoComponent_div_13_div_4_div_8_div_80_tr_10_ng_container_1_div_8_button_1_Template(rf, ctx) {
  if (rf & 1) {
    const _r6 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "button", 50);
    i0.ɵɵlistener("click", function DetalleAlumnoComponent_div_13_div_4_div_8_div_80_tr_10_ng_container_1_div_8_button_1_Template_button_click_0_listener() {
      i0.ɵɵrestoreView(_r6);
      const informe_r7 = i0.ɵɵnextContext(3).$implicit;
      const ctx_r2 = i0.ɵɵnextContext(5);
      return i0.ɵɵresetView(ctx_r2.redirigir_a_ingreso_informe(informe_r7.id));
    });
    i0.ɵɵtext(1, "Responder");
    i0.ɵɵelementEnd();
  }
}
function DetalleAlumnoComponent_div_13_div_4_div_8_div_80_tr_10_ng_container_1_div_8_ng_template_2_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "a", 51)(1, "button", 52);
    i0.ɵɵtext(2, " Ver Informe ");
    i0.ɵɵelementEnd()();
  }
  if (rf & 2) {
    const informe_r7 = i0.ɵɵnextContext(3).$implicit;
    const practica_r2 = i0.ɵɵnextContext(4).$implicit;
    i0.ɵɵpropertyInterpolate2("href", "/estudiante-ver-informe/", practica_r2[1].id, "/", informe_r7.id, "", i0.ɵɵsanitizeUrl);
  }
}
function DetalleAlumnoComponent_div_13_div_4_div_8_div_80_tr_10_ng_container_1_div_8_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div");
    i0.ɵɵtemplate(1, DetalleAlumnoComponent_div_13_div_4_div_8_div_80_tr_10_ng_container_1_div_8_button_1_Template, 2, 0, "button", 49)(2, DetalleAlumnoComponent_div_13_div_4_div_8_div_80_tr_10_ng_container_1_div_8_ng_template_2_Template, 3, 3, "ng-template", null, 3, i0.ɵɵtemplateRefExtractor);
    i0.ɵɵelementEnd();
  }
  if (rf & 2) {
    const yaSeSubio_r8 = i0.ɵɵreference(3);
    const informe_r7 = i0.ɵɵnextContext(2).$implicit;
    const ctx_r2 = i0.ɵɵnextContext(5);
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngIf", !informe_r7.key || ctx_r2.isEmptyObject(informe_r7.key))("ngIfElse", yaSeSubio_r8);
  }
}
function DetalleAlumnoComponent_div_13_div_4_div_8_div_80_tr_10_ng_container_1_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementContainerStart(0);
    i0.ɵɵelementStart(1, "td", 31)(2, "b");
    i0.ɵɵtext(3);
    i0.ɵɵelementEnd()();
    i0.ɵɵelementStart(4, "td", 47);
    i0.ɵɵtext(5);
    i0.ɵɵpipe(6, "date");
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(7, "td", 48);
    i0.ɵɵtemplate(8, DetalleAlumnoComponent_div_13_div_4_div_8_div_80_tr_10_ng_container_1_div_8_Template, 4, 2, "div", 32);
    i0.ɵɵelementEnd();
    i0.ɵɵelementContainerEnd();
  }
  if (rf & 2) {
    const informe_r7 = i0.ɵɵnextContext().$implicit;
    i0.ɵɵadvance(3);
    i0.ɵɵtextInterpolate(informe_r7 == null ? null : informe_r7.config_informe == null ? null : informe_r7.config_informe.tipo_informe);
    i0.ɵɵadvance(2);
    i0.ɵɵtextInterpolate1(" ", i0.ɵɵpipeBind2(6, 3, informe_r7 == null ? null : informe_r7.fecha, "dd/MM/yyyy"), "");
    i0.ɵɵadvance(3);
    i0.ɵɵproperty("ngIf", (informe_r7 == null ? null : informe_r7.config_informe == null ? null : informe_r7.config_informe.archivo_o_encuesta) != "archivo");
  }
}
function DetalleAlumnoComponent_div_13_div_4_div_8_div_80_tr_10_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "tr");
    i0.ɵɵtemplate(1, DetalleAlumnoComponent_div_13_div_4_div_8_div_80_tr_10_ng_container_1_Template, 9, 6, "ng-container", 32);
    i0.ɵɵelementEnd();
  }
  if (rf & 2) {
    const informe_r7 = ctx.$implicit;
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngIf", (informe_r7 == null ? null : informe_r7.config_informe == null ? null : informe_r7.config_informe.tipo_informe) != "informe final");
  }
}
function DetalleAlumnoComponent_div_13_div_4_div_8_div_80_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 37)(1, "table", 38)(2, "thead")(3, "tr")(4, "th", 31);
    i0.ɵɵtext(5, " Tipo");
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(6, "th", 47);
    i0.ɵɵtext(7, " Fecha");
    i0.ɵɵelementEnd();
    i0.ɵɵelement(8, "th", 47);
    i0.ɵɵelementEnd()();
    i0.ɵɵelementStart(9, "tbody");
    i0.ɵɵtemplate(10, DetalleAlumnoComponent_div_13_div_4_div_8_div_80_tr_10_Template, 2, 1, "tr", 39);
    i0.ɵɵelementEnd()()();
  }
  if (rf & 2) {
    const practica_r2 = i0.ɵɵnextContext(3).$implicit;
    i0.ɵɵadvance(10);
    i0.ɵɵproperty("ngForOf", practica_r2[1].informes);
  }
}
function DetalleAlumnoComponent_div_13_div_4_div_8_ng_template_81_Template(rf, ctx) {
  if (rf & 1) {
    const _r9 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "p", 53);
    i0.ɵɵtext(1, "En verde se muestran los informes que ya has respondido, en amarillo los que a\u00FAn no has respondido.");
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(2, "table", 54)(3, "tr");
    i0.ɵɵelement(4, "td", 55);
    i0.ɵɵelementStart(5, "td", 56)(6, "mat-calendar", 57);
    i0.ɵɵlistener("selectedChange", function DetalleAlumnoComponent_div_13_div_4_div_8_ng_template_81_Template_mat_calendar_selectedChange_6_listener($event) {
      i0.ɵɵrestoreView(_r9);
      const practica_r2 = i0.ɵɵnextContext(3).$implicit;
      const ctx_r2 = i0.ɵɵnextContext();
      return i0.ɵɵresetView(ctx_r2.onFechaClick($event, practica_r2[1].id));
    });
    i0.ɵɵelementEnd()();
    i0.ɵɵelement(7, "td", 55);
    i0.ɵɵelementEnd()();
  }
  if (rf & 2) {
    const ctx_r9 = i0.ɵɵnextContext(3);
    const practica_r2 = ctx_r9.$implicit;
    const i_r11 = ctx_r9.index;
    const ctx_r2 = i0.ɵɵnextContext();
    i0.ɵɵadvance(6);
    i0.ɵɵclassMapInterpolate1("calendario", i_r11, "");
    i0.ɵɵproperty("selected", ctx_r2.selectedDate)("minDate", ctx_r2.minDate)("dateClass", ctx_r2.dateClass(i_r11, practica_r2[1].id));
  }
}
function DetalleAlumnoComponent_div_13_div_4_div_8_tr_103_app_subir_archivo_8_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelement(0, "app-subir-archivo", 60);
  }
  if (rf & 2) {
    const solicitud_r12 = i0.ɵɵnextContext().$implicit;
    const practica_r2 = i0.ɵɵnextContext(3).$implicit;
    const ctx_r2 = i0.ɵɵnextContext();
    i0.ɵɵproperty("id_solicitud", solicitud_r12.id)("id_practica", practica_r2[1].id)("descripcion", solicitud_r12.descripcion)("nombre_solicitud", solicitud_r12.nombre_solicitud)("tipo_archivo", solicitud_r12.tipo_archivo)("id_encargado_usuario", practica_r2[1].encargado.id_usuario)("correo_encargado", practica_r2[1].encargado.usuario.correo)("estado_config", ctx_r2.estado_config)("id_estudiante_usuario", ctx_r2.usuario.id);
  }
}
function DetalleAlumnoComponent_div_13_div_4_div_8_tr_103_button_9_Template(rf, ctx) {
  if (rf & 1) {
    const _r13 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "button", 61);
    i0.ɵɵlistener("click", function DetalleAlumnoComponent_div_13_div_4_div_8_tr_103_button_9_Template_button_click_0_listener() {
      i0.ɵɵrestoreView(_r13);
      const solicitud_r12 = i0.ɵɵnextContext().$implicit;
      const ctx_r2 = i0.ɵɵnextContext(4);
      return i0.ɵɵresetView(ctx_r2.descargar_documento(solicitud_r12.documentos[0].id, ctx_r2.doc_str));
    });
    i0.ɵɵtext(1, "Descargar");
    i0.ɵɵelementEnd();
  }
}
function DetalleAlumnoComponent_div_13_div_4_div_8_tr_103_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "tr")(1, "td");
    i0.ɵɵtext(2);
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(3, "td");
    i0.ɵɵtext(4);
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(5, "td");
    i0.ɵɵtext(6, "Normal");
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(7, "td", 18);
    i0.ɵɵtemplate(8, DetalleAlumnoComponent_div_13_div_4_div_8_tr_103_app_subir_archivo_8_Template, 1, 9, "app-subir-archivo", 58)(9, DetalleAlumnoComponent_div_13_div_4_div_8_tr_103_button_9_Template, 2, 0, "button", 59);
    i0.ɵɵelementEnd()();
  }
  if (rf & 2) {
    const solicitud_r12 = ctx.$implicit;
    i0.ɵɵadvance(2);
    i0.ɵɵtextInterpolate1("", solicitud_r12 == null ? null : solicitud_r12.nombre_solicitud, " ");
    i0.ɵɵadvance(2);
    i0.ɵɵtextInterpolate1("", solicitud_r12 == null ? null : solicitud_r12.tipo_archivo, " ");
    i0.ɵɵadvance(3);
    i0.ɵɵproperty("ngSwitch", solicitud_r12.documentos.length);
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngSwitchCase", 0);
  }
}
function DetalleAlumnoComponent_div_13_div_4_div_8_tr_104_app_subir_archivo_extra_8_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelement(0, "app-subir-archivo-extra", 63);
  }
  if (rf & 2) {
    const doc_extra_r14 = i0.ɵɵnextContext().$implicit;
    const ctx_r2 = i0.ɵɵnextContext(4);
    i0.ɵɵproperty("id_documento_extra", doc_extra_r14.id)("descripcion", doc_extra_r14.descripcion)("nombre_solicitud", doc_extra_r14.nombre_solicitud)("tipo_archivo", doc_extra_r14.tipo_archivo)("estado_config", ctx_r2.estado_config)("id_estudiante_usuario", ctx_r2.usuario.id);
  }
}
function DetalleAlumnoComponent_div_13_div_4_div_8_tr_104_ng_template_9_Template(rf, ctx) {
  if (rf & 1) {
    const _r15 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "button", 61);
    i0.ɵɵlistener("click", function DetalleAlumnoComponent_div_13_div_4_div_8_tr_104_ng_template_9_Template_button_click_0_listener() {
      i0.ɵɵrestoreView(_r15);
      const doc_extra_r14 = i0.ɵɵnextContext().$implicit;
      const ctx_r2 = i0.ɵɵnextContext(4);
      return i0.ɵɵresetView(ctx_r2.descargar_documento(doc_extra_r14.id, ctx_r2.doc_extra_str));
    });
    i0.ɵɵtext(1, "Descargar");
    i0.ɵɵelementEnd();
  }
}
function DetalleAlumnoComponent_div_13_div_4_div_8_tr_104_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "tr")(1, "td");
    i0.ɵɵtext(2);
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(3, "td");
    i0.ɵɵtext(4);
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(5, "td");
    i0.ɵɵtext(6, "Extra");
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(7, "td");
    i0.ɵɵtemplate(8, DetalleAlumnoComponent_div_13_div_4_div_8_tr_104_app_subir_archivo_extra_8_Template, 1, 6, "app-subir-archivo-extra", 62)(9, DetalleAlumnoComponent_div_13_div_4_div_8_tr_104_ng_template_9_Template, 2, 0, "ng-template", null, 4, i0.ɵɵtemplateRefExtractor);
    i0.ɵɵelementEnd()();
  }
  if (rf & 2) {
    const doc_extra_r14 = ctx.$implicit;
    const elseBlock_r16 = i0.ɵɵreference(10);
    i0.ɵɵadvance(2);
    i0.ɵɵtextInterpolate1("", doc_extra_r14 == null ? null : doc_extra_r14.nombre_solicitud, " ");
    i0.ɵɵadvance(2);
    i0.ɵɵtextInterpolate1("", doc_extra_r14 == null ? null : doc_extra_r14.tipo_archivo, " ");
    i0.ɵɵadvance(4);
    i0.ɵɵproperty("ngIf", !doc_extra_r14.key || doc_extra_r14.key.length == 0)("ngIfElse", elseBlock_r16);
  }
}
function DetalleAlumnoComponent_div_13_div_4_div_8_div_105_ng_template_8_tbody_8_tr_1_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "tr")(1, "td", 67);
    i0.ɵɵtext(2);
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(3, "td", 67);
    i0.ɵɵtext(4);
    i0.ɵɵelementEnd()();
  }
  if (rf & 2) {
    const comentario_r17 = ctx.$implicit;
    i0.ɵɵadvance(2);
    i0.ɵɵtextInterpolate1("", comentario_r17.pregunta, " ");
    i0.ɵɵadvance(2);
    i0.ɵɵtextInterpolate1("", comentario_r17.respuesta, " ");
  }
}
function DetalleAlumnoComponent_div_13_div_4_div_8_div_105_ng_template_8_tbody_8_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "tbody");
    i0.ɵɵtemplate(1, DetalleAlumnoComponent_div_13_div_4_div_8_div_105_ng_template_8_tbody_8_tr_1_Template, 5, 2, "tr", 39);
    i0.ɵɵelementEnd();
  }
  if (rf & 2) {
    const practica_r2 = i0.ɵɵnextContext(5).$implicit;
    const ctx_r2 = i0.ɵɵnextContext();
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngForOf", ctx_r2.resenas_supervisor[practica_r2[1].id]);
  }
}
function DetalleAlumnoComponent_div_13_div_4_div_8_div_105_ng_template_8_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 37)(1, "table", 38)(2, "thead")(3, "tr")(4, "th", 66);
    i0.ɵɵtext(5, " Pregunta ");
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(6, "th", 66);
    i0.ɵɵtext(7, " Respuesta ");
    i0.ɵɵelementEnd()()();
    i0.ɵɵtemplate(8, DetalleAlumnoComponent_div_13_div_4_div_8_div_105_ng_template_8_tbody_8_Template, 2, 1, "tbody", 32);
    i0.ɵɵelementEnd()();
  }
  if (rf & 2) {
    const practica_r2 = i0.ɵɵnextContext(4).$implicit;
    const ctx_r2 = i0.ɵɵnextContext();
    i0.ɵɵadvance(8);
    i0.ɵɵproperty("ngIf", ctx_r2.resenas_supervisor.hasOwnProperty(practica_r2[1].id));
  }
}
function DetalleAlumnoComponent_div_13_div_4_div_8_div_105_ng_template_9_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵtext(0, "No hay comentarios en esta pr\u00E1ctica");
  }
}
function DetalleAlumnoComponent_div_13_div_4_div_8_div_105_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 29)(1, "div", 17)(2, "a", 30)(3, "h4", 22);
    i0.ɵɵtext(4, " Comentarios de supervisor");
    i0.ɵɵelementEnd()();
    i0.ɵɵelementStart(5, "div")(6, "div", 64)(7, "div");
    i0.ɵɵtemplate(8, DetalleAlumnoComponent_div_13_div_4_div_8_div_105_ng_template_8_Template, 9, 1, "ng-template", 65)(9, DetalleAlumnoComponent_div_13_div_4_div_8_div_105_ng_template_9_Template, 1, 0, "ng-template", null, 5, i0.ɵɵtemplateRefExtractor);
    i0.ɵɵelementEnd()()()()();
  }
  if (rf & 2) {
    const case_r18 = i0.ɵɵreference(10);
    const practica_r2 = i0.ɵɵnextContext(3).$implicit;
    const ctx_r2 = i0.ɵɵnextContext();
    i0.ɵɵadvance(8);
    i0.ɵɵproperty("ngIf", ctx_r2.flag[practica_r2[1].id])("ngIfElse", case_r18);
  }
}
function DetalleAlumnoComponent_div_13_div_4_div_8_div_106_ng_container_6_ng_container_1_div_2_button_1_Template(rf, ctx) {
  if (rf & 1) {
    const _r19 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "button", 70);
    i0.ɵɵlistener("click", function DetalleAlumnoComponent_div_13_div_4_div_8_div_106_ng_container_6_ng_container_1_div_2_button_1_Template_button_click_0_listener() {
      i0.ɵɵrestoreView(_r19);
      const informe_r20 = i0.ɵɵnextContext(3).$implicit;
      const ctx_r2 = i0.ɵɵnextContext(5);
      return i0.ɵɵresetView(ctx_r2.redirigir_a_ingreso_informe(informe_r20.id));
    });
    i0.ɵɵtext(1, "Responder");
    i0.ɵɵelementEnd();
  }
}
function DetalleAlumnoComponent_div_13_div_4_div_8_div_106_ng_container_6_ng_container_1_div_2_ng_template_2_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "a", 51)(1, "button", 71);
    i0.ɵɵtext(2, " Ver Informe ");
    i0.ɵɵelementEnd()();
  }
  if (rf & 2) {
    const informe_r20 = i0.ɵɵnextContext(3).$implicit;
    const practica_r2 = i0.ɵɵnextContext(4).$implicit;
    i0.ɵɵpropertyInterpolate2("href", "/estudiante-ver-informe/", practica_r2[1].id, "/", informe_r20.id, "", i0.ɵɵsanitizeUrl);
  }
}
function DetalleAlumnoComponent_div_13_div_4_div_8_div_106_ng_container_6_ng_container_1_div_2_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div");
    i0.ɵɵtemplate(1, DetalleAlumnoComponent_div_13_div_4_div_8_div_106_ng_container_6_ng_container_1_div_2_button_1_Template, 2, 0, "button", 69)(2, DetalleAlumnoComponent_div_13_div_4_div_8_div_106_ng_container_6_ng_container_1_div_2_ng_template_2_Template, 3, 3, "ng-template", null, 3, i0.ɵɵtemplateRefExtractor);
    i0.ɵɵelementEnd();
  }
  if (rf & 2) {
    const yaSeSubio_r21 = i0.ɵɵreference(3);
    const informe_r20 = i0.ɵɵnextContext(2).$implicit;
    const ctx_r2 = i0.ɵɵnextContext(5);
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngIf", !informe_r20.key || ctx_r2.isEmptyObject(informe_r20.key))("ngIfElse", yaSeSubio_r21);
  }
}
function DetalleAlumnoComponent_div_13_div_4_div_8_div_106_ng_container_6_ng_container_1_ng_template_3_div_2_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 76);
    i0.ɵɵtext(1, " Informe final no subido a\u00FAn");
    i0.ɵɵelementEnd();
  }
}
function DetalleAlumnoComponent_div_13_div_4_div_8_div_106_ng_container_6_ng_container_1_ng_template_3_app_subir_archivo_informe_final_3_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelement(0, "app-subir-archivo-informe-final", 77);
  }
  if (rf & 2) {
    const informe_r20 = i0.ɵɵnextContext(3).$implicit;
    i0.ɵɵproperty("id_informe", informe_r20.id)("tipo_archivo", informe_r20.config_informe == null ? null : informe_r20.config_informe.tipo_archivo);
  }
}
function DetalleAlumnoComponent_div_13_div_4_div_8_div_106_ng_container_6_ng_container_1_ng_template_3_ng_template_4_Template(rf, ctx) {
  if (rf & 1) {
    const _r22 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "div", 76);
    i0.ɵɵtext(1, " Informe final ya subido");
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(2, "button", 78)(3, "a", 79);
    i0.ɵɵtext(4, "Descargar");
    i0.ɵɵelementEnd()();
    i0.ɵɵelementStart(5, "button", 80);
    i0.ɵɵlistener("click", function DetalleAlumnoComponent_div_13_div_4_div_8_div_106_ng_container_6_ng_container_1_ng_template_3_ng_template_4_Template_button_click_5_listener() {
      i0.ɵɵrestoreView(_r22);
      const informe_r20 = i0.ɵɵnextContext(3).$implicit;
      const ctx_r2 = i0.ɵɵnextContext(5);
      return i0.ɵɵresetView(ctx_r2.eliminarArchivoInformeFinal(informe_r20.id));
    });
    i0.ɵɵtext(6, "Eliminar");
    i0.ɵɵelementEnd();
  }
  if (rf & 2) {
    const informe_r20 = i0.ɵɵnextContext(3).$implicit;
    i0.ɵɵadvance(3);
    i0.ɵɵproperty("href", "https://d2v9ocre132gvc.cloudfront.net/" + (informe_r20 == null ? null : informe_r20.key == null ? null : informe_r20.key.filename), i0.ɵɵsanitizeUrl);
  }
}
function DetalleAlumnoComponent_div_13_div_4_div_8_div_106_ng_container_6_ng_container_1_ng_template_3_button_8_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "button", 81)(1, "a", 79);
    i0.ɵɵtext(2, "Ver plantilla");
    i0.ɵɵelementEnd()();
  }
  if (rf & 2) {
    const informe_r20 = i0.ɵɵnextContext(3).$implicit;
    i0.ɵɵadvance();
    i0.ɵɵproperty("href", "https://d2v9ocre132gvc.cloudfront.net/" + (informe_r20.config_informe == null ? null : informe_r20.config_informe.plantilla), i0.ɵɵsanitizeUrl);
  }
}
function DetalleAlumnoComponent_div_13_div_4_div_8_div_106_ng_container_6_ng_container_1_ng_template_3_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 11)(1, "div", 72);
    i0.ɵɵtemplate(2, DetalleAlumnoComponent_div_13_div_4_div_8_div_106_ng_container_6_ng_container_1_ng_template_3_div_2_Template, 2, 0, "div", 73)(3, DetalleAlumnoComponent_div_13_div_4_div_8_div_106_ng_container_6_ng_container_1_ng_template_3_app_subir_archivo_informe_final_3_Template, 1, 2, "app-subir-archivo-informe-final", 74)(4, DetalleAlumnoComponent_div_13_div_4_div_8_div_106_ng_container_6_ng_container_1_ng_template_3_ng_template_4_Template, 7, 1, "ng-template", null, 3, i0.ɵɵtemplateRefExtractor);
    i0.ɵɵelementEnd()();
    i0.ɵɵelementStart(6, "div", 11)(7, "div", 72);
    i0.ɵɵtemplate(8, DetalleAlumnoComponent_div_13_div_4_div_8_div_106_ng_container_6_ng_container_1_ng_template_3_button_8_Template, 3, 1, "button", 75);
    i0.ɵɵelementEnd()();
  }
  if (rf & 2) {
    const yaSeSubio_r23 = i0.ɵɵreference(5);
    const informe_r20 = i0.ɵɵnextContext(2).$implicit;
    const ctx_r2 = i0.ɵɵnextContext(5);
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngIf", !informe_r20.key || ctx_r2.isEmptyObject(informe_r20.key));
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngIf", !informe_r20.key || ctx_r2.isEmptyObject(informe_r20.key))("ngIfElse", yaSeSubio_r23);
    i0.ɵɵadvance(5);
    i0.ɵɵproperty("ngIf", (informe_r20.config_informe == null ? null : informe_r20.config_informe.plantilla) != null && (informe_r20.config_informe == null ? null : informe_r20.config_informe.plantilla) != "");
  }
}
function DetalleAlumnoComponent_div_13_div_4_div_8_div_106_ng_container_6_ng_container_1_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementContainerStart(0);
    i0.ɵɵelementStart(1, "div", 68);
    i0.ɵɵtemplate(2, DetalleAlumnoComponent_div_13_div_4_div_8_div_106_ng_container_6_ng_container_1_div_2_Template, 4, 2, "div", 26)(3, DetalleAlumnoComponent_div_13_div_4_div_8_div_106_ng_container_6_ng_container_1_ng_template_3_Template, 9, 4, "ng-template", null, 6, i0.ɵɵtemplateRefExtractor);
    i0.ɵɵelementEnd();
    i0.ɵɵelementContainerEnd();
  }
  if (rf & 2) {
    const informeArchivo_r24 = i0.ɵɵreference(4);
    const informe_r20 = i0.ɵɵnextContext().$implicit;
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngIf", (informe_r20 == null ? null : informe_r20.config_informe == null ? null : informe_r20.config_informe.archivo_o_encuesta) == "encuesta")("ngIfElse", informeArchivo_r24);
  }
}
function DetalleAlumnoComponent_div_13_div_4_div_8_div_106_ng_container_6_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementContainerStart(0);
    i0.ɵɵtemplate(1, DetalleAlumnoComponent_div_13_div_4_div_8_div_106_ng_container_6_ng_container_1_Template, 5, 2, "ng-container", 32);
    i0.ɵɵelementContainerEnd();
  }
  if (rf & 2) {
    const informe_r20 = ctx.$implicit;
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngIf", (informe_r20 == null ? null : informe_r20.config_informe == null ? null : informe_r20.config_informe.tipo_informe) == "informe final");
  }
}
function DetalleAlumnoComponent_div_13_div_4_div_8_div_106_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 29)(1, "div", 17)(2, "a", 30)(3, "h4", 22);
    i0.ɵɵtext(4, " Informe Final");
    i0.ɵɵelementEnd()();
    i0.ɵɵelementStart(5, "div", 35);
    i0.ɵɵtemplate(6, DetalleAlumnoComponent_div_13_div_4_div_8_div_106_ng_container_6_Template, 2, 1, "ng-container", 39);
    i0.ɵɵelementEnd()()();
  }
  if (rf & 2) {
    const practica_r2 = i0.ɵɵnextContext(3).$implicit;
    i0.ɵɵadvance(6);
    i0.ɵɵproperty("ngForOf", practica_r2[1].informes);
  }
}
function DetalleAlumnoComponent_div_13_div_4_div_8_div_107_tr_18_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "tr")(1, "th");
    i0.ɵɵtext(2);
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(3, "th");
    i0.ɵɵtext(4);
    i0.ɵɵelementEnd()();
  }
  if (rf & 2) {
    const aptitud_r25 = ctx.$implicit;
    const j_r26 = ctx.index;
    const i_r11 = i0.ɵɵnextContext(4).index;
    const ctx_r2 = i0.ɵɵnextContext();
    i0.ɵɵadvance(2);
    i0.ɵɵtextInterpolate(aptitud_r25);
    i0.ɵɵadvance(2);
    i0.ɵɵtextInterpolate1("", ctx_r2.notas_aptitudes[i_r11][j_r26], " ");
  }
}
function DetalleAlumnoComponent_div_13_div_4_div_8_div_107_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 28)(1, "div", 29)(2, "div", 17)(3, "a", 30)(4, "h4", 22);
    i0.ɵɵtext(5, " Evaluaci\u00F3n Supervisor");
    i0.ɵɵelementEnd()();
    i0.ɵɵelementStart(6, "div", 82)(7, "div", 25)(8, "div", 83)(9, "div", 37)(10, "table", 38)(11, "thead")(12, "tr")(13, "th");
    i0.ɵɵtext(14, "Competencia");
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(15, "th");
    i0.ɵɵtext(16, "Evaluaci\u00F3n");
    i0.ɵɵelementEnd()()();
    i0.ɵɵelementStart(17, "tbody");
    i0.ɵɵtemplate(18, DetalleAlumnoComponent_div_13_div_4_div_8_div_107_tr_18_Template, 5, 2, "tr", 39);
    i0.ɵɵelementStart(19, "tr")(20, "th");
    i0.ɵɵtext(21, "Promedio");
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(22, "th");
    i0.ɵɵtext(23);
    i0.ɵɵelementEnd()()()()()()()()()()();
  }
  if (rf & 2) {
    const i_r11 = i0.ɵɵnextContext(3).index;
    const ctx_r2 = i0.ɵɵnextContext();
    i0.ɵɵadvance(18);
    i0.ɵɵproperty("ngForOf", ctx_r2.aptitudes_practica[i_r11]);
    i0.ɵɵadvance(5);
    i0.ɵɵtextInterpolate1("", (ctx_r2.notas_promedio[i_r11] == null ? null : ctx_r2.notas_promedio[i_r11].toString().indexOf(".")) == -1 ? ctx_r2.notas_promedio[i_r11] == null ? null : ctx_r2.notas_promedio[i_r11].toString() : ctx_r2.notas_promedio[i_r11] == null ? null : ctx_r2.notas_promedio[i_r11].toString().slice(0, (ctx_r2.notas_promedio[i_r11] == null ? null : ctx_r2.notas_promedio[i_r11].toString().indexOf(".")) + 3).replace(".", ","), " ");
  }
}
function DetalleAlumnoComponent_div_13_div_4_div_8_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div");
    i0.ɵɵtemplate(1, DetalleAlumnoComponent_div_13_div_4_div_8_div_1_Template, 6, 2, "div", 27);
    i0.ɵɵelementStart(2, "div", 11)(3, "div", 16)(4, "div", 25)(5, "div", 28)(6, "div", 29)(7, "div", 17)(8, "a", 30)(9, "h4", 22);
    i0.ɵɵtext(10, " Pr\u00E1ctica");
    i0.ɵɵelementEnd()();
    i0.ɵɵelementStart(11, "div")(12, "div", 25)(13, "table", 31)(14, "tr")(15, "td");
    i0.ɵɵtext(16, "Estado:");
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(17, "td");
    i0.ɵɵtext(18);
    i0.ɵɵelementEnd()();
    i0.ɵɵelementStart(19, "tr")(20, "td");
    i0.ɵɵtext(21, "Modalidad:");
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(22, "td");
    i0.ɵɵtext(23);
    i0.ɵɵelementEnd()();
    i0.ɵɵelementStart(24, "tr")(25, "td");
    i0.ɵɵtext(26, "Fecha Inicio:");
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(27, "td");
    i0.ɵɵtext(28);
    i0.ɵɵpipe(29, "date");
    i0.ɵɵelementEnd()();
    i0.ɵɵelementStart(30, "tr")(31, "td");
    i0.ɵɵtext(32, "Fecha T\u00E9rmino:");
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(33, "td");
    i0.ɵɵtext(34);
    i0.ɵɵpipe(35, "date");
    i0.ɵɵelementEnd()();
    i0.ɵɵtemplate(36, DetalleAlumnoComponent_div_13_div_4_div_8_tr_36_Template, 5, 1, "tr", 32);
    i0.ɵɵelementEnd()()()()();
    i0.ɵɵelementStart(37, "div", 29)(38, "div", 17)(39, "a", 30)(40, "h4", 22);
    i0.ɵɵtext(41, " Empresa");
    i0.ɵɵelementEnd()();
    i0.ɵɵelementStart(42, "div")(43, "div", 25)(44, "table", 33)(45, "tr")(46, "td");
    i0.ɵɵtext(47, "Nombre Empresa:");
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(48, "td");
    i0.ɵɵtext(49);
    i0.ɵɵelementEnd()();
    i0.ɵɵelementStart(50, "tr")(51, "td");
    i0.ɵɵtext(52, "Nombre Supervisor:");
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(53, "td");
    i0.ɵɵtext(54);
    i0.ɵɵelementEnd()();
    i0.ɵɵelementStart(55, "tr")(56, "td");
    i0.ɵɵtext(57, "Correo Supervisor:");
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(58, "td");
    i0.ɵɵtext(59);
    i0.ɵɵelementEnd()();
    i0.ɵɵelementStart(60, "tr")(61, "td");
    i0.ɵɵtext(62, "Rut Empresa:");
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(63, "td");
    i0.ɵɵtext(64);
    i0.ɵɵelementEnd()();
    i0.ɵɵelementStart(65, "tr")(66, "td");
    i0.ɵɵtext(67, " Empresa Verificada:");
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(68, "td");
    i0.ɵɵtemplate(69, DetalleAlumnoComponent_div_13_div_4_div_8_i_69_Template, 1, 0, "i", 34);
    i0.ɵɵtext(70);
    i0.ɵɵelementEnd()()()()()()()();
    i0.ɵɵelementStart(71, "div", 28)(72, "div", 29)(73, "div", 17)(74, "a", 30)(75, "h4", 22);
    i0.ɵɵtext(76, " Informes");
    i0.ɵɵelementEnd()();
    i0.ɵɵelementStart(77, "div")(78, "div", 35)(79, "div");
    i0.ɵɵtemplate(80, DetalleAlumnoComponent_div_13_div_4_div_8_div_80_Template, 11, 1, "div", 36)(81, DetalleAlumnoComponent_div_13_div_4_div_8_ng_template_81_Template, 8, 6, "ng-template", null, 1, i0.ɵɵtemplateRefExtractor);
    i0.ɵɵelementEnd()()()()();
    i0.ɵɵelementStart(83, "div", 29)(84, "div", 17)(85, "a", 30)(86, "h4", 22);
    i0.ɵɵtext(87, " Documentos Requeridos");
    i0.ɵɵelementEnd()();
    i0.ɵɵelementStart(88, "div")(89, "div", 35)(90, "div")(91, "div", 37)(92, "table", 38)(93, "thead")(94, "tr")(95, "th");
    i0.ɵɵtext(96, "Documento");
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(97, "th");
    i0.ɵɵtext(98, "Formato");
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(99, "th");
    i0.ɵɵtext(100, "Tipo Solicitud ");
    i0.ɵɵelementEnd();
    i0.ɵɵelement(101, "th");
    i0.ɵɵelementEnd()();
    i0.ɵɵelementStart(102, "tbody");
    i0.ɵɵtemplate(103, DetalleAlumnoComponent_div_13_div_4_div_8_tr_103_Template, 10, 4, "tr", 39)(104, DetalleAlumnoComponent_div_13_div_4_div_8_tr_104_Template, 11, 4, "tr", 39);
    i0.ɵɵelementEnd()()()()()()()();
    i0.ɵɵtemplate(105, DetalleAlumnoComponent_div_13_div_4_div_8_div_105_Template, 11, 2, "div", 40)(106, DetalleAlumnoComponent_div_13_div_4_div_8_div_106_Template, 7, 1, "div", 40);
    i0.ɵɵelementEnd();
    i0.ɵɵtemplate(107, DetalleAlumnoComponent_div_13_div_4_div_8_div_107_Template, 24, 2, "div", 41);
    i0.ɵɵelementEnd()()()();
  }
  if (rf & 2) {
    const informesDiarios_r27 = i0.ɵɵreference(82);
    const ctx_r9 = i0.ɵɵnextContext(2);
    const practica_r2 = ctx_r9.$implicit;
    const i_r11 = ctx_r9.index;
    const ctx_r2 = i0.ɵɵnextContext();
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngIf", practica_r2[1].estado == "En curso");
    i0.ɵɵadvance(17);
    i0.ɵɵtextInterpolate1("", practica_r2[1] == null ? null : practica_r2[1].estado, " ");
    i0.ɵɵadvance(5);
    i0.ɵɵtextInterpolate2("", practica_r2[1] == null ? null : practica_r2[1].modalidad.cantidad_tiempo, " ", practica_r2[1] == null ? null : practica_r2[1].modalidad.tipo_modalidad, " ");
    i0.ɵɵadvance(5);
    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(29, 24, practica_r2[1] == null ? null : practica_r2[1].fecha_inicio, "dd/MM/yyyy"));
    i0.ɵɵadvance(6);
    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(35, 27, practica_r2[1] == null ? null : practica_r2[1].fecha_termino, "dd/MM/yyyy"));
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngIf", (practica_r2[1] == null ? null : practica_r2[1].modalidad == null ? null : practica_r2[1].modalidad.config_practica == null ? null : practica_r2[1].modalidad.config_practica.frecuencia_informes) != "sinAvance");
    i0.ɵɵadvance(13);
    i0.ɵɵtextInterpolate(practica_r2[1] == null ? null : practica_r2[1].empresa.nombre_empresa);
    i0.ɵɵadvance(5);
    i0.ɵɵtextInterpolate(practica_r2[1] == null ? null : practica_r2[1].supervisor.nombre);
    i0.ɵɵadvance(5);
    i0.ɵɵtextInterpolate(practica_r2[1] == null ? null : practica_r2[1].supervisor.correo);
    i0.ɵɵadvance(5);
    i0.ɵɵtextInterpolate1(" ", practica_r2[1] == null ? null : practica_r2[1].empresa.rut_empresa, "");
    i0.ɵɵadvance(2);
    i0.ɵɵclassMap(!(practica_r2[1] == null ? null : practica_r2[1].empresa.empresa_verificada) ? "bg-warning" : "");
    i0.ɵɵadvance(2);
    i0.ɵɵclassMap(!(practica_r2[1] == null ? null : practica_r2[1].empresa.empresa_verificada) ? "bg-warning" : "");
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngIf", !(practica_r2[1] == null ? null : practica_r2[1].empresa.empresa_verificada));
    i0.ɵɵadvance();
    i0.ɵɵtextInterpolate1(" ", (practica_r2[1] == null ? null : practica_r2[1].empresa.empresa_verificada) ? "Si" : "No", " ");
    i0.ɵɵadvance(10);
    i0.ɵɵproperty("ngIf", (practica_r2[1].modalidad == null ? null : practica_r2[1].modalidad.config_practica == null ? null : practica_r2[1].modalidad.config_practica.frecuencia_informes) != "diario")("ngIfElse", informesDiarios_r27);
    i0.ɵɵadvance(23);
    i0.ɵɵproperty("ngForOf", ctx_r2.solicitudes_practicas[practica_r2[1].id]);
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngForOf", practica_r2[1].documento_extras);
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngIf", practica_r2[1].estado != "En curso");
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngIf", practica_r2[1].modalidad.config_practica.informe_final == "si");
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngIf", ctx_r2.hay_respuesta[i_r11] == 1);
  }
}
function DetalleAlumnoComponent_div_13_div_4_ng_template_9_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 84)(1, "div", 85);
    i0.ɵɵelement(2, "i", 46)(3, "br")(4, "br");
    i0.ɵɵelementStart(5, "p");
    i0.ɵɵtext(6, "La pr\u00E1ctica a\u00FAn no ha sido confirmada por el encargado.");
    i0.ɵɵelementEnd()()();
  }
}
function DetalleAlumnoComponent_div_13_div_4_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div")(1, "a", 21)(2, "h2", 22);
    i0.ɵɵtext(3);
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(4, "div", 23);
    i0.ɵɵtext(5);
    i0.ɵɵelementEnd()();
    i0.ɵɵelementStart(6, "div", 24)(7, "div", 25);
    i0.ɵɵtemplate(8, DetalleAlumnoComponent_div_13_div_4_div_8_Template, 108, 30, "div", 26)(9, DetalleAlumnoComponent_div_13_div_4_ng_template_9_Template, 7, 0, "ng-template", null, 0, i0.ɵɵtemplateRefExtractor);
    i0.ɵɵelementEnd()()();
  }
  if (rf & 2) {
    const practicaNoConfirmada_r28 = i0.ɵɵreference(10);
    const ctx_r9 = i0.ɵɵnextContext();
    const practica_r2 = ctx_r9.$implicit;
    const i_r11 = ctx_r9.index;
    i0.ɵɵadvance();
    i0.ɵɵproperty("href", "#card" + i_r11, i0.ɵɵsanitizeUrl);
    i0.ɵɵattribute("aria-controls", "card" + i_r11);
    i0.ɵɵadvance(2);
    i0.ɵɵtextInterpolate1("", practica_r2[0], " ");
    i0.ɵɵadvance(2);
    i0.ɵɵtextInterpolate1("Estado: ", practica_r2[1] == null ? null : practica_r2[1].estado, "");
    i0.ɵɵadvance();
    i0.ɵɵpropertyInterpolate("id", "card" + i_r11);
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngIf", practica_r2[1].estado != "Esperando confirmacion")("ngIfElse", practicaNoConfirmada_r28);
  }
}
function DetalleAlumnoComponent_div_13_div_5_div_9_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelement(0, "div", 91);
  }
}
function DetalleAlumnoComponent_div_13_div_5_button_11_Template(rf, ctx) {
  if (rf & 1) {
    const _r29 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "button", 44);
    i0.ɵɵlistener("click", function DetalleAlumnoComponent_div_13_div_5_button_11_Template_button_click_0_listener() {
      i0.ɵɵrestoreView(_r29);
      const i_r11 = i0.ɵɵnextContext(2).index;
      const ctx_r2 = i0.ɵɵnextContext();
      return i0.ɵɵresetView(ctx_r2.abrir_inscripcion(i_r11));
    });
    i0.ɵɵtext(1, " Inscribir Pr\u00E1ctica");
    i0.ɵɵelementEnd();
  }
}
function DetalleAlumnoComponent_div_13_div_5_app_iniciar_practica_12_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelement(0, "app-iniciar-practica", 92);
  }
  if (rf & 2) {
    const practica_r2 = i0.ɵɵnextContext(2).$implicit;
    const ctx_r2 = i0.ɵɵnextContext();
    i0.ɵɵproperty("id_estudiante", ctx_r2.estudiante.id)("nombre_practica", practica_r2[0])("estado_config", ctx_r2.estado_config);
  }
}
function DetalleAlumnoComponent_div_13_div_5_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 86)(1, "a", 87)(2, "h2", 22);
    i0.ɵɵtext(3);
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(4, "div", 23);
    i0.ɵɵtext(5, "Estado: No iniciada");
    i0.ɵɵelementEnd()();
    i0.ɵɵelementStart(6, "div", 24)(7, "div", 25)(8, "div", 11);
    i0.ɵɵtemplate(9, DetalleAlumnoComponent_div_13_div_5_div_9_Template, 1, 0, "div", 88);
    i0.ɵɵelementStart(10, "div", 43);
    i0.ɵɵtemplate(11, DetalleAlumnoComponent_div_13_div_5_button_11_Template, 2, 0, "button", 89)(12, DetalleAlumnoComponent_div_13_div_5_app_iniciar_practica_12_Template, 1, 3, "app-iniciar-practica", 90);
    i0.ɵɵelementEnd()()()()();
  }
  if (rf & 2) {
    const ctx_r9 = i0.ɵɵnextContext();
    const practica_r2 = ctx_r9.$implicit;
    const i_r11 = ctx_r9.index;
    const ctx_r2 = i0.ɵɵnextContext();
    i0.ɵɵadvance();
    i0.ɵɵproperty("href", "#card" + i_r11, i0.ɵɵsanitizeUrl);
    i0.ɵɵattribute("aria-controls", "card" + i_r11);
    i0.ɵɵadvance(2);
    i0.ɵɵtextInterpolate(practica_r2[0]);
    i0.ɵɵadvance(3);
    i0.ɵɵpropertyInterpolate("id", "card" + i_r11);
    i0.ɵɵadvance(3);
    i0.ɵɵproperty("ngIf", !ctx_r2.flags_inscripcion_list[i_r11]);
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngIf", !ctx_r2.flags_inscripcion_list[i_r11]);
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngIf", ctx_r2.flags_inscripcion_list[i_r11]);
  }
}
function DetalleAlumnoComponent_div_13_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 11)(1, "div", 16)(2, "div", 17)(3, "div", 18);
    i0.ɵɵtemplate(4, DetalleAlumnoComponent_div_13_div_4_Template, 11, 7, "div", 19)(5, DetalleAlumnoComponent_div_13_div_5_Template, 13, 7, "div", 20);
    i0.ɵɵelementEnd()()()();
  }
  if (rf & 2) {
    const practica_r2 = ctx.$implicit;
    i0.ɵɵadvance(3);
    i0.ɵɵproperty("ngSwitch", practica_r2.length);
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngSwitchCase", 2);
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngSwitchCase", 1);
  }
}
class DetalleAlumnoComponent {
  constructor(service_datos, activated_route, _snackBar, service_gestion, service_supervisor, router, service_noti, service_obtener) {
    this.service_datos = service_datos;
    this.activated_route = activated_route;
    this._snackBar = _snackBar;
    this.service_gestion = service_gestion;
    this.service_supervisor = service_supervisor;
    this.router = router;
    this.service_noti = service_noti;
    this.service_obtener = service_obtener;
    this.usuario = {};
    this.estudiante = {};
    this.config_practicas = [];
    this.practicas = [];
    this.solicitudes_practicas = {};
    this.resenas_supervisor = [];
    this.flag = {};
    this.estado_config = "";
    this.nombres_config_practica = [];
    this.practicas_correspondiente_nombre = [];
    this.informe_final = {};
    this.flags_inscripcion_list = [];
    this.link_finalizacion = "";
    this.link_inscripcion = "";
    this.doc_str = "documento";
    this.doc_extra_str = "documento_extra";
    this.evaluaciones = [];
    this.aptitudes_practica = [];
    this.notas_aptitudes = [];
    this.notas_promedio = [];
    this.hay_respuesta = [];
    this.fechasSeleccionadas = [];
    this.documentos_enviados = {};
    this.warning_text = "No puede finalizar la práctica hasta que subas todos los documentos solicitados";
    this.minDate = null;
    this.selectedDate = null;
    this.usuario = JSON.parse(localStorage.getItem('auth-user') || '{}').userdata;
    this.estudiante = this.usuario.estudiante;
    this.estado_config = this.usuario.config;
    //console.log("usuario:",this.usuario);
    //console.log("estudiante:",this.estudiante);
  }
  ngOnInit() {
    var _this = this;
    const param_upload_success = this.activated_route.snapshot.queryParamMap.get('upload_success');
    let snackBarRef = undefined;
    //console.log("PARAMETRO URL",param_upload_success);
    if (param_upload_success == "success") {
      snackBarRef = this._snackBar.open("Archivo subido correctamente", "Cerrar", {
        panelClass: ['green-snackbar'],
        duration: 3000
      });
    } else if (param_upload_success == "format") {
      snackBarRef = this._snackBar.open("Archivo con formato incorrecto", "Cerrar", {
        panelClass: ['red-snackbar'],
        duration: 3000
      });
    } else if (param_upload_success == "error") {
      snackBarRef = this._snackBar.open("Error al subir archivo", "Cerrar", {
        panelClass: ['red-snackbar'],
        duration: 3000
      });
    }
    const param_inscripcion_success = this.activated_route.snapshot.queryParamMap.get('inscripcion_success');
    if (param_inscripcion_success == "success") {
      snackBarRef = this._snackBar.open("Práctica inscrita correctamente", "Cerrar", {
        panelClass: ['green-snackbar'],
        duration: 3000
      });
    } else if (param_inscripcion_success == "error") {
      snackBarRef = this._snackBar.open("Error al inscribir práctica", "Cerrar", {
        panelClass: ['red-snackbar'],
        duration: 3000
      });
    }
    const param_finalizacion_success = this.activated_route.snapshot.queryParamMap.get('finalizacion_success');
    if (param_finalizacion_success == "success") {
      snackBarRef = this._snackBar.open("Práctica finalizada correctamente", "Cerrar", {
        panelClass: ['green-snackbar'],
        duration: 3000
      });
    }
    let respuesta = {};
    // Request para obtener todas las config practicas
    this.service_datos.obtener_todos_config_practica().subscribe({
      next: data => {
        respuesta = {
          ...respuesta,
          ...data
        };
      },
      error: error => console.log(error),
      complete: () => {
        this.config_practicas = respuesta.body;
        //console.log("Configuraciones de practica:",this.config_practicas)
        //console.log("id_carrera estudiante:",this.estudiante.id_carrera)
        // Guardar nombres de las configuraciones de practica en un arreglo
        this.config_practicas.forEach(element => {
          // verificar que el nombre no este en el arreglo
          if (element.id_carrera == this.estudiante.id_carrera) {
            if (!this.nombres_config_practica.includes(element.nombre)) {
              this.nombres_config_practica.push(element.nombre);
              this.practicas_correspondiente_nombre.push([element.nombre]);
              this.fechasSeleccionadas.push([]);
            }
          }
        });
        console.log("Practicas Correspondientes:", this.practicas_correspondiente_nombre);
        //console.log("Nombres de configuraciones de practica:",this.nombres_config_practica)
        // Request para obtener todas las practicas de acuerdo al id del estudiante
        this.service_datos.obtener_practica(this.estudiante.id).subscribe({
          next: data => {
            respuesta = {
              ...respuesta,
              ...data
            };
          },
          error: error => console.log(error),
          complete: function () {
            var _ref = _asyncToGenerator(function* () {
              _this.practicas = respuesta.body;
              let index = 0;
              // Guardar nombres y practicas en un arreglo
              _this.practicas.forEach(/*#__PURE__*/function () {
                var _ref2 = _asyncToGenerator(function* (practica_aux) {
                  _this.comentarios(practica_aux.id);
                  //console.log("reseñas supervisor:", this.resenas_supervisor) 
                  index += 1;
                  _this.flags_inscripcion_list.push(false);
                  //console.log("practica:",element.modalidad.config_practica.nombre)
                  // Para cada practica que el alumno tiene, encontrar el nombre de la configuracion de practica en el arreglo
                  // de nombres y agregar la practica en el arreglo que se encarga de mantener la correspondencia entre nombre y practica
                  if (practica_aux.modalidad.config_practica.nombre == _this.nombres_config_practica.find(elemento => elemento == practica_aux.modalidad.config_practica.nombre)) {
                    let index = _this.nombres_config_practica.indexOf(practica_aux.modalidad.config_practica.nombre);
                    practica_aux.documentos.map(doc => {
                      // Cambiar además las strings de tipo_archivo a un arreglo de strings
                      doc.solicitud_documento.tipo_archivo = doc.solicitud_documento.tipo_archivo.split(",");
                      return doc;
                    });
                    _this.practicas_correspondiente_nombre[index].push(practica_aux);
                    if (practica_aux.informes.length > 0 && practica_aux.modalidad.config_practica.frecuencia_informes == "diario") {
                      for (var informe of practica_aux.informes) {
                        //console.log("informe:",informe.fecha)
                        if (informe.fecha != null) {
                          informe.fecha = informe.fecha.split("T")[0];
                          informe.fecha += "T12:00:00.000Z";
                          _this.fechasSeleccionadas[index].push(informe.fecha);
                          //console.log("informe despues de modificar:",informe.fecha)
                        }
                      }
                    }
                  }
                  // request para obtener todas las solicitudes_documentos de la practica actual
                  //console.log("this.documentos_enviados ANTES: ", this.documentos_enviados)
                  yield new Promise(resolve => {
                    _this.service_datos.obtener_solicitudes_documentos_practica(practica_aux.modalidad.config_practica.id, practica_aux.id).subscribe({
                      next: data => {
                        respuesta = {
                          ...respuesta,
                          ...data
                        };
                      },
                      error: error => console.log(error),
                      complete: () => {
                        _this.solicitudes_practicas[practica_aux.id] = respuesta.body;
                        let faltan_documentos = 0;
                        //console.log("practicas_correspondiente_nombre: ", this.practicas_correspondiente_nombre)
                        for (let practica of _this.practicas_correspondiente_nombre) {
                          //console.log("this.solicitudes_practicas[practica_aux.id]: ", this.solicitudes_practicas[practica_aux.id])
                          for (let soli of _this.solicitudes_practicas[practica_aux.id]) {
                            if (soli.documentos.length == 0) {
                              //console.log("doc check")
                              faltan_documentos = 1;
                              _this.documentos_enviados[practica_aux.id] = 0;
                              break;
                            }
                          }
                          //console.log("practica_aux.documento_extras: ", practica_aux.documento_extras)
                          for (let docuex of practica_aux.documento_extras) {
                            if (docuex.key == null) {
                              //console.log("doc_extra check")
                              faltan_documentos = 1;
                              _this.documentos_enviados[practica_aux.id] = 0;
                              break;
                            }
                          }
                          //console.log("practica_aux.informes: ", practica_aux.informes)
                          for (let informe of practica_aux.informes) {
                            if (informe.config_informe.tipo_informe.toLowerCase() == "informe final") {
                              if (informe.key == null || informe.key == undefined || Object.keys(informe.key).length == 0) {
                                //console.log("informe check")
                                faltan_documentos = 1;
                                _this.documentos_enviados[practica_aux.id] = 0;
                                break;
                              }
                            }
                          }
                          //console.log("faltan_documentos: ", faltan_documentos)
                          if (faltan_documentos == 0) {
                            _this.documentos_enviados[practica_aux.id] = 1;
                          }
                        }
                        //console.log("DOCUMENTOS ENVIADOS",this.documentos_enviados)
                        //console.log("Solicitudes:", this.solicitudes_practicas)
                        resolve(true);
                      }
                    });
                  });
                  //console.log("this.documentos_enviados DESPUÉS: ", this.documentos_enviados)
                });
                return function (_x) {
                  return _ref2.apply(this, arguments);
                };
              }());
              for (var item of _this.practicas) {
                _this.evaluaciones.push(item.respuesta_supervisors);
              }
              /*
              this.evaluaciones = this.practicas.filter((respuesta_supervisors: any) => {
                return !isNaN(respuesta_supervisors.respuesta);
              });
              */
              for (var item of _this.evaluaciones) {
                _this.hay_respuesta.push(0);
                for (var item2 of item) {
                  let temp = [];
                  let nota_promedio = 0;
                  let prom = 0;
                  if (item2.pregunta_supervisor != null) {
                    if (item2.pregunta_supervisor.enunciado == "Evalue entre 1 y 5 las siguientes aptitudes del practicante") {
                      _this.hay_respuesta.pop();
                      _this.hay_respuesta.push(1);
                      if (item2.pregunta_supervisor.opciones.indexOf(";;") != -1) {
                        _this.aptitudes_practica.push(item2.pregunta_supervisor.opciones.split(";;"));
                        temp = item2.respuesta.split(",");
                        for (var n of temp) {
                          nota_promedio += Number(n);
                          prom += 1;
                        }
                        _this.notas_aptitudes.push(temp);
                        _this.notas_promedio.push(nota_promedio / prom);
                        break;
                      }
                    }
                  }
                }
              }
              //console.log("Practicas correspondientes a nombre:",this.practicas_correspondiente_nombre)
            });
            return function complete() {
              return _ref.apply(this, arguments);
            };
          }()
        });
      }
    });
  }
  descargar_documento(documento_id, solicitud_tipo) {
    //console.log("decargar documento")
    // abrir nueva pestaña con url de descarga, que es url_backend (sacada desde el env) + /documentos/ + documento_key
    if (solicitud_tipo == "documento") {
      window.open(environment_1.environment.url_back + "/documento/download?id=" + documento_id, "_blank");
    } else {
      window.open(environment_1.environment.url_back + "/documento_extra/download?id=" + documento_id, "_blank");
    }
  }
  finalizar_practica(practica) {
    window.location.href = environment_1.environment.url_front + "/encuestaFinal/" + practica.id;
  }
  abrir_inscripcion(index) {
    // checkear si el estudiante ya tiene una práctica inscrita por cada practica en el arreglo practicas
    // si es así, no se puede inscribir a otra práctica
    let practicas_inscritas = this.practicas.filter(practica => practica.estado == environment_1.environment.estado_practica.en_curso);
    if (practicas_inscritas.length > 0) {
      this._snackBar.open("Error, ya tiene una práctica en curso.", "Cerrar", {
        panelClass: ['red-snackbar'],
        duration: 3000
      });
      return;
    } else {
      this.flags_inscripcion_list[index] = true;
    }
  }
  redirigir_a_ingreso_informe(id_informe) {
    // redirigir a la página de ingreso de informe
    this.router.navigate(['/ingreso-informe'], {
      queryParams: {
        id_informe: id_informe
      }
    });
  }
  isEmptyObject(obj) {
    return obj && Object.keys(obj).length === 0;
  }
  onFechaClick($event, id_practica) {
    //this.minDate = new Date('2015-06-24T18:30:00.000Z'); // any date, only to force rendering
    //setTimeout(() => {
    //  this.minDate = null; // Set null to remove the date restriction
    //}, 0); // Wait to change-detection function has terminated to execute a new change to force rendering the rows and cells   
    const year = $event.getFullYear();
    const month = $event.getMonth() + 1;
    const day = $event.getDate();
    const fechaParseada = `${year}-${month.toString().padStart(2, '0')}-${day.toString().padStart(2, '0')}T12:00:00.000Z`;
    this.selectedDate = fechaParseada;
    // search for the id_practica in the array of practicas
    let practica = this.practicas.find(practica => practica.id == id_practica);
    if (practica) {
      let informe = practica.informes.find(informe => {
        if (informe.fecha == fechaParseada && informe.config_informe.tipo_informe != "informe final") {
          return true;
        }
        return false;
      });
      if (informe) {
        //console.log("informe encontrado:",informe)
        if (informe.key != null) {
          // redirect to the page to show the informe /estudiante-ver-informe/{{practica[1].id}}/{{informe.id}}          
          this.router.navigate(['/estudiante-ver-informe/', practica.id, informe.id]);
        } else {
          // redirect to the page to enter the informe /estudiante-ingresar-informe/{{practica[1].id}}/{{informe.id}}
          this.redirigir_a_ingreso_informe(informe.id);
        }
      } else {
        //console.log("informe no encontrado:")
      }
    } else {
      console.log("practica no encontrada");
    }
    ////console.log("fecha parseada:",fechaParseada); 
    //this.fechasSeleccionadas[index] = [...this.fechasSeleccionadas[index], new Date(fechaParseada)]
  }
  dateClass(index, id_practica) {
    //console.log("index:",index)
    return date => {
      const highlightDate = this.fechasSeleccionadas[index].map(strDate => new Date(strDate)).some(d => d.getDate() === date.getDate() && d.getMonth() === date.getMonth() && d.getFullYear() === date.getFullYear());
      if (highlightDate) {
        // check search for the informe with the date and check if it has a key, if it does, return bg-success else return bg-danger
        let practica = this.practicas.find(practica => practica.id == id_practica);
        if (practica) {
          const year = date.getFullYear();
          const month = date.getMonth() + 1;
          const day = date.getDate();
          const fechaParseada = `${year}-${month.toString().padStart(2, '0')}-${day.toString().padStart(2, '0')}T12:00:00.000Z`;
          let informe = practica.informes.find(informe => {
            if (informe.fecha == fechaParseada && informe.config_informe.tipo_informe != "informe final") {
              return true;
            }
            return false;
          });
          if (informe) {
            if (informe.key != null) {
              return 'bg-success';
            } else {
              return 'bg-warning';
            }
          }
        }
      }
      return '';
    };
  }
  comentarios(id_practica) {
    this.id_p = id_practica;
    let response = {};
    this.service_datos.obtener_comentarios_supervisor(this.id_p).subscribe({
      next: data => {
        response = {
          ...response,
          ...data
        };
      },
      error: error => {
        this._snackBar.open("Error al obtener comentarios", "Cerrar", {
          panelClass: ['red-snackbar'],
          duration: 2000
        });
      },
      complete: () => {
        console.log("Respuesta comentarios:", response.body.data.respuesta_supervisors);
        if (response.body.data.respuesta_supervisors.length == 0) {
          this.flag[response.body.data.id] = false;
        } else {
          this.flag[response.body.data.id] = true;
        }
        if (!this.resenas_supervisor.hasOwnProperty(id_practica)) {
          this.resenas_supervisor[id_practica] = [];
        }
        for (let i = 0; i < response.body.data.respuesta_supervisors.length; i++) {
          //por ahora solo se muestran las preguntas abiertas
          //agregar alternativas y preguntas evaluacion
          if (response.body.data.respuesta_supervisors[i].pregunta_supervisor.tipo_respuesta == "abierta") {
            let json = {
              pregunta: response.body.data.respuesta_supervisors[i].pregunta_supervisor.enunciado,
              respuesta: response.body.data.respuesta_supervisors[i].respuesta
            };
            this.resenas_supervisor[id_practica].push(json);
          }
        }
        console.log("Reseñas supervisor:", this.resenas_supervisor);
      }
    });
  }
  warning_practica() {
    this._snackBar.open("No puede finalizar la práctica hasta que subas todos los documentos solicitados", "Cerrar", {
      panelClass: ['red-snackbar'],
      duration: 2000
    });
  }
  eliminarArchivoInformeFinal(id_informe) {
    // show a dialog to confirm the action
    window.confirm("¿Está seguro que desea eliminar el informe final subido?");
    // if confirmed, delete the informe_final with the id_informe
    // if not confirmed, do nothing
    let respuesta = {};
    this.service_gestion.eliminar_informe_final(id_informe).subscribe({
      next: data => {
        respuesta = {
          ...respuesta,
          ...data
        };
      },
      error: error => console.log("Error en eliminar informe final:", error),
      complete: () => {
        //console.log("Respuesta eliminar informe final:",respuesta);
        this._snackBar.open("Informe final eliminado correctamente", "Cerrar", {
          panelClass: ['green-snackbar'],
          duration: 2000
        });
        // after 2 seconds reload the page
        setTimeout(() => {
          // check if the url has any query params, if it does, remove them
          let currentUrl = this.router.url;
          if (currentUrl.includes("?")) {
            currentUrl = currentUrl.split("?")[0];
            if (currentUrl.includes("%")) {
              currentUrl = currentUrl.split("%")[0];
            }
            window.location.href = currentUrl;
          } else {
            window.location.reload();
          }
        }, 2000);
      }
    });
  }
  static {
    this.ɵfac = function DetalleAlumnoComponent_Factory(__ngFactoryType__) {
      return new (__ngFactoryType__ || DetalleAlumnoComponent)(i0.ɵɵdirectiveInject(i1.ObtenerDatosService), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i3.MatSnackBar), i0.ɵɵdirectiveInject(i4.GestionarService), i0.ɵɵdirectiveInject(i5.SupervisorService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i6.NotificacionesService), i0.ɵɵdirectiveInject(i7.DataUsuarioService));
    };
  }
  static {
    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({
      type: DetalleAlumnoComponent,
      selectors: [["alumno"]],
      decls: 15,
      vars: 2,
      consts: [["practicaNoConfirmada", ""], ["informesDiarios", ""], ["elsedocument", ""], ["yaSeSubio", ""], ["elseBlock", ""], ["case", ""], ["informeArchivo", ""], ["id", "wrapper"], ["id", "content-wrapper", 1, "d-flex", "flex-column"], ["id", "content", 1, "main-content"], [1, "container-fluid"], [1, "row"], [1, "col-xl-10"], [1, "h3", "mb-2", "font-weight-bold", "text-gray-800"], [1, "mb-4"], ["class", "row", 4, "ngFor", "ngForOf"], [1, "col-xl-12"], [1, "card", "shadow", "mb-4"], [3, "ngSwitch"], [4, "ngSwitchCase"], ["id", "tabla_empresa", 4, "ngSwitchCase"], ["data-toggle", "collapse", "role", "button", "aria-expanded", "true", "v-on:click", "getPractica(nombre)", 1, "d-block", "card-header", "py-3", "collapsed", 3, "href"], [1, "m-0", "font-weight-bold", "text-primary"], [1, "m-0", "text-gray-800"], [1, "collapse", 3, "id"], [1, "card-body"], [4, "ngIf", "ngIfElse"], ["class", "row", 4, "ngIf"], [1, "row", 2, "max-width", "100%"], [1, "col-xl-6"], [1, "card-header", "py-3"], [2, "width", "40%"], [4, "ngIf"], [2, "width", "80%"], ["class", "fa-solid fa-triangle-exclamation", 4, "ngIf"], [1, "card-body", "overflow-auto"], ["class", "table-responsive", 4, "ngIf", "ngIfElse"], [1, "table-responsive"], ["id", "dataTable", "width", "100%", "cellspacing", "0", 1, "table", "table-bordered", "hoverTable"], [4, "ngFor", "ngForOf"], ["class", "col-xl-6", 4, "ngIf"], ["class", "row", "style", "max-width: 100%", 4, "ngIf"], [1, "col-xl-9"], [1, "col-xl-2"], ["type", "button", 1, "btn", "btn-primary", "btn-lg", "btn-block", 3, "click"], ["type", "button", 1, "btn", "btn-primary", "btn-lg", "btn-block", 3, "click", "title"], [1, "fa-solid", "fa-triangle-exclamation"], [2, "width", "30%"], [1, "text-center", 2, "width", "30%"], ["class", "btn btn-primary btn-sm btn-block", 3, "click", 4, "ngIf", "ngIfElse"], [1, "btn", "btn-primary", "btn-sm", "btn-block", 3, "click"], [1, "nostyle", 3, "href"], [1, "btn", "btn-primary", "btn-sm", "btn-block"], [1, "text-gray-800"], [2, "width", "100%"], [2, "width", "32%"], [2, "width", "36%"], [3, "selectedChange", "selected", "minDate", "dateClass"], [3, "id_solicitud", "id_practica", "descripcion", "nombre_solicitud", "tipo_archivo", "id_encargado_usuario", "correo_encargado", "estado_config", "id_estudiante_usuario", 4, "ngSwitchCase"], ["class", "btn btn-success btn-sm btn-block", 3, "click", 4, "ngSwitchDefault"], [3, "id_solicitud", "id_practica", "descripcion", "nombre_solicitud", "tipo_archivo", "id_encargado_usuario", "correo_encargado", "estado_config", "id_estudiante_usuario"], [1, "btn", "btn-success", "btn-sm", "btn-block", 3, "click"], [3, "id_documento_extra", "descripcion", "nombre_solicitud", "tipo_archivo", "estado_config", "id_estudiante_usuario", 4, "ngIf", "ngIfElse"], [3, "id_documento_extra", "descripcion", "nombre_solicitud", "tipo_archivo", "estado_config", "id_estudiante_usuario"], [1, "card-body", "overflow-auto", "text-center"], [3, "ngIf", "ngIfElse"], [1, "texto", 2, "vertical-align", "bottom"], [1, "texto"], [1, "text-center"], ["class", "btn btn-primary btn-md", 3, "click", 4, "ngIf", "ngIfElse"], [1, "btn", "btn-primary", "btn-md", 3, "click"], [1, "btn", "btn-primary", "btn-md"], [1, "col-12", "text-center"], ["class", "mb-2", 4, "ngIf"], [3, "id_informe", "tipo_archivo", 4, "ngIf", "ngIfElse"], ["type", "button", "class", "btn btn-primary btn-sm mt-2", 4, "ngIf"], [1, "mb-2"], [3, "id_informe", "tipo_archivo"], ["type", "button", 1, "btn", "btn-primary", "btn-sm", "mr-1", "ml-1"], ["target", "_blank", 2, "color", "white", 3, "href"], [1, "btn", "btn-secondary", "btn-sm", 3, "click"], ["type", "button", 1, "btn", "btn-primary", "btn-sm", "mt-2"], ["id", "collapseCardExample", 1, "collapse"], [1, "overflow-auto"], [1, "text-center", "text-gray-800", "h5"], [1, "my-4"], ["id", "tabla_empresa"], ["data-toggle", "collapse", "role", "button", "aria-expanded", "true", "v-on:click", "getPractica(nombre)", 1, "d-block", "card-header", "py-3", 3, "href"], ["class", "col-xl-5", 4, "ngIf"], ["type", "button", "class", "btn btn-primary btn-lg btn-block", 3, "click", 4, "ngIf"], [3, "id_estudiante", "nombre_practica", "estado_config", 4, "ngIf"], [1, "col-xl-5"], [3, "id_estudiante", "nombre_practica", "estado_config"]],
      template: function DetalleAlumnoComponent_Template(rf, ctx) {
        if (rf & 1) {
          i0.ɵɵelementStart(0, "div", 7);
          i0.ɵɵelement(1, "app-barra-lateral-alumno");
          i0.ɵɵelementStart(2, "div", 8)(3, "div", 9);
          i0.ɵɵelement(4, "app-barra-superior");
          i0.ɵɵelementStart(5, "div", 10)(6, "div", 11)(7, "div", 12)(8, "div", 13);
          i0.ɵɵtext(9);
          i0.ɵɵelement(10, "br");
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(11, "p", 14);
          i0.ɵɵtext(12, "Aqu\u00ED puedes ver tus pr\u00E1cticas cursadas, en curso o no iniciadas a\u00FAn.");
          i0.ɵɵelementEnd()()();
          i0.ɵɵtemplate(13, DetalleAlumnoComponent_div_13_Template, 6, 3, "div", 15);
          i0.ɵɵelementEnd()()()();
          i0.ɵɵelement(14, "app-logout-modal");
        }
        if (rf & 2) {
          i0.ɵɵadvance(9);
          i0.ɵɵtextInterpolate1("Pr\u00E1cticas de ", ctx.usuario.nombre, " ");
          i0.ɵɵadvance(4);
          i0.ɵɵproperty("ngForOf", ctx.practicas_correspondiente_nombre);
        }
      },
      dependencies: [i8.NgForOf, i8.NgIf, i8.NgSwitch, i8.NgSwitchCase, i8.NgSwitchDefault, i9.MatCalendar, i10.IniciarPracticaComponent, i11.BarraSuperiorComponent, i12.LogoutModalComponent, i13.BarraLateralAlumnoComponent, i14.SubirArchivoExtraComponent, i15.SubirArchivoComponent, i16.SubirArchivoInformeFinalComponent, i8.DatePipe],
      styles: ["#holder[_ngcontent-%COMP%] {\n  background-color: rgb(221, 221, 221);\n  left: 10px;\n  top: 40px;\n  width: 100%;\n  scale: 0.9;\n}\n\n.overflow-auto[_ngcontent-%COMP%] {\n  max-height: 400px;\n}\n\n.hoverTable[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]   td[_ngcontent-%COMP%] {\n  vertical-align: middle;\n}\n\n.texto[_ngcontent-%COMP%] {\n  text-align: left;\n}\n\n.numero[_ngcontent-%COMP%] {\n  text-align: right;\n}\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvdmlzdGFzL2FsdW1uby9hbHVtbm8uY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxvQ0FBQTtFQUNBLFVBQUE7RUFDQSxTQUFBO0VBQ0EsV0FBQTtFQUNBLFVBQUE7QUFDSjs7QUFFQTtFQUNJLGlCQUFBO0FBQ0o7O0FBRUE7RUFDSSxzQkFBQTtBQUNKOztBQUVBO0VBQ0ksZ0JBQUE7QUFDSjs7QUFFQTtFQUNJLGlCQUFBO0FBQ0oiLCJzb3VyY2VzQ29udGVudCI6WyIjaG9sZGVyIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOnJnYigyMjEsIDIyMSwgMjIxKTtcbiAgICBsZWZ0OjEwcHg7XG4gICAgdG9wOiA0MHB4O1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIHNjYWxlOjAuOTtcbn1cblxuLm92ZXJmbG93LWF1dG8ge1xuICAgIG1heC1oZWlnaHQ6IDQwMHB4O1xufVxuXG4uaG92ZXJUYWJsZSB0ciB0ZHtcbiAgICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xufVxuXG4udGV4dG97XG4gICAgdGV4dC1hbGlnbjogbGVmdDtcbn1cblxuLm51bWVyb3tcbiAgICB0ZXh0LWFsaWduOiByaWdodDtcbn0iXSwic291cmNlUm9vdCI6IiJ9 */"]
    });
  }
}
exports.DetalleAlumnoComponent = DetalleAlumnoComponent;

/***/ }),

/***/ 39843:
/*!*********************************************************!*\
  !*** ./src/app/vistas/aptitudes/aptitudes.component.ts ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.AptitudesComponent = void 0;
const i0 = __webpack_require__(/*! @angular/core */ 37580);
const i1 = __webpack_require__(/*! src/app/servicios/encargado/aptitud.service */ 41591);
const i2 = __webpack_require__(/*! @angular/material/snack-bar */ 3347);
const i3 = __webpack_require__(/*! @angular/router */ 95072);
const i4 = __webpack_require__(/*! @angular/common */ 60316);
const i5 = __webpack_require__(/*! ../../componentes/barra-superior/barra-superior.component */ 36370);
const i6 = __webpack_require__(/*! ../../componentes/logout-modal/logout-modal.component */ 15562);
const i7 = __webpack_require__(/*! ../../componentes/barra-lateral-encargado/barra-lateral-encargado.component */ 43560);
const i8 = __webpack_require__(/*! ../../componentes/crear-aptitud-modal/crear-aptitud-modal.component */ 63172);
const i9 = __webpack_require__(/*! ../../componentes/editar-aptitud-modal/editar-aptitud-modal.component */ 34980);
const i10 = __webpack_require__(/*! ../../componentes/rango-modal/rango-modal.component */ 51108);
function AptitudesComponent_ng_template_14_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵtext(0);
  }
  if (rf & 2) {
    const ctx_r0 = i0.ɵɵnextContext();
    i0.ɵɵtextInterpolate(ctx_r0.rango);
  }
}
function AptitudesComponent_ng_template_15_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵtext(0, "No hay un rango de evaluacion disponible");
  }
}
function AptitudesComponent_tr_33_Template(rf, ctx) {
  if (rf & 1) {
    const _r2 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "tr")(1, "td");
    i0.ɵɵtext(2);
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(3, "td")(4, "button", 19);
    i0.ɵɵlistener("click", function AptitudesComponent_tr_33_Template_button_click_4_listener() {
      const aptitud_r3 = i0.ɵɵrestoreView(_r2).$implicit;
      const ctx_r0 = i0.ɵɵnextContext();
      return i0.ɵɵresetView(ctx_r0.editar(aptitud_r3.id, aptitud_r3.nombre, aptitud_r3.id_carrera));
    });
    i0.ɵɵtext(5, "Editar");
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(6, "button", 20);
    i0.ɵɵlistener("click", function AptitudesComponent_tr_33_Template_button_click_6_listener() {
      const aptitud_r3 = i0.ɵɵrestoreView(_r2).$implicit;
      const ctx_r0 = i0.ɵɵnextContext();
      return i0.ɵɵresetView(ctx_r0.eliminar(aptitud_r3.id));
    });
    i0.ɵɵtext(7, "Eliminar");
    i0.ɵɵelementEnd()()();
  }
  if (rf & 2) {
    const aptitud_r3 = ctx.$implicit;
    i0.ɵɵadvance(2);
    i0.ɵɵtextInterpolate(aptitud_r3.nombre);
  }
}
class AptitudesComponent {
  constructor(aptitud, _snackBar, router) {
    this.aptitud = aptitud;
    this._snackBar = _snackBar;
    this.router = router;
    this.aptitudes = [];
    this.user = JSON.parse(localStorage.getItem('auth-user') || "{}").userdata;
    this.flag = false;
    let _data = {};
    this.aptitud.getAptitudes(this.user.encargado.id_carrera).subscribe({
      next: data => {
        _data = {
          ..._data,
          ...data
        };
      },
      error: error => {
        this._snackBar.open("Error al obtener aptitudes", "Cerrar", {
          panelClass: ['red-snackbar'],
          duration: 2000
        });
      },
      complete: () => {
        this.aptitudes = _data.body.data;
      }
    });
    let response = {};
    this.aptitud.getRango(this.user.encargado.id_carrera).subscribe({
      next: data => {
        response = {
          ...response,
          ...data
        };
      },
      error: error => {
        this._snackBar.open("Error al obtener rango", "Cerrar", {
          panelClass: ['red-snackbar'],
          duration: 2000
        });
      },
      complete: () => {
        if (response.status == 200) {
          this.rango = response.body.data;
          if (this.rango == 0) {
            this.flag = true;
          }
        } else {
          this._snackBar.open("Error al obtener rango", "Cerrar", {
            panelClass: ['red-snackbar'],
            duration: 2000
          });
        }
      }
    });
    let respuesta = {};
    this.aptitud.ifAptitudes(this.user.encargado.id_carrera).subscribe({
      next: data => {
        respuesta = {
          ...respuesta,
          ...data
        };
      },
      error: error => {
        this._snackBar.open("Error al obtener aptitudes", "Cerrar", {
          panelClass: ['red-snackbar'],
          duration: 2000
        });
      },
      complete: () => {
        this.if_aptitud = respuesta.body.data;
      }
    });
  }
  ngOnInit() {}
  editar(id, n_aptitud, id_carrera) {
    this.id = id;
    this.n_aptitud = n_aptitud;
    this.id_carrera = id_carrera;
  }
  eliminar(id) {
    let _data = {};
    this.aptitud.eliminarAptitud(id).subscribe({
      next: data => {
        _data = {
          ..._data,
          ...data
        };
      },
      error: error => {
        this._snackBar.open("Error al eliminar aptitud", "Cerrar", {
          panelClass: ['red-snackbar'],
          duration: 2000
        });
      },
      complete: () => {
        if (_data.status == 200) {
          this._snackBar.open("Aptitud eliminada exitosamente", "Cerrar", {
            panelClass: ['green-snackbar'],
            duration: 2000
          });
          setTimeout(function () {
            window.location.reload();
          }, 2000);
        } else {
          this._snackBar.open("Error al eliminar aptitud", "Cerrar", {
            panelClass: ['red-snackbar'],
            duration: 2000
          });
        }
      }
    });
  }
  static {
    this.ɵfac = function AptitudesComponent_Factory(__ngFactoryType__) {
      return new (__ngFactoryType__ || AptitudesComponent)(i0.ɵɵdirectiveInject(i1.AptitudService), i0.ɵɵdirectiveInject(i2.MatSnackBar), i0.ɵɵdirectiveInject(i3.Router));
    };
  }
  static {
    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({
      type: AptitudesComponent,
      selectors: [["app-aptitudes"]],
      decls: 40,
      vars: 7,
      consts: [["warning", ""], ["id", "wrapper"], ["id", "content-wrapper", 1, "d-flex", "flex-column"], ["id", "content", 1, "main-content"], [1, "container-fluid"], [1, "h3", "mb-4", "text-gray-800"], [1, "mb-4"], [1, "card", "shadow", "mb-4"], [1, "card-body"], [3, "ngIf", "ngIfElse"], ["id", "myBtn", "data-target", "#rango-modal", "data-toggle", "modal", 1, "btn", "btn-primary", "mb-2", 3, "disabled"], ["id", "myBtn", "data-target", "#crear-aptitud-modal", "data-toggle", "modal", 1, "btn", "btn-primary", "mb-2"], [1, "table-responsive"], ["id", "dataTable", "width", "100%", "cellspacing", "0", 1, "table", "table-striped", "table-bordered", "table-hover"], [2, "vertical-align", "bottom"], [4, "ngFor", "ngForOf"], ["href", "#page-top", 1, "scroll-to-top", "rounded"], [1, "fas", "fa-angle-up"], [3, "id", "n_aptitud", "id_carrera"], ["data-target", "#editar-aptitud-modal", "data-toggle", "modal", 1, "btn", "btn-primary", 3, "click"], [1, "btn", "btn-secondary", "ml-2", 3, "click"]],
      template: function AptitudesComponent_Template(rf, ctx) {
        if (rf & 1) {
          i0.ɵɵelementStart(0, "div", 1);
          i0.ɵɵelement(1, "app-barra-lateral-encargado");
          i0.ɵɵelementStart(2, "div", 2)(3, "div", 3);
          i0.ɵɵelement(4, "app-barra-superior");
          i0.ɵɵelementStart(5, "div", 4)(6, "div", 5);
          i0.ɵɵtext(7, "Competencias");
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(8, "p", 6);
          i0.ɵɵtext(9, "Aqui se ve una lista de competencias asociadas a cada estudiante en conjunto con el rango de evaluacion de cada competencia");
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(10, "div", 7)(11, "div", 8)(12, "div");
          i0.ɵɵtext(13, " Rango de evaluacion actual: ");
          i0.ɵɵtemplate(14, AptitudesComponent_ng_template_14_Template, 1, 1, "ng-template", 9)(15, AptitudesComponent_ng_template_15_Template, 1, 0, "ng-template", null, 0, i0.ɵɵtemplateRefExtractor);
          i0.ɵɵelementEnd();
          i0.ɵɵelement(17, "br");
          i0.ɵɵelementStart(18, "button", 10);
          i0.ɵɵtext(19, " Actualizar Rango de evaluacion ");
          i0.ɵɵelementEnd();
          i0.ɵɵelement(20, "br");
          i0.ɵɵelementStart(21, "button", 11);
          i0.ɵɵtext(22, " Agregar Competencia ");
          i0.ɵɵelementEnd();
          i0.ɵɵelement(23, "br");
          i0.ɵɵelementStart(24, "div", 12)(25, "table", 13)(26, "thead")(27, "tr")(28, "th", 14);
          i0.ɵɵtext(29, "Competencia");
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(30, "th", 14);
          i0.ɵɵtext(31, "Acciones");
          i0.ɵɵelementEnd()()();
          i0.ɵɵelementStart(32, "tbody");
          i0.ɵɵtemplate(33, AptitudesComponent_tr_33_Template, 8, 1, "tr", 15);
          i0.ɵɵelementEnd()()()()()()()()();
          i0.ɵɵelementStart(34, "a", 16);
          i0.ɵɵelement(35, "i", 17);
          i0.ɵɵelementEnd();
          i0.ɵɵelement(36, "app-crear-aptitud-modal")(37, "app-editar-aptitud-modal", 18)(38, "app-rango-modal")(39, "app-logout-modal");
        }
        if (rf & 2) {
          const warning_r4 = i0.ɵɵreference(16);
          i0.ɵɵadvance(14);
          i0.ɵɵproperty("ngIf", !ctx.flag)("ngIfElse", warning_r4);
          i0.ɵɵadvance(4);
          i0.ɵɵproperty("disabled", !ctx.if_aptitud);
          i0.ɵɵadvance(15);
          i0.ɵɵproperty("ngForOf", ctx.aptitudes);
          i0.ɵɵadvance(4);
          i0.ɵɵproperty("id", ctx.id)("n_aptitud", ctx.n_aptitud)("id_carrera", ctx.id_carrera);
        }
      },
      dependencies: [i4.NgForOf, i4.NgIf, i5.BarraSuperiorComponent, i6.LogoutModalComponent, i7.BarraLateralEncargadoComponent, i8.CrearAptitudModalComponent, i9.EditarAptitudModalComponent, i10.RangoModalComponent],
      styles: ["/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */"]
    });
  }
}
exports.AptitudesComponent = AptitudesComponent;

/***/ }),

/***/ 15523:
/*!*************************************************!*\
  !*** ./src/app/vistas/blank/blank.component.ts ***!
  \*************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.BlankComponent = void 0;
const common_1 = __webpack_require__(/*! @angular/common */ 60316);
const i0 = __webpack_require__(/*! @angular/core */ 37580);
const i1 = __webpack_require__(/*! ../../componentes/footer/footer.component */ 89024);
const i2 = __webpack_require__(/*! ../../componentes/barra-superior/barra-superior.component */ 36370);
const i3 = __webpack_require__(/*! ../../componentes/logout-modal/logout-modal.component */ 15562);
const i4 = __webpack_require__(/*! ../../componentes/barra-lateral-alumno/barra-lateral-alumno.component */ 72756);
class BlankComponent {
  constructor(document) {
    this.document = document;
  }
  scrollToTop() {
    this.document.body.scrollTop = 0;
    this.document.documentElement.scrollTop = 0;
  }
  static {
    this.ɵfac = function BlankComponent_Factory(__ngFactoryType__) {
      return new (__ngFactoryType__ || BlankComponent)(i0.ɵɵdirectiveInject(common_1.DOCUMENT));
    };
  }
  static {
    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({
      type: BlankComponent,
      selectors: [["app-blank"]],
      decls: 22,
      vars: 0,
      consts: [["lang", "en"], ["charset", "utf-8"], ["http-equiv", "X-UA-Compatible", "content", "IE=edge"], ["name", "viewport", "content", "width=device-width, initial-scale=1, shrink-to-fit=no"], ["name", "description", "content", ""], ["name", "author", "content", ""], ["id", "page-top"], ["id", "wrapper"], ["id", "content-wrapper", 1, "d-flex", "flex-column"], ["id", "content", 1, "main-content"], [1, "container-fluid"], [1, "h3", "mb-4", "text-gray-800"], [1, "scroll-to-top", "rounded", 3, "click"], [1, "fas", "fa-angle-up"]],
      template: function BlankComponent_Template(rf, ctx) {
        if (rf & 1) {
          i0.ɵɵelementStart(0, "html", 0)(1, "head");
          i0.ɵɵelement(2, "meta", 1)(3, "meta", 2)(4, "meta", 3)(5, "meta", 4)(6, "meta", 5);
          i0.ɵɵelementStart(7, "title");
          i0.ɵɵtext(8, "Praxus - Blank");
          i0.ɵɵelementEnd()();
          i0.ɵɵelementStart(9, "body", 6)(10, "div", 7);
          i0.ɵɵelement(11, "app-barra-lateral-alumno");
          i0.ɵɵelementStart(12, "div", 8)(13, "div", 9);
          i0.ɵɵelement(14, "app-barra-superior");
          i0.ɵɵelementStart(15, "div", 10)(16, "h1", 11);
          i0.ɵɵtext(17, "Blank Page");
          i0.ɵɵelementEnd()()();
          i0.ɵɵelement(18, "app-footer");
          i0.ɵɵelementEnd()();
          i0.ɵɵelementStart(19, "a", 12);
          i0.ɵɵlistener("click", function BlankComponent_Template_a_click_19_listener() {
            return ctx.scrollToTop();
          });
          i0.ɵɵelement(20, "i", 13);
          i0.ɵɵelementEnd();
          i0.ɵɵelement(21, "app-logout-modal");
          i0.ɵɵelementEnd()();
        }
      },
      dependencies: [i1.FooterComponent, i2.BarraSuperiorComponent, i3.LogoutModalComponent, i4.BarraLateralAlumnoComponent],
      styles: ["/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */"]
    });
  }
}
exports.BlankComponent = BlankComponent;

/***/ }),

/***/ 53711:
/*!***********************************************************************************!*\
  !*** ./src/app/vistas/configuracion-practica/configuracion-practica.component.ts ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.ConfiguracionPracticaComponent = void 0;
const common_1 = __webpack_require__(/*! @angular/common */ 60316);
const router_1 = __webpack_require__(/*! @angular/router */ 95072);
const forms_1 = __webpack_require__(/*! @angular/forms */ 34456);
const table_1 = __webpack_require__(/*! @angular/material/table */ 77697);
const environment_1 = __webpack_require__(/*! src/environments/environment */ 45312);
const i0 = __webpack_require__(/*! @angular/core */ 37580);
const i1 = __webpack_require__(/*! @angular/forms */ 34456);
const i2 = __webpack_require__(/*! src/app/servicios/encargado/barra-lateral/barra-lateral.service */ 99539);
const i3 = __webpack_require__(/*! @angular/material/snack-bar */ 3347);
const i4 = __webpack_require__(/*! @angular/router */ 95072);
const i5 = __webpack_require__(/*! src/app/servicios/encargado/config-practica/config.service */ 55971);
const i6 = __webpack_require__(/*! src/app/servicios/encargado/edicion-simple/edicion.service */ 92836);
const i7 = __webpack_require__(/*! @angular/common */ 60316);
const i8 = __webpack_require__(/*! @angular/material/button */ 84175);
const i9 = __webpack_require__(/*! @angular/material/input */ 95541);
const i10 = __webpack_require__(/*! @angular/material/form-field */ 24950);
const i11 = __webpack_require__(/*! @angular/material/table */ 77697);
const i12 = __webpack_require__(/*! ../../componentes/barra-superior/barra-superior.component */ 36370);
const i13 = __webpack_require__(/*! ../../componentes/logout-modal/logout-modal.component */ 15562);
const i14 = __webpack_require__(/*! ../../componentes/barra-lateral-encargado/barra-lateral-encargado.component */ 43560);
const i15 = __webpack_require__(/*! ../../componentes/migrar-modal/migrar-modal.component */ 6074);
const i16 = __webpack_require__(/*! ../../componentes/subir-plantilla-informe-final/subir-plantilla-informe-final.component */ 9604);
const _c0 = () => ({
  "background-color": "#4e73df",
  "color": "white"
});
function ConfiguracionPracticaComponent_div_8_form_4_div_1_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 36)(1, "p");
    i0.ɵɵtext(2, "Los estudiantes que est\u00E9n cursando (o hayan cursado) esta pr\u00E1ctica quedar\u00E1n con la versi\u00F3n anterior");
    i0.ɵɵelementEnd()();
  }
}
function ConfiguracionPracticaComponent_div_8_form_4_div_7_mat_header_cell_4_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelement(0, "mat-header-cell");
  }
}
function ConfiguracionPracticaComponent_div_8_form_4_div_7_mat_cell_5_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "mat-cell", 47)(1, "mat-form-field");
    i0.ɵɵelement(2, "input", 48);
    i0.ɵɵelementEnd()();
  }
  if (rf & 2) {
    const element_r4 = ctx.$implicit;
    i0.ɵɵproperty("formGroup", element_r4);
  }
}
function ConfiguracionPracticaComponent_div_8_form_4_div_7_mat_header_cell_7_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelement(0, "mat-header-cell");
  }
}
function ConfiguracionPracticaComponent_div_8_form_4_div_7_mat_cell_8_Template(rf, ctx) {
  if (rf & 1) {
    const _r5 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "mat-cell", 47)(1, "button", 49);
    i0.ɵɵlistener("click", function ConfiguracionPracticaComponent_div_8_form_4_div_7_mat_cell_8_Template_button_click_1_listener() {
      const i_r6 = i0.ɵɵrestoreView(_r5).index;
      const ctx_r1 = i0.ɵɵnextContext(4);
      return i0.ɵɵresetView(ctx_r1.deleteHoras(i_r6));
    });
    i0.ɵɵelementStart(2, "mat-icon", 50);
    i0.ɵɵtext(3, "Eliminar opci\u00F3n");
    i0.ɵɵelementEnd()()();
  }
  if (rf & 2) {
    const element_r7 = ctx.$implicit;
    i0.ɵɵproperty("formGroup", element_r7);
  }
}
function ConfiguracionPracticaComponent_div_8_form_4_div_7_mat_header_row_9_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelement(0, "mat-header-row");
  }
}
function ConfiguracionPracticaComponent_div_8_form_4_div_7_mat_row_10_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelement(0, "mat-row");
  }
}
function ConfiguracionPracticaComponent_div_8_form_4_div_7_Template(rf, ctx) {
  if (rf & 1) {
    const _r3 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "div")(1, "mat-table", 37);
    i0.ɵɵelementContainerStart(2, 38)(3, 39);
    i0.ɵɵtemplate(4, ConfiguracionPracticaComponent_div_8_form_4_div_7_mat_header_cell_4_Template, 1, 0, "mat-header-cell", 40)(5, ConfiguracionPracticaComponent_div_8_form_4_div_7_mat_cell_5_Template, 3, 1, "mat-cell", 41);
    i0.ɵɵelementContainerEnd();
    i0.ɵɵelementContainerStart(6, 42);
    i0.ɵɵtemplate(7, ConfiguracionPracticaComponent_div_8_form_4_div_7_mat_header_cell_7_Template, 1, 0, "mat-header-cell", 40)(8, ConfiguracionPracticaComponent_div_8_form_4_div_7_mat_cell_8_Template, 4, 1, "mat-cell", 41);
    i0.ɵɵelementContainerEnd();
    i0.ɵɵtemplate(9, ConfiguracionPracticaComponent_div_8_form_4_div_7_mat_header_row_9_Template, 1, 0, "mat-header-row", 43)(10, ConfiguracionPracticaComponent_div_8_form_4_div_7_mat_row_10_Template, 1, 0, "mat-row", 44);
    i0.ɵɵelementContainerEnd();
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(11, "div", 45)(12, "button", 46);
    i0.ɵɵlistener("click", function ConfiguracionPracticaComponent_div_8_form_4_div_7_Template_button_click_12_listener() {
      i0.ɵɵrestoreView(_r3);
      const ctx_r1 = i0.ɵɵnextContext(3);
      return i0.ɵɵresetView(ctx_r1.addHoras());
    });
    i0.ɵɵtext(13, "Agregar opci\u00F3n de horas");
    i0.ɵɵelementEnd()()();
  }
  if (rf & 2) {
    const ctx_r1 = i0.ɵɵnextContext(3);
    i0.ɵɵadvance();
    i0.ɵɵproperty("dataSource", ctx_r1.dataSourcePacksHoras);
    i0.ɵɵadvance(8);
    i0.ɵɵproperty("matHeaderRowDef", ctx_r1.displayedColumnsHoras);
    i0.ɵɵadvance();
    i0.ɵɵproperty("matRowDefColumns", ctx_r1.displayedColumnsHoras);
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngStyle", i0.ɵɵpureFunction0(4, _c0));
  }
}
function ConfiguracionPracticaComponent_div_8_form_4_div_8_mat_header_cell_4_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelement(0, "mat-header-cell");
  }
}
function ConfiguracionPracticaComponent_div_8_form_4_div_8_mat_cell_5_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "mat-cell", 47)(1, "mat-form-field");
    i0.ɵɵelement(2, "input", 53);
    i0.ɵɵelementEnd()();
  }
  if (rf & 2) {
    const element_r9 = ctx.$implicit;
    i0.ɵɵproperty("formGroup", element_r9);
  }
}
function ConfiguracionPracticaComponent_div_8_form_4_div_8_mat_header_cell_7_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelement(0, "mat-header-cell");
  }
}
function ConfiguracionPracticaComponent_div_8_form_4_div_8_mat_cell_8_Template(rf, ctx) {
  if (rf & 1) {
    const _r10 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "mat-cell", 47)(1, "button", 49);
    i0.ɵɵlistener("click", function ConfiguracionPracticaComponent_div_8_form_4_div_8_mat_cell_8_Template_button_click_1_listener() {
      const i_r11 = i0.ɵɵrestoreView(_r10).index;
      const ctx_r1 = i0.ɵɵnextContext(4);
      return i0.ɵɵresetView(ctx_r1.deleteMeses(i_r11));
    });
    i0.ɵɵelementStart(2, "mat-icon", 50);
    i0.ɵɵtext(3, "Eliminar opci\u00F3n");
    i0.ɵɵelementEnd()()();
  }
  if (rf & 2) {
    const element_r12 = ctx.$implicit;
    i0.ɵɵproperty("formGroup", element_r12);
  }
}
function ConfiguracionPracticaComponent_div_8_form_4_div_8_mat_header_row_9_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelement(0, "mat-header-row");
  }
}
function ConfiguracionPracticaComponent_div_8_form_4_div_8_mat_row_10_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelement(0, "mat-row");
  }
}
function ConfiguracionPracticaComponent_div_8_form_4_div_8_Template(rf, ctx) {
  if (rf & 1) {
    const _r8 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "div")(1, "mat-table", 37);
    i0.ɵɵelementContainerStart(2, 51)(3, 52);
    i0.ɵɵtemplate(4, ConfiguracionPracticaComponent_div_8_form_4_div_8_mat_header_cell_4_Template, 1, 0, "mat-header-cell", 40)(5, ConfiguracionPracticaComponent_div_8_form_4_div_8_mat_cell_5_Template, 3, 1, "mat-cell", 41);
    i0.ɵɵelementContainerEnd();
    i0.ɵɵelementContainerStart(6, 42);
    i0.ɵɵtemplate(7, ConfiguracionPracticaComponent_div_8_form_4_div_8_mat_header_cell_7_Template, 1, 0, "mat-header-cell", 40)(8, ConfiguracionPracticaComponent_div_8_form_4_div_8_mat_cell_8_Template, 4, 1, "mat-cell", 41);
    i0.ɵɵelementContainerEnd();
    i0.ɵɵtemplate(9, ConfiguracionPracticaComponent_div_8_form_4_div_8_mat_header_row_9_Template, 1, 0, "mat-header-row", 43)(10, ConfiguracionPracticaComponent_div_8_form_4_div_8_mat_row_10_Template, 1, 0, "mat-row", 44);
    i0.ɵɵelementContainerEnd();
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(11, "div", 45)(12, "button", 46);
    i0.ɵɵlistener("click", function ConfiguracionPracticaComponent_div_8_form_4_div_8_Template_button_click_12_listener() {
      i0.ɵɵrestoreView(_r8);
      const ctx_r1 = i0.ɵɵnextContext(3);
      return i0.ɵɵresetView(ctx_r1.addMeses());
    });
    i0.ɵɵtext(13, "Agregar opci\u00F3n de meses");
    i0.ɵɵelementEnd()()();
  }
  if (rf & 2) {
    const ctx_r1 = i0.ɵɵnextContext(3);
    i0.ɵɵadvance();
    i0.ɵɵproperty("dataSource", ctx_r1.dataSourcePacksMeses);
    i0.ɵɵadvance(8);
    i0.ɵɵproperty("matHeaderRowDef", ctx_r1.displayedColumnsMeses);
    i0.ɵɵadvance();
    i0.ɵɵproperty("matRowDefColumns", ctx_r1.displayedColumnsMeses);
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngStyle", i0.ɵɵpureFunction0(4, _c0));
  }
}
function ConfiguracionPracticaComponent_div_8_form_4_div_40_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div")(1, "p", 54);
    i0.ɵɵtext(2, " Elija el tipo de informe final que desea utilizar");
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(3, "div", 21);
    i0.ɵɵelement(4, "input", 55);
    i0.ɵɵelementStart(5, "label", 56);
    i0.ɵɵtext(6, "Encuesta");
    i0.ɵɵelementEnd()();
    i0.ɵɵelementStart(7, "div", 21);
    i0.ɵɵelement(8, "input", 57);
    i0.ɵɵelementStart(9, "label", 58);
    i0.ɵɵtext(10, "Archivo");
    i0.ɵɵelementEnd()()();
  }
}
function ConfiguracionPracticaComponent_div_8_form_4_Template(rf, ctx) {
  if (rf & 1) {
    const _r1 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "form", 15);
    i0.ɵɵlistener("ngSubmit", function ConfiguracionPracticaComponent_div_8_form_4_Template_form_ngSubmit_0_listener() {
      i0.ɵɵrestoreView(_r1);
      const ctx_r1 = i0.ɵɵnextContext(2);
      return i0.ɵɵresetView(ctx_r1.onSubmitPractica());
    });
    i0.ɵɵtemplate(1, ConfiguracionPracticaComponent_div_8_form_4_div_1_Template, 3, 0, "div", 16);
    i0.ɵɵelement(2, "input", 17);
    i0.ɵɵelementStart(3, "input", 18);
    i0.ɵɵlistener("change", function ConfiguracionPracticaComponent_div_8_form_4_Template_input_change_3_listener($event) {
      i0.ɵɵrestoreView(_r1);
      const ctx_r1 = i0.ɵɵnextContext(2);
      return i0.ɵɵresetView(ctx_r1.habilitarHorasFunc($event));
    });
    i0.ɵɵelementEnd();
    i0.ɵɵtext(4, " Horas ");
    i0.ɵɵelementStart(5, "input", 19);
    i0.ɵɵlistener("change", function ConfiguracionPracticaComponent_div_8_form_4_Template_input_change_5_listener($event) {
      i0.ɵɵrestoreView(_r1);
      const ctx_r1 = i0.ɵɵnextContext(2);
      return i0.ɵɵresetView(ctx_r1.habilitarMesesFunc($event));
    });
    i0.ɵɵelementEnd();
    i0.ɵɵtext(6, " Meses ");
    i0.ɵɵtemplate(7, ConfiguracionPracticaComponent_div_8_form_4_div_7_Template, 14, 5, "div", 20)(8, ConfiguracionPracticaComponent_div_8_form_4_div_8_Template, 14, 5, "div", 20);
    i0.ɵɵelement(9, "br");
    i0.ɵɵelementStart(10, "p");
    i0.ɵɵtext(11, " Frecuencia informes de avance (bit\u00E1coras) ");
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(12, "div", 21);
    i0.ɵɵelement(13, "input", 22);
    i0.ɵɵelementStart(14, "label", 23);
    i0.ɵɵtext(15, "Diario");
    i0.ɵɵelementEnd()();
    i0.ɵɵelementStart(16, "div", 21);
    i0.ɵɵelement(17, "input", 24);
    i0.ɵɵelementStart(18, "label", 25);
    i0.ɵɵtext(19, "Semanal");
    i0.ɵɵelementEnd()();
    i0.ɵɵelementStart(20, "div", 21);
    i0.ɵɵelement(21, "input", 26);
    i0.ɵɵelementStart(22, "label", 27);
    i0.ɵɵtext(23, "Mensual");
    i0.ɵɵelementEnd()();
    i0.ɵɵelementStart(24, "div", 21);
    i0.ɵɵelement(25, "input", 28);
    i0.ɵɵelementStart(26, "label", 29);
    i0.ɵɵtext(27, "Ninguno");
    i0.ɵɵelementEnd()();
    i0.ɵɵelement(28, "br")(29, "br");
    i0.ɵɵelementStart(30, "p");
    i0.ɵɵtext(31, " Informe Final ");
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(32, "div", 21);
    i0.ɵɵelement(33, "input", 30);
    i0.ɵɵelementStart(34, "label", 31);
    i0.ɵɵtext(35, "Si");
    i0.ɵɵelementEnd()();
    i0.ɵɵelementStart(36, "div", 21);
    i0.ɵɵelement(37, "input", 32);
    i0.ɵɵelementStart(38, "label", 33);
    i0.ɵɵtext(39, "No");
    i0.ɵɵelementEnd()();
    i0.ɵɵtemplate(40, ConfiguracionPracticaComponent_div_8_form_4_div_40_Template, 11, 0, "div", 20);
    i0.ɵɵelement(41, "br")(42, "br");
    i0.ɵɵelementStart(43, "p");
    i0.ɵɵtext(44, "\u00BFDesea incluir la creaci\u00F3n del documento para direcci\u00F3n de estudios?");
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(45, "label")(46, "input", 34);
    i0.ɵɵlistener("change", function ConfiguracionPracticaComponent_div_8_form_4_Template_input_change_46_listener($event) {
      i0.ɵɵrestoreView(_r1);
      const ctx_r1 = i0.ɵɵnextContext(2);
      return i0.ɵɵresetView(ctx_r1.habilitarDocDirest($event));
    });
    i0.ɵɵelementEnd();
    i0.ɵɵtext(47, " Habilitar ");
    i0.ɵɵelementEnd();
    i0.ɵɵelement(48, "br");
    i0.ɵɵelementStart(49, "button", 35);
    i0.ɵɵtext(50, "Siguiente");
    i0.ɵɵelementEnd()();
  }
  if (rf & 2) {
    const ctx_r1 = i0.ɵɵnextContext(2);
    i0.ɵɵproperty("formGroup", ctx_r1.fg);
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngIf", ctx_r1.tiene_alumnos);
    i0.ɵɵadvance(6);
    i0.ɵɵproperty("ngIf", ctx_r1.habilitarHoras);
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngIf", ctx_r1.habilitarMeses);
    i0.ɵɵadvance(32);
    i0.ɵɵproperty("ngIf", ctx_r1.fg.value.informeFinal == "si");
  }
}
function ConfiguracionPracticaComponent_div_8_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 11)(1, "div", 12)(2, "div", 13);
    i0.ɵɵtext(3, " Configuraci\u00F3n de pr\u00E1ctica ");
    i0.ɵɵelementEnd();
    i0.ɵɵtemplate(4, ConfiguracionPracticaComponent_div_8_form_4_Template, 51, 5, "form", 14);
    i0.ɵɵelementEnd()();
  }
  if (rf & 2) {
    const ctx_r1 = i0.ɵɵnextContext();
    i0.ɵɵadvance(4);
    i0.ɵɵproperty("ngIf", ctx_r1.flag);
  }
}
function ConfiguracionPracticaComponent_div_9_div_4_div_1_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 67);
    i0.ɵɵtext(1);
    i0.ɵɵelement(2, "br")(3, "br")(4, "textarea", 68);
    i0.ɵɵelementEnd();
  }
  if (rf & 2) {
    const pregunta_avance_r14 = i0.ɵɵnextContext().$implicit;
    i0.ɵɵadvance();
    i0.ɵɵtextInterpolate1(" ", pregunta_avance_r14, " ");
  }
}
function ConfiguracionPracticaComponent_div_9_div_4_div_2_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 67);
    i0.ɵɵtext(1);
    i0.ɵɵelementEnd();
  }
  if (rf & 2) {
    const pregunta_avance_r14 = i0.ɵɵnextContext().$implicit;
    i0.ɵɵadvance();
    i0.ɵɵtextInterpolate1(" ", pregunta_avance_r14, " ");
  }
}
function ConfiguracionPracticaComponent_div_9_div_4_div_3_div_6_i_2_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelement(0, "i", 77);
  }
}
function ConfiguracionPracticaComponent_div_9_div_4_div_3_div_6_i_3_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelement(0, "i", 78);
  }
}
function ConfiguracionPracticaComponent_div_9_div_4_div_3_div_6_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div")(1, "td");
    i0.ɵɵtemplate(2, ConfiguracionPracticaComponent_div_9_div_4_div_3_div_6_i_2_Template, 1, 0, "i", 74)(3, ConfiguracionPracticaComponent_div_9_div_4_div_3_div_6_i_3_Template, 1, 0, "i", 75);
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(4, "td")(5, "label", 76);
    i0.ɵɵtext(6);
    i0.ɵɵelementEnd()()();
  }
  if (rf & 2) {
    const opcion_r15 = ctx.$implicit;
    const i_r16 = i0.ɵɵnextContext(2).index;
    const ctx_r1 = i0.ɵɵnextContext(2);
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngIf", ctx_r1.tipos_preguntas_avance[i_r16] == "alternativas");
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngIf", ctx_r1.tipos_preguntas_avance[i_r16] == "casillas");
    i0.ɵɵadvance(3);
    i0.ɵɵtextInterpolate(opcion_r15);
  }
}
function ConfiguracionPracticaComponent_div_9_div_4_div_3_form_8_Template(rf, ctx) {
  if (rf & 1) {
    const _r17 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "form", 79);
    i0.ɵɵlistener("ngSubmit", function ConfiguracionPracticaComponent_div_9_div_4_div_3_form_8_Template_form_ngSubmit_0_listener() {
      i0.ɵɵrestoreView(_r17);
      const i_r16 = i0.ɵɵnextContext(2).index;
      const ctx_r1 = i0.ɵɵnextContext(2);
      return i0.ɵɵresetView(ctx_r1.eliminarPreguntaAvance(i_r16));
    });
    i0.ɵɵelementStart(1, "button", 80);
    i0.ɵɵtext(2, " Eliminar Pregunta ");
    i0.ɵɵelementEnd()();
  }
}
function ConfiguracionPracticaComponent_div_9_div_4_div_3_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 69)(1, "div", 70);
    i0.ɵɵelement(2, "div", 61);
    i0.ɵɵelementStart(3, "div", 71)(4, "table")(5, "tr");
    i0.ɵɵtemplate(6, ConfiguracionPracticaComponent_div_9_div_4_div_3_div_6_Template, 7, 3, "div", 72);
    i0.ɵɵelementEnd()()();
    i0.ɵɵelement(7, "div", 61);
    i0.ɵɵelementEnd();
    i0.ɵɵtemplate(8, ConfiguracionPracticaComponent_div_9_div_4_div_3_form_8_Template, 3, 0, "form", 73);
    i0.ɵɵelementEnd();
  }
  if (rf & 2) {
    const i_r16 = i0.ɵɵnextContext().index;
    const ctx_r1 = i0.ɵɵnextContext(2);
    i0.ɵɵadvance(6);
    i0.ɵɵproperty("ngForOf", ctx_r1.splitOpciones(ctx_r1.lista_opciones_preguntas_avance[i_r16]));
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngIf", ctx_r1.flag);
  }
}
function ConfiguracionPracticaComponent_div_9_div_4_div_4_form_1_Template(rf, ctx) {
  if (rf & 1) {
    const _r18 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "form", 79);
    i0.ɵɵlistener("ngSubmit", function ConfiguracionPracticaComponent_div_9_div_4_div_4_form_1_Template_form_ngSubmit_0_listener() {
      i0.ɵɵrestoreView(_r18);
      const i_r16 = i0.ɵɵnextContext(2).index;
      const ctx_r1 = i0.ɵɵnextContext(2);
      return i0.ɵɵresetView(ctx_r1.eliminarPreguntaAvance(i_r16));
    });
    i0.ɵɵelementStart(1, "button", 80);
    i0.ɵɵtext(2, " Eliminar Pregunta ");
    i0.ɵɵelementEnd()();
  }
}
function ConfiguracionPracticaComponent_div_9_div_4_div_4_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div");
    i0.ɵɵtemplate(1, ConfiguracionPracticaComponent_div_9_div_4_div_4_form_1_Template, 3, 0, "form", 73);
    i0.ɵɵelementEnd();
  }
  if (rf & 2) {
    const ctx_r1 = i0.ɵɵnextContext(3);
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngIf", ctx_r1.flag);
  }
}
function ConfiguracionPracticaComponent_div_9_div_4_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 64);
    i0.ɵɵtemplate(1, ConfiguracionPracticaComponent_div_9_div_4_div_1_Template, 5, 1, "div", 65)(2, ConfiguracionPracticaComponent_div_9_div_4_div_2_Template, 2, 1, "div", 65)(3, ConfiguracionPracticaComponent_div_9_div_4_div_3_Template, 9, 2, "div", 66)(4, ConfiguracionPracticaComponent_div_9_div_4_div_4_Template, 2, 1, "div", 20);
    i0.ɵɵelementEnd();
  }
  if (rf & 2) {
    const i_r16 = ctx.index;
    const ctx_r1 = i0.ɵɵnextContext(2);
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngIf", ctx_r1.tipos_preguntas_avance[i_r16] == "abierta");
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngIf", ctx_r1.tipos_preguntas_avance[i_r16] == "casillas" || ctx_r1.tipos_preguntas_avance[i_r16] == "alternativas");
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngIf", ctx_r1.lista_opciones_preguntas_avance[i_r16] != "");
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngIf", ctx_r1.lista_opciones_preguntas_avance[i_r16] == "");
  }
}
function ConfiguracionPracticaComponent_div_9_form_6_form_1_div_11_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelement(0, "div");
  }
}
function ConfiguracionPracticaComponent_div_9_form_6_form_1_div_12_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelement(0, "div");
  }
}
function ConfiguracionPracticaComponent_div_9_form_6_form_1_div_13_mat_header_cell_5_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelement(0, "mat-header-cell");
  }
}
function ConfiguracionPracticaComponent_div_9_form_6_form_1_div_13_mat_cell_6_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "mat-cell", 47)(1, "mat-form-field");
    i0.ɵɵelement(2, "input", 90);
    i0.ɵɵelementEnd()();
  }
  if (rf & 2) {
    const element_r21 = ctx.$implicit;
    i0.ɵɵproperty("formGroup", element_r21);
  }
}
function ConfiguracionPracticaComponent_div_9_form_6_form_1_div_13_mat_header_cell_8_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelement(0, "mat-header-cell");
  }
}
function ConfiguracionPracticaComponent_div_9_form_6_form_1_div_13_mat_cell_9_Template(rf, ctx) {
  if (rf & 1) {
    const _r22 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "mat-cell", 47)(1, "button", 49);
    i0.ɵɵlistener("click", function ConfiguracionPracticaComponent_div_9_form_6_form_1_div_13_mat_cell_9_Template_button_click_1_listener() {
      const i_r23 = i0.ɵɵrestoreView(_r22).index;
      const ctx_r1 = i0.ɵɵnextContext(5);
      return i0.ɵɵresetView(ctx_r1.deleteOpcionPregunta(i_r23));
    });
    i0.ɵɵelementStart(2, "mat-icon", 50);
    i0.ɵɵtext(3, "Eliminar opci\u00F3n");
    i0.ɵɵelementEnd()()();
  }
  if (rf & 2) {
    const element_r24 = ctx.$implicit;
    i0.ɵɵproperty("formGroup", element_r24);
  }
}
function ConfiguracionPracticaComponent_div_9_form_6_form_1_div_13_mat_header_row_10_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelement(0, "mat-header-row");
  }
}
function ConfiguracionPracticaComponent_div_9_form_6_form_1_div_13_mat_row_11_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelement(0, "mat-row");
  }
}
function ConfiguracionPracticaComponent_div_9_form_6_form_1_div_13_Template(rf, ctx) {
  if (rf & 1) {
    const _r20 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "div");
    i0.ɵɵelement(1, "br");
    i0.ɵɵelementStart(2, "mat-table", 37);
    i0.ɵɵelementContainerStart(3, 88)(4, 89);
    i0.ɵɵtemplate(5, ConfiguracionPracticaComponent_div_9_form_6_form_1_div_13_mat_header_cell_5_Template, 1, 0, "mat-header-cell", 40)(6, ConfiguracionPracticaComponent_div_9_form_6_form_1_div_13_mat_cell_6_Template, 3, 1, "mat-cell", 41);
    i0.ɵɵelementContainerEnd();
    i0.ɵɵelementContainerStart(7, 42);
    i0.ɵɵtemplate(8, ConfiguracionPracticaComponent_div_9_form_6_form_1_div_13_mat_header_cell_8_Template, 1, 0, "mat-header-cell", 40)(9, ConfiguracionPracticaComponent_div_9_form_6_form_1_div_13_mat_cell_9_Template, 4, 1, "mat-cell", 41);
    i0.ɵɵelementContainerEnd();
    i0.ɵɵtemplate(10, ConfiguracionPracticaComponent_div_9_form_6_form_1_div_13_mat_header_row_10_Template, 1, 0, "mat-header-row", 43)(11, ConfiguracionPracticaComponent_div_9_form_6_form_1_div_13_mat_row_11_Template, 1, 0, "mat-row", 44);
    i0.ɵɵelementContainerEnd();
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(12, "div", 45)(13, "button", 46);
    i0.ɵɵlistener("click", function ConfiguracionPracticaComponent_div_9_form_6_form_1_div_13_Template_button_click_13_listener() {
      i0.ɵɵrestoreView(_r20);
      const ctx_r1 = i0.ɵɵnextContext(4);
      return i0.ɵɵresetView(ctx_r1.addOpcionPregunta());
    });
    i0.ɵɵtext(14, "Agregar Opci\u00F3n");
    i0.ɵɵelementEnd()();
    i0.ɵɵelement(15, "br");
    i0.ɵɵelementEnd();
  }
  if (rf & 2) {
    const ctx_r1 = i0.ɵɵnextContext(4);
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("dataSource", ctx_r1.dataSourcePacksOpcionesPregunta);
    i0.ɵɵadvance(8);
    i0.ɵɵproperty("matHeaderRowDef", ctx_r1.displayedColumnsOpcionesPregunta);
    i0.ɵɵadvance();
    i0.ɵɵproperty("matRowDefColumns", ctx_r1.displayedColumnsOpcionesPregunta);
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngStyle", i0.ɵɵpureFunction0(4, _c0));
  }
}
function ConfiguracionPracticaComponent_div_9_form_6_form_1_div_14_mat_header_cell_5_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelement(0, "mat-header-cell");
  }
}
function ConfiguracionPracticaComponent_div_9_form_6_form_1_div_14_mat_cell_6_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "mat-cell", 47)(1, "mat-form-field");
    i0.ɵɵelement(2, "input", 90);
    i0.ɵɵelementEnd()();
  }
  if (rf & 2) {
    const element_r26 = ctx.$implicit;
    i0.ɵɵproperty("formGroup", element_r26);
  }
}
function ConfiguracionPracticaComponent_div_9_form_6_form_1_div_14_mat_header_cell_8_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelement(0, "mat-header-cell");
  }
}
function ConfiguracionPracticaComponent_div_9_form_6_form_1_div_14_mat_cell_9_Template(rf, ctx) {
  if (rf & 1) {
    const _r27 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "mat-cell", 47)(1, "button", 49);
    i0.ɵɵlistener("click", function ConfiguracionPracticaComponent_div_9_form_6_form_1_div_14_mat_cell_9_Template_button_click_1_listener() {
      const i_r28 = i0.ɵɵrestoreView(_r27).index;
      const ctx_r1 = i0.ɵɵnextContext(5);
      return i0.ɵɵresetView(ctx_r1.deleteOpcionPregunta(i_r28));
    });
    i0.ɵɵelementStart(2, "mat-icon", 50);
    i0.ɵɵtext(3, "Eliminar opci\u00F3n");
    i0.ɵɵelementEnd()()();
  }
  if (rf & 2) {
    const element_r29 = ctx.$implicit;
    i0.ɵɵproperty("formGroup", element_r29);
  }
}
function ConfiguracionPracticaComponent_div_9_form_6_form_1_div_14_mat_header_row_10_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelement(0, "mat-header-row");
  }
}
function ConfiguracionPracticaComponent_div_9_form_6_form_1_div_14_mat_row_11_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelement(0, "mat-row");
  }
}
function ConfiguracionPracticaComponent_div_9_form_6_form_1_div_14_Template(rf, ctx) {
  if (rf & 1) {
    const _r25 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "div");
    i0.ɵɵelement(1, "br");
    i0.ɵɵelementStart(2, "mat-table", 37);
    i0.ɵɵelementContainerStart(3, 88)(4, 89);
    i0.ɵɵtemplate(5, ConfiguracionPracticaComponent_div_9_form_6_form_1_div_14_mat_header_cell_5_Template, 1, 0, "mat-header-cell", 40)(6, ConfiguracionPracticaComponent_div_9_form_6_form_1_div_14_mat_cell_6_Template, 3, 1, "mat-cell", 41);
    i0.ɵɵelementContainerEnd();
    i0.ɵɵelementContainerStart(7, 42);
    i0.ɵɵtemplate(8, ConfiguracionPracticaComponent_div_9_form_6_form_1_div_14_mat_header_cell_8_Template, 1, 0, "mat-header-cell", 40)(9, ConfiguracionPracticaComponent_div_9_form_6_form_1_div_14_mat_cell_9_Template, 4, 1, "mat-cell", 41);
    i0.ɵɵelementContainerEnd();
    i0.ɵɵtemplate(10, ConfiguracionPracticaComponent_div_9_form_6_form_1_div_14_mat_header_row_10_Template, 1, 0, "mat-header-row", 43)(11, ConfiguracionPracticaComponent_div_9_form_6_form_1_div_14_mat_row_11_Template, 1, 0, "mat-row", 44);
    i0.ɵɵelementContainerEnd();
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(12, "div", 45)(13, "button", 46);
    i0.ɵɵlistener("click", function ConfiguracionPracticaComponent_div_9_form_6_form_1_div_14_Template_button_click_13_listener() {
      i0.ɵɵrestoreView(_r25);
      const ctx_r1 = i0.ɵɵnextContext(4);
      return i0.ɵɵresetView(ctx_r1.addOpcionPregunta());
    });
    i0.ɵɵtext(14, "Agregar Opci\u00F3n");
    i0.ɵɵelementEnd()();
    i0.ɵɵelement(15, "br");
    i0.ɵɵelementEnd();
  }
  if (rf & 2) {
    const ctx_r1 = i0.ɵɵnextContext(4);
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("dataSource", ctx_r1.dataSourcePacksOpcionesPregunta);
    i0.ɵɵadvance(8);
    i0.ɵɵproperty("matHeaderRowDef", ctx_r1.displayedColumnsOpcionesPregunta);
    i0.ɵɵadvance();
    i0.ɵɵproperty("matRowDefColumns", ctx_r1.displayedColumnsOpcionesPregunta);
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngStyle", i0.ɵɵpureFunction0(4, _c0));
  }
}
function ConfiguracionPracticaComponent_div_9_form_6_form_1_Template(rf, ctx) {
  if (rf & 1) {
    const _r19 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "form", 15);
    i0.ɵɵlistener("ngSubmit", function ConfiguracionPracticaComponent_div_9_form_6_form_1_Template_form_ngSubmit_0_listener() {
      i0.ɵɵrestoreView(_r19);
      const ctx_r1 = i0.ɵɵnextContext(3);
      return i0.ɵɵresetView(ctx_r1.onSubmitAddPreguntaAvance());
    });
    i0.ɵɵelementStart(1, "input", 81);
    i0.ɵɵtwoWayListener("ngModelChange", function ConfiguracionPracticaComponent_div_9_form_6_form_1_Template_input_ngModelChange_1_listener($event) {
      i0.ɵɵrestoreView(_r19);
      const ctx_r1 = i0.ɵɵnextContext(3);
      i0.ɵɵtwoWayBindingSet(ctx_r1.pregunta, $event) || (ctx_r1.pregunta = $event);
      return i0.ɵɵresetView($event);
    });
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(2, "select", 82);
    i0.ɵɵlistener("change", function ConfiguracionPracticaComponent_div_9_form_6_form_1_Template_select_change_2_listener($event) {
      i0.ɵɵrestoreView(_r19);
      const ctx_r1 = i0.ɵɵnextContext(3);
      return i0.ɵɵresetView(ctx_r1.tipoPregunta($event));
    });
    i0.ɵɵelementStart(3, "option", 83);
    i0.ɵɵtext(4, "Seleccione el tipo de respuesta");
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(5, "option", 84);
    i0.ɵɵtext(6, "Abierta");
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(7, "option", 85);
    i0.ɵɵtext(8, "Casillas");
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(9, "option", 86);
    i0.ɵɵtext(10, "Alternativas");
    i0.ɵɵelementEnd()();
    i0.ɵɵtemplate(11, ConfiguracionPracticaComponent_div_9_form_6_form_1_div_11_Template, 1, 0, "div", 20)(12, ConfiguracionPracticaComponent_div_9_form_6_form_1_div_12_Template, 1, 0, "div", 20)(13, ConfiguracionPracticaComponent_div_9_form_6_form_1_div_13_Template, 16, 5, "div", 20)(14, ConfiguracionPracticaComponent_div_9_form_6_form_1_div_14_Template, 16, 5, "div", 20);
    i0.ɵɵelementStart(15, "button", 87);
    i0.ɵɵtext(16, "Agregar Pregunta");
    i0.ɵɵelementEnd()();
  }
  if (rf & 2) {
    const ctx_r1 = i0.ɵɵnextContext(3);
    i0.ɵɵproperty("formGroup", ctx_r1.fg);
    i0.ɵɵadvance();
    i0.ɵɵtwoWayProperty("ngModel", ctx_r1.pregunta);
    i0.ɵɵadvance(10);
    i0.ɵɵproperty("ngIf", ctx_r1.tipo_pregunta == "");
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngIf", ctx_r1.tipo_pregunta == "abierta");
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngIf", ctx_r1.tipo_pregunta == "casillas");
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngIf", ctx_r1.tipo_pregunta == "alternativas");
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngStyle", i0.ɵɵpureFunction0(7, _c0));
  }
}
function ConfiguracionPracticaComponent_div_9_form_6_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "form");
    i0.ɵɵtemplate(1, ConfiguracionPracticaComponent_div_9_form_6_form_1_Template, 17, 8, "form", 14);
    i0.ɵɵelementEnd();
  }
  if (rf & 2) {
    const ctx_r1 = i0.ɵɵnextContext(2);
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngIf", ctx_r1.flag);
  }
}
function ConfiguracionPracticaComponent_div_9_Template(rf, ctx) {
  if (rf & 1) {
    const _r13 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "div", 11)(1, "div", 12)(2, "div", 13);
    i0.ɵɵtext(3, " Preguntas informe de avance ");
    i0.ɵɵelementEnd();
    i0.ɵɵtemplate(4, ConfiguracionPracticaComponent_div_9_div_4_Template, 5, 4, "div", 59);
    i0.ɵɵelement(5, "br");
    i0.ɵɵtemplate(6, ConfiguracionPracticaComponent_div_9_form_6_Template, 2, 1, "form", 20);
    i0.ɵɵelementStart(7, "div", 60);
    i0.ɵɵelement(8, "div", 61);
    i0.ɵɵelementStart(9, "button", 62);
    i0.ɵɵlistener("click", function ConfiguracionPracticaComponent_div_9_Template_button_click_9_listener() {
      i0.ɵɵrestoreView(_r13);
      const ctx_r1 = i0.ɵɵnextContext();
      return i0.ɵɵresetView(ctx_r1.volver());
    });
    i0.ɵɵtext(10, " Volver ");
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(11, "button", 63);
    i0.ɵɵlistener("click", function ConfiguracionPracticaComponent_div_9_Template_button_click_11_listener() {
      i0.ɵɵrestoreView(_r13);
      const ctx_r1 = i0.ɵɵnextContext();
      return i0.ɵɵresetView(ctx_r1.avanzarDesdePreguntasAvance());
    });
    i0.ɵɵtext(12, " Siguiente ");
    i0.ɵɵelementEnd();
    i0.ɵɵelement(13, "div", 61);
    i0.ɵɵelementEnd()()();
  }
  if (rf & 2) {
    const ctx_r1 = i0.ɵɵnextContext();
    i0.ɵɵadvance(4);
    i0.ɵɵproperty("ngForOf", ctx_r1.lista_preguntas_avance);
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngIf", ctx_r1.flag);
  }
}
function ConfiguracionPracticaComponent_div_10_div_4_div_1_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 67);
    i0.ɵɵtext(1);
    i0.ɵɵelement(2, "br")(3, "br")(4, "textarea", 91);
    i0.ɵɵelementEnd();
  }
  if (rf & 2) {
    const pregunta_final_r31 = i0.ɵɵnextContext().$implicit;
    i0.ɵɵadvance();
    i0.ɵɵtextInterpolate1(" ", pregunta_final_r31, " ");
  }
}
function ConfiguracionPracticaComponent_div_10_div_4_div_2_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 67);
    i0.ɵɵtext(1);
    i0.ɵɵelementEnd();
  }
  if (rf & 2) {
    const pregunta_final_r31 = i0.ɵɵnextContext().$implicit;
    i0.ɵɵadvance();
    i0.ɵɵtextInterpolate1(" ", pregunta_final_r31, " ");
  }
}
function ConfiguracionPracticaComponent_div_10_div_4_div_3_div_6_i_2_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelement(0, "i", 77);
  }
}
function ConfiguracionPracticaComponent_div_10_div_4_div_3_div_6_i_3_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelement(0, "i", 78);
  }
}
function ConfiguracionPracticaComponent_div_10_div_4_div_3_div_6_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div")(1, "td");
    i0.ɵɵtemplate(2, ConfiguracionPracticaComponent_div_10_div_4_div_3_div_6_i_2_Template, 1, 0, "i", 74)(3, ConfiguracionPracticaComponent_div_10_div_4_div_3_div_6_i_3_Template, 1, 0, "i", 75);
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(4, "td")(5, "label", 76);
    i0.ɵɵtext(6);
    i0.ɵɵelementEnd()()();
  }
  if (rf & 2) {
    const opcion_r32 = ctx.$implicit;
    const i_r33 = i0.ɵɵnextContext(2).index;
    const ctx_r1 = i0.ɵɵnextContext(2);
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngIf", ctx_r1.tipos_preguntas_final[i_r33] == "alternativas");
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngIf", ctx_r1.tipos_preguntas_final[i_r33] == "casillas");
    i0.ɵɵadvance(3);
    i0.ɵɵtextInterpolate(opcion_r32);
  }
}
function ConfiguracionPracticaComponent_div_10_div_4_div_3_form_8_Template(rf, ctx) {
  if (rf & 1) {
    const _r34 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "form", 79);
    i0.ɵɵlistener("ngSubmit", function ConfiguracionPracticaComponent_div_10_div_4_div_3_form_8_Template_form_ngSubmit_0_listener() {
      i0.ɵɵrestoreView(_r34);
      const i_r33 = i0.ɵɵnextContext(2).index;
      const ctx_r1 = i0.ɵɵnextContext(2);
      return i0.ɵɵresetView(ctx_r1.eliminarPreguntaFinal(i_r33));
    });
    i0.ɵɵelementStart(1, "button", 80);
    i0.ɵɵtext(2, " Eliminar Pregunta ");
    i0.ɵɵelementEnd()();
  }
}
function ConfiguracionPracticaComponent_div_10_div_4_div_3_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 69)(1, "div", 70);
    i0.ɵɵelement(2, "div", 61);
    i0.ɵɵelementStart(3, "div", 71)(4, "table")(5, "tr");
    i0.ɵɵtemplate(6, ConfiguracionPracticaComponent_div_10_div_4_div_3_div_6_Template, 7, 3, "div", 72);
    i0.ɵɵelementEnd()()();
    i0.ɵɵelement(7, "div", 61);
    i0.ɵɵelementEnd();
    i0.ɵɵtemplate(8, ConfiguracionPracticaComponent_div_10_div_4_div_3_form_8_Template, 3, 0, "form", 73);
    i0.ɵɵelementEnd();
  }
  if (rf & 2) {
    const i_r33 = i0.ɵɵnextContext().index;
    const ctx_r1 = i0.ɵɵnextContext(2);
    i0.ɵɵadvance(6);
    i0.ɵɵproperty("ngForOf", ctx_r1.splitOpciones(ctx_r1.lista_opciones_preguntas_final[i_r33]));
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngIf", ctx_r1.flag);
  }
}
function ConfiguracionPracticaComponent_div_10_div_4_div_4_form_1_Template(rf, ctx) {
  if (rf & 1) {
    const _r35 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "form", 79);
    i0.ɵɵlistener("ngSubmit", function ConfiguracionPracticaComponent_div_10_div_4_div_4_form_1_Template_form_ngSubmit_0_listener() {
      i0.ɵɵrestoreView(_r35);
      const i_r33 = i0.ɵɵnextContext(2).index;
      const ctx_r1 = i0.ɵɵnextContext(2);
      return i0.ɵɵresetView(ctx_r1.eliminarPreguntaFinal(i_r33));
    });
    i0.ɵɵelementStart(1, "button", 80);
    i0.ɵɵtext(2, " Eliminar Pregunta ");
    i0.ɵɵelementEnd()();
  }
}
function ConfiguracionPracticaComponent_div_10_div_4_div_4_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div");
    i0.ɵɵtemplate(1, ConfiguracionPracticaComponent_div_10_div_4_div_4_form_1_Template, 3, 0, "form", 73);
    i0.ɵɵelementEnd();
  }
  if (rf & 2) {
    const ctx_r1 = i0.ɵɵnextContext(3);
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngIf", ctx_r1.flag);
  }
}
function ConfiguracionPracticaComponent_div_10_div_4_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 64);
    i0.ɵɵtemplate(1, ConfiguracionPracticaComponent_div_10_div_4_div_1_Template, 5, 1, "div", 65)(2, ConfiguracionPracticaComponent_div_10_div_4_div_2_Template, 2, 1, "div", 65)(3, ConfiguracionPracticaComponent_div_10_div_4_div_3_Template, 9, 2, "div", 66)(4, ConfiguracionPracticaComponent_div_10_div_4_div_4_Template, 2, 1, "div", 20);
    i0.ɵɵelementEnd();
  }
  if (rf & 2) {
    const i_r33 = ctx.index;
    const ctx_r1 = i0.ɵɵnextContext(2);
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngIf", ctx_r1.tipos_preguntas_final[i_r33] == "abierta");
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngIf", ctx_r1.tipos_preguntas_final[i_r33] == "casillas" || ctx_r1.tipos_preguntas_final[i_r33] == "alternativas");
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngIf", ctx_r1.lista_opciones_preguntas_final[i_r33] != "");
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngIf", ctx_r1.lista_opciones_preguntas_final[i_r33] == "");
  }
}
function ConfiguracionPracticaComponent_div_10_form_6_form_1_div_11_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelement(0, "div");
  }
}
function ConfiguracionPracticaComponent_div_10_form_6_form_1_div_12_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelement(0, "div");
  }
}
function ConfiguracionPracticaComponent_div_10_form_6_form_1_div_13_mat_header_cell_5_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelement(0, "mat-header-cell");
  }
}
function ConfiguracionPracticaComponent_div_10_form_6_form_1_div_13_mat_cell_6_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "mat-cell", 47)(1, "mat-form-field");
    i0.ɵɵelement(2, "input", 90);
    i0.ɵɵelementEnd()();
  }
  if (rf & 2) {
    const element_r38 = ctx.$implicit;
    i0.ɵɵproperty("formGroup", element_r38);
  }
}
function ConfiguracionPracticaComponent_div_10_form_6_form_1_div_13_mat_header_cell_8_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelement(0, "mat-header-cell");
  }
}
function ConfiguracionPracticaComponent_div_10_form_6_form_1_div_13_mat_cell_9_Template(rf, ctx) {
  if (rf & 1) {
    const _r39 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "mat-cell", 47)(1, "button", 49);
    i0.ɵɵlistener("click", function ConfiguracionPracticaComponent_div_10_form_6_form_1_div_13_mat_cell_9_Template_button_click_1_listener() {
      const i_r40 = i0.ɵɵrestoreView(_r39).index;
      const ctx_r1 = i0.ɵɵnextContext(5);
      return i0.ɵɵresetView(ctx_r1.deleteOpcionPregunta(i_r40));
    });
    i0.ɵɵelementStart(2, "mat-icon", 50);
    i0.ɵɵtext(3, "Eliminar opci\u00F3n");
    i0.ɵɵelementEnd()()();
  }
  if (rf & 2) {
    const element_r41 = ctx.$implicit;
    i0.ɵɵproperty("formGroup", element_r41);
  }
}
function ConfiguracionPracticaComponent_div_10_form_6_form_1_div_13_mat_header_row_10_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelement(0, "mat-header-row");
  }
}
function ConfiguracionPracticaComponent_div_10_form_6_form_1_div_13_mat_row_11_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelement(0, "mat-row");
  }
}
function ConfiguracionPracticaComponent_div_10_form_6_form_1_div_13_Template(rf, ctx) {
  if (rf & 1) {
    const _r37 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "div");
    i0.ɵɵelement(1, "br");
    i0.ɵɵelementStart(2, "mat-table", 37);
    i0.ɵɵelementContainerStart(3, 88)(4, 89);
    i0.ɵɵtemplate(5, ConfiguracionPracticaComponent_div_10_form_6_form_1_div_13_mat_header_cell_5_Template, 1, 0, "mat-header-cell", 40)(6, ConfiguracionPracticaComponent_div_10_form_6_form_1_div_13_mat_cell_6_Template, 3, 1, "mat-cell", 41);
    i0.ɵɵelementContainerEnd();
    i0.ɵɵelementContainerStart(7, 42);
    i0.ɵɵtemplate(8, ConfiguracionPracticaComponent_div_10_form_6_form_1_div_13_mat_header_cell_8_Template, 1, 0, "mat-header-cell", 40)(9, ConfiguracionPracticaComponent_div_10_form_6_form_1_div_13_mat_cell_9_Template, 4, 1, "mat-cell", 41);
    i0.ɵɵelementContainerEnd();
    i0.ɵɵtemplate(10, ConfiguracionPracticaComponent_div_10_form_6_form_1_div_13_mat_header_row_10_Template, 1, 0, "mat-header-row", 43)(11, ConfiguracionPracticaComponent_div_10_form_6_form_1_div_13_mat_row_11_Template, 1, 0, "mat-row", 44);
    i0.ɵɵelementContainerEnd();
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(12, "div", 45)(13, "button", 46);
    i0.ɵɵlistener("click", function ConfiguracionPracticaComponent_div_10_form_6_form_1_div_13_Template_button_click_13_listener() {
      i0.ɵɵrestoreView(_r37);
      const ctx_r1 = i0.ɵɵnextContext(4);
      return i0.ɵɵresetView(ctx_r1.addOpcionPregunta());
    });
    i0.ɵɵtext(14, "Agregar Opci\u00F3n");
    i0.ɵɵelementEnd()();
    i0.ɵɵelement(15, "br");
    i0.ɵɵelementEnd();
  }
  if (rf & 2) {
    const ctx_r1 = i0.ɵɵnextContext(4);
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("dataSource", ctx_r1.dataSourcePacksOpcionesPregunta);
    i0.ɵɵadvance(8);
    i0.ɵɵproperty("matHeaderRowDef", ctx_r1.displayedColumnsOpcionesPregunta);
    i0.ɵɵadvance();
    i0.ɵɵproperty("matRowDefColumns", ctx_r1.displayedColumnsOpcionesPregunta);
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngStyle", i0.ɵɵpureFunction0(4, _c0));
  }
}
function ConfiguracionPracticaComponent_div_10_form_6_form_1_div_14_mat_header_cell_5_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelement(0, "mat-header-cell");
  }
}
function ConfiguracionPracticaComponent_div_10_form_6_form_1_div_14_mat_cell_6_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "mat-cell", 47)(1, "mat-form-field");
    i0.ɵɵelement(2, "input", 90);
    i0.ɵɵelementEnd()();
  }
  if (rf & 2) {
    const element_r43 = ctx.$implicit;
    i0.ɵɵproperty("formGroup", element_r43);
  }
}
function ConfiguracionPracticaComponent_div_10_form_6_form_1_div_14_mat_header_cell_8_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelement(0, "mat-header-cell");
  }
}
function ConfiguracionPracticaComponent_div_10_form_6_form_1_div_14_mat_cell_9_Template(rf, ctx) {
  if (rf & 1) {
    const _r44 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "mat-cell", 47)(1, "button", 49);
    i0.ɵɵlistener("click", function ConfiguracionPracticaComponent_div_10_form_6_form_1_div_14_mat_cell_9_Template_button_click_1_listener() {
      const i_r45 = i0.ɵɵrestoreView(_r44).index;
      const ctx_r1 = i0.ɵɵnextContext(5);
      return i0.ɵɵresetView(ctx_r1.deleteOpcionPregunta(i_r45));
    });
    i0.ɵɵelementStart(2, "mat-icon", 50);
    i0.ɵɵtext(3, "Eliminar opci\u00F3n");
    i0.ɵɵelementEnd()()();
  }
  if (rf & 2) {
    const element_r46 = ctx.$implicit;
    i0.ɵɵproperty("formGroup", element_r46);
  }
}
function ConfiguracionPracticaComponent_div_10_form_6_form_1_div_14_mat_header_row_10_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelement(0, "mat-header-row");
  }
}
function ConfiguracionPracticaComponent_div_10_form_6_form_1_div_14_mat_row_11_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelement(0, "mat-row");
  }
}
function ConfiguracionPracticaComponent_div_10_form_6_form_1_div_14_Template(rf, ctx) {
  if (rf & 1) {
    const _r42 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "div");
    i0.ɵɵelement(1, "br");
    i0.ɵɵelementStart(2, "mat-table", 37);
    i0.ɵɵelementContainerStart(3, 88)(4, 89);
    i0.ɵɵtemplate(5, ConfiguracionPracticaComponent_div_10_form_6_form_1_div_14_mat_header_cell_5_Template, 1, 0, "mat-header-cell", 40)(6, ConfiguracionPracticaComponent_div_10_form_6_form_1_div_14_mat_cell_6_Template, 3, 1, "mat-cell", 41);
    i0.ɵɵelementContainerEnd();
    i0.ɵɵelementContainerStart(7, 42);
    i0.ɵɵtemplate(8, ConfiguracionPracticaComponent_div_10_form_6_form_1_div_14_mat_header_cell_8_Template, 1, 0, "mat-header-cell", 40)(9, ConfiguracionPracticaComponent_div_10_form_6_form_1_div_14_mat_cell_9_Template, 4, 1, "mat-cell", 41);
    i0.ɵɵelementContainerEnd();
    i0.ɵɵtemplate(10, ConfiguracionPracticaComponent_div_10_form_6_form_1_div_14_mat_header_row_10_Template, 1, 0, "mat-header-row", 43)(11, ConfiguracionPracticaComponent_div_10_form_6_form_1_div_14_mat_row_11_Template, 1, 0, "mat-row", 44);
    i0.ɵɵelementContainerEnd();
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(12, "div", 45)(13, "button", 46);
    i0.ɵɵlistener("click", function ConfiguracionPracticaComponent_div_10_form_6_form_1_div_14_Template_button_click_13_listener() {
      i0.ɵɵrestoreView(_r42);
      const ctx_r1 = i0.ɵɵnextContext(4);
      return i0.ɵɵresetView(ctx_r1.addOpcionPregunta());
    });
    i0.ɵɵtext(14, "Agregar Opci\u00F3n");
    i0.ɵɵelementEnd()();
    i0.ɵɵelement(15, "br");
    i0.ɵɵelementEnd();
  }
  if (rf & 2) {
    const ctx_r1 = i0.ɵɵnextContext(4);
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("dataSource", ctx_r1.dataSourcePacksOpcionesPregunta);
    i0.ɵɵadvance(8);
    i0.ɵɵproperty("matHeaderRowDef", ctx_r1.displayedColumnsOpcionesPregunta);
    i0.ɵɵadvance();
    i0.ɵɵproperty("matRowDefColumns", ctx_r1.displayedColumnsOpcionesPregunta);
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngStyle", i0.ɵɵpureFunction0(4, _c0));
  }
}
function ConfiguracionPracticaComponent_div_10_form_6_form_1_Template(rf, ctx) {
  if (rf & 1) {
    const _r36 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "form", 15);
    i0.ɵɵlistener("ngSubmit", function ConfiguracionPracticaComponent_div_10_form_6_form_1_Template_form_ngSubmit_0_listener() {
      i0.ɵɵrestoreView(_r36);
      const ctx_r1 = i0.ɵɵnextContext(3);
      return i0.ɵɵresetView(ctx_r1.onSubmitAddPreguntaFinal());
    });
    i0.ɵɵelementStart(1, "input", 81);
    i0.ɵɵtwoWayListener("ngModelChange", function ConfiguracionPracticaComponent_div_10_form_6_form_1_Template_input_ngModelChange_1_listener($event) {
      i0.ɵɵrestoreView(_r36);
      const ctx_r1 = i0.ɵɵnextContext(3);
      i0.ɵɵtwoWayBindingSet(ctx_r1.pregunta, $event) || (ctx_r1.pregunta = $event);
      return i0.ɵɵresetView($event);
    });
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(2, "select", 82);
    i0.ɵɵlistener("change", function ConfiguracionPracticaComponent_div_10_form_6_form_1_Template_select_change_2_listener($event) {
      i0.ɵɵrestoreView(_r36);
      const ctx_r1 = i0.ɵɵnextContext(3);
      return i0.ɵɵresetView(ctx_r1.tipoPregunta($event));
    });
    i0.ɵɵelementStart(3, "option", 83);
    i0.ɵɵtext(4, "Seleccione el tipo de respuesta");
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(5, "option", 84);
    i0.ɵɵtext(6, "Abierta");
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(7, "option", 85);
    i0.ɵɵtext(8, "Casillas");
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(9, "option", 86);
    i0.ɵɵtext(10, "Alternativas");
    i0.ɵɵelementEnd()();
    i0.ɵɵtemplate(11, ConfiguracionPracticaComponent_div_10_form_6_form_1_div_11_Template, 1, 0, "div", 20)(12, ConfiguracionPracticaComponent_div_10_form_6_form_1_div_12_Template, 1, 0, "div", 20)(13, ConfiguracionPracticaComponent_div_10_form_6_form_1_div_13_Template, 16, 5, "div", 20)(14, ConfiguracionPracticaComponent_div_10_form_6_form_1_div_14_Template, 16, 5, "div", 20);
    i0.ɵɵelementStart(15, "button", 87);
    i0.ɵɵtext(16, "Agregar Pregunta");
    i0.ɵɵelementEnd()();
  }
  if (rf & 2) {
    const ctx_r1 = i0.ɵɵnextContext(3);
    i0.ɵɵproperty("formGroup", ctx_r1.fg);
    i0.ɵɵadvance();
    i0.ɵɵtwoWayProperty("ngModel", ctx_r1.pregunta);
    i0.ɵɵadvance(10);
    i0.ɵɵproperty("ngIf", ctx_r1.tipo_pregunta == "");
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngIf", ctx_r1.tipo_pregunta == "abierta");
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngIf", ctx_r1.tipo_pregunta == "casillas");
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngIf", ctx_r1.tipo_pregunta == "alternativas");
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngStyle", i0.ɵɵpureFunction0(7, _c0));
  }
}
function ConfiguracionPracticaComponent_div_10_form_6_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "form");
    i0.ɵɵtemplate(1, ConfiguracionPracticaComponent_div_10_form_6_form_1_Template, 17, 8, "form", 14);
    i0.ɵɵelementEnd();
  }
  if (rf & 2) {
    const ctx_r1 = i0.ɵɵnextContext(2);
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngIf", ctx_r1.flag);
  }
}
function ConfiguracionPracticaComponent_div_10_Template(rf, ctx) {
  if (rf & 1) {
    const _r30 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "div", 11)(1, "div", 12)(2, "div", 13);
    i0.ɵɵtext(3, " Preguntas informe final ");
    i0.ɵɵelementEnd();
    i0.ɵɵtemplate(4, ConfiguracionPracticaComponent_div_10_div_4_Template, 5, 4, "div", 59);
    i0.ɵɵelement(5, "br");
    i0.ɵɵtemplate(6, ConfiguracionPracticaComponent_div_10_form_6_Template, 2, 1, "form", 20);
    i0.ɵɵelementStart(7, "div", 60);
    i0.ɵɵelement(8, "div", 61);
    i0.ɵɵelementStart(9, "button", 62);
    i0.ɵɵlistener("click", function ConfiguracionPracticaComponent_div_10_Template_button_click_9_listener() {
      i0.ɵɵrestoreView(_r30);
      const ctx_r1 = i0.ɵɵnextContext();
      return i0.ɵɵresetView(ctx_r1.volver());
    });
    i0.ɵɵtext(10, " Volver ");
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(11, "button", 63);
    i0.ɵɵlistener("click", function ConfiguracionPracticaComponent_div_10_Template_button_click_11_listener() {
      i0.ɵɵrestoreView(_r30);
      const ctx_r1 = i0.ɵɵnextContext();
      return i0.ɵɵresetView(ctx_r1.avanzarDesdePreguntasFinal());
    });
    i0.ɵɵtext(12, " Siguiente ");
    i0.ɵɵelementEnd();
    i0.ɵɵelement(13, "div", 61);
    i0.ɵɵelementEnd()()();
  }
  if (rf & 2) {
    const ctx_r1 = i0.ɵɵnextContext();
    i0.ɵɵadvance(4);
    i0.ɵɵproperty("ngForOf", ctx_r1.lista_preguntas_final);
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngIf", ctx_r1.flag);
  }
}
function ConfiguracionPracticaComponent_div_11_form_4_form_1_div_20_div_1_Template(rf, ctx) {
  if (rf & 1) {
    const _r48 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "div");
    i0.ɵɵtext(1, " Subir Plantilla de ejemplo");
    i0.ɵɵelement(2, "br");
    i0.ɵɵelementStart(3, "app-subir-plantilla-informe-final", 100);
    i0.ɵɵlistener("key_event", function ConfiguracionPracticaComponent_div_11_form_4_form_1_div_20_div_1_Template_app_subir_plantilla_informe_final_key_event_3_listener($event) {
      i0.ɵɵrestoreView(_r48);
      const ctx_r1 = i0.ɵɵnextContext(5);
      return i0.ɵɵresetView(ctx_r1.recibirPlantillaInforme($event));
    })("file_plantilla_event", function ConfiguracionPracticaComponent_div_11_form_4_form_1_div_20_div_1_Template_app_subir_plantilla_informe_final_file_plantilla_event_3_listener($event) {
      i0.ɵɵrestoreView(_r48);
      const ctx_r1 = i0.ɵɵnextContext(5);
      return i0.ɵɵresetView(ctx_r1.recibirPlantillaInforme($event));
    });
    i0.ɵɵelementEnd()();
  }
}
function ConfiguracionPracticaComponent_div_11_form_4_form_1_div_20_ng_template_2_div_0_Template(rf, ctx) {
  if (rf & 1) {
    const _r49 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "div")(1, "button", 101)(2, "a", 102);
    i0.ɵɵtext(3, "Descargar plantilla actual");
    i0.ɵɵelementEnd()();
    i0.ɵɵelement(4, "br")(5, "br");
    i0.ɵɵtext(6, " Subir nueva plantilla de ejemplo");
    i0.ɵɵelement(7, "br");
    i0.ɵɵtext(8, "(Reemplazar\u00E1 la plantilla actual)");
    i0.ɵɵelement(9, "br");
    i0.ɵɵelementStart(10, "app-subir-plantilla-informe-final", 100);
    i0.ɵɵlistener("key_event", function ConfiguracionPracticaComponent_div_11_form_4_form_1_div_20_ng_template_2_div_0_Template_app_subir_plantilla_informe_final_key_event_10_listener($event) {
      i0.ɵɵrestoreView(_r49);
      const ctx_r1 = i0.ɵɵnextContext(6);
      return i0.ɵɵresetView(ctx_r1.recibirPlantillaInforme($event));
    })("file_plantilla_event", function ConfiguracionPracticaComponent_div_11_form_4_form_1_div_20_ng_template_2_div_0_Template_app_subir_plantilla_informe_final_file_plantilla_event_10_listener($event) {
      i0.ɵɵrestoreView(_r49);
      const ctx_r1 = i0.ɵɵnextContext(6);
      return i0.ɵɵresetView(ctx_r1.recibirPlantillaInforme($event));
    });
    i0.ɵɵelementEnd()();
  }
  if (rf & 2) {
    const ctx_r1 = i0.ɵɵnextContext(6);
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("href", ctx_r1.link_descarga_plantilla, i0.ɵɵsanitizeUrl);
  }
}
function ConfiguracionPracticaComponent_div_11_form_4_form_1_div_20_ng_template_2_ng_template_1_Template(rf, ctx) {
  if (rf & 1) {
    const _r50 = i0.ɵɵgetCurrentView();
    i0.ɵɵtext(0, " Subir Plantilla de ejemplo");
    i0.ɵɵelement(1, "br");
    i0.ɵɵelementStart(2, "app-subir-plantilla-informe-final", 100);
    i0.ɵɵlistener("key_event", function ConfiguracionPracticaComponent_div_11_form_4_form_1_div_20_ng_template_2_ng_template_1_Template_app_subir_plantilla_informe_final_key_event_2_listener($event) {
      i0.ɵɵrestoreView(_r50);
      const ctx_r1 = i0.ɵɵnextContext(6);
      return i0.ɵɵresetView(ctx_r1.recibirPlantillaInforme($event));
    })("file_plantilla_event", function ConfiguracionPracticaComponent_div_11_form_4_form_1_div_20_ng_template_2_ng_template_1_Template_app_subir_plantilla_informe_final_file_plantilla_event_2_listener($event) {
      i0.ɵɵrestoreView(_r50);
      const ctx_r1 = i0.ɵɵnextContext(6);
      return i0.ɵɵresetView(ctx_r1.recibirPlantillaInforme($event));
    });
    i0.ɵɵelementEnd();
  }
}
function ConfiguracionPracticaComponent_div_11_form_4_form_1_div_20_ng_template_2_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵtemplate(0, ConfiguracionPracticaComponent_div_11_form_4_form_1_div_20_ng_template_2_div_0_Template, 11, 1, "div", 99)(1, ConfiguracionPracticaComponent_div_11_form_4_form_1_div_20_ng_template_2_ng_template_1_Template, 3, 0, "ng-template", null, 1, i0.ɵɵtemplateRefExtractor);
  }
  if (rf & 2) {
    const editandoAntiguaSinPlantilla_r51 = i0.ɵɵreference(2);
    const ctx_r1 = i0.ɵɵnextContext(5);
    i0.ɵɵproperty("ngIf", ctx_r1.link_descarga_plantilla != "")("ngIfElse", editandoAntiguaSinPlantilla_r51);
  }
}
function ConfiguracionPracticaComponent_div_11_form_4_form_1_div_20_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div");
    i0.ɵɵtemplate(1, ConfiguracionPracticaComponent_div_11_form_4_form_1_div_20_div_1_Template, 4, 0, "div", 99)(2, ConfiguracionPracticaComponent_div_11_form_4_form_1_div_20_ng_template_2_Template, 3, 2, "ng-template", null, 0, i0.ɵɵtemplateRefExtractor);
    i0.ɵɵelementEnd();
  }
  if (rf & 2) {
    const editandoExistente_r52 = i0.ɵɵreference(3);
    const ctx_r1 = i0.ɵɵnextContext(4);
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngIf", ctx_r1.currentRoute.includes("blanco"))("ngIfElse", editandoExistente_r52);
  }
}
function ConfiguracionPracticaComponent_div_11_form_4_form_1_Template(rf, ctx) {
  if (rf & 1) {
    const _r47 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "form", 15);
    i0.ɵɵlistener("ngSubmit", function ConfiguracionPracticaComponent_div_11_form_4_form_1_Template_form_ngSubmit_0_listener() {
      i0.ɵɵrestoreView(_r47);
      const ctx_r1 = i0.ɵɵnextContext(3);
      return i0.ɵɵresetView(ctx_r1.onSubmitArchivoInformeFinal());
    });
    i0.ɵɵtext(1, " Formatos aceptados ");
    i0.ɵɵelement(2, "br")(3, "input", 92);
    i0.ɵɵtext(4, " pdf ");
    i0.ɵɵelement(5, "input", 93);
    i0.ɵɵtext(6, " word ");
    i0.ɵɵelement(7, "br")(8, "br");
    i0.ɵɵtext(9, " \u00BFDesea incluir una plantilla de ejemplo? ");
    i0.ɵɵelement(10, "br");
    i0.ɵɵelementStart(11, "div", 21);
    i0.ɵɵelement(12, "input", 94);
    i0.ɵɵelementStart(13, "label", 95);
    i0.ɵɵtext(14, "Si");
    i0.ɵɵelementEnd();
    i0.ɵɵelement(15, "input", 96);
    i0.ɵɵelementStart(16, "label", 97);
    i0.ɵɵtext(17, "No");
    i0.ɵɵelementEnd()();
    i0.ɵɵelement(18, "br")(19, "br");
    i0.ɵɵtemplate(20, ConfiguracionPracticaComponent_div_11_form_4_form_1_div_20_Template, 4, 2, "div", 20);
    i0.ɵɵelementStart(21, "div", 60);
    i0.ɵɵelement(22, "div", 61);
    i0.ɵɵelementStart(23, "button", 62);
    i0.ɵɵlistener("click", function ConfiguracionPracticaComponent_div_11_form_4_form_1_Template_button_click_23_listener() {
      i0.ɵɵrestoreView(_r47);
      const ctx_r1 = i0.ɵɵnextContext(3);
      return i0.ɵɵresetView(ctx_r1.volver());
    });
    i0.ɵɵtext(24, " Volver ");
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(25, "button", 98);
    i0.ɵɵtext(26, " Siguiente ");
    i0.ɵɵelementEnd();
    i0.ɵɵelement(27, "div", 61);
    i0.ɵɵelementEnd()();
  }
  if (rf & 2) {
    const ctx_r1 = i0.ɵɵnextContext(3);
    i0.ɵɵproperty("formGroup", ctx_r1.fg);
    i0.ɵɵadvance(20);
    i0.ɵɵproperty("ngIf", ctx_r1.fg.value.plantillaInformeFinal == "si");
  }
}
function ConfiguracionPracticaComponent_div_11_form_4_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "form");
    i0.ɵɵtemplate(1, ConfiguracionPracticaComponent_div_11_form_4_form_1_Template, 28, 2, "form", 14);
    i0.ɵɵelementEnd();
  }
  if (rf & 2) {
    const ctx_r1 = i0.ɵɵnextContext(2);
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngIf", ctx_r1.flag);
  }
}
function ConfiguracionPracticaComponent_div_11_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 11)(1, "div", 12)(2, "div", 13);
    i0.ɵɵtext(3, " Archivo del Informe Final ");
    i0.ɵɵelementEnd();
    i0.ɵɵtemplate(4, ConfiguracionPracticaComponent_div_11_form_4_Template, 2, 1, "form", 20);
    i0.ɵɵelementEnd()();
  }
  if (rf & 2) {
    const ctx_r1 = i0.ɵɵnextContext();
    i0.ɵɵadvance(4);
    i0.ɵɵproperty("ngIf", ctx_r1.flag);
  }
}
function ConfiguracionPracticaComponent_div_12_div_4_form_9_Template(rf, ctx) {
  if (rf & 1) {
    const _r54 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "form", 79);
    i0.ɵɵlistener("ngSubmit", function ConfiguracionPracticaComponent_div_12_div_4_form_9_Template_form_ngSubmit_0_listener() {
      i0.ɵɵrestoreView(_r54);
      const i_r55 = i0.ɵɵnextContext().index;
      const ctx_r1 = i0.ɵɵnextContext(2);
      return i0.ɵɵresetView(ctx_r1.eliminarSolicitudDocumento(i_r55));
    });
    i0.ɵɵelementStart(1, "button", 80);
    i0.ɵɵtext(2, " Eliminar Solicitud Documento ");
    i0.ɵɵelementEnd()();
  }
}
function ConfiguracionPracticaComponent_div_12_div_4_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 64);
    i0.ɵɵtext(1, " Solicitud Documento Ingresada: ");
    i0.ɵɵelement(2, "br");
    i0.ɵɵtext(3);
    i0.ɵɵelement(4, "br");
    i0.ɵɵtext(5);
    i0.ɵɵelement(6, "br");
    i0.ɵɵtext(7);
    i0.ɵɵelement(8, "br");
    i0.ɵɵtemplate(9, ConfiguracionPracticaComponent_div_12_div_4_form_9_Template, 3, 0, "form", 73);
    i0.ɵɵelementEnd();
  }
  if (rf & 2) {
    const nombre_doc_r56 = ctx.$implicit;
    const i_r55 = ctx.index;
    const ctx_r1 = i0.ɵɵnextContext(2);
    i0.ɵɵadvance(3);
    i0.ɵɵtextInterpolate1(" Nombre: ", nombre_doc_r56, " ");
    i0.ɵɵadvance(2);
    i0.ɵɵtextInterpolate1(" Descripci\u00F3n: ", ctx_r1.lista_descripcion_solicitud_documentos[i_r55], " ");
    i0.ɵɵadvance(2);
    i0.ɵɵtextInterpolate1(" Tipo documento: ", ctx_r1.lista_tipo_solicitud_documentos[i_r55], " ");
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngIf", ctx_r1.flag);
  }
}
function ConfiguracionPracticaComponent_div_12_form_5_form_1_Template(rf, ctx) {
  if (rf & 1) {
    const _r58 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "form", 15);
    i0.ɵɵlistener("ngSubmit", function ConfiguracionPracticaComponent_div_12_form_5_form_1_Template_form_ngSubmit_0_listener() {
      i0.ɵɵrestoreView(_r58);
      const ctx_r1 = i0.ɵɵnextContext(3);
      return i0.ɵɵresetView(ctx_r1.onSubmitAddSolicitudDoc());
    });
    i0.ɵɵelement(1, "input", 103)(2, "textarea", 104);
    i0.ɵɵelementStart(3, "label", 105);
    i0.ɵɵtext(4, "Tipo de documento:");
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(5, "select", 106)(6, "option", 107);
    i0.ɵɵtext(7, "PDF");
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(8, "option", 108);
    i0.ɵɵtext(9, "JPG");
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(10, "option", 109);
    i0.ɵɵtext(11, "Excel");
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(12, "option", 110);
    i0.ɵɵtext(13, "Word");
    i0.ɵɵelementEnd()();
    i0.ɵɵelementStart(14, "button", 87);
    i0.ɵɵtext(15, " Agregar solicitud de documento ");
    i0.ɵɵelementEnd()();
  }
  if (rf & 2) {
    const ctx_r1 = i0.ɵɵnextContext(3);
    i0.ɵɵproperty("formGroup", ctx_r1.fg);
    i0.ɵɵadvance(14);
    i0.ɵɵproperty("ngStyle", i0.ɵɵpureFunction0(2, _c0));
  }
}
function ConfiguracionPracticaComponent_div_12_form_5_Template(rf, ctx) {
  if (rf & 1) {
    const _r57 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "form", 79);
    i0.ɵɵlistener("ngSubmit", function ConfiguracionPracticaComponent_div_12_form_5_Template_form_ngSubmit_0_listener() {
      i0.ɵɵrestoreView(_r57);
      const ctx_r1 = i0.ɵɵnextContext(2);
      return i0.ɵɵresetView(ctx_r1.avanzarDesdeSolicitudDocumentos());
    });
    i0.ɵɵtemplate(1, ConfiguracionPracticaComponent_div_12_form_5_form_1_Template, 16, 3, "form", 14);
    i0.ɵɵelementEnd();
  }
  if (rf & 2) {
    const ctx_r1 = i0.ɵɵnextContext(2);
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngIf", ctx_r1.flag);
  }
}
function ConfiguracionPracticaComponent_div_12_Template(rf, ctx) {
  if (rf & 1) {
    const _r53 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "div", 11)(1, "div", 12)(2, "div", 13);
    i0.ɵɵtext(3, " Solicitud Documentos ");
    i0.ɵɵelementEnd();
    i0.ɵɵtemplate(4, ConfiguracionPracticaComponent_div_12_div_4_Template, 10, 4, "div", 59)(5, ConfiguracionPracticaComponent_div_12_form_5_Template, 2, 1, "form", 73);
    i0.ɵɵelementStart(6, "div", 60);
    i0.ɵɵelement(7, "div", 61);
    i0.ɵɵelementStart(8, "button", 62);
    i0.ɵɵlistener("click", function ConfiguracionPracticaComponent_div_12_Template_button_click_8_listener() {
      i0.ɵɵrestoreView(_r53);
      const ctx_r1 = i0.ɵɵnextContext();
      return i0.ɵɵresetView(ctx_r1.volver());
    });
    i0.ɵɵtext(9, " Volver ");
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(10, "button", 63);
    i0.ɵɵlistener("click", function ConfiguracionPracticaComponent_div_12_Template_button_click_10_listener() {
      i0.ɵɵrestoreView(_r53);
      const ctx_r1 = i0.ɵɵnextContext();
      return i0.ɵɵresetView(ctx_r1.avanzarDesdeSolicitudDocumentos());
    });
    i0.ɵɵtext(11, " Siguiente ");
    i0.ɵɵelementEnd();
    i0.ɵɵelement(12, "div", 61);
    i0.ɵɵelementEnd()()();
  }
  if (rf & 2) {
    const ctx_r1 = i0.ɵɵnextContext();
    i0.ɵɵadvance(4);
    i0.ɵɵproperty("ngForOf", ctx_r1.lista_nombre_solicitud_documentos);
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngIf", ctx_r1.flag);
  }
}
function ConfiguracionPracticaComponent_div_13_div_6_div_1_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 67);
    i0.ɵɵtext(1);
    i0.ɵɵelement(2, "br")(3, "br")(4, "textarea", 68);
    i0.ɵɵelementEnd();
  }
  if (rf & 2) {
    const pregunta_encuesta_r60 = i0.ɵɵnextContext().$implicit;
    i0.ɵɵadvance();
    i0.ɵɵtextInterpolate1(" ", pregunta_encuesta_r60, " ");
  }
}
function ConfiguracionPracticaComponent_div_13_div_6_div_2_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 67);
    i0.ɵɵtext(1);
    i0.ɵɵelementEnd();
  }
  if (rf & 2) {
    const pregunta_encuesta_r60 = i0.ɵɵnextContext().$implicit;
    i0.ɵɵadvance();
    i0.ɵɵtextInterpolate1(" ", pregunta_encuesta_r60, " ");
  }
}
function ConfiguracionPracticaComponent_div_13_div_6_div_3_div_6_i_2_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelement(0, "i", 77);
  }
}
function ConfiguracionPracticaComponent_div_13_div_6_div_3_div_6_i_3_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelement(0, "i", 78);
  }
}
function ConfiguracionPracticaComponent_div_13_div_6_div_3_div_6_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div")(1, "td");
    i0.ɵɵtemplate(2, ConfiguracionPracticaComponent_div_13_div_6_div_3_div_6_i_2_Template, 1, 0, "i", 74)(3, ConfiguracionPracticaComponent_div_13_div_6_div_3_div_6_i_3_Template, 1, 0, "i", 75);
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(4, "td")(5, "label", 76);
    i0.ɵɵtext(6);
    i0.ɵɵelementEnd()()();
  }
  if (rf & 2) {
    const opcion_r61 = ctx.$implicit;
    const i_r62 = i0.ɵɵnextContext(2).index;
    const ctx_r1 = i0.ɵɵnextContext(2);
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngIf", ctx_r1.tipos_preguntas_encuesta[i_r62] == "alternativas");
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngIf", ctx_r1.tipos_preguntas_encuesta[i_r62] == "casillas");
    i0.ɵɵadvance(3);
    i0.ɵɵtextInterpolate(opcion_r61);
  }
}
function ConfiguracionPracticaComponent_div_13_div_6_div_3_form_8_Template(rf, ctx) {
  if (rf & 1) {
    const _r63 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "form", 79);
    i0.ɵɵlistener("ngSubmit", function ConfiguracionPracticaComponent_div_13_div_6_div_3_form_8_Template_form_ngSubmit_0_listener() {
      i0.ɵɵrestoreView(_r63);
      const i_r62 = i0.ɵɵnextContext(2).index;
      const ctx_r1 = i0.ɵɵnextContext(2);
      return i0.ɵɵresetView(ctx_r1.eliminarPreguntaEncuesta(i_r62));
    });
    i0.ɵɵelementStart(1, "button", 80);
    i0.ɵɵtext(2, " Eliminar Pregunta ");
    i0.ɵɵelementEnd()();
  }
}
function ConfiguracionPracticaComponent_div_13_div_6_div_3_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div")(1, "div", 70);
    i0.ɵɵelement(2, "div", 61);
    i0.ɵɵelementStart(3, "div", 71)(4, "table")(5, "tr");
    i0.ɵɵtemplate(6, ConfiguracionPracticaComponent_div_13_div_6_div_3_div_6_Template, 7, 3, "div", 72);
    i0.ɵɵelementEnd()()();
    i0.ɵɵelement(7, "div", 61);
    i0.ɵɵelementEnd();
    i0.ɵɵtemplate(8, ConfiguracionPracticaComponent_div_13_div_6_div_3_form_8_Template, 3, 0, "form", 73);
    i0.ɵɵelementEnd();
  }
  if (rf & 2) {
    const i_r62 = i0.ɵɵnextContext().index;
    const ctx_r1 = i0.ɵɵnextContext(2);
    i0.ɵɵadvance(6);
    i0.ɵɵproperty("ngForOf", ctx_r1.splitOpciones(ctx_r1.lista_opciones_preguntas_encuesta[i_r62]));
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngIf", ctx_r1.flag);
  }
}
function ConfiguracionPracticaComponent_div_13_div_6_div_4_form_1_Template(rf, ctx) {
  if (rf & 1) {
    const _r64 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "form", 79);
    i0.ɵɵlistener("ngSubmit", function ConfiguracionPracticaComponent_div_13_div_6_div_4_form_1_Template_form_ngSubmit_0_listener() {
      i0.ɵɵrestoreView(_r64);
      const i_r62 = i0.ɵɵnextContext(2).index;
      const ctx_r1 = i0.ɵɵnextContext(2);
      return i0.ɵɵresetView(ctx_r1.eliminarPreguntaEncuesta(i_r62));
    });
    i0.ɵɵelementStart(1, "button", 80);
    i0.ɵɵtext(2, " Eliminar Pregunta ");
    i0.ɵɵelementEnd()();
  }
}
function ConfiguracionPracticaComponent_div_13_div_6_div_4_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div");
    i0.ɵɵtemplate(1, ConfiguracionPracticaComponent_div_13_div_6_div_4_form_1_Template, 3, 0, "form", 73);
    i0.ɵɵelementEnd();
  }
  if (rf & 2) {
    const ctx_r1 = i0.ɵɵnextContext(3);
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngIf", ctx_r1.flag);
  }
}
function ConfiguracionPracticaComponent_div_13_div_6_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 64);
    i0.ɵɵtemplate(1, ConfiguracionPracticaComponent_div_13_div_6_div_1_Template, 5, 1, "div", 65)(2, ConfiguracionPracticaComponent_div_13_div_6_div_2_Template, 2, 1, "div", 65)(3, ConfiguracionPracticaComponent_div_13_div_6_div_3_Template, 9, 2, "div", 20)(4, ConfiguracionPracticaComponent_div_13_div_6_div_4_Template, 2, 1, "div", 20);
    i0.ɵɵelementEnd();
  }
  if (rf & 2) {
    const i_r62 = ctx.index;
    const ctx_r1 = i0.ɵɵnextContext(2);
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngIf", ctx_r1.tipos_preguntas_encuesta[i_r62] == "abierta");
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngIf", ctx_r1.tipos_preguntas_encuesta[i_r62] == "casillas" || ctx_r1.tipos_preguntas_encuesta[i_r62] == "alternativas");
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngIf", ctx_r1.lista_opciones_preguntas_encuesta[i_r62] != "");
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngIf", ctx_r1.lista_opciones_preguntas_encuesta[i_r62] == "");
  }
}
function ConfiguracionPracticaComponent_div_13_form_7_form_1_div_9_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelement(0, "div");
  }
}
function ConfiguracionPracticaComponent_div_13_form_7_form_1_div_10_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelement(0, "div");
  }
}
function ConfiguracionPracticaComponent_div_13_form_7_form_1_div_11_mat_header_cell_5_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelement(0, "mat-header-cell");
  }
}
function ConfiguracionPracticaComponent_div_13_form_7_form_1_div_11_mat_cell_6_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "mat-cell", 47)(1, "mat-form-field");
    i0.ɵɵelement(2, "input", 90);
    i0.ɵɵelementEnd()();
  }
  if (rf & 2) {
    const element_r67 = ctx.$implicit;
    i0.ɵɵproperty("formGroup", element_r67);
  }
}
function ConfiguracionPracticaComponent_div_13_form_7_form_1_div_11_mat_header_cell_8_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelement(0, "mat-header-cell");
  }
}
function ConfiguracionPracticaComponent_div_13_form_7_form_1_div_11_mat_cell_9_Template(rf, ctx) {
  if (rf & 1) {
    const _r68 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "mat-cell", 47)(1, "button", 49);
    i0.ɵɵlistener("click", function ConfiguracionPracticaComponent_div_13_form_7_form_1_div_11_mat_cell_9_Template_button_click_1_listener() {
      const i_r69 = i0.ɵɵrestoreView(_r68).index;
      const ctx_r1 = i0.ɵɵnextContext(5);
      return i0.ɵɵresetView(ctx_r1.deleteOpcionPregunta(i_r69));
    });
    i0.ɵɵelementStart(2, "mat-icon", 50);
    i0.ɵɵtext(3, "Eliminar opci\u00F3n");
    i0.ɵɵelementEnd()()();
  }
  if (rf & 2) {
    const element_r70 = ctx.$implicit;
    i0.ɵɵproperty("formGroup", element_r70);
  }
}
function ConfiguracionPracticaComponent_div_13_form_7_form_1_div_11_mat_header_row_10_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelement(0, "mat-header-row");
  }
}
function ConfiguracionPracticaComponent_div_13_form_7_form_1_div_11_mat_row_11_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelement(0, "mat-row");
  }
}
function ConfiguracionPracticaComponent_div_13_form_7_form_1_div_11_Template(rf, ctx) {
  if (rf & 1) {
    const _r66 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "div");
    i0.ɵɵelement(1, "br");
    i0.ɵɵelementStart(2, "mat-table", 37);
    i0.ɵɵelementContainerStart(3, 88)(4, 89);
    i0.ɵɵtemplate(5, ConfiguracionPracticaComponent_div_13_form_7_form_1_div_11_mat_header_cell_5_Template, 1, 0, "mat-header-cell", 40)(6, ConfiguracionPracticaComponent_div_13_form_7_form_1_div_11_mat_cell_6_Template, 3, 1, "mat-cell", 41);
    i0.ɵɵelementContainerEnd();
    i0.ɵɵelementContainerStart(7, 42);
    i0.ɵɵtemplate(8, ConfiguracionPracticaComponent_div_13_form_7_form_1_div_11_mat_header_cell_8_Template, 1, 0, "mat-header-cell", 40)(9, ConfiguracionPracticaComponent_div_13_form_7_form_1_div_11_mat_cell_9_Template, 4, 1, "mat-cell", 41);
    i0.ɵɵelementContainerEnd();
    i0.ɵɵtemplate(10, ConfiguracionPracticaComponent_div_13_form_7_form_1_div_11_mat_header_row_10_Template, 1, 0, "mat-header-row", 43)(11, ConfiguracionPracticaComponent_div_13_form_7_form_1_div_11_mat_row_11_Template, 1, 0, "mat-row", 44);
    i0.ɵɵelementContainerEnd();
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(12, "div", 45)(13, "button", 46);
    i0.ɵɵlistener("click", function ConfiguracionPracticaComponent_div_13_form_7_form_1_div_11_Template_button_click_13_listener() {
      i0.ɵɵrestoreView(_r66);
      const ctx_r1 = i0.ɵɵnextContext(4);
      return i0.ɵɵresetView(ctx_r1.addOpcionPregunta());
    });
    i0.ɵɵtext(14, "Agregar Opci\u00F3n");
    i0.ɵɵelementEnd()();
    i0.ɵɵelement(15, "br");
    i0.ɵɵelementEnd();
  }
  if (rf & 2) {
    const ctx_r1 = i0.ɵɵnextContext(4);
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("dataSource", ctx_r1.dataSourcePacksOpcionesPregunta);
    i0.ɵɵadvance(8);
    i0.ɵɵproperty("matHeaderRowDef", ctx_r1.displayedColumnsOpcionesPregunta);
    i0.ɵɵadvance();
    i0.ɵɵproperty("matRowDefColumns", ctx_r1.displayedColumnsOpcionesPregunta);
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngStyle", i0.ɵɵpureFunction0(4, _c0));
  }
}
function ConfiguracionPracticaComponent_div_13_form_7_form_1_div_12_mat_header_cell_5_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelement(0, "mat-header-cell");
  }
}
function ConfiguracionPracticaComponent_div_13_form_7_form_1_div_12_mat_cell_6_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "mat-cell", 47)(1, "mat-form-field");
    i0.ɵɵelement(2, "input", 90);
    i0.ɵɵelementEnd()();
  }
  if (rf & 2) {
    const element_r72 = ctx.$implicit;
    i0.ɵɵproperty("formGroup", element_r72);
  }
}
function ConfiguracionPracticaComponent_div_13_form_7_form_1_div_12_mat_header_cell_8_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelement(0, "mat-header-cell");
  }
}
function ConfiguracionPracticaComponent_div_13_form_7_form_1_div_12_mat_cell_9_Template(rf, ctx) {
  if (rf & 1) {
    const _r73 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "mat-cell", 47)(1, "button", 49);
    i0.ɵɵlistener("click", function ConfiguracionPracticaComponent_div_13_form_7_form_1_div_12_mat_cell_9_Template_button_click_1_listener() {
      const i_r74 = i0.ɵɵrestoreView(_r73).index;
      const ctx_r1 = i0.ɵɵnextContext(5);
      return i0.ɵɵresetView(ctx_r1.deleteOpcionPregunta(i_r74));
    });
    i0.ɵɵelementStart(2, "mat-icon", 50);
    i0.ɵɵtext(3, "Eliminar opci\u00F3n");
    i0.ɵɵelementEnd()()();
  }
  if (rf & 2) {
    const element_r75 = ctx.$implicit;
    i0.ɵɵproperty("formGroup", element_r75);
  }
}
function ConfiguracionPracticaComponent_div_13_form_7_form_1_div_12_mat_header_row_10_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelement(0, "mat-header-row");
  }
}
function ConfiguracionPracticaComponent_div_13_form_7_form_1_div_12_mat_row_11_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelement(0, "mat-row");
  }
}
function ConfiguracionPracticaComponent_div_13_form_7_form_1_div_12_Template(rf, ctx) {
  if (rf & 1) {
    const _r71 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "div");
    i0.ɵɵelement(1, "br");
    i0.ɵɵelementStart(2, "mat-table", 37);
    i0.ɵɵelementContainerStart(3, 88)(4, 89);
    i0.ɵɵtemplate(5, ConfiguracionPracticaComponent_div_13_form_7_form_1_div_12_mat_header_cell_5_Template, 1, 0, "mat-header-cell", 40)(6, ConfiguracionPracticaComponent_div_13_form_7_form_1_div_12_mat_cell_6_Template, 3, 1, "mat-cell", 41);
    i0.ɵɵelementContainerEnd();
    i0.ɵɵelementContainerStart(7, 42);
    i0.ɵɵtemplate(8, ConfiguracionPracticaComponent_div_13_form_7_form_1_div_12_mat_header_cell_8_Template, 1, 0, "mat-header-cell", 40)(9, ConfiguracionPracticaComponent_div_13_form_7_form_1_div_12_mat_cell_9_Template, 4, 1, "mat-cell", 41);
    i0.ɵɵelementContainerEnd();
    i0.ɵɵtemplate(10, ConfiguracionPracticaComponent_div_13_form_7_form_1_div_12_mat_header_row_10_Template, 1, 0, "mat-header-row", 43)(11, ConfiguracionPracticaComponent_div_13_form_7_form_1_div_12_mat_row_11_Template, 1, 0, "mat-row", 44);
    i0.ɵɵelementContainerEnd();
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(12, "div", 45)(13, "button", 46);
    i0.ɵɵlistener("click", function ConfiguracionPracticaComponent_div_13_form_7_form_1_div_12_Template_button_click_13_listener() {
      i0.ɵɵrestoreView(_r71);
      const ctx_r1 = i0.ɵɵnextContext(4);
      return i0.ɵɵresetView(ctx_r1.addOpcionPregunta());
    });
    i0.ɵɵtext(14, "Agregar Opci\u00F3n");
    i0.ɵɵelementEnd()();
    i0.ɵɵelement(15, "br");
    i0.ɵɵelementEnd();
  }
  if (rf & 2) {
    const ctx_r1 = i0.ɵɵnextContext(4);
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("dataSource", ctx_r1.dataSourcePacksOpcionesPregunta);
    i0.ɵɵadvance(8);
    i0.ɵɵproperty("matHeaderRowDef", ctx_r1.displayedColumnsOpcionesPregunta);
    i0.ɵɵadvance();
    i0.ɵɵproperty("matRowDefColumns", ctx_r1.displayedColumnsOpcionesPregunta);
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngStyle", i0.ɵɵpureFunction0(4, _c0));
  }
}
function ConfiguracionPracticaComponent_div_13_form_7_form_1_Template(rf, ctx) {
  if (rf & 1) {
    const _r65 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "form", 15);
    i0.ɵɵlistener("ngSubmit", function ConfiguracionPracticaComponent_div_13_form_7_form_1_Template_form_ngSubmit_0_listener() {
      i0.ɵɵrestoreView(_r65);
      const ctx_r1 = i0.ɵɵnextContext(3);
      return i0.ɵɵresetView(ctx_r1.onSubmitAddPreguntaEncuesta());
    });
    i0.ɵɵelementStart(1, "input", 81);
    i0.ɵɵtwoWayListener("ngModelChange", function ConfiguracionPracticaComponent_div_13_form_7_form_1_Template_input_ngModelChange_1_listener($event) {
      i0.ɵɵrestoreView(_r65);
      const ctx_r1 = i0.ɵɵnextContext(3);
      i0.ɵɵtwoWayBindingSet(ctx_r1.pregunta, $event) || (ctx_r1.pregunta = $event);
      return i0.ɵɵresetView($event);
    });
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(2, "select", 82);
    i0.ɵɵlistener("change", function ConfiguracionPracticaComponent_div_13_form_7_form_1_Template_select_change_2_listener($event) {
      i0.ɵɵrestoreView(_r65);
      const ctx_r1 = i0.ɵɵnextContext(3);
      return i0.ɵɵresetView(ctx_r1.tipoPregunta($event));
    });
    i0.ɵɵelementStart(3, "option", 83);
    i0.ɵɵtext(4, "Seleccione el tipo de respuesta");
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(5, "option", 85);
    i0.ɵɵtext(6, "Casillas");
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(7, "option", 86);
    i0.ɵɵtext(8, "Alternativas");
    i0.ɵɵelementEnd()();
    i0.ɵɵtemplate(9, ConfiguracionPracticaComponent_div_13_form_7_form_1_div_9_Template, 1, 0, "div", 20)(10, ConfiguracionPracticaComponent_div_13_form_7_form_1_div_10_Template, 1, 0, "div", 20)(11, ConfiguracionPracticaComponent_div_13_form_7_form_1_div_11_Template, 16, 5, "div", 20)(12, ConfiguracionPracticaComponent_div_13_form_7_form_1_div_12_Template, 16, 5, "div", 20);
    i0.ɵɵelementStart(13, "button", 87);
    i0.ɵɵtext(14, "Agregar Pregunta");
    i0.ɵɵelementEnd()();
  }
  if (rf & 2) {
    const ctx_r1 = i0.ɵɵnextContext(3);
    i0.ɵɵproperty("formGroup", ctx_r1.fg);
    i0.ɵɵadvance();
    i0.ɵɵtwoWayProperty("ngModel", ctx_r1.pregunta);
    i0.ɵɵadvance(8);
    i0.ɵɵproperty("ngIf", ctx_r1.tipo_pregunta == "");
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngIf", ctx_r1.tipo_pregunta == "abierta");
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngIf", ctx_r1.tipo_pregunta == "casillas");
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngIf", ctx_r1.tipo_pregunta == "alternativas");
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngStyle", i0.ɵɵpureFunction0(7, _c0));
  }
}
function ConfiguracionPracticaComponent_div_13_form_7_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "form");
    i0.ɵɵtemplate(1, ConfiguracionPracticaComponent_div_13_form_7_form_1_Template, 15, 8, "form", 14);
    i0.ɵɵelementEnd();
  }
  if (rf & 2) {
    const ctx_r1 = i0.ɵɵnextContext(2);
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngIf", ctx_r1.flag);
  }
}
function ConfiguracionPracticaComponent_div_13_Template(rf, ctx) {
  if (rf & 1) {
    const _r59 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "div", 11)(1, "div", 12)(2, "div", 13);
    i0.ɵɵtext(3, " Preguntas Encuesta Practicantes Post-Pr\u00E1ctica ");
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(4, "div", 111);
    i0.ɵɵtext(5, " Recuerde que al estudiante ya se le consulta sobre los ramos m\u00E1s \u00FAtiles en su carrera y se le pide que califique la empresa donde realiz\u00F3 su pr\u00E1ctica. ");
    i0.ɵɵelementEnd();
    i0.ɵɵtemplate(6, ConfiguracionPracticaComponent_div_13_div_6_Template, 5, 4, "div", 59)(7, ConfiguracionPracticaComponent_div_13_form_7_Template, 2, 1, "form", 20);
    i0.ɵɵelementStart(8, "div", 60);
    i0.ɵɵelement(9, "div", 61);
    i0.ɵɵelementStart(10, "button", 62);
    i0.ɵɵlistener("click", function ConfiguracionPracticaComponent_div_13_Template_button_click_10_listener() {
      i0.ɵɵrestoreView(_r59);
      const ctx_r1 = i0.ɵɵnextContext();
      return i0.ɵɵresetView(ctx_r1.volver());
    });
    i0.ɵɵtext(11, " Volver ");
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(12, "button", 63);
    i0.ɵɵlistener("click", function ConfiguracionPracticaComponent_div_13_Template_button_click_12_listener() {
      i0.ɵɵrestoreView(_r59);
      const ctx_r1 = i0.ɵɵnextContext();
      return i0.ɵɵresetView(ctx_r1.avanzarDesdePreguntasEncuesta());
    });
    i0.ɵɵtext(13, " Siguiente ");
    i0.ɵɵelementEnd();
    i0.ɵɵelement(14, "div", 61);
    i0.ɵɵelementEnd()()();
  }
  if (rf & 2) {
    const ctx_r1 = i0.ɵɵnextContext();
    i0.ɵɵadvance(6);
    i0.ɵɵproperty("ngForOf", ctx_r1.lista_preguntas_encuesta);
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngIf", ctx_r1.flag);
  }
}
function ConfiguracionPracticaComponent_div_14_div_4_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 111);
    i0.ɵɵtext(1, " Debido a que seleccion\u00F3 la opci\u00F3n para generar documento para DIREST, al supervisor ya se le pregunta por las tareas realizadas y las observaciones. ");
    i0.ɵɵelementEnd();
  }
}
function ConfiguracionPracticaComponent_div_14_div_5_div_1_div_1_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 67);
    i0.ɵɵtext(1);
    i0.ɵɵelement(2, "br")(3, "br")(4, "textarea", 68);
    i0.ɵɵelementEnd();
  }
  if (rf & 2) {
    const pregunta_supervisor_r77 = i0.ɵɵnextContext(2).$implicit;
    i0.ɵɵadvance();
    i0.ɵɵtextInterpolate1(" ", pregunta_supervisor_r77, " ");
  }
}
function ConfiguracionPracticaComponent_div_14_div_5_div_1_div_2_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 67);
    i0.ɵɵtext(1);
    i0.ɵɵelementEnd();
  }
  if (rf & 2) {
    const pregunta_supervisor_r77 = i0.ɵɵnextContext(2).$implicit;
    i0.ɵɵadvance();
    i0.ɵɵtextInterpolate1(" ", pregunta_supervisor_r77, " ");
  }
}
function ConfiguracionPracticaComponent_div_14_div_5_div_1_div_3_div_6_i_2_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelement(0, "i", 116);
  }
}
function ConfiguracionPracticaComponent_div_14_div_5_div_1_div_3_div_6_i_3_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelement(0, "i", 117);
  }
}
function ConfiguracionPracticaComponent_div_14_div_5_div_1_div_3_div_6_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div")(1, "td");
    i0.ɵɵtemplate(2, ConfiguracionPracticaComponent_div_14_div_5_div_1_div_3_div_6_i_2_Template, 1, 0, "i", 114)(3, ConfiguracionPracticaComponent_div_14_div_5_div_1_div_3_div_6_i_3_Template, 1, 0, "i", 115);
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(4, "td")(5, "label", 76);
    i0.ɵɵtext(6);
    i0.ɵɵelementEnd()()();
  }
  if (rf & 2) {
    const opcion_r78 = ctx.$implicit;
    const i_r79 = i0.ɵɵnextContext(3).index;
    const ctx_r1 = i0.ɵɵnextContext(2);
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngIf", ctx_r1.tipos_preguntas_supervisor[i_r79] == "alternativas");
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngIf", ctx_r1.tipos_preguntas_supervisor[i_r79] == "casillas");
    i0.ɵɵadvance(3);
    i0.ɵɵtextInterpolate(opcion_r78);
  }
}
function ConfiguracionPracticaComponent_div_14_div_5_div_1_div_3_form_8_Template(rf, ctx) {
  if (rf & 1) {
    const _r80 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "form", 79);
    i0.ɵɵlistener("ngSubmit", function ConfiguracionPracticaComponent_div_14_div_5_div_1_div_3_form_8_Template_form_ngSubmit_0_listener() {
      i0.ɵɵrestoreView(_r80);
      const i_r79 = i0.ɵɵnextContext(3).index;
      const ctx_r1 = i0.ɵɵnextContext(2);
      return i0.ɵɵresetView(ctx_r1.eliminarPreguntaSupervisor(i_r79));
    });
    i0.ɵɵelementStart(1, "button", 80);
    i0.ɵɵtext(2, " Eliminar Pregunta ");
    i0.ɵɵelementEnd()();
  }
}
function ConfiguracionPracticaComponent_div_14_div_5_div_1_div_3_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div")(1, "div", 70);
    i0.ɵɵelement(2, "div", 61);
    i0.ɵɵelementStart(3, "div", 71)(4, "table")(5, "tr");
    i0.ɵɵtemplate(6, ConfiguracionPracticaComponent_div_14_div_5_div_1_div_3_div_6_Template, 7, 3, "div", 72);
    i0.ɵɵelementEnd()()();
    i0.ɵɵelement(7, "div", 61);
    i0.ɵɵelementEnd();
    i0.ɵɵtemplate(8, ConfiguracionPracticaComponent_div_14_div_5_div_1_div_3_form_8_Template, 3, 0, "form", 73);
    i0.ɵɵelementEnd();
  }
  if (rf & 2) {
    const i_r79 = i0.ɵɵnextContext(2).index;
    const ctx_r1 = i0.ɵɵnextContext(2);
    i0.ɵɵadvance(6);
    i0.ɵɵproperty("ngForOf", ctx_r1.splitOpciones(ctx_r1.lista_opciones_preguntas_supervisor[i_r79]));
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngIf", ctx_r1.flag);
  }
}
function ConfiguracionPracticaComponent_div_14_div_5_div_1_div_4_form_1_Template(rf, ctx) {
  if (rf & 1) {
    const _r81 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "form", 79);
    i0.ɵɵlistener("ngSubmit", function ConfiguracionPracticaComponent_div_14_div_5_div_1_div_4_form_1_Template_form_ngSubmit_0_listener() {
      i0.ɵɵrestoreView(_r81);
      const i_r79 = i0.ɵɵnextContext(3).index;
      const ctx_r1 = i0.ɵɵnextContext(2);
      return i0.ɵɵresetView(ctx_r1.eliminarPreguntaSupervisor(i_r79));
    });
    i0.ɵɵelementStart(1, "button", 80);
    i0.ɵɵtext(2, " Eliminar Pregunta ");
    i0.ɵɵelementEnd()();
  }
}
function ConfiguracionPracticaComponent_div_14_div_5_div_1_div_4_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div");
    i0.ɵɵtemplate(1, ConfiguracionPracticaComponent_div_14_div_5_div_1_div_4_form_1_Template, 3, 0, "form", 73);
    i0.ɵɵelementEnd();
  }
  if (rf & 2) {
    const ctx_r1 = i0.ɵɵnextContext(4);
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngIf", ctx_r1.flag);
  }
}
function ConfiguracionPracticaComponent_div_14_div_5_div_1_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 64);
    i0.ɵɵtemplate(1, ConfiguracionPracticaComponent_div_14_div_5_div_1_div_1_Template, 5, 1, "div", 65)(2, ConfiguracionPracticaComponent_div_14_div_5_div_1_div_2_Template, 2, 1, "div", 65)(3, ConfiguracionPracticaComponent_div_14_div_5_div_1_div_3_Template, 9, 2, "div", 20)(4, ConfiguracionPracticaComponent_div_14_div_5_div_1_div_4_Template, 2, 1, "div", 20);
    i0.ɵɵelementEnd();
  }
  if (rf & 2) {
    const i_r79 = i0.ɵɵnextContext().index;
    const ctx_r1 = i0.ɵɵnextContext(2);
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngIf", ctx_r1.tipos_preguntas_supervisor[i_r79] == "abierta");
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngIf", ctx_r1.tipos_preguntas_supervisor[i_r79] == "casillas" || ctx_r1.tipos_preguntas_supervisor[i_r79] == "alternativas");
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngIf", ctx_r1.lista_opciones_preguntas_supervisor[i_r79] != "");
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngIf", ctx_r1.lista_opciones_preguntas_supervisor[i_r79] == "");
  }
}
function ConfiguracionPracticaComponent_div_14_div_5_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div");
    i0.ɵɵtemplate(1, ConfiguracionPracticaComponent_div_14_div_5_div_1_Template, 5, 4, "div", 113);
    i0.ɵɵelementEnd();
  }
  if (rf & 2) {
    const i_r79 = ctx.index;
    const ctx_r1 = i0.ɵɵnextContext(2);
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngIf", ctx_r1.tipos_preguntas_supervisor[i_r79] != "evaluacion");
  }
}
function ConfiguracionPracticaComponent_div_14_form_7_form_1_div_11_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelement(0, "div");
  }
}
function ConfiguracionPracticaComponent_div_14_form_7_form_1_div_12_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelement(0, "div");
  }
}
function ConfiguracionPracticaComponent_div_14_form_7_form_1_div_13_mat_header_cell_5_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelement(0, "mat-header-cell");
  }
}
function ConfiguracionPracticaComponent_div_14_form_7_form_1_div_13_mat_cell_6_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "mat-cell", 47)(1, "mat-form-field");
    i0.ɵɵelement(2, "input", 90);
    i0.ɵɵelementEnd()();
  }
  if (rf & 2) {
    const element_r85 = ctx.$implicit;
    i0.ɵɵproperty("formGroup", element_r85);
  }
}
function ConfiguracionPracticaComponent_div_14_form_7_form_1_div_13_mat_header_cell_8_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelement(0, "mat-header-cell");
  }
}
function ConfiguracionPracticaComponent_div_14_form_7_form_1_div_13_mat_cell_9_Template(rf, ctx) {
  if (rf & 1) {
    const _r86 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "mat-cell", 47)(1, "button", 49);
    i0.ɵɵlistener("click", function ConfiguracionPracticaComponent_div_14_form_7_form_1_div_13_mat_cell_9_Template_button_click_1_listener() {
      const i_r87 = i0.ɵɵrestoreView(_r86).index;
      const ctx_r1 = i0.ɵɵnextContext(5);
      return i0.ɵɵresetView(ctx_r1.deleteOpcionPregunta(i_r87));
    });
    i0.ɵɵelementStart(2, "mat-icon", 50);
    i0.ɵɵtext(3, "Eliminar opci\u00F3n");
    i0.ɵɵelementEnd()()();
  }
  if (rf & 2) {
    const element_r88 = ctx.$implicit;
    i0.ɵɵproperty("formGroup", element_r88);
  }
}
function ConfiguracionPracticaComponent_div_14_form_7_form_1_div_13_mat_header_row_10_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelement(0, "mat-header-row");
  }
}
function ConfiguracionPracticaComponent_div_14_form_7_form_1_div_13_mat_row_11_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelement(0, "mat-row");
  }
}
function ConfiguracionPracticaComponent_div_14_form_7_form_1_div_13_Template(rf, ctx) {
  if (rf & 1) {
    const _r84 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "div");
    i0.ɵɵelement(1, "br");
    i0.ɵɵelementStart(2, "mat-table", 37);
    i0.ɵɵelementContainerStart(3, 88)(4, 89);
    i0.ɵɵtemplate(5, ConfiguracionPracticaComponent_div_14_form_7_form_1_div_13_mat_header_cell_5_Template, 1, 0, "mat-header-cell", 40)(6, ConfiguracionPracticaComponent_div_14_form_7_form_1_div_13_mat_cell_6_Template, 3, 1, "mat-cell", 41);
    i0.ɵɵelementContainerEnd();
    i0.ɵɵelementContainerStart(7, 42);
    i0.ɵɵtemplate(8, ConfiguracionPracticaComponent_div_14_form_7_form_1_div_13_mat_header_cell_8_Template, 1, 0, "mat-header-cell", 40)(9, ConfiguracionPracticaComponent_div_14_form_7_form_1_div_13_mat_cell_9_Template, 4, 1, "mat-cell", 41);
    i0.ɵɵelementContainerEnd();
    i0.ɵɵtemplate(10, ConfiguracionPracticaComponent_div_14_form_7_form_1_div_13_mat_header_row_10_Template, 1, 0, "mat-header-row", 43)(11, ConfiguracionPracticaComponent_div_14_form_7_form_1_div_13_mat_row_11_Template, 1, 0, "mat-row", 44);
    i0.ɵɵelementContainerEnd();
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(12, "div", 45)(13, "button", 46);
    i0.ɵɵlistener("click", function ConfiguracionPracticaComponent_div_14_form_7_form_1_div_13_Template_button_click_13_listener() {
      i0.ɵɵrestoreView(_r84);
      const ctx_r1 = i0.ɵɵnextContext(4);
      return i0.ɵɵresetView(ctx_r1.addOpcionPregunta());
    });
    i0.ɵɵtext(14, "Agregar Opci\u00F3n");
    i0.ɵɵelementEnd()();
    i0.ɵɵelement(15, "br");
    i0.ɵɵelementEnd();
  }
  if (rf & 2) {
    const ctx_r1 = i0.ɵɵnextContext(4);
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("dataSource", ctx_r1.dataSourcePacksOpcionesPregunta);
    i0.ɵɵadvance(8);
    i0.ɵɵproperty("matHeaderRowDef", ctx_r1.displayedColumnsOpcionesPregunta);
    i0.ɵɵadvance();
    i0.ɵɵproperty("matRowDefColumns", ctx_r1.displayedColumnsOpcionesPregunta);
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngStyle", i0.ɵɵpureFunction0(4, _c0));
  }
}
function ConfiguracionPracticaComponent_div_14_form_7_form_1_div_14_mat_header_cell_5_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelement(0, "mat-header-cell");
  }
}
function ConfiguracionPracticaComponent_div_14_form_7_form_1_div_14_mat_cell_6_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "mat-cell", 47)(1, "mat-form-field");
    i0.ɵɵelement(2, "input", 90);
    i0.ɵɵelementEnd()();
  }
  if (rf & 2) {
    const element_r90 = ctx.$implicit;
    i0.ɵɵproperty("formGroup", element_r90);
  }
}
function ConfiguracionPracticaComponent_div_14_form_7_form_1_div_14_mat_header_cell_8_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelement(0, "mat-header-cell");
  }
}
function ConfiguracionPracticaComponent_div_14_form_7_form_1_div_14_mat_cell_9_Template(rf, ctx) {
  if (rf & 1) {
    const _r91 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "mat-cell", 47)(1, "button", 49);
    i0.ɵɵlistener("click", function ConfiguracionPracticaComponent_div_14_form_7_form_1_div_14_mat_cell_9_Template_button_click_1_listener() {
      const i_r92 = i0.ɵɵrestoreView(_r91).index;
      const ctx_r1 = i0.ɵɵnextContext(5);
      return i0.ɵɵresetView(ctx_r1.deleteOpcionPregunta(i_r92));
    });
    i0.ɵɵelementStart(2, "mat-icon", 50);
    i0.ɵɵtext(3, "Eliminar opci\u00F3n");
    i0.ɵɵelementEnd()()();
  }
  if (rf & 2) {
    const element_r93 = ctx.$implicit;
    i0.ɵɵproperty("formGroup", element_r93);
  }
}
function ConfiguracionPracticaComponent_div_14_form_7_form_1_div_14_mat_header_row_10_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelement(0, "mat-header-row");
  }
}
function ConfiguracionPracticaComponent_div_14_form_7_form_1_div_14_mat_row_11_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelement(0, "mat-row");
  }
}
function ConfiguracionPracticaComponent_div_14_form_7_form_1_div_14_Template(rf, ctx) {
  if (rf & 1) {
    const _r89 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "div");
    i0.ɵɵelement(1, "br");
    i0.ɵɵelementStart(2, "mat-table", 37);
    i0.ɵɵelementContainerStart(3, 88)(4, 89);
    i0.ɵɵtemplate(5, ConfiguracionPracticaComponent_div_14_form_7_form_1_div_14_mat_header_cell_5_Template, 1, 0, "mat-header-cell", 40)(6, ConfiguracionPracticaComponent_div_14_form_7_form_1_div_14_mat_cell_6_Template, 3, 1, "mat-cell", 41);
    i0.ɵɵelementContainerEnd();
    i0.ɵɵelementContainerStart(7, 42);
    i0.ɵɵtemplate(8, ConfiguracionPracticaComponent_div_14_form_7_form_1_div_14_mat_header_cell_8_Template, 1, 0, "mat-header-cell", 40)(9, ConfiguracionPracticaComponent_div_14_form_7_form_1_div_14_mat_cell_9_Template, 4, 1, "mat-cell", 41);
    i0.ɵɵelementContainerEnd();
    i0.ɵɵtemplate(10, ConfiguracionPracticaComponent_div_14_form_7_form_1_div_14_mat_header_row_10_Template, 1, 0, "mat-header-row", 43)(11, ConfiguracionPracticaComponent_div_14_form_7_form_1_div_14_mat_row_11_Template, 1, 0, "mat-row", 44);
    i0.ɵɵelementContainerEnd();
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(12, "div", 45)(13, "button", 46);
    i0.ɵɵlistener("click", function ConfiguracionPracticaComponent_div_14_form_7_form_1_div_14_Template_button_click_13_listener() {
      i0.ɵɵrestoreView(_r89);
      const ctx_r1 = i0.ɵɵnextContext(4);
      return i0.ɵɵresetView(ctx_r1.addOpcionPregunta());
    });
    i0.ɵɵtext(14, "Agregar Opci\u00F3n");
    i0.ɵɵelementEnd()();
    i0.ɵɵelement(15, "br");
    i0.ɵɵelementEnd();
  }
  if (rf & 2) {
    const ctx_r1 = i0.ɵɵnextContext(4);
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("dataSource", ctx_r1.dataSourcePacksOpcionesPregunta);
    i0.ɵɵadvance(8);
    i0.ɵɵproperty("matHeaderRowDef", ctx_r1.displayedColumnsOpcionesPregunta);
    i0.ɵɵadvance();
    i0.ɵɵproperty("matRowDefColumns", ctx_r1.displayedColumnsOpcionesPregunta);
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngStyle", i0.ɵɵpureFunction0(4, _c0));
  }
}
function ConfiguracionPracticaComponent_div_14_form_7_form_1_div_15_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelement(0, "div");
  }
}
function ConfiguracionPracticaComponent_div_14_form_7_form_1_Template(rf, ctx) {
  if (rf & 1) {
    const _r83 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "form", 15);
    i0.ɵɵlistener("ngSubmit", function ConfiguracionPracticaComponent_div_14_form_7_form_1_Template_form_ngSubmit_0_listener() {
      i0.ɵɵrestoreView(_r83);
      const ctx_r1 = i0.ɵɵnextContext(3);
      return i0.ɵɵresetView(ctx_r1.onSubmitAddPreguntaSupervisor());
    });
    i0.ɵɵelementStart(1, "input", 81);
    i0.ɵɵtwoWayListener("ngModelChange", function ConfiguracionPracticaComponent_div_14_form_7_form_1_Template_input_ngModelChange_1_listener($event) {
      i0.ɵɵrestoreView(_r83);
      const ctx_r1 = i0.ɵɵnextContext(3);
      i0.ɵɵtwoWayBindingSet(ctx_r1.pregunta, $event) || (ctx_r1.pregunta = $event);
      return i0.ɵɵresetView($event);
    });
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(2, "select", 118);
    i0.ɵɵlistener("change", function ConfiguracionPracticaComponent_div_14_form_7_form_1_Template_select_change_2_listener($event) {
      i0.ɵɵrestoreView(_r83);
      const ctx_r1 = i0.ɵɵnextContext(3);
      return i0.ɵɵresetView(ctx_r1.tipoPregunta($event));
    });
    i0.ɵɵelementStart(3, "option", 83);
    i0.ɵɵtext(4, "Seleccione el tipo de respuesta");
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(5, "option", 84);
    i0.ɵɵtext(6, "Abierta");
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(7, "option", 85);
    i0.ɵɵtext(8, "Casillas");
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(9, "option", 86);
    i0.ɵɵtext(10, "Alternativas");
    i0.ɵɵelementEnd()();
    i0.ɵɵtemplate(11, ConfiguracionPracticaComponent_div_14_form_7_form_1_div_11_Template, 1, 0, "div", 20)(12, ConfiguracionPracticaComponent_div_14_form_7_form_1_div_12_Template, 1, 0, "div", 20)(13, ConfiguracionPracticaComponent_div_14_form_7_form_1_div_13_Template, 16, 5, "div", 20)(14, ConfiguracionPracticaComponent_div_14_form_7_form_1_div_14_Template, 16, 5, "div", 20)(15, ConfiguracionPracticaComponent_div_14_form_7_form_1_div_15_Template, 1, 0, "div", 20);
    i0.ɵɵelementStart(16, "button", 87);
    i0.ɵɵtext(17, "Agregar Pregunta");
    i0.ɵɵelementEnd()();
  }
  if (rf & 2) {
    const ctx_r1 = i0.ɵɵnextContext(3);
    i0.ɵɵproperty("formGroup", ctx_r1.fg);
    i0.ɵɵadvance();
    i0.ɵɵtwoWayProperty("ngModel", ctx_r1.pregunta);
    i0.ɵɵadvance(10);
    i0.ɵɵproperty("ngIf", ctx_r1.tipo_pregunta == "");
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngIf", ctx_r1.tipo_pregunta == "abierta");
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngIf", ctx_r1.tipo_pregunta == "casillas");
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngIf", ctx_r1.tipo_pregunta == "alternativas");
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngIf", ctx_r1.tipo_pregunta == "evaluacion");
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngStyle", i0.ɵɵpureFunction0(8, _c0));
  }
}
function ConfiguracionPracticaComponent_div_14_form_7_Template(rf, ctx) {
  if (rf & 1) {
    const _r82 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "form", 79);
    i0.ɵɵlistener("ngSubmit", function ConfiguracionPracticaComponent_div_14_form_7_Template_form_ngSubmit_0_listener() {
      i0.ɵɵrestoreView(_r82);
      const ctx_r1 = i0.ɵɵnextContext(2);
      return i0.ɵɵresetView(ctx_r1.avanzarDesdePreguntasSupervisor());
    });
    i0.ɵɵtemplate(1, ConfiguracionPracticaComponent_div_14_form_7_form_1_Template, 18, 9, "form", 14);
    i0.ɵɵelementEnd();
  }
  if (rf & 2) {
    const ctx_r1 = i0.ɵɵnextContext(2);
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngIf", ctx_r1.flag);
  }
}
function ConfiguracionPracticaComponent_div_14_Template(rf, ctx) {
  if (rf & 1) {
    const _r76 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "div", 11)(1, "div", 12)(2, "div", 13);
    i0.ɵɵtext(3, " Preguntas para que supervisor eval\u00FAe al practicante ");
    i0.ɵɵelementEnd();
    i0.ɵɵtemplate(4, ConfiguracionPracticaComponent_div_14_div_4_Template, 2, 0, "div", 112)(5, ConfiguracionPracticaComponent_div_14_div_5_Template, 2, 1, "div", 72);
    i0.ɵɵelement(6, "br");
    i0.ɵɵtemplate(7, ConfiguracionPracticaComponent_div_14_form_7_Template, 2, 1, "form", 73);
    i0.ɵɵelementStart(8, "div", 60);
    i0.ɵɵelement(9, "div", 61);
    i0.ɵɵelementStart(10, "button", 62);
    i0.ɵɵlistener("click", function ConfiguracionPracticaComponent_div_14_Template_button_click_10_listener() {
      i0.ɵɵrestoreView(_r76);
      const ctx_r1 = i0.ɵɵnextContext();
      return i0.ɵɵresetView(ctx_r1.volver());
    });
    i0.ɵɵtext(11, " Volver ");
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(12, "button", 63);
    i0.ɵɵlistener("click", function ConfiguracionPracticaComponent_div_14_Template_button_click_12_listener() {
      i0.ɵɵrestoreView(_r76);
      const ctx_r1 = i0.ɵɵnextContext();
      return i0.ɵɵresetView(ctx_r1.avanzarDesdePreguntasSupervisor());
    });
    i0.ɵɵtext(13, " Siguiente ");
    i0.ɵɵelementEnd();
    i0.ɵɵelement(14, "div", 61);
    i0.ɵɵelementEnd()()();
  }
  if (rf & 2) {
    const ctx_r1 = i0.ɵɵnextContext();
    i0.ɵɵadvance(4);
    i0.ɵɵproperty("ngIf", ctx_r1.hay_doc_direst);
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngForOf", ctx_r1.lista_preguntas_supervisor);
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngIf", ctx_r1.flag);
  }
}
function ConfiguracionPracticaComponent_div_15_button_8_Template(rf, ctx) {
  if (rf & 1) {
    const _r95 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "button", 63);
    i0.ɵɵlistener("click", function ConfiguracionPracticaComponent_div_15_button_8_Template_button_click_0_listener() {
      i0.ɵɵrestoreView(_r95);
      const ctx_r1 = i0.ɵɵnextContext(2);
      return i0.ɵɵresetView(ctx_r1.mandarDatos());
    });
    i0.ɵɵtext(1, " Terminar ");
    i0.ɵɵelementEnd();
  }
}
function ConfiguracionPracticaComponent_div_15_button_9_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "button", 123);
    i0.ɵɵtext(1, " Terminar ");
    i0.ɵɵelementEnd();
  }
}
function ConfiguracionPracticaComponent_div_15_Template(rf, ctx) {
  if (rf & 1) {
    const _r94 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "div", 11)(1, "div", 119)(2, "div", 120);
    i0.ɵɵtext(3, " Fin configuraci\u00F3n pr\u00E1ctica ");
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(4, "div", 60);
    i0.ɵɵelement(5, "div", 61);
    i0.ɵɵelementStart(6, "button", 62);
    i0.ɵɵlistener("click", function ConfiguracionPracticaComponent_div_15_Template_button_click_6_listener() {
      i0.ɵɵrestoreView(_r94);
      const ctx_r1 = i0.ɵɵnextContext();
      return i0.ɵɵresetView(ctx_r1.volver());
    });
    i0.ɵɵtext(7, " Volver ");
    i0.ɵɵelementEnd();
    i0.ɵɵtemplate(8, ConfiguracionPracticaComponent_div_15_button_8_Template, 2, 0, "button", 121)(9, ConfiguracionPracticaComponent_div_15_button_9_Template, 2, 0, "button", 122);
    i0.ɵɵelement(10, "div", 61);
    i0.ɵɵelementEnd()()();
  }
  if (rf & 2) {
    const ctx_r1 = i0.ɵɵnextContext();
    i0.ɵɵadvance(8);
    i0.ɵɵproperty("ngIf", ctx_r1.currentRoute == "/configurar/blanco");
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngIf", ctx_r1.currentRoute != "/configurar/blanco");
  }
}
class ConfiguracionPracticaComponent {
  constructor(_fb, cd, document, serviceBarra, _snackBar, route, serviceComplete, router, serviceEdicion) {
    this._fb = _fb;
    this.cd = cd;
    this.document = document;
    this.serviceBarra = serviceBarra;
    this._snackBar = _snackBar;
    this.route = route;
    this.serviceComplete = serviceComplete;
    this.router = router;
    this.serviceEdicion = serviceEdicion;
    this.importada = false;
    this.migracion_legal = true;
    this.user = JSON.parse(localStorage.getItem('auth-user') || "{}").userdata;
    this.key_plantilla = "";
    this.link_descarga_plantilla = "";
    this.tiene_alumnos = false;
    this.hay_doc_direst = false;
    this.timer_modalidades = [];
    this.timer_preguntas_encuesta_final = [];
    this.timer_pregunta_supervisor = [];
    this.timer_solicitud_documento = [];
    this.timer_config_informe_inf_final = [];
    this.timer_config_informe_inf_avance = [];
    this.timer_pregunta_informe = [];
    this.ids_config_informe = [];
    this.flag = false;
    this.displayedColumnsOpcionesPregunta = ["opcion_pregunta", "eliminar"];
    this.displayedColumnsHoras = ["opcion_horas", "eliminar"];
    this.displayedColumnsMeses = ["opcion_meses", "eliminar"];
    this.opcion_pregunta = new forms_1.FormControl('');
    this.opcion_horas = new forms_1.FormControl('');
    this.opcion_meses = new forms_1.FormControl('');
    this.cant_horas = [];
    this.cant_meses = [];
    this.opcion_pdf = false;
    this.opcion_word = false;
    this.preguntaFORM = new forms_1.FormControl('');
    //decide que se muestra en el html
    this.estado = "configuracion_general";
    this.habilitarHoras = false;
    this.habilitarMeses = false;
    this.lista_preguntas_avance = [];
    this.tipos_preguntas_avance = [];
    this.lista_opciones_preguntas_avance = [];
    this.lista_preguntas_final = [];
    this.tipos_preguntas_final = [];
    this.lista_opciones_preguntas_final = [];
    this.lista_preguntas_encuesta = [];
    this.tipos_preguntas_encuesta = [];
    this.lista_opciones_preguntas_encuesta = [];
    this.lista_preguntas_supervisor = [];
    this.tipos_preguntas_supervisor = [];
    this.lista_opciones_preguntas_supervisor = [];
    this.lista_fija_preguntas_supervisor = [];
    this.lista_nombre_solicitud_documentos = [];
    this.lista_descripcion_solicitud_documentos = [];
    this.lista_tipo_solicitud_documentos = [];
    this.currentRoute = "";
    this.rutaAnterior = "";
    this.router.events.subscribe(event => {
      if (event instanceof router_1.NavigationStart) {
        // Show loading indicator
        //console.log("NavigationStart:", event.url);
        this.currentRoute = event.url;
      }
      if (event instanceof router_1.NavigationEnd) {
        // Hide loading indicator
        this.currentRoute = event.url;
        let ruta_cortada = event.url.split("/");
        //console.log("NavigationEnd:", event.url, "split", ruta_cortada);
        //console.log("current route: ", this.currentRoute);
        if (ruta_cortada[ruta_cortada.length - 1] == "copia") {
          this.requestInicial(true);
          this.importada = true;
        } else {
          if (this.estado == "configuracion_general") {
            if (this.rutaAnterior[1] == "configurar") {
              this.fg.reset();
            }
          } else {
            window.location.reload();
          }
          this.requestInicial();
        }
        this.rutaAnterior = this.currentRoute;
      }
      if (event instanceof router_1.NavigationError) {
        // Hide loading indicator
        // Present error to user
        console.log("NavigationError:", event.error);
        _snackBar.open("Error al cargar la página", "Cerrar", {
          duration: 3000,
          panelClass: ['red-snackbar']
        });
        this.currentRoute = event.url;
      }
    });
  }
  splitOpciones(opciones) {
    if (opciones == "" || opciones == null) {
      return [];
    }
    return opciones.split(";;");
  }
  scrollToTop() {
    this.document.body.scrollTop = 0;
    this.document.documentElement.scrollTop = 0;
  }
  requestInicial(importada = false) {
    let respuesta = {};
    this.route.paramMap.subscribe(params => {
      this.nombre_config = params.get('nombre');
    });
    //console.log("nombre_config:", this.nombre_config);
    if (this.nombre_config == "blanco") {
      this.generarFormulario(-1);
    } else if (importada) {
      console.log("dentro de importada");
      this.serviceBarra.obtenerConfigPracticaNombre(this.nombre_config, this.user.encargado.id_carrera).subscribe({
        next: data => {
          respuesta = {
            ...respuesta,
            ...data
          };
        },
        error: error => {
          this._snackBar.open("Error al buscar configuración de práctica", "Cerrar", {
            duration: 3000,
            panelClass: ['red-snackbar']
          });
        },
        complete: () => {
          this.config = respuesta.body;
          this.config.nombre = this.config.nombre + " (copia)";
          this.generarFormulario(this.config.id);
        }
      });
    } else {
      this.serviceBarra.obtenerConfigPracticaNombre(this.nombre_config, this.user.encargado.id_carrera).subscribe({
        next: data => {
          respuesta = {
            ...respuesta,
            ...data
          };
        },
        error: error => {
          this._snackBar.open("Error al buscar configuración de práctica", "Cerrar", {
            duration: 3000,
            panelClass: ['red-snackbar']
          });
        },
        complete: () => {
          this.config = respuesta.body;
          //console.log("request practica existente:", this.config);
          let respuesta1 = {};
          this.serviceEdicion.getConfigsConPractica(this.config.id).subscribe({
            next: data => {
              respuesta1 = {
                ...respuesta1,
                ...data
              };
            },
            error: error => {
              this._snackBar.open("Error al buscar estudiantes", "Cerrar", {
                duration: 3000,
                panelClass: ['red-snackbar']
              });
              console.log("Error al buscar estudiantes", error);
            },
            complete: () => {
              console.log("request:", respuesta1.body);
              this.tiene_alumnos = respuesta1.body.practicas.length > 0 ? true : false;
              console.log("tiene alumnos:", this.tiene_alumnos);
              this.generarFormulario(this.config.id);
            }
          });
        }
      });
    }
  }
  generarFormulario(id_config_practica, importada = false) {
    let respuesta = {};
    // set valores iniciales
    if (id_config_practica == -1) {
      this.nombrePractica = "Práctica 1";
      this.horas = false;
      this.meses = false;
      this.frecuenciaInformes = "";
      this.informeFinal = "";
      this.tipo_solicitud_documentos = "pdf";
      this.hay_doc_direst = false;
      this.tipoInformeFinal = "";
      this.formatoInformeFinal = "";
      this.plantillaInformeFinal = "";
      this.fg = this._fb.group({
        opcion_preguntaFORM: this.opcion_pregunta,
        //para poder definir tipo de pregunta
        opcion_horasFORM: this.opcion_horas,
        opcion_mesesFORM: this.opcion_meses,
        nombrePractica: new forms_1.FormControl(this.nombrePractica, forms_1.Validators.required),
        cant_horas: this.cant_horas,
        cant_meses: this.cant_meses,
        horas: new forms_1.FormControl(this.horas),
        meses: new forms_1.FormControl(this.meses),
        frecuenciaInformes: new forms_1.FormControl(this.frecuenciaInformes, forms_1.Validators.required),
        informeFinal: new forms_1.FormControl(this.informeFinal, forms_1.Validators.required),
        tipoInformeFinal: new forms_1.FormControl(this.tipoInformeFinal),
        formatoInformeFinal: new forms_1.FormControl(this.formatoInformeFinal),
        plantillaInformeFinal: new forms_1.FormControl(this.plantillaInformeFinal),
        opcion_pdf: new forms_1.FormControl(this.opcion_pdf),
        opcion_word: new forms_1.FormControl(this.opcion_word),
        //pregunta: this.preguntaFORM,
        preguntaFORM: this.pregunta,
        arregloOpcionesPreguntas: this._fb.array([]),
        arregloHoras: this._fb.array([]),
        arregloMeses: this._fb.array([]),
        //documentos
        nombre_solicitud_documentos: new forms_1.FormControl(this.nombre_solicitud_documentos),
        descripcion_solicitud_documentos: new forms_1.FormControl(this.descripcion_solicitud_documentos),
        tipo_solicitud_documentos: new forms_1.FormControl(this.tipo_solicitud_documentos),
        //doc direst
        hay_doc_direst: new forms_1.FormControl(this.hay_doc_direst)
      });
      this.flag = true;
    } else {
      //* set basicos
      this.nombrePractica = this.config.nombre;
      this.frecuenciaInformes = this.config.frecuencia_informes;
      this.informeFinal = this.config.informe_final;
      this.hay_doc_direst = this.config.doc_direst;
      //* set modalidad
      //console.log("modalidad get id:", id_config_practica);
      this.serviceComplete.getModalidades(id_config_practica).subscribe({
        next: data => {
          respuesta = {
            ...respuesta,
            ...data
          };
        },
        error: error => {
          this._snackBar.open("Error al buscar modalidades de configuración de práctica", "Cerrar", {
            duration: 3000,
            panelClass: ['red-snackbar']
          });
        },
        complete: () => {
          //console.log("request modalidades existentes:", respuesta.body);
          //* set modalidades
          for (let i = 0; i < respuesta.body.length; i++) {
            if (respuesta.body[i].tipo_modalidad == "horas") {
              this.horas = true;
              //this.cant_horas.push(respuesta.body[i].cantidad_tiempo);
            }
            if (respuesta.body[i].tipo_modalidad == "meses") {
              this.meses = true;
              //this.cant_meses.push(respuesta.body[i].cantidad_tiempo);
            }
          }
          //console.log("horas:", this.cant_horas, "meses:", this.cant_meses);
          //console.log("horas:", this.horas, "meses:", this.meses);
          //* set config informe
          this.serviceComplete.getConfigInforme(id_config_practica).subscribe({
            next: data => {
              respuesta = {
                ...respuesta,
                ...data
              };
            },
            error: error => {
              this._snackBar.open("Error al buscar informes de configuración de práctica", "Cerrar", {
                duration: 3000,
                panelClass: ['red-snackbar']
              });
            },
            complete: () => {
              //console.log("request config informe:", respuesta.body);
              //* guardar id's para poder actualizar mas tarde
              for (let i = 0; i < respuesta.body.length; i++) {
                this.ids_config_informe.push(respuesta.body[i].id);
              }
              //* set preguntas informe
              if (respuesta.body?.length) {
                // el encargado seteó preguntas de informe
                for (let j = 0; j < respuesta.body.length; j++) {
                  if ((respuesta.body[j]?.tipo_informe).toLowerCase() == "informe final" && respuesta.body[j]?.archivo_o_encuesta != null) {
                    if ((respuesta.body[j]?.archivo_o_encuesta).toLowerCase() == "encuesta") {
                      this.tipoInformeFinal = "encuesta";
                    } else if ((respuesta.body[j]?.archivo_o_encuesta).toLowerCase() == "archivo") {
                      this.tipoInformeFinal = "archivo";
                      if (respuesta.body[j]?.tipo_archivo.includes("pdf")) {
                        this.opcion_pdf = true;
                      }
                      if (respuesta.body[j]?.tipo_archivo.includes("doc")) {
                        this.opcion_word = true;
                      }
                      if (respuesta.body[j]?.plantilla != "") {
                        this.plantillaInformeFinal = "si";
                        this.key_plantilla = respuesta.body[j].plantilla;
                        this.link_descarga_plantilla = "https://d2v9ocre132gvc.cloudfront.net/" + this.key_plantilla;
                      } else {
                        this.plantillaInformeFinal = "no";
                      }
                    }
                  }
                  for (let i = 0; i < respuesta.body[j].pregunta_informes.length; i++) {
                    if (respuesta.body[j].tipo_informe == "informe final") {
                      this.lista_preguntas_final.push(respuesta.body[j].pregunta_informes[i].enunciado);
                      this.tipos_preguntas_final.push(respuesta.body[j].pregunta_informes[i].tipo_respuesta);
                      this.lista_opciones_preguntas_final.push(respuesta.body[j].pregunta_informes[i].opciones);
                    }
                    if (respuesta.body[j].tipo_informe == "informe avance") {
                      this.lista_preguntas_avance.push(respuesta.body[j].pregunta_informes[i].enunciado);
                      this.tipos_preguntas_avance.push(respuesta.body[j].pregunta_informes[i].tipo_respuesta);
                      this.lista_opciones_preguntas_avance.push(respuesta.body[j].pregunta_informes[i].opciones);
                    }
                  }
                }
              }
              //console.log("preguntas avance:", this.lista_preguntas_avance);
              //console.log("preguntas final:", this.lista_preguntas_final);
              //* set preguntas encuesta
              this.serviceComplete.getPreguntaEncuestaFinal(id_config_practica).subscribe({
                next: data => {
                  respuesta = {
                    ...respuesta,
                    ...data
                  };
                },
                error: error => {
                  this._snackBar.open("Error al buscar encuesta final", "Cerrar", {
                    duration: 3000,
                    panelClass: ['red-snackbar']
                  });
                  console.log("Error al buscar encuesta final", error);
                },
                complete: () => {
                  //console.log("request encuesta final:", respuesta.body);
                  for (let i = 0; i < respuesta.body.length; i++) {
                    this.lista_preguntas_encuesta.push(respuesta.body[i].enunciado);
                    this.tipos_preguntas_encuesta.push(respuesta.body[i].tipo_respuesta);
                    this.lista_opciones_preguntas_encuesta.push(respuesta.body[i].opciones);
                  }
                  //* set preguntas supervisor
                  this.serviceComplete.getPreguntaSupervisor(id_config_practica).subscribe({
                    next: data => {
                      respuesta = {
                        ...respuesta,
                        ...data
                      };
                    },
                    error: error => {
                      this._snackBar.open("Error al buscar pregunta supervisor", "Cerrar", {
                        duration: 3000,
                        panelClass: ['red-snackbar']
                      });
                      console.log("Error al buscar pregunta supervisor", error);
                    },
                    complete: () => {
                      //console.log("pregunta supervisor:", respuesta.body);
                      for (let i = 0; i < respuesta.body.length; i++) {
                        this.lista_preguntas_supervisor.push(respuesta.body[i].enunciado);
                        this.tipos_preguntas_supervisor.push(respuesta.body[i].tipo_respuesta);
                        this.lista_opciones_preguntas_supervisor.push(respuesta.body[i].opciones);
                      }
                      //* set solicitudes documentos
                      this.serviceComplete.getSolicitudDocumento(id_config_practica).subscribe({
                        next: data => {
                          respuesta = {
                            ...respuesta,
                            ...data
                          };
                        },
                        error: error => {
                          this._snackBar.open("Error al buscar solicitud de documento", "Cerrar", {
                            duration: 3000,
                            panelClass: ['red-snackbar']
                          });
                          console.log("Error al buscar solicitud de documento", error);
                        },
                        complete: () => {
                          //console.log("request solicitud de documento:", respuesta.body);
                          for (let i = 0; i < respuesta.body.length; i++) {
                            this.lista_nombre_solicitud_documentos.push(respuesta.body[i].nombre_solicitud);
                            this.lista_descripcion_solicitud_documentos.push(respuesta.body[i].descripcion);
                            this.lista_tipo_solicitud_documentos.push(respuesta.body[i].tipo_archivo);
                          }
                          //* set formulario
                          this.fg = this._fb.group({
                            opcion_preguntaFORM: this.opcion_pregunta,
                            //para poder definir tipo de pregunta
                            opcion_horasFORM: this.opcion_horas,
                            opcion_mesesFORM: this.opcion_meses,
                            nombrePractica: new forms_1.FormControl(this.nombrePractica, forms_1.Validators.required),
                            cant_horas: this.cant_horas,
                            cant_meses: this.cant_meses,
                            horas: new forms_1.FormControl(this.horas),
                            meses: new forms_1.FormControl(this.meses),
                            frecuenciaInformes: new forms_1.FormControl(this.frecuenciaInformes, forms_1.Validators.required),
                            informeFinal: new forms_1.FormControl(this.informeFinal, forms_1.Validators.required),
                            tipoInformeFinal: new forms_1.FormControl(this.tipoInformeFinal),
                            formatoInformeFinal: new forms_1.FormControl(this.formatoInformeFinal),
                            plantillaInformeFinal: new forms_1.FormControl(this.plantillaInformeFinal),
                            opcion_pdf: new forms_1.FormControl(this.opcion_pdf),
                            opcion_word: new forms_1.FormControl(this.opcion_word),
                            //pregunta: this.preguntaFORM,
                            preguntaFORM: this.pregunta,
                            arregloOpcionesPreguntas: this._fb.array([]),
                            arregloHoras: this._fb.array([]),
                            arregloMeses: this._fb.array([]),
                            //documentos
                            nombre_solicitud_documentos: new forms_1.FormControl(this.nombre_solicitud_documentos),
                            descripcion_solicitud_documentos: new forms_1.FormControl(this.descripcion_solicitud_documentos),
                            tipo_solicitud_documentos: new forms_1.FormControl(this.tipo_solicitud_documentos),
                            //doc direst
                            hay_doc_direst: new forms_1.FormControl(this.hay_doc_direst)
                          });
                          this.flag = true;
                        }
                      });
                    }
                  });
                }
              });
            }
          });
        }
      });
    }
  }
  habilitarHorasFunc(arg) {
    this.habilitarHoras = arg.target.checked;
  }
  habilitarMesesFunc(arg) {
    this.habilitarMeses = arg.target.checked;
  }
  get arregloOpcionesPreguntas() {
    return this.fg.controls["arregloOpcionesPreguntas"];
  }
  get arregloHoras() {
    return this.fg.controls["arregloHoras"];
  }
  get arregloMeses() {
    return this.fg.controls["arregloMeses"];
  }
  addOpcionPregunta() {
    const opcionesPreguntaForm = this._fb.group({
      opcion_pregunta: ['']
    });
    this.arregloOpcionesPreguntas.push(opcionesPreguntaForm);
    this.dataSourcePacksOpcionesPregunta = new table_1.MatTableDataSource(this.arregloOpcionesPreguntas.controls);
    this.cd.detectChanges();
  }
  addHoras() {
    const horasForm = this._fb.group({
      opcion_horas: ['']
    });
    this.arregloHoras.push(horasForm);
    this.dataSourcePacksHoras = new table_1.MatTableDataSource(this.arregloHoras.controls);
    this.cd.detectChanges();
  }
  addMeses() {
    const mesesForm = this._fb.group({
      opcion_meses: ['']
    });
    this.arregloMeses.push(mesesForm);
    this.dataSourcePacksMeses = new table_1.MatTableDataSource(this.arregloMeses.controls);
    this.cd.detectChanges();
  }
  deleteOpcionPregunta(opcionPreguntaIndex) {
    this.arregloOpcionesPreguntas.removeAt(opcionPreguntaIndex);
    this.dataSourcePacksOpcionesPregunta = new table_1.MatTableDataSource(this.arregloOpcionesPreguntas.controls);
  }
  deleteHoras(horasIndex) {
    this.arregloHoras.removeAt(horasIndex);
    this.dataSourcePacksHoras = new table_1.MatTableDataSource(this.arregloHoras.controls);
  }
  deleteMeses(mesesIndex) {
    this.arregloMeses.removeAt(mesesIndex);
    this.dataSourcePacksMeses = new table_1.MatTableDataSource(this.arregloMeses.controls);
  }
  onSubmitPractica() {
    this.nombrePractica = this.fg.value.nombrePractica;
    this.horas = this.fg.value.horas;
    this.meses = this.fg.value.meses;
    this.frecuenciaInformes = this.fg.value.frecuenciaInformes;
    this.informeFinal = this.fg.value.informeFinal;
    this.tipoInformeFinal = this.fg.value.tipoInformeFinal;
    this.opcion_horas = this.arregloHoras.value;
    this.opcion_meses = this.arregloMeses.value;
    for (let i = 0; i < Object.keys(this.opcion_horas).length; i++) {
      this.cant_horas.push(Number(Object.values(Object.values(this.opcion_horas)[i])[0]));
    }
    for (let i = 0; i < Object.keys(this.opcion_meses).length; i++) {
      this.cant_meses.push(Number(Object.values(Object.values(this.opcion_meses)[i])[0]));
    }
    //cambio estado vista
    if (this.frecuenciaInformes == "sinAvance" && this.informeFinal == "no") {
      this.estado = "solicitud_documentos";
      //console.log("documentos");
    } else if (this.frecuenciaInformes == "sinAvance" && this.informeFinal == "si") {
      if (this.tipoInformeFinal == "encuesta") {
        this.estado = "informe_final_encuesta";
      } else if (this.tipoInformeFinal == "archivo") {
        this.estado = "informe_final_archivo";
      }
      console.log("informe final", this.tipoInformeFinal);
    } else if (this.frecuenciaInformes != "sinAvance") {
      this.estado = "informe_avance";
      //console.log("informe avance");
    }
    //console.log("estado:", this.estado);
    //console.log("fg values:", this.fg.value);
  }
  onSubmitAddPreguntaAvance() {
    //this.lista_opciones_preguntas = [];
    this.pregunta = this.fg.value.preguntaFORM;
    this.opcion_pregunta = this.arregloOpcionesPreguntas.value;
    //console.log(typeof this.opcion_pregunta);
    var string_pregunta = String(this.pregunta);
    //console.log(string_pregunta);
    this.lista_preguntas_avance.push(string_pregunta);
    console.log(this.lista_preguntas_avance);
    this.tipos_preguntas_avance.push(this.tipo_pregunta);
    console.log(this.tipos_preguntas_avance);
    var opciones_de_una_pregunta = "";
    if (Object.keys(this.opcion_pregunta).length == 0) {
      console.log("no hay opciones");
    } else {
      console.log("hay opciones");
      //var string_pregunta = String(this.pregunta)
      for (let i = 0; i < Object.keys(this.opcion_pregunta).length; i++) {
        opciones_de_una_pregunta = opciones_de_una_pregunta + String(Object.values(Object.values(this.opcion_pregunta)[i])[0]);
        opciones_de_una_pregunta = opciones_de_una_pregunta + ";;";
        //string_pregunta = string_pregunta + ","
        //string_pregunta = string_pregunta + String(Object.values(Object.values(this.opcion_pregunta)[i])[0])
        //console.log(Object.values(Object.values(this.opcion_pregunta)[i])[0]);
      }
      opciones_de_una_pregunta = opciones_de_una_pregunta.slice(0, -2);
      //console.log(string_pregunta);
      //this.lista_preguntas_avance.push(string_pregunta);
      //console.log(this.lista_preguntas_avance);
    }
    this.lista_opciones_preguntas_avance.push(opciones_de_una_pregunta);
    console.log("pregunas avance: ", this.lista_opciones_preguntas_avance);
    //limpieza opciones anteriores
    for (let i = 0; i < this.arregloOpcionesPreguntas.length; i++) {
      this.deleteOpcionPregunta(i);
    }
    this.arregloOpcionesPreguntas.clear();
    this.pregunta = "";
  }
  onSubmitAddPreguntaFinal() {
    //this.lista_opciones_preguntas = [];
    this.pregunta = this.fg.value.preguntaFORM;
    this.opcion_pregunta = this.arregloOpcionesPreguntas.value;
    //console.log(typeof this.opcion_pregunta);
    var string_pregunta = String(this.pregunta);
    //console.log(string_pregunta);
    this.lista_preguntas_final.push(string_pregunta);
    console.log(this.lista_preguntas_final);
    this.tipos_preguntas_final.push(this.tipo_pregunta);
    console.log(this.tipos_preguntas_final);
    var opciones_de_una_pregunta = "";
    if (Object.keys(this.opcion_pregunta).length == 0) {
      console.log("no hay opciones");
    } else {
      console.log("hay opciones");
      //var string_pregunta = String(this.pregunta)
      for (let i = 0; i < Object.keys(this.opcion_pregunta).length; i++) {
        //string_pregunta = string_pregunta + ","
        opciones_de_una_pregunta = opciones_de_una_pregunta + String(Object.values(Object.values(this.opcion_pregunta)[i])[0]);
        opciones_de_una_pregunta = opciones_de_una_pregunta + ";;";
        //console.log(Object.values(Object.values(this.opcion_pregunta)[i])[0]);
      }
      opciones_de_una_pregunta = opciones_de_una_pregunta.slice(0, -2);
      //console.log(string_pregunta);
      //this.lista_preguntas_avance.push(string_pregunta);
      //console.log(this.lista_preguntas_avance);
    }
    this.lista_opciones_preguntas_final.push(opciones_de_una_pregunta);
    console.log(this.lista_opciones_preguntas_final);
    //limpieza opciones anteriores
    for (let i = 0; i < this.arregloOpcionesPreguntas.length; i++) {
      this.deleteOpcionPregunta(i);
    }
    this.arregloOpcionesPreguntas.clear();
    this.pregunta = "";
  }
  onSubmitArchivoInformeFinal() {
    this.formatoInformeFinal = "";
    if (this.fg.value.opcion_pdf == true) {
      this.formatoInformeFinal += "pdf,";
    }
    if (this.fg.value.opcion_word == true) {
      this.formatoInformeFinal += "doc,docx,";
    }
    if (this.formatoInformeFinal.slice(-1) == ",") {
      this.formatoInformeFinal = this.formatoInformeFinal.slice(0, -1);
    }
    console.log(this.formatoInformeFinal);
    this.plantillaInformeFinal = this.fg.value.plantillaInformeFinal;
    this.avanzarDesdePreguntasFinal();
  }
  onSubmitAddPreguntaEncuesta() {
    //this.lista_opciones_preguntas = [];
    this.pregunta = this.fg.value.preguntaFORM;
    this.opcion_pregunta = this.arregloOpcionesPreguntas.value;
    //console.log(typeof this.opcion_pregunta);
    var string_pregunta = String(this.pregunta);
    //console.log(string_pregunta);
    this.lista_preguntas_encuesta.push(string_pregunta);
    console.log(this.lista_preguntas_encuesta);
    this.tipos_preguntas_encuesta.push(this.tipo_pregunta);
    console.log(this.tipos_preguntas_encuesta);
    var opciones_de_una_pregunta = "";
    if (Object.keys(this.opcion_pregunta).length == 0) {
      console.log("no hay opciones");
    } else {
      console.log("hay opciones");
      //var string_pregunta = String(this.pregunta)
      for (let i = 0; i < Object.keys(this.opcion_pregunta).length; i++) {
        //string_pregunta = string_pregunta + ","
        opciones_de_una_pregunta = opciones_de_una_pregunta + String(Object.values(Object.values(this.opcion_pregunta)[i])[0]);
        opciones_de_una_pregunta = opciones_de_una_pregunta + ";;";
        //console.log(Object.values(Object.values(this.opcion_pregunta)[i])[0]);
      }
      opciones_de_una_pregunta = opciones_de_una_pregunta.slice(0, -2);
      //console.log(string_pregunta);
      //this.lista_preguntas_avance.push(string_pregunta);
      //console.log(this.lista_preguntas_avance);
    }
    this.lista_opciones_preguntas_encuesta.push(opciones_de_una_pregunta);
    console.log(this.lista_opciones_preguntas_encuesta);
    //limpieza opciones anteriores
    for (let i = 0; i < this.arregloOpcionesPreguntas.length; i++) {
      this.deleteOpcionPregunta(i);
    }
    this.arregloOpcionesPreguntas.clear();
    this.pregunta = "";
  }
  onSubmitAddPreguntaSupervisor() {
    //this.lista_opciones_preguntas = [];
    this.pregunta = this.fg.value.preguntaFORM;
    this.opcion_pregunta = this.arregloOpcionesPreguntas.value;
    //console.log(typeof this.opcion_pregunta);
    var string_pregunta = String(this.pregunta);
    //console.log(string_pregunta);
    this.lista_preguntas_supervisor.push(string_pregunta);
    console.log(this.lista_preguntas_supervisor);
    this.tipos_preguntas_supervisor.push(this.tipo_pregunta);
    console.log(this.tipos_preguntas_supervisor);
    var opciones_de_una_pregunta = "";
    if (Object.keys(this.opcion_pregunta).length == 0) {
      console.log("no hay opciones");
    } else {
      console.log("hay opciones");
      //var string_pregunta = String(this.pregunta)
      for (let i = 0; i < Object.keys(this.opcion_pregunta).length; i++) {
        //string_pregunta = string_pregunta + ","
        opciones_de_una_pregunta = opciones_de_una_pregunta + String(Object.values(Object.values(this.opcion_pregunta)[i])[0]);
        opciones_de_una_pregunta = opciones_de_una_pregunta + ";;";
        //console.log(Object.values(Object.values(this.opcion_pregunta)[i])[0]);
      }
      opciones_de_una_pregunta = opciones_de_una_pregunta.slice(0, -2);
      //console.log(string_pregunta);
      //this.lista_preguntas_avance.push(string_pregunta);
      //console.log(this.lista_preguntas_avance);
    }
    this.lista_opciones_preguntas_supervisor.push(opciones_de_una_pregunta);
    console.log(this.lista_opciones_preguntas_supervisor);
    this.lista_fija_preguntas_supervisor.push(false);
    console.log(this.lista_fija_preguntas_supervisor);
    //limpieza opciones anteriores
    for (let i = 0; i < this.arregloOpcionesPreguntas.length; i++) {
      this.deleteOpcionPregunta(i);
    }
    this.arregloOpcionesPreguntas.clear();
    this.pregunta = "";
  }
  tipoPregunta(arg) {
    if (arg.target.value == "0") {
      this.tipo_pregunta = "sin_tipo";
      //vacia el array de opciones guardadas anteriormente
      this.arregloOpcionesPreguntas.clear();
      console.log(this.tipo_pregunta);
    }
    if (arg.target.value == "1") {
      this.tipo_pregunta = "abierta";
      //vacia el array de opciones guardadas anteriormente
      this.arregloOpcionesPreguntas.clear();
      console.log(this.tipo_pregunta);
    } else if (arg.target.value == "2") {
      this.tipo_pregunta = "casillas";
      console.log(this.tipo_pregunta);
    } else if (arg.target.value == "3") {
      this.tipo_pregunta = "alternativas";
      console.log(this.tipo_pregunta);
    }
  }
  numSequence(n) {
    return Array(n);
  }
  lengthArray(array) {
    return array.length;
  }
  avanzarDesdePreguntasAvance() {
    if (this.informeFinal == "si") {
      if (this.tipoInformeFinal == "encuesta") {
        this.estado = "informe_final_encuesta";
      } else if (this.tipoInformeFinal == "archivo") {
        this.estado = "informe_final_archivo";
      }
    } else {
      this.estado = "solicitud_documentos";
    }
    this.arregloOpcionesPreguntas.clear();
    this.pregunta = "";
    this.printForm();
  }
  avanzarDesdePreguntasFinal() {
    this.estado = "solicitud_documentos";
    this.printForm();
  }
  avanzarDesdeSolicitudDocumentos() {
    this.estado = "encuesta_final";
    this.printForm();
  }
  avanzarDesdePreguntasEncuesta() {
    //this.estado = "agregar_ramos";
    this.estado = "preguntas_supervisor";
    this.printForm();
  }
  avanzarDesdePreguntasSupervisor() {
    this.estado = "fin_configuracion";
    this.printForm();
  }
  volver() {
    //console.log("volver");
    //console.log(this.estado);
    //volver desde preguntas avance
    if (this.estado == "informe_avance") {
      this.estado = "configuracion_general";
    }
    //volver desde preguntas final
    if (this.estado == "informe_final_encuesta" || this.estado == "informe_final_archivo") {
      if (this.frecuenciaInformes == "sinAvance") {
        this.estado = "configuracion_general";
      } else {
        this.estado = "informe_avance";
      }
    }
    //volver desde solicitud de documentos
    else if (this.estado == "solicitud_documentos") {
      if (this.informeFinal == "si") {
        if (this.tipoInformeFinal == "encuesta") {
          this.estado = "informe_final_encuesta";
        } else if (this.tipoInformeFinal == "archivo") {
          this.estado = "informe_final_archivo";
        }
      } else if (this.frecuenciaInformes == "sinAvance") {
        this.estado = "configuracion_general";
      } else {
        this.estado = "informe_avance";
      }
    }
    //volver desde encuesta final
    else if (this.estado == "encuesta_final") {
      this.estado = "solicitud_documentos";
    }
    //volver desde preguntas supervisor
    else if (this.estado == "preguntas_supervisor") {
      //this.estado = "agregar_ramos";
      this.estado = "encuesta_final";
    }
    //volver desde fin configuracion
    else if (this.estado == "fin_configuracion") {
      this.estado = "preguntas_supervisor";
    }
    //this.printForm();
  }
  printForm() {
    //console.log(this.fg.value);
  }
  onSubmitAddSolicitudDoc() {
    console.log("documento agregado");
    this.lista_nombre_solicitud_documentos.push(this.fg.value.nombre_solicitud_documentos);
    this.lista_descripcion_solicitud_documentos.push(this.fg.value.descripcion_solicitud_documentos);
    this.lista_tipo_solicitud_documentos.push(this.fg.value.tipo_solicitud_documentos);
    //console.log(this.lista_nombre_solicitud_documentos);
    //console.log(this.lista_descripcion_solicitud_documentos);
    //console.log(this.lista_tipo_solicitud_documentos);
  }
  eliminarPreguntaAvance(index) {
    console.log("eliminando pregunta", index);
    this.lista_preguntas_avance.splice(index, 1);
    this.lista_opciones_preguntas_avance.splice(index, 1);
    this.tipos_preguntas_avance.splice(index, 1);
    this.migracion_legal = false;
  }
  eliminarPreguntaFinal(index) {
    console.log("eliminando pregunta", index);
    this.lista_preguntas_final.splice(index, 1);
    this.lista_opciones_preguntas_final.splice(index, 1);
    this.tipos_preguntas_final.splice(index, 1);
    this.migracion_legal = false;
  }
  eliminarPreguntaEncuesta(index) {
    console.log("eliminando pregunta", index);
    this.lista_preguntas_encuesta.splice(index, 1);
    this.lista_opciones_preguntas_encuesta.splice(index, 1);
    this.tipos_preguntas_encuesta.splice(index, 1);
    this.migracion_legal = false;
  }
  eliminarPreguntaSupervisor(index) {
    console.log("eliminando pregunta", index);
    this.lista_preguntas_supervisor.splice(index, 1);
    this.lista_opciones_preguntas_supervisor.splice(index, 1);
    this.tipos_preguntas_supervisor.splice(index, 1);
    this.migracion_legal = false;
  }
  eliminarSolicitudDocumento(index) {
    console.log("eliminando solicitud de documento", index);
    this.lista_nombre_solicitud_documentos.splice(index, 1);
    this.lista_descripcion_solicitud_documentos.splice(index, 1);
    this.lista_tipo_solicitud_documentos.splice(index, 1);
    this.migracion_legal = false;
  }
  agregar_doc_direst() {
    const pregunta_tareas_desarrolladas = "Detalle las tareas realizadas por el estudiante.";
    const pregunta_observaciones = "Escriba sus observaciones sobre el estudiante y el trabajo realizado.";
    let idx_preg_tareas = this.lista_preguntas_supervisor.indexOf(pregunta_tareas_desarrolladas);
    if (idx_preg_tareas > -1) {
      this.lista_preguntas_supervisor.splice(idx_preg_tareas, 1);
      this.tipos_preguntas_supervisor.splice(idx_preg_tareas, 1);
      this.lista_opciones_preguntas_supervisor.splice(idx_preg_tareas, 1);
      this.lista_fija_preguntas_supervisor;
    }
    let idx_preg_obs = this.lista_preguntas_supervisor.indexOf(pregunta_observaciones);
    if (idx_preg_obs > -1) {
      this.lista_preguntas_supervisor.splice(idx_preg_obs, 1);
      this.tipos_preguntas_supervisor.splice(idx_preg_obs, 1);
      this.lista_opciones_preguntas_supervisor.splice(idx_preg_obs, 1);
      this.lista_fija_preguntas_supervisor.splice(idx_preg_obs, 1);
    }
    if (!this.hay_doc_direst) return;
    this.lista_preguntas_supervisor.push(pregunta_tareas_desarrolladas);
    this.tipos_preguntas_supervisor.push("abierta");
    this.lista_opciones_preguntas_supervisor.push("");
    this.lista_fija_preguntas_supervisor.push(true);
    this.lista_preguntas_supervisor.push(pregunta_observaciones);
    this.tipos_preguntas_supervisor.push("abierta");
    this.lista_opciones_preguntas_supervisor.push("");
    this.lista_fija_preguntas_supervisor.push(true);
  }
  mandarDatos() {
    let tipo_request;
    //checkear si se puede migrar
    // tipo de request
    if (this.nombre_config == "blanco" || this.importada) {
      tipo_request = "crear";
    } else {
      tipo_request = "actualizar";
    }
    this.agregar_doc_direst();
    if (tipo_request == "crear") {
      this.crearConfigPractica(this.nombrePractica, this.frecuenciaInformes, this.informeFinal);
    } else {
      this.actualizarConfigPractica(this.nombrePractica, this.frecuenciaInformes, this.informeFinal);
    }
  }
  actualizarConfigPractica(nombre, frecuencia, final) {
    let respuesta = {};
    //desactivar practica actual
    this.serviceComplete.actualizarConfigPractica(this.config.id, false).subscribe({
      next: data => {
        respuesta = {
          ...respuesta,
          ...data
        };
      },
      error: error => {
        this._snackBar.open("Error al actualizar configuración de práctica", "Cerrar", {
          duration: 3500,
          panelClass: ['red-snackbar']
        });
      },
      complete: () => {
        this._snackBar.open("Configuración de práctica actualizada exitosamente", "Cerrar", {
          duration: 3500,
          panelClass: ['green-snackbar']
        });
      }
    });
    //crear nuevos (copias)
    this.serviceComplete.crearConfigPractica(nombre, frecuencia, final, +this.user.encargado.id_carrera, this.hay_doc_direst).subscribe({
      next: data => {
        respuesta = {
          ...respuesta,
          ...data
        };
      },
      error: error => {
        this._snackBar.open("Error al guardar configuración de práctica", "Cerrar", {
          duration: 3500,
          panelClass: ['red-snackbar']
        });
      },
      complete: () => {
        this._snackBar.open("Configuración de práctica guardada exitosamente", "Cerrar", {
          duration: 3500,
          panelClass: ['green-snackbar']
        });
        this.timer_modalidades = [];
        if (this.horas == true) {
          this.tablaModalidad(respuesta.body.id, "horas", Object.values(this.opcion_horas));
        }
        if (this.meses == true) {
          this.tablaModalidad(respuesta.body.id, "meses", Object.values(this.opcion_meses));
        }
        this.timer_preguntas_encuesta_final = [];
        for (let i = 0; i < this.lista_preguntas_encuesta.length; i++) {
          this.crearPreguntaEncuestaFinal(respuesta.body.id, this.lista_preguntas_encuesta[i], this.tipos_preguntas_encuesta[i], this.lista_opciones_preguntas_encuesta[i]);
        }
        this.timer_pregunta_supervisor = [];
        for (let i = 0; i < this.lista_preguntas_supervisor.length; i++) {
          this.crearPreguntaSupervisor(respuesta.body.id, this.lista_preguntas_supervisor[i], this.tipos_preguntas_supervisor[i], this.lista_opciones_preguntas_supervisor[i], this.lista_fija_preguntas_supervisor[i]);
        }
        this.timer_solicitud_documento = [];
        for (let i = 0; i < this.lista_nombre_solicitud_documentos.length; i++) {
          this.crearSolicitudDocumento(respuesta.body.id, this.lista_nombre_solicitud_documentos[i], this.lista_descripcion_solicitud_documentos[i], this.lista_tipo_solicitud_documentos[i]);
        }
        this.timer_pregunta_informe = [];
        if (this.informeFinal == "si") {
          this.crearConfigInforme(respuesta.body.id, "informe final");
        }
        if (this.frecuenciaInformes != "sinAvance") {
          this.crearConfigInforme(respuesta.body.id, "informe avance");
        }
        let timer_get_cofigs = [];
        let timer_actualizar_estudiantes = [];
        let prom = new Promise((resolve, reject) => {
          let respuesta = {};
          this.serviceComplete.getPracticasConConfig(this.config.id).subscribe({
            next: data => {
              respuesta = {
                ...respuesta,
                ...data
              };
            },
            error: error => {
              reject(false);
              this._snackBar.open("Error al buscar practicas con config", "Cerrar", {
                duration: 3500,
                panelClass: ['red-snackbar']
              });
              console.log("Error al buscar practicas con config", error);
            },
            complete: () => {
              console.log("request practicas con config:", respuesta.body);
              if (respuesta.body.length > 0 && this.migracion_legal) {
                for (let i = 0; i < respuesta.body.length; i++) {
                  let prom = new Promise((resolve, reject) => {
                    this.serviceComplete.actualizarEstudiantes(respuesta.body[i].id, this.config.id).subscribe({
                      next: data => {
                        respuesta = {
                          ...respuesta,
                          ...data
                        };
                      },
                      error: error => {
                        console.log("Error al actualizar estudiantes", error);
                        reject(false);
                      },
                      complete: () => {
                        console.log("Estudiantes actualizados exitosamente", respuesta.body);
                        resolve(true);
                      }
                    });
                  });
                  timer_actualizar_estudiantes.push(prom);
                }
              }
              resolve(true);
            }
          });
        });
        timer_get_cofigs = [prom];
        // asegurarse de que todas las requests hayan terminado antes de recargar la página
        Promise.allSettled([Promise.allSettled(this.timer_modalidades), Promise.allSettled(this.timer_preguntas_encuesta_final), Promise.allSettled(this.timer_pregunta_supervisor), Promise.allSettled(this.timer_solicitud_documento), Promise.allSettled(this.timer_config_informe_inf_final), Promise.allSettled(this.timer_config_informe_inf_avance), Promise.allSettled(this.timer_pregunta_informe), Promise.allSettled(timer_get_cofigs), Promise.allSettled(timer_actualizar_estudiantes)]).then(vals => {
          window.location.reload();
        });
      }
    });
  }
  crearConfigPractica(nombre, frecuencia, final) {
    let respuesta = {};
    this.serviceComplete.crearConfigPractica(nombre, frecuencia, final, +this.user.encargado.id_carrera, this.hay_doc_direst).subscribe({
      next: data => {
        respuesta = {
          ...respuesta,
          ...data
        };
      },
      error: error => {
        this._snackBar.open("Se ha producido un error al guardar la configuración de práctica", "Cerrar", {
          duration: 3500,
          panelClass: ['red-snackbar']
        });
      },
      complete: () => {
        this._snackBar.open("Configuración de práctica guardada exitosamente", "Cerrar", {
          duration: 5000,
          panelClass: ['green-snackbar']
        });
        this.timer_modalidades = [];
        if (this.horas == true) {
          this.tablaModalidad(respuesta.body.id, "horas", Object.values(this.opcion_horas));
        }
        if (this.meses == true) {
          this.tablaModalidad(respuesta.body.id, "meses", Object.values(this.opcion_meses));
        }
        this.timer_preguntas_encuesta_final = [];
        for (let i = 0; i < this.lista_preguntas_encuesta.length; i++) {
          this.crearPreguntaEncuestaFinal(respuesta.body.id, this.lista_preguntas_encuesta[i], this.tipos_preguntas_encuesta[i], this.lista_opciones_preguntas_encuesta[i]);
        }
        this.timer_pregunta_supervisor = [];
        for (let i = 0; i < this.lista_preguntas_supervisor.length; i++) {
          this.crearPreguntaSupervisor(respuesta.body.id, this.lista_preguntas_supervisor[i], this.tipos_preguntas_supervisor[i], this.lista_opciones_preguntas_supervisor[i], this.lista_fija_preguntas_supervisor[i]);
        }
        this.timer_solicitud_documento = [];
        for (let i = 0; i < this.lista_nombre_solicitud_documentos.length; i++) {
          this.crearSolicitudDocumento(respuesta.body.id, this.lista_nombre_solicitud_documentos[i], this.lista_descripcion_solicitud_documentos[i], this.lista_tipo_solicitud_documentos[i]);
        }
        this.timer_pregunta_informe = [];
        if (this.informeFinal == "si") {
          console.log("tipo informe final: ", this.tipoInformeFinal);
          console.log("formato informe final: ", this.formatoInformeFinal);
          console.log("key plantilla: ", this.key_plantilla);
          console.log("archivo plantilla: ", this.archivo_plantilla);
          this.crearConfigInforme(respuesta.body.id, "informe final", this.tipoInformeFinal, this.formatoInformeFinal, this.key_plantilla, this.archivo_plantilla);
        }
        if (this.frecuenciaInformes != "sinAvance") {
          this.crearConfigInforme(respuesta.body.id, "informe avance");
        }
        // asegurarse de que todas las requests hayan terminado antes de recargar la página
        Promise.allSettled([Promise.allSettled(this.timer_modalidades), Promise.allSettled(this.timer_preguntas_encuesta_final), Promise.allSettled(this.timer_pregunta_supervisor), Promise.allSettled(this.timer_solicitud_documento), Promise.allSettled(this.timer_config_informe_inf_final), Promise.allSettled(this.timer_config_informe_inf_avance), Promise.allSettled(this.timer_pregunta_informe)]).then(vals => {
          this.router.navigate(["/" + environment_1.environment.ruta_practicas]);
        });
      }
    });
  }
  tablaModalidad(id_config_practica, tipo_modalidad, lista_cant) {
    for (let i = 0; i < Object.keys(lista_cant).length; i++) {
      let prom = new Promise((resolve, reject) => {
        let respuesta = {};
        this.serviceComplete.crearModalidad(id_config_practica, tipo_modalidad, Number(Object.values(lista_cant[i])[0])).subscribe({
          next: data => {
            respuesta = {
              ...respuesta,
              ...data
            };
          },
          error: error => {
            reject(false);
            this._snackBar.open("Error al guardar modalidad", "Cerrar", {
              duration: 3500,
              panelClass: ['red-snackbar']
            });
            console.log("Error al guardar modalidad", error);
          },
          complete: () => {
            console.log(i);
            console.log("Modalidad guardada exitosamente");
            resolve(true);
          }
        });
      });
      this.timer_modalidades.push(prom);
    }
  }
  actualizarTablaModalidad(id_config_practica, tipo_modalidad, lista_cant) {
    let respuesta = {};
    for (let i = 0; i < Object.keys(lista_cant).length; i++) {
      this.serviceComplete.actualizarModalidad(id_config_practica, tipo_modalidad, Number(Object.values(lista_cant[i])[0])).subscribe({
        next: data => {
          respuesta = {
            ...respuesta,
            ...data
          };
        },
        error: error => {
          this._snackBar.open("Error al guardar modalidad", "Cerrar", {
            duration: 3500,
            panelClass: ['red-snackbar']
          });
          console.log("Error al guardar modalidad", error);
        },
        complete: () => {
          this._snackBar.open("Modalidad guardada exitosamente", "Cerrar", {
            duration: 3500,
            panelClass: ['green-snackbar']
          });
          console.log("Modalidad guardada exitosamente");
        }
      });
    }
  }
  crearConfigInforme(id_config_practica, tipoInforme, archivo_o_encuesta = "", tipo_archivo = "", plantilla = "", file_plantilla = new File([], "")) {
    let prom = new Promise((resolve, reject) => {
      let respuesta = {};
      this.serviceComplete.crearConfigInforme(id_config_practica, tipoInforme, archivo_o_encuesta, tipo_archivo, plantilla, file_plantilla).subscribe({
        next: data => {
          respuesta = {
            ...respuesta,
            ...data
          };
        },
        error: error => {
          reject(false);
          this._snackBar.open("Error al guardar configuracion de informe", "Cerrar", {
            duration: 3500,
            panelClass: ['red-snackbar']
          });
          console.log("Error al guardar configuracion de informe", error);
        },
        complete: () => {
          console.log("BUSACR EL ID: ", respuesta);
          if (tipoInforme == "informe final" && this.tipoInformeFinal == "encuesta") {
            for (let i = 0; i < this.lista_preguntas_final.length; i++) {
              //console.log("lista pregunta final: ", this.lista_preguntas_final[i], "tipos preguntas final: ", this.tipos_preguntas_final[i], "lista opciones preguntas final: ", this.lista_opciones_preguntas_final[i]);
              this.crearPreguntaInforme(respuesta.body.id, this.lista_preguntas_final[i], this.tipos_preguntas_final[i], this.lista_opciones_preguntas_final[i]);
            }
          }
          if (tipoInforme == "informe avance") {
            for (let i = 0; i < this.lista_preguntas_avance.length; i++) {
              this.crearPreguntaInforme(respuesta.body.id, this.lista_preguntas_avance[i], this.tipos_preguntas_avance[i], this.lista_opciones_preguntas_avance[i]);
            }
          }
          resolve(true);
        }
      });
    });
    if (tipoInforme == "informe final") this.timer_config_informe_inf_final = [prom];else this.timer_config_informe_inf_avance = [prom];
  }
  crearPreguntaInforme(id_config_informe, pregunta, tipo_pregunta, opciones) {
    let prom = new Promise((resolve, reject) => {
      let respuesta = {};
      //console.log("pregunta: ", pregunta, "tipo_pregunta: ", tipo_pregunta, "opciones: ", opciones);
      this.serviceComplete.crearPreguntaInforme(id_config_informe, pregunta, tipo_pregunta, opciones).subscribe({
        next: data => {
          respuesta = {
            ...respuesta,
            ...data
          };
        },
        error: error => {
          reject(false);
          this._snackBar.open("Error al guardar pregunta de informe", "Cerrar", {
            duration: 3500,
            panelClass: ['red-snackbar']
          });
          console.log("Error al guardar pregunta de informe", error);
        },
        complete: () => {
          console.log("Pregunta de informe guardada exitosamente");
          resolve(true);
        }
      });
    });
    this.timer_pregunta_informe.push(prom);
  }
  crearPreguntaEncuestaFinal(id_config_practica, pregunta, tipo_pregunta, opciones) {
    let prom = new Promise((resolve, reject) => {
      let respuesta = {};
      this.serviceComplete.crearPreguntaEncuestaFinal(id_config_practica, pregunta, tipo_pregunta, opciones).subscribe({
        next: data => {
          respuesta = {
            ...respuesta,
            ...data
          };
        },
        error: error => {
          reject(false);
          this._snackBar.open("Error al guardar pregunta de encuesta", "Cerrar", {
            duration: 3500,
            panelClass: ['red-snackbar']
          });
          console.log("Error al guardar pregunta de encuesta", error);
        },
        complete: () => {
          console.log("Pregunta de encuesta guardada exitosamente");
          resolve(true);
        }
      });
    });
    this.timer_preguntas_encuesta_final.push(prom);
  }
  crearPreguntaSupervisor(id_config_practica, pregunta, tipo_pregunta, opciones, fija) {
    let prom = new Promise((resolve, reject) => {
      let respuesta = {};
      console.log("pregunta supervisor: ", pregunta);
      this.serviceComplete.crearPreguntaSupervisor(id_config_practica, pregunta, tipo_pregunta, opciones, fija).subscribe({
        next: data => {
          respuesta = {
            ...respuesta,
            ...data
          };
        },
        error: error => {
          reject(false);
          this._snackBar.open("Error al guardar pregunta de supervisor", "Cerrar", {
            duration: 3500,
            panelClass: ['red-snackbar']
          });
          console.log("Error al guardar pregunta de supervisor", error);
        },
        complete: () => {
          console.log("Pregunta de supervisor guardada exitosamente");
          resolve(true);
        }
      });
    });
    this.timer_pregunta_supervisor.push(prom);
  }
  crearSolicitudDocumento(id_config_practica, nombre, descripcion, tipo) {
    let prom = new Promise((resolve, reject) => {
      let respuesta = {};
      this.serviceComplete.crearSolicitudDocumento(id_config_practica, nombre, descripcion, tipo).subscribe({
        next: data => {
          respuesta = {
            ...respuesta,
            ...data
          };
        },
        error: error => {
          reject(false);
          this._snackBar.open("Error al guardar solicitud de documento", "Cerrar", {
            duration: 3500,
            panelClass: ['red-snackbar']
          });
          console.log("Error al guardar solicitud de documento", error);
        },
        complete: () => {
          console.log("Solicitud de documento guardada exitosamente");
          resolve(true);
        }
      });
    });
    this.timer_solicitud_documento.push(prom);
  }
  delConfigInforme(id_config_practica) {
    let respuesta = {};
    this.serviceComplete.delConfigInforme(id_config_practica).subscribe({
      next: data => {
        respuesta = {
          ...respuesta,
          ...data
        };
      },
      error: error => {
        this._snackBar.open("Error al eliminar configuracion de informe", "Cerrar", {
          duration: 3500,
          panelClass: ['red-snackbar']
        });
        console.log("Error al eliminar configuracion de informe", error);
      },
      complete: () => {
        this._snackBar.open("Configuracion de informe eliminada exitosamente", "Cerrar", {
          duration: 3500,
          panelClass: ['green-snackbar']
        });
        console.log("Configuracion de informe eliminada exitosamente");
      }
    });
  }
  delModalidad(id_config_practica) {
    let respuesta = {};
    this.serviceComplete.delModalidad(id_config_practica).subscribe({
      next: data => {
        respuesta = {
          ...respuesta,
          ...data
        };
      },
      error: error => {
        this._snackBar.open("Error al eliminar modalidad", "Cerrar", {
          duration: 3500,
          panelClass: ['red-snackbar']
        });
        console.log("Error al eliminar modalidad", error);
      },
      complete: () => {
        this._snackBar.open("modalidad eliminada exitosamente", "Cerrar", {
          duration: 3500,
          panelClass: ['green-snackbar']
        });
        console.log("modalidad eliminada exitosamente");
      }
    });
  }
  delPreguntaInforme(id_config_informe) {
    let respuesta = {};
    this.serviceComplete.delPreguntaInforme(id_config_informe).subscribe({
      next: data => {
        respuesta = {
          ...respuesta,
          ...data
        };
      },
      error: error => {
        this._snackBar.open("Error al eliminar pregunta de informe", "Cerrar", {
          duration: 3500,
          panelClass: ['red-snackbar']
        });
        console.log("Error al eliminar pregunta de informe", error);
      },
      complete: () => {
        console.log("Pregunta de informe eliminada exitosamente");
      }
    });
  }
  delPreguntaEncuestaFinal(id_config_practica) {
    let respuesta = {};
    this.serviceComplete.delPreguntaEncuestaFinal(id_config_practica).subscribe({
      next: data => {
        respuesta = {
          ...respuesta,
          ...data
        };
      },
      error: error => {
        this._snackBar.open("Error al eliminar pregunta de encuesta", "Cerrar", {
          duration: 3500,
          panelClass: ['red-snackbar']
        });
        console.log("Error al eliminar pregunta de encuesta", error);
      },
      complete: () => {
        console.log("Pregunta de encuesta eliminada exitosamente");
      }
    });
  }
  delPreguntaSupervisor(id_config_practica) {
    let respuesta = {};
    this.serviceComplete.delPreguntaSupervisor(id_config_practica).subscribe({
      next: data => {
        respuesta = {
          ...respuesta,
          ...data
        };
      },
      error: error => {
        this._snackBar.open("Error al eliminar pregunta de supervisor", "Cerrar", {
          duration: 3500,
          panelClass: ['red-snackbar']
        });
        console.log("Error al eliminar pregunta de supervisor", error);
      },
      complete: () => {
        console.log("Pregunta de supervisor eliminada exitosamente");
      }
    });
  }
  delSolicitudDocumento(id_config_practica) {
    let respuesta = {};
    this.serviceComplete.delSolicitudDocumento(id_config_practica).subscribe({
      next: data => {
        respuesta = {
          ...respuesta,
          ...data
        };
      },
      error: error => {
        this._snackBar.open("Error al eliminar solicitud de documento", "Cerrar", {
          duration: 3500,
          panelClass: ['red-snackbar']
        });
        console.log("Error al eliminar solicitud de documento", error);
      },
      complete: () => {
        console.log("Solicitud de documento eliminada exitosamente");
      }
    });
  }
  habilitarDocDirest(evnt) {
    this.hay_doc_direst = this.fg.value.hay_doc_direst;
  }
  recibirPlantillaInforme(data) {
    if (typeof data == "string") {
      this.key_plantilla = data;
    } else if (typeof data == "object") {
      this.archivo_plantilla = data;
    }
    console.log("key: ", this.key_plantilla, "archivo: ", this.archivo_plantilla);
  }
  static {
    this.ɵfac = function ConfiguracionPracticaComponent_Factory(__ngFactoryType__) {
      return new (__ngFactoryType__ || ConfiguracionPracticaComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(common_1.DOCUMENT), i0.ɵɵdirectiveInject(i2.BarraLateralService), i0.ɵɵdirectiveInject(i3.MatSnackBar), i0.ɵɵdirectiveInject(i4.ActivatedRoute), i0.ɵɵdirectiveInject(i5.ConfigService), i0.ɵɵdirectiveInject(i4.Router), i0.ɵɵdirectiveInject(i6.EdicionService));
    };
  }
  static {
    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({
      type: ConfiguracionPracticaComponent,
      selectors: [["app-configuracion-practica"]],
      decls: 20,
      vars: 9,
      consts: [["editandoExistente", ""], ["editandoAntiguaSinPlantilla", ""], ["id", "wrapper"], ["id", "content-wrapper", 1, "d-flex", "flex-column"], ["id", "content"], ["id", "content", 1, "main-content"], [1, "container-fluid"], ["class", "card shadow", 4, "ngIf"], [3, "mandarDatosMigrar", "migrarLegal"], [1, "scroll-to-top", "rounded", 3, "click"], [1, "fas", "fa-angle-up"], [1, "card", "shadow"], [1, "card-body", "text-center"], [1, "h3", "mb-3", "font-weight-bold", "text-gray-800", "text-center"], ["class", "formulario", 3, "formGroup", "ngSubmit", 4, "ngIf"], [1, "formulario", 3, "ngSubmit", "formGroup"], ["class", "alert alert-warning", 4, "ngIf"], ["type", "text", "formControlName", "nombrePractica", 1, "form-control", "text-center", "input-center"], ["type", "checkbox", "formControlName", "horas", 3, "change"], ["type", "checkbox", "formControlName", "meses", 3, "change"], [4, "ngIf"], [1, "form-check", "form-check-inline"], ["type", "radio", "name", "frecuenciaInformes", "id", "informeDiario", "value", "diario", "formControlName", "frecuenciaInformes", 1, "form-check-input"], ["for", "informeDiario", 1, "form-check-label"], ["type", "radio", "name", "frecuenciaInformes", "id", "infomreSemanal", "value", "semanal", "formControlName", "frecuenciaInformes", 1, "form-check-input"], ["for", "infomreSemanal", 1, "form-check-label"], ["type", "radio", "name", "frecuenciaInformes", "id", "informeMensual", "value", "mensual", "formControlName", "frecuenciaInformes", 1, "form-check-input"], ["for", "informeMensual", 1, "form-check-label"], ["type", "radio", "name", "frecuenciaInformes", "id", "sinAvance", "value", "sinAvance", "formControlName", "frecuenciaInformes", 1, "form-check-input"], ["for", "sinAvance", 1, "form-check-label"], ["type", "radio", "name", "informeFinal", "id", "informeFinalSI", "value", "si", "formControlName", "informeFinal", 1, "form-check-input"], ["for", "informeFinalSI", 1, "form-check-label"], ["type", "radio", "name", "informeFinal", "id", "informeFinalNO", "value", "no", "formControlName", "informeFinal", 1, "form-check-input"], ["for", "informeFinalNO", 1, "form-check-label"], ["type", "checkbox", "formControlName", "hay_doc_direst", 3, "change"], ["type", "submit", 1, "btn", "btn-primary", "btn-user", "btn-md"], [1, "alert", "alert-warning"], [3, "dataSource"], ["formArrayName", "arregloHoras"], ["matColumnDef", "opcion_horas"], [4, "matHeaderCellDef"], [3, "formGroup", 4, "matCellDef"], ["matColumnDef", "eliminar"], [4, "matHeaderRowDef"], [4, "matRowDef", "matRowDefColumns"], [1, "button"], ["mat-raised-button", "", "type", "button", 3, "click", "ngStyle"], [3, "formGroup"], ["matInput", "", "placeholder", "Agregar opci\u00F3n de horas", "formControlName", "opcion_horas", "required", ""], ["type", "button", 1, "btn", "btn-secondary", 3, "click"], ["matSuffix", ""], ["formArrayName", "arregloMeses"], ["matColumnDef", "opcion_meses"], ["matInput", "", "placeholder", "Agregar opci\u00F3n de meses", "formControlName", "opcion_meses", "required", ""], [1, "mt-2"], ["type", "radio", "id", "informeFinalEncuesta", "value", "encuesta", "formControlName", "tipoInformeFinal", 1, "form-check-input"], ["for", "informeFinalEncuesta", 1, "form-check-label"], ["type", "radio", "id", "informeFinalArchivo", "value", "archivo", "formControlName", "tipoInformeFinal", 1, "form-check-input"], ["for", "informeFinalArchivo", 1, "form-check-label"], ["class", "pregunta", 4, "ngFor", "ngForOf"], [1, "row", "mt-5", "mb-3", "align-items-end"], [1, "col-4"], [1, "btn", "btn-primary", "btn-user", "btn-block", "btn-md", "col-2", 2, "margin-right", "20px", 3, "click"], [1, "btn", "btn-primary", "btn-user", "btn-block", "btn-md", "col-2", 3, "click"], [1, "pregunta"], ["class", "h5 mb-3 font-weight-bold text-gray-800 text-center", 4, "ngIf"], ["class", "form-check", 4, "ngIf"], [1, "h5", "mb-3", "font-weight-bold", "text-gray-800", "text-center"], ["cols", "30", "rows", "5", "placeholder", "Ingrese respuesta...", "disabled", "", 1, "form-control", "input-center", "text-area"], [1, "form-check"], [1, "row"], [1, "col-4", "d-flex", "justify-content-center"], [4, "ngFor", "ngForOf"], [3, "ngSubmit", 4, "ngIf"], ["class", "far fa-circle mr-1", 4, "ngIf"], ["class", "far fa-square mr-1", 4, "ngIf"], [1, "form-check-label"], [1, "far", "fa-circle", "mr-1"], [1, "far", "fa-square", "mr-1"], [3, "ngSubmit"], [1, "btn", "btn-secondary"], ["type", "text", "placeholder", "Ingresar Pregunta", "formControlName", "preguntaFORM", 1, "form-control", "input-center", 3, "ngModelChange", "ngModel"], ["name", "tipo", "id", "tipo", 1, "form-select", "form-select-sm", "mb-4", "input-center", 3, "change"], ["value", "0"], ["value", "1"], ["value", "2"], ["value", "3"], ["mat-raised-button", "", "type", "submit", 1, "btn-save", 3, "ngStyle"], ["formArrayName", "arregloOpcionesPreguntas"], ["matColumnDef", "opcion_pregunta"], ["matInput", "", "placeholder", "Escribir opci\u00F3n", "formControlName", "opcion_pregunta", "required", ""], ["cols", "30", "rows", "5", "placeholder", "Ingrese respuesta...", "disabled", "", 1, "form-control", "text-area", "input-center", 2, "width", "auto"], ["type", "checkbox", "formControlName", "opcion_pdf"], ["type", "checkbox", "formControlName", "opcion_word"], ["type", "radio", "name", "plantillaInformeFinal", "id", "plantillaInformeFinalSI", "value", "si", "formControlName", "plantillaInformeFinal", 1, "form-check-input"], ["for", "plantillaInformeFinalSI", 1, "form-check-label", "mr-2"], ["type", "radio", "name", "plantillaInformeFinal", "id", "plantillaInformeFinalNO", "value", "no", "formControlName", "plantillaInformeFinal", 1, "form-check-input"], ["for", "plantillaInformeFinalNO", 1, "form-check-label"], ["type", "submit", 1, "btn", "btn-primary", "btn-user", "btn-block", "btn-md", "col-2"], [4, "ngIf", "ngIfElse"], [3, "key_event", "file_plantilla_event"], ["type", "button", 1, "btn", "btn-primary", "btn-md", "mb-2"], ["target", "_blank", 2, "color", "white", 3, "href"], ["type", "text", "placeholder", "Nombre solicitud", "formControlName", "nombre_solicitud_documentos", 1, "form-control", "input-center"], ["rows", "3", "placeholder", "Descripci\u00F3n solicitud", "formControlName", "descripcion_solicitud_documentos", 1, "form-control", "input-center", "text-area"], ["for", "dropdown"], ["id", "dropdown", "placeholder", "Tipo documento", "formControlName", "tipo_solicitud_documentos", 1, "form-select", "input-center"], ["value", "pdf"], ["value", "jpg"], ["value", "xlsx"], ["value", "docx"], [1, "h5", "mb-3", "text-gray-800", "mx-auto", "w-50", "text-center"], ["class", "h5 mb-3 text-gray-800 mx-auto w-50 text-center", 4, "ngIf"], ["class", "pregunta", 4, "ngIf"], ["class", "far fa-circle", 4, "ngIf"], ["class", "far fa-square", 4, "ngIf"], [1, "far", "fa-circle"], [1, "far", "fa-square"], ["name", "tipo", "id", "tipo", 1, "form-select", "form-select-sm", "input-center", 3, "change"], [1, "card-body"], [1, "h4", "mb-3", "font-weight-bold", "text-gray-800", "text-center"], ["class", "btn btn-primary btn-user btn-block btn-md col-2", 3, "click", 4, "ngIf"], ["data-toggle", "modal", "data-target", "#migrarModal", "class", "btn btn-primary btn-user btn-block btn-md col-2", 4, "ngIf"], ["data-toggle", "modal", "data-target", "#migrarModal", 1, "btn", "btn-primary", "btn-user", "btn-block", "btn-md", "col-2"]],
      template: function ConfiguracionPracticaComponent_Template(rf, ctx) {
        if (rf & 1) {
          i0.ɵɵelementStart(0, "div", 2);
          i0.ɵɵelement(1, "app-barra-lateral-encargado");
          i0.ɵɵelementStart(2, "div", 3)(3, "div", 4);
          i0.ɵɵelement(4, "app-barra-superior");
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(5, "div", 3)(6, "div", 5)(7, "div", 6);
          i0.ɵɵtemplate(8, ConfiguracionPracticaComponent_div_8_Template, 5, 1, "div", 7)(9, ConfiguracionPracticaComponent_div_9_Template, 14, 2, "div", 7)(10, ConfiguracionPracticaComponent_div_10_Template, 14, 2, "div", 7)(11, ConfiguracionPracticaComponent_div_11_Template, 5, 1, "div", 7)(12, ConfiguracionPracticaComponent_div_12_Template, 13, 2, "div", 7)(13, ConfiguracionPracticaComponent_div_13_Template, 15, 2, "div", 7)(14, ConfiguracionPracticaComponent_div_14_Template, 15, 3, "div", 7)(15, ConfiguracionPracticaComponent_div_15_Template, 11, 2, "div", 7);
          i0.ɵɵelementEnd()()()()();
          i0.ɵɵelementStart(16, "app-migrar-modal", 8);
          i0.ɵɵlistener("mandarDatosMigrar", function ConfiguracionPracticaComponent_Template_app_migrar_modal_mandarDatosMigrar_16_listener() {
            return ctx.mandarDatos();
          });
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(17, "a", 9);
          i0.ɵɵlistener("click", function ConfiguracionPracticaComponent_Template_a_click_17_listener() {
            return ctx.scrollToTop();
          });
          i0.ɵɵelement(18, "i", 10);
          i0.ɵɵelementEnd();
          i0.ɵɵelement(19, "app-logout-modal");
        }
        if (rf & 2) {
          i0.ɵɵadvance(8);
          i0.ɵɵproperty("ngIf", ctx.estado == "configuracion_general");
          i0.ɵɵadvance();
          i0.ɵɵproperty("ngIf", ctx.estado == "informe_avance");
          i0.ɵɵadvance();
          i0.ɵɵproperty("ngIf", ctx.estado == "informe_final_encuesta");
          i0.ɵɵadvance();
          i0.ɵɵproperty("ngIf", ctx.estado == "informe_final_archivo");
          i0.ɵɵadvance();
          i0.ɵɵproperty("ngIf", ctx.estado == "solicitud_documentos");
          i0.ɵɵadvance();
          i0.ɵɵproperty("ngIf", ctx.estado == "encuesta_final");
          i0.ɵɵadvance();
          i0.ɵɵproperty("ngIf", ctx.estado == "preguntas_supervisor");
          i0.ɵɵadvance();
          i0.ɵɵproperty("ngIf", ctx.estado == "fin_configuracion");
          i0.ɵɵadvance();
          i0.ɵɵproperty("migrarLegal", ctx.migracion_legal);
        }
      },
      dependencies: [i7.NgForOf, i7.NgIf, i7.NgStyle, i8.MatButton, i9.MatInput, i10.MatFormField, i10.MatSuffix, i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.CheckboxControlValueAccessor, i1.SelectControlValueAccessor, i1.RadioControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.NgForm, i11.MatTable, i11.MatHeaderCellDef, i11.MatHeaderRowDef, i11.MatColumnDef, i11.MatCellDef, i11.MatRowDef, i11.MatHeaderCell, i11.MatCell, i11.MatHeaderRow, i11.MatRow, i1.FormGroupDirective, i1.FormControlName, i1.FormArrayName, i12.BarraSuperiorComponent, i13.LogoutModalComponent, i14.BarraLateralEncargadoComponent, i15.MigrarModalComponent, i16.SubirPlantillaInformeFinalComponent],
      styles: [".input-center[_ngcontent-%COMP%] {\n  width: auto;\n  margin: 0 auto;\n  margin-bottom: 5px;\n}\n\n.pregunta[_ngcontent-%COMP%] {\n  background-color: #f5f5f5;\n  padding: 10px;\n  border: 1px solid #e3e3e3;\n  margin: 10px;\n  margin-bottom: 10px;\n}\n\n.text-area[_ngcontent-%COMP%] {\n  height: 10%;\n  resize: none;\n  background-color: white;\n}\n\ntd[_ngcontent-%COMP%] {\n  text-align: center;\n}\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvdmlzdGFzL2NvbmZpZ3VyYWNpb24tcHJhY3RpY2EvY29uZmlndXJhY2lvbi1wcmFjdGljYS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLFdBQUE7RUFDQSxjQUFBO0VBQ0Esa0JBQUE7QUFDSjs7QUFFQTtFQUNJLHlCQUFBO0VBQ0EsYUFBQTtFQUNBLHlCQUFBO0VBQ0EsWUFBQTtFQUNBLG1CQUFBO0FBQ0o7O0FBRUE7RUFDSSxXQUFBO0VBQ0EsWUFBQTtFQUNBLHVCQUFBO0FBQ0o7O0FBRUE7RUFDSSxrQkFBQTtBQUNKIiwic291cmNlc0NvbnRlbnQiOlsiLmlucHV0LWNlbnRlciB7XG4gICAgd2lkdGg6IGF1dG87XG4gICAgbWFyZ2luOiAwIGF1dG87XG4gICAgbWFyZ2luLWJvdHRvbTogNXB4O1xufVxuXG4ucHJlZ3VudGEge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNmNWY1ZjU7XG4gICAgcGFkZGluZzogMTBweDtcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjZTNlM2UzO1xuICAgIG1hcmdpbjogMTBweDtcbiAgICBtYXJnaW4tYm90dG9tOiAxMHB4O1xufVxuXG4udGV4dC1hcmVhIHtcbiAgICBoZWlnaHQ6IDEwJTtcbiAgICByZXNpemU6IG5vbmU7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XG59XG5cbnRkIHtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59Il0sInNvdXJjZVJvb3QiOiIifQ== */"]
    });
  }
}
exports.ConfiguracionPracticaComponent = ConfiguracionPracticaComponent;

/***/ }),

/***/ 43475:
/*!*******************************************************************************!*\
  !*** ./src/app/vistas/confirmacion-usuario/confirmacion-usuario.component.ts ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.ConfirmacionUsuarioComponent = void 0;
const i0 = __webpack_require__(/*! @angular/core */ 37580);
const i1 = __webpack_require__(/*! @angular/router */ 95072);
const i2 = __webpack_require__(/*! ../../servicios/usuario/usuario.service */ 31446);
const i3 = __webpack_require__(/*! @angular/common */ 60316);
function ConfirmacionUsuarioComponent_div_8_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 10)(1, "div", 11);
    i0.ɵɵtext(2, " \u00A1Gracias por confirmar tu correo! ");
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(3, "div", 12);
    i0.ɵɵtext(4);
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(5, "div", 12)(6, "button", 13)(7, "a", 14);
    i0.ɵɵtext(8, "Iniciar sesi\u00F3n");
    i0.ɵɵelementEnd()()()();
  }
  if (rf & 2) {
    const ctx_r0 = i0.ɵɵnextContext();
    i0.ɵɵadvance(4);
    i0.ɵɵtextInterpolate1(" Ahora puedes iniciar sesi\u00F3n con el correo ", ctx_r0.usuario.correo, " ");
  }
}
function ConfirmacionUsuarioComponent_ng_template_9_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 10)(1, "div", 11);
    i0.ɵɵtext(2, " \u00A1Hubo un error al confirmar tu correo! ");
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(3, "div", 12);
    i0.ɵɵtext(4, " Por favor, intenta de nuevo ");
    i0.ɵɵelementEnd()();
  }
}
class ConfirmacionUsuarioComponent {
  constructor(activated_route, usuario_service) {
    this.usuario_service = usuario_service;
    this.correo_confirmado = false;
    this.usuario = {};
    let token = "";
    let iv = "";
    let response = {};
    //obtener token y iv de la url
    activated_route.queryParams.subscribe(params => {
      token = params['token'];
      iv = params['iv'];
    });
    //obtener usuario
    this.usuario_service.get_usuario_encriptado(token, iv).subscribe({
      next: data => {
        response = {
          ...response,
          ...data
        };
      },
      error: error => {
        console.log(error);
      },
      complete: () => {
        if (response) {
          this.correo_confirmado = true;
          this.usuario = response.body.userdata;
          console.log(this.usuario);
        }
      }
    });
  }
  static {
    this.ɵfac = function ConfirmacionUsuarioComponent_Factory(__ngFactoryType__) {
      return new (__ngFactoryType__ || ConfirmacionUsuarioComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.UsuarioService));
    };
  }
  static {
    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({
      type: ConfirmacionUsuarioComponent,
      selectors: [["app-confirmacion-usuario"]],
      decls: 11,
      vars: 2,
      consts: [["errorConfirmacion", ""], ["id", "wrapper"], ["id", "content-wrapper", 1, "d-flex", "flex-column"], ["id", "content", 1, "main-content"], [1, "container-fluid", 2, "height", "100vh"], [1, "row", "pt-5"], [1, "col-lg-2"], [1, "col-lg-8"], [1, "card", "border-left-primary", "shadow", "py-2"], ["class", "card-body", 4, "ngIf", "ngIfElse"], [1, "card-body"], [1, "h4", "mb-3", "font-weight-bold", "text-gray-800", "text-center"], [1, "h5", "mb-3", "text-gray-800", "text-center"], [1, "btn", "btn-primary", "btn-user"], ["href", "/", 2, "color", "white"]],
      template: function ConfirmacionUsuarioComponent_Template(rf, ctx) {
        if (rf & 1) {
          i0.ɵɵelementStart(0, "div", 1)(1, "div", 2)(2, "div", 3)(3, "div", 4)(4, "div", 5);
          i0.ɵɵelement(5, "div", 6);
          i0.ɵɵelementStart(6, "div", 7)(7, "div", 8);
          i0.ɵɵtemplate(8, ConfirmacionUsuarioComponent_div_8_Template, 9, 1, "div", 9)(9, ConfirmacionUsuarioComponent_ng_template_9_Template, 5, 0, "ng-template", null, 0, i0.ɵɵtemplateRefExtractor);
          i0.ɵɵelementEnd()()()()()()();
        }
        if (rf & 2) {
          const errorConfirmacion_r2 = i0.ɵɵreference(10);
          i0.ɵɵadvance(8);
          i0.ɵɵproperty("ngIf", ctx.correo_confirmado == true)("ngIfElse", errorConfirmacion_r2);
        }
      },
      dependencies: [i3.NgIf],
      styles: ["/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */"]
    });
  }
}
exports.ConfirmacionUsuarioComponent = ConfirmacionUsuarioComponent;

/***/ }),

/***/ 89779:
/*!*****************************************************************************************!*\
  !*** ./src/app/vistas/confirmar-inicio-practica/confirmar-inicio-practica.component.ts ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.ConfirmarInicioPracticaComponent = void 0;
const i0 = __webpack_require__(/*! @angular/core */ 37580);
const i1 = __webpack_require__(/*! @angular/router */ 95072);
const i2 = __webpack_require__(/*! src/app/servicios/supervisor/supervisor.service */ 40588);
const i3 = __webpack_require__(/*! @angular/common */ 60316);
function ConfirmarInicioPracticaComponent_div_8_div_1_Template(rf, ctx) {
  if (rf & 1) {
    const _r1 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "div")(1, "div", 13);
    i0.ɵɵtext(2, " \u00A1Bienvenido a Praxus! ");
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(3, "div", 14)(4, "div", 15);
    i0.ɵɵtext(5, "A continuaci\u00F3n se muestran datos ingresados por el estudiante:");
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(6, "div", 16);
    i0.ɵɵelement(7, "div", 17);
    i0.ɵɵelementStart(8, "div", 18)(9, "table", 19)(10, "tr")(11, "td", 20);
    i0.ɵɵtext(12, "Nombre del estudiante");
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(13, "td");
    i0.ɵɵtext(14);
    i0.ɵɵelementEnd()();
    i0.ɵɵelementStart(15, "tr")(16, "td", 20);
    i0.ɵɵtext(17, "Nombre del supervisor");
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(18, "td");
    i0.ɵɵtext(19);
    i0.ɵɵelementEnd()();
    i0.ɵɵelementStart(20, "tr")(21, "td", 20);
    i0.ɵɵtext(22, "Nombre de la empresa");
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(23, "td");
    i0.ɵɵtext(24);
    i0.ɵɵelementEnd()();
    i0.ɵɵelementStart(25, "tr")(26, "td", 20);
    i0.ɵɵtext(27, "Duraci\u00F3n de la pr\u00E1ctica");
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(28, "td");
    i0.ɵɵtext(29);
    i0.ɵɵelementEnd()()()();
    i0.ɵɵelement(30, "div", 17);
    i0.ɵɵelementEnd()();
    i0.ɵɵelementStart(31, "div", 21)(32, "div", 15);
    i0.ɵɵtext(33, "Si los datos son correctos, presione el bot\u00F3n \"Confirmar\" para dar inicio a su pr\u00E1ctica:");
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(34, "div", 16);
    i0.ɵɵelement(35, "div", 22);
    i0.ɵɵelementStart(36, "div", 17)(37, "button", 23);
    i0.ɵɵlistener("click", function ConfirmarInicioPracticaComponent_div_8_div_1_Template_button_click_37_listener() {
      i0.ɵɵrestoreView(_r1);
      const ctx_r1 = i0.ɵɵnextContext(2);
      return i0.ɵɵresetView(ctx_r1.confirmarInicioPractica());
    });
    i0.ɵɵtext(38, "Confirmar");
    i0.ɵɵelementEnd()();
    i0.ɵɵelement(39, "div", 22);
    i0.ɵɵelementEnd()()();
  }
  if (rf & 2) {
    const ctx_r1 = i0.ɵɵnextContext(2);
    i0.ɵɵadvance(14);
    i0.ɵɵtextInterpolate(ctx_r1.practica.estudiante.usuario.nombre);
    i0.ɵɵadvance(5);
    i0.ɵɵtextInterpolate(ctx_r1.practica.supervisor.nombre);
    i0.ɵɵadvance(5);
    i0.ɵɵtextInterpolate(ctx_r1.practica.empresa.nombre_empresa);
    i0.ɵɵadvance(5);
    i0.ɵɵtextInterpolate2("", ctx_r1.practica == null ? null : ctx_r1.practica.modalidad == null ? null : ctx_r1.practica.modalidad.cantidad_tiempo, "\u00A0", ctx_r1.practica == null ? null : ctx_r1.practica.modalidad == null ? null : ctx_r1.practica.modalidad.tipo_modalidad, "");
  }
}
function ConfirmarInicioPracticaComponent_div_8_ng_template_2_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 24);
    i0.ɵɵtext(1, " \u00A1Gracias por su respuesta! ");
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(2, "div", 25);
    i0.ɵɵtext(3);
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(4, "div", 26);
    i0.ɵɵtext(5, "Ya puede cerrar esta pesta\u00F1a.");
    i0.ɵɵelementEnd();
  }
  if (rf & 2) {
    const ctx_r1 = i0.ɵɵnextContext(2);
    i0.ɵɵadvance(3);
    i0.ɵɵtextInterpolate1("El estudiante ", ctx_r1.practica.estudiante.usuario.nombre, " ha comenzado su pr\u00E1ctica.");
  }
}
function ConfirmarInicioPracticaComponent_div_8_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 11);
    i0.ɵɵtemplate(1, ConfirmarInicioPracticaComponent_div_8_div_1_Template, 40, 5, "div", 12)(2, ConfirmarInicioPracticaComponent_div_8_ng_template_2_Template, 6, 1, "ng-template", null, 1, i0.ɵɵtemplateRefExtractor);
    i0.ɵɵelementEnd();
  }
  if (rf & 2) {
    const tarjetaAgradecimiento_r3 = i0.ɵɵreference(3);
    const ctx_r1 = i0.ɵɵnextContext();
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngIf", !ctx_r1.mostrar_agradecimiento)("ngIfElse", tarjetaAgradecimiento_r3);
  }
}
function ConfirmarInicioPracticaComponent_ng_template_9_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 11)(1, "div", 13);
    i0.ɵɵtext(2, " \u00A1Hubo un error al confirmar esta pr\u00E1ctica! ");
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(3, "div", 14);
    i0.ɵɵtext(4, " Por favor, intenta de nuevo, de lo contrario, por favor contacta al servicio t\u00E9cnico. ");
    i0.ɵɵelementEnd()();
  }
}
class ConfirmarInicioPracticaComponent {
  constructor(activated_route, supervisor_service) {
    this.supervisor_service = supervisor_service;
    this.practica_confirmada = false;
    this.practica = {};
    this.mostrar_agradecimiento = false;
    let token = "";
    let iv = "";
    let response = {};
    //obtener token y iv de la url
    activated_route.queryParams.subscribe(params => {
      token = params['token'];
      iv = params['iv'];
    });
    //obtener usuario
    this.supervisor_service.getPracticaEncriptada(token, iv).subscribe({
      next: data => {
        response = {
          ...response,
          ...data
        };
      },
      error: error => {
        console.log(error);
      },
      complete: () => {
        if (response) {
          this.practica = response.body;
          this.practica_confirmada = true;
          if (this.practica.estado != "Esperando confirmacion") {
            this.mostrar_agradecimiento = true;
          }
        }
      }
    });
  }
  confirmarInicioPractica() {
    this.supervisor_service.confirmarInicioPractica(this.practica.id).subscribe({
      next: data => {
        console.log(data);
      },
      error: error => {
        console.log(error);
      },
      complete: () => {
        this.mostrar_agradecimiento = true;
      }
    });
  }
  static {
    this.ɵfac = function ConfirmarInicioPracticaComponent_Factory(__ngFactoryType__) {
      return new (__ngFactoryType__ || ConfirmarInicioPracticaComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.SupervisorService));
    };
  }
  static {
    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({
      type: ConfirmarInicioPracticaComponent,
      selectors: [["app-confirmar-inicio-practica"]],
      decls: 11,
      vars: 2,
      consts: [["errorConfirmacion", ""], ["tarjetaAgradecimiento", ""], ["id", "wrapper"], ["id", "content-wrapper", 1, "d-flex", "flex-column"], ["id", "content", 1, "main-content"], [1, "container-fluid", 2, "height", "100vh"], [1, "row", "pt-5"], [1, "col-lg-2"], [1, "col-lg-8"], [1, "card", "border-left-primary", "shadow", "py-2"], ["class", "card-body", 4, "ngIf", "ngIfElse"], [1, "card-body"], [4, "ngIf", "ngIfElse"], [1, "h4", "mb-3", "font-weight-bold", "text-gray-800", "text-center"], [1, "h5", "mb-3", "text-gray-800", "text-center"], [1, "text-center", "mb-5"], [1, "row"], [1, "col-2"], [1, "col-8"], [1, "table", "text-center"], [1, "font-weight-bold"], [1, "h5", "mb-3", "mt-2", "text-gray-800", "text-center"], [1, "col-5"], [1, "btn", "btn-success", "btn-lg", 3, "click"], [1, "h3", "mb-3", "font-weight-bold", "text-gray-800", "text-center"], [1, "text-center", "text-gray-800", "mb-3", "h5"], [1, "text-center", "text-gray-800", "mb-3", "h6"]],
      template: function ConfirmarInicioPracticaComponent_Template(rf, ctx) {
        if (rf & 1) {
          i0.ɵɵelementStart(0, "div", 2)(1, "div", 3)(2, "div", 4)(3, "div", 5)(4, "div", 6);
          i0.ɵɵelement(5, "div", 7);
          i0.ɵɵelementStart(6, "div", 8)(7, "div", 9);
          i0.ɵɵtemplate(8, ConfirmarInicioPracticaComponent_div_8_Template, 4, 2, "div", 10)(9, ConfirmarInicioPracticaComponent_ng_template_9_Template, 5, 0, "ng-template", null, 0, i0.ɵɵtemplateRefExtractor);
          i0.ɵɵelementEnd()()()()()()();
        }
        if (rf & 2) {
          const errorConfirmacion_r4 = i0.ɵɵreference(10);
          i0.ɵɵadvance(8);
          i0.ɵɵproperty("ngIf", ctx.practica_confirmada == true)("ngIfElse", errorConfirmacion_r4);
        }
      },
      dependencies: [i3.NgIf],
      styles: ["/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */"]
    });
  }
}
exports.ConfirmarInicioPracticaComponent = ConfirmarInicioPracticaComponent;

/***/ }),

/***/ 81431:
/*!***************************************************************!*\
  !*** ./src/app/vistas/cuestionario/cuestionario.component.ts ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.CuestionarioComponent = void 0;
const i0 = __webpack_require__(/*! @angular/core */ 37580);
const i1 = __webpack_require__(/*! @angular/router */ 95072);
const i2 = __webpack_require__(/*! @angular/common */ 60316);
const i3 = __webpack_require__(/*! @angular/material/button */ 84175);
const _c0 = () => ({
  "background-color": "#3f51b5",
  "color": "white"
});
class CuestionarioComponent {
  constructor(route) {
    this.route = route;
  }
  ngOnInit() {
    this.Id = this.route.snapshot.paramMap.get("id");
  }
  static {
    this.ɵfac = function CuestionarioComponent_Factory(__ngFactoryType__) {
      return new (__ngFactoryType__ || CuestionarioComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute));
    };
  }
  static {
    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({
      type: CuestionarioComponent,
      selectors: [["app-cuestionario"]],
      decls: 7,
      vars: 4,
      consts: [["mat-raised-button", "", 3, "ngStyle", "routerLink"]],
      template: function CuestionarioComponent_Template(rf, ctx) {
        if (rf & 1) {
          i0.ɵɵelementStart(0, "p");
          i0.ɵɵtext(1, "cuestionario works!");
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(2, "div")(3, "h1");
          i0.ɵɵtext(4, "Faltar\u00EDa Poner Ac\u00E1 Las Preguntas");
          i0.ɵɵelementEnd()();
          i0.ɵɵelementStart(5, "button", 0);
          i0.ɵɵtext(6, "Volver");
          i0.ɵɵelementEnd();
        }
        if (rf & 2) {
          i0.ɵɵadvance(5);
          i0.ɵɵpropertyInterpolate1("routerLink", "/alumno/", ctx.Id, "");
          i0.ɵɵproperty("ngStyle", i0.ɵɵpureFunction0(3, _c0));
        }
      },
      dependencies: [i2.NgStyle, i1.RouterLink, i3.MatButton],
      styles: ["/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */"]
    });
  }
}
exports.CuestionarioComponent = CuestionarioComponent;

/***/ }),

/***/ 62659:
/*!***********************************************************************!*\
  !*** ./src/app/vistas/detalle-practica/detalle-practica.component.ts ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.DetallePracticaComponent = void 0;
const rxjs_1 = __webpack_require__(/*! rxjs */ 51184);
const environment_1 = __webpack_require__(/*! src/environments/environment */ 45312);
const jspdf_1 = __webpack_require__(/*! jspdf */ 2752);
const i0 = __webpack_require__(/*! @angular/core */ 37580);
const i1 = __webpack_require__(/*! ../../servicios/fragmentos/fragmentos.service */ 93844);
const i2 = __webpack_require__(/*! src/app/servicios/encargado/detalle-practica.service */ 58471);
const i3 = __webpack_require__(/*! ../../servicios/encargado/decision.service */ 70182);
const i4 = __webpack_require__(/*! @angular/material/snack-bar */ 3347);
const i5 = __webpack_require__(/*! @angular/router */ 95072);
const i6 = __webpack_require__(/*! src/app/servicios/data_usuario/data-usuario.service */ 94160);
const i7 = __webpack_require__(/*! src/app/servicios/resumen/resumen.service */ 31070);
const i8 = __webpack_require__(/*! src/app/servicios/informe/informe.service */ 1142);
const i9 = __webpack_require__(/*! src/app/servicios/notificaciones/notificaciones.service */ 22004);
const i10 = __webpack_require__(/*! ../../servicios/plagio/plagio.service */ 5224);
const i11 = __webpack_require__(/*! @angular/common */ 60316);
const i12 = __webpack_require__(/*! ../../componentes/barra-superior/barra-superior.component */ 36370);
const i13 = __webpack_require__(/*! ../../componentes/logout-modal/logout-modal.component */ 15562);
const i14 = __webpack_require__(/*! ../../componentes/barra-lateral-encargado/barra-lateral-encargado.component */ 43560);
const i15 = __webpack_require__(/*! ../../componentes/boton-solicitar-archivo/boton-solicitar-archivo.component */ 62280);
const _c0 = ["pdfTable"];
const _c1 = ["pdfTable2"];
function DetallePracticaComponent_i_46_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelement(0, "i", 91);
  }
}
function DetallePracticaComponent_div_98_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 60);
    i0.ɵɵtext(1);
    i0.ɵɵpipe(2, "date");
    i0.ɵɵelementEnd();
  }
  if (rf & 2) {
    const ctx_r1 = i0.ɵɵnextContext();
    i0.ɵɵadvance();
    i0.ɵɵtextInterpolate1(" ", i0.ɵɵpipeBind2(2, 1, ctx_r1.practica == null ? null : ctx_r1.practica.fecha_termino, "dd/MM/yyyy"), " ");
  }
}
function DetallePracticaComponent_ng_template_99_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 60);
    i0.ɵɵtext(1, "Sin terminar");
    i0.ɵɵelementEnd();
  }
}
function DetallePracticaComponent_div_103_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 60);
    i0.ɵɵtext(1);
    i0.ɵɵelementEnd();
  }
  if (rf & 2) {
    const ctx_r1 = i0.ɵɵnextContext();
    i0.ɵɵadvance();
    i0.ɵɵtextInterpolate1(" ", ctx_r1.practica == null ? null : ctx_r1.practica.supervisor == null ? null : ctx_r1.practica.supervisor.correo, " ");
  }
}
function DetallePracticaComponent_div_104_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 92);
    i0.ɵɵelement(1, "i", 91);
    i0.ɵɵtext(2);
    i0.ɵɵelementEnd();
  }
  if (rf & 2) {
    const ctx_r1 = i0.ɵɵnextContext();
    i0.ɵɵadvance(2);
    i0.ɵɵtextInterpolate1(" ", ctx_r1.practica == null ? null : ctx_r1.practica.supervisor == null ? null : ctx_r1.practica.supervisor.correo, " ");
  }
}
function DetallePracticaComponent_i_108_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelement(0, "i", 93);
  }
}
function DetallePracticaComponent_i_109_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelement(0, "i", 94);
  }
}
function DetallePracticaComponent_div_110_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 95)(1, "p");
    i0.ɵɵtext(2, "Este estudiante tiene una versi\u00F3n anterior de la pr\u00E1ctica");
    i0.ɵɵelementEnd()();
  }
}
function DetallePracticaComponent_table_120_tr_12_button_8_Template(rf, ctx) {
  if (rf & 1) {
    const _r3 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "button", 99);
    i0.ɵɵlistener("click", function DetallePracticaComponent_table_120_tr_12_button_8_Template_button_click_0_listener() {
      i0.ɵɵrestoreView(_r3);
      const solicitud_r4 = i0.ɵɵnextContext().$implicit;
      const ctx_r1 = i0.ɵɵnextContext(2);
      return i0.ɵɵresetView(ctx_r1.descargar_documento(solicitud_r4.documentos[0].id, ctx_r1.doc_str));
    });
    i0.ɵɵtext(1, "Descargar");
    i0.ɵɵelementEnd();
  }
}
function DetallePracticaComponent_table_120_tr_12_ng_template_9_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "b");
    i0.ɵɵtext(1, "No subido a\u00FAn");
    i0.ɵɵelementEnd();
  }
}
function DetallePracticaComponent_table_120_tr_12_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "tr")(1, "td", 96);
    i0.ɵɵtext(2);
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(3, "td", 96);
    i0.ɵɵtext(4);
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(5, "td", 96);
    i0.ɵɵtext(6, "Normal");
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(7, "td", 96);
    i0.ɵɵtemplate(8, DetallePracticaComponent_table_120_tr_12_button_8_Template, 2, 0, "button", 98)(9, DetallePracticaComponent_table_120_tr_12_ng_template_9_Template, 2, 0, "ng-template", null, 9, i0.ɵɵtemplateRefExtractor);
    i0.ɵɵelementEnd()();
  }
  if (rf & 2) {
    const solicitud_r4 = ctx.$implicit;
    const no_doc_r5 = i0.ɵɵreference(10);
    i0.ɵɵadvance(2);
    i0.ɵɵtextInterpolate(solicitud_r4.nombre_solicitud);
    i0.ɵɵadvance(2);
    i0.ɵɵtextInterpolate(solicitud_r4.tipo_archivo);
    i0.ɵɵadvance(4);
    i0.ɵɵproperty("ngIf", solicitud_r4.documentos.length != 0)("ngIfElse", no_doc_r5);
  }
}
function DetallePracticaComponent_table_120_tr_13_button_8_Template(rf, ctx) {
  if (rf & 1) {
    const _r6 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "button", 99);
    i0.ɵɵlistener("click", function DetallePracticaComponent_table_120_tr_13_button_8_Template_button_click_0_listener() {
      i0.ɵɵrestoreView(_r6);
      const doc_extra_r7 = i0.ɵɵnextContext().$implicit;
      const ctx_r1 = i0.ɵɵnextContext(2);
      return i0.ɵɵresetView(ctx_r1.descargar_documento(doc_extra_r7.id, ctx_r1.doc_extra_str));
    });
    i0.ɵɵtext(1, "Descargar");
    i0.ɵɵelementEnd();
  }
}
function DetallePracticaComponent_table_120_tr_13_ng_template_9_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "b");
    i0.ɵɵtext(1, "No subido a\u00FAn");
    i0.ɵɵelementEnd();
  }
}
function DetallePracticaComponent_table_120_tr_13_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "tr")(1, "td", 96);
    i0.ɵɵtext(2);
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(3, "td", 96);
    i0.ɵɵtext(4);
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(5, "td", 96);
    i0.ɵɵtext(6, "Extra");
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(7, "td", 96);
    i0.ɵɵtemplate(8, DetallePracticaComponent_table_120_tr_13_button_8_Template, 2, 0, "button", 98)(9, DetallePracticaComponent_table_120_tr_13_ng_template_9_Template, 2, 0, "ng-template", null, 10, i0.ɵɵtemplateRefExtractor);
    i0.ɵɵelementEnd()();
  }
  if (rf & 2) {
    const doc_extra_r7 = ctx.$implicit;
    const no_doc_extra_r8 = i0.ɵɵreference(10);
    i0.ɵɵadvance(2);
    i0.ɵɵtextInterpolate(doc_extra_r7.nombre_solicitud);
    i0.ɵɵadvance(2);
    i0.ɵɵtextInterpolate(doc_extra_r7.tipo_archivo);
    i0.ɵɵadvance(4);
    i0.ɵɵproperty("ngIf", doc_extra_r7.key != null && doc_extra_r7.key != "")("ngIfElse", no_doc_extra_r8);
  }
}
function DetallePracticaComponent_table_120_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "table", 87)(1, "thead")(2, "tr")(3, "th", 96);
    i0.ɵɵtext(4, "Archivo");
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(5, "th", 96);
    i0.ɵɵtext(6, "Formato");
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(7, "th", 96);
    i0.ɵɵtext(8, "Tipo Solicitud");
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(9, "th", 96);
    i0.ɵɵtext(10, "Descargar");
    i0.ɵɵelementEnd()()();
    i0.ɵɵelementStart(11, "tbody");
    i0.ɵɵtemplate(12, DetallePracticaComponent_table_120_tr_12_Template, 11, 4, "tr", 97)(13, DetallePracticaComponent_table_120_tr_13_Template, 11, 4, "tr", 97);
    i0.ɵɵelementEnd()();
  }
  if (rf & 2) {
    const ctx_r1 = i0.ɵɵnextContext();
    i0.ɵɵadvance(12);
    i0.ɵɵproperty("ngForOf", ctx_r1.solicitudes_documentos);
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngForOf", ctx_r1.documento_extras);
  }
}
function DetallePracticaComponent_ng_template_121_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 100);
    i0.ɵɵtext(1, "No hay solicitudes de archivos asociadas a esta pr\u00E1ctica.");
    i0.ɵɵelementEnd();
  }
}
function DetallePracticaComponent_table_133_tr_8_td_4_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "td", 96)(1, "a", 103)(2, "button", 104);
    i0.ɵɵtext(3, " Ver Informe ");
    i0.ɵɵelementEnd()()();
  }
  if (rf & 2) {
    const informe_r9 = i0.ɵɵnextContext().$implicit;
    const ctx_r1 = i0.ɵɵnextContext(2);
    i0.ɵɵadvance();
    i0.ɵɵpropertyInterpolate2("href", "/informe/", ctx_r1.practica.id, "/", informe_r9.id, "", i0.ɵɵsanitizeUrl);
  }
}
function DetallePracticaComponent_table_133_tr_8_ng_template_5_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "td", 96);
    i0.ɵɵtext(1, " No subido a\u00FAn ");
    i0.ɵɵelementEnd();
  }
}
function DetallePracticaComponent_table_133_tr_8_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "tr")(1, "td", 96);
    i0.ɵɵtext(2);
    i0.ɵɵpipe(3, "date");
    i0.ɵɵelementEnd();
    i0.ɵɵtemplate(4, DetallePracticaComponent_table_133_tr_8_td_4_Template, 4, 3, "td", 102)(5, DetallePracticaComponent_table_133_tr_8_ng_template_5_Template, 2, 0, "ng-template", null, 11, i0.ɵɵtemplateRefExtractor);
    i0.ɵɵelementEnd();
  }
  if (rf & 2) {
    const informe_r9 = ctx.$implicit;
    const informeNoRespondido_r10 = i0.ɵɵreference(6);
    const ctx_r1 = i0.ɵɵnextContext(2);
    i0.ɵɵadvance(2);
    i0.ɵɵtextInterpolate1("", i0.ɵɵpipeBind2(3, 3, informe_r9.fecha, "dd/MM/yyyy"), " ");
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngIf", informe_r9.key != null && !ctx_r1.isDataEmpty(informe_r9.key))("ngIfElse", informeNoRespondido_r10);
  }
}
function DetallePracticaComponent_table_133_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "table", 87)(1, "thead")(2, "tr")(3, "th", 96);
    i0.ɵɵtext(4, "Fecha");
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(5, "th", 96);
    i0.ɵɵtext(6, "Ver Informe");
    i0.ɵɵelementEnd()()();
    i0.ɵɵelementStart(7, "tbody", 101);
    i0.ɵɵtemplate(8, DetallePracticaComponent_table_133_tr_8_Template, 7, 6, "tr", 97);
    i0.ɵɵelementEnd()();
  }
  if (rf & 2) {
    const ctx_r1 = i0.ɵɵnextContext();
    i0.ɵɵadvance(8);
    i0.ɵɵproperty("ngForOf", ctx_r1.informes);
  }
}
function DetallePracticaComponent_ng_template_134_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 100);
    i0.ɵɵtext(1, "No hay informes de avances asociados a esta pr\u00E1ctica.");
    i0.ɵɵelementEnd();
  }
}
function DetallePracticaComponent_div_143_div_3_button_1_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "button", 108)(1, "a", 109);
    i0.ɵɵtext(2, " Descargar Informe del Alumno ");
    i0.ɵɵelementEnd()();
  }
  if (rf & 2) {
    const ctx_r1 = i0.ɵɵnextContext(3);
    i0.ɵɵadvance();
    i0.ɵɵproperty("href", ctx_r1.link_descarga_informe, i0.ɵɵsanitizeUrl);
  }
}
function DetallePracticaComponent_div_143_div_3_ng_template_2_button_0_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "button", 108)(1, "a", 111);
    i0.ɵɵtext(2, " Ver Encuesta de Informe Final ");
    i0.ɵɵelementEnd()();
  }
  if (rf & 2) {
    const ctx_r1 = i0.ɵɵnextContext(4);
    i0.ɵɵadvance();
    i0.ɵɵpropertyInterpolate2("href", "/informe/", ctx_r1.practica.id, "/", ctx_r1.informe_final.id, "", i0.ɵɵsanitizeUrl);
  }
}
function DetallePracticaComponent_div_143_div_3_ng_template_2_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵtemplate(0, DetallePracticaComponent_div_143_div_3_ng_template_2_button_0_Template, 3, 3, "button", 110);
  }
  if (rf & 2) {
    const ctx_r1 = i0.ɵɵnextContext(3);
    i0.ɵɵproperty("ngIf", ctx_r1.informe_final.config_informe.archivo_o_encuesta.toLowerCase() == "encuesta");
  }
}
function DetallePracticaComponent_div_143_div_3_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div");
    i0.ɵɵtemplate(1, DetallePracticaComponent_div_143_div_3_button_1_Template, 3, 1, "button", 107)(2, DetallePracticaComponent_div_143_div_3_ng_template_2_Template, 1, 1, "ng-template", null, 13, i0.ɵɵtemplateRefExtractor);
    i0.ɵɵelementEnd();
  }
  if (rf & 2) {
    const informeFinalCuestionario_r11 = i0.ɵɵreference(3);
    const ctx_r1 = i0.ɵɵnextContext(2);
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngIf", ctx_r1.informe_final.config_informe.archivo_o_encuesta.toLowerCase() == "archivo")("ngIfElse", informeFinalCuestionario_r11);
  }
}
function DetallePracticaComponent_div_143_ng_template_4_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 100);
    i0.ɵɵtext(1, "Informe final no subido a\u00FAn.");
    i0.ɵɵelementEnd();
  }
}
function DetallePracticaComponent_div_143_div_6_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 112)(1, "div", 113)(2, "button", 114)(3, "a", 109);
    i0.ɵɵtext(4, "Ver plantilla");
    i0.ɵɵelementEnd()()()();
  }
  if (rf & 2) {
    const ctx_r1 = i0.ɵɵnextContext(2);
    i0.ɵɵadvance(3);
    i0.ɵɵproperty("href", ctx_r1.link_descarga_plantilla, i0.ɵɵsanitizeUrl);
  }
}
function DetallePracticaComponent_div_143_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div")(1, "div", 29)(2, "div", 105);
    i0.ɵɵtemplate(3, DetallePracticaComponent_div_143_div_3_Template, 4, 2, "div", 76)(4, DetallePracticaComponent_div_143_ng_template_4_Template, 2, 0, "ng-template", null, 12, i0.ɵɵtemplateRefExtractor);
    i0.ɵɵelementEnd()();
    i0.ɵɵtemplate(6, DetallePracticaComponent_div_143_div_6_Template, 5, 1, "div", 106);
    i0.ɵɵelementEnd();
  }
  if (rf & 2) {
    const InformeFinalNoSubido_r12 = i0.ɵɵreference(5);
    const ctx_r1 = i0.ɵɵnextContext();
    i0.ɵɵadvance(3);
    i0.ɵɵproperty("ngIf", !ctx_r1.isDataEmpty(ctx_r1.informe_final.key))("ngIfElse", InformeFinalNoSubido_r12);
    i0.ɵɵadvance(3);
    i0.ɵɵproperty("ngIf", !ctx_r1.isDataEmpty(ctx_r1.informe_final.config_informe.plantilla) && ctx_r1.informe_final.config_informe.plantilla != "");
  }
}
function DetallePracticaComponent_ng_template_144_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 100);
    i0.ɵɵtext(1, "No se ha configurado informe final para este tipo de pr\u00E1ctica.");
    i0.ɵɵelementEnd();
  }
}
function DetallePracticaComponent_table_156_tr_8_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "tr")(1, "th", 96);
    i0.ɵɵtext(2);
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(3, "th", 115);
    i0.ɵɵtext(4);
    i0.ɵɵelementEnd()();
  }
  if (rf & 2) {
    const aptitud_r13 = ctx.$implicit;
    const j_r14 = ctx.index;
    const ctx_r1 = i0.ɵɵnextContext(2);
    i0.ɵɵadvance(2);
    i0.ɵɵtextInterpolate(aptitud_r13);
    i0.ɵɵadvance(2);
    i0.ɵɵtextInterpolate(ctx_r1.notas_aptitudes[0][j_r14]);
  }
}
function DetallePracticaComponent_table_156_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "table", 87)(1, "thead")(2, "tr")(3, "th", 96);
    i0.ɵɵtext(4, "Competencia");
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(5, "th", 115);
    i0.ɵɵtext(6, "Evaluaci\u00F3n");
    i0.ɵɵelementEnd()()();
    i0.ɵɵelementStart(7, "tbody", 101);
    i0.ɵɵtemplate(8, DetallePracticaComponent_table_156_tr_8_Template, 5, 2, "tr", 97);
    i0.ɵɵelementStart(9, "tr")(10, "th", 96);
    i0.ɵɵtext(11, "Promedio");
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(12, "th", 115);
    i0.ɵɵtext(13);
    i0.ɵɵelementEnd()()()();
  }
  if (rf & 2) {
    const ctx_r1 = i0.ɵɵnextContext();
    i0.ɵɵadvance(8);
    i0.ɵɵproperty("ngForOf", ctx_r1.aptitudes_practica[0]);
    i0.ɵɵadvance(5);
    i0.ɵɵtextInterpolate(ctx_r1.promedio);
  }
}
function DetallePracticaComponent_ng_template_157_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 100);
    i0.ɵɵtext(1, "El supervisor no ha evaluado esta pr\u00E1ctica. ");
    i0.ɵɵelementEnd();
  }
}
function DetallePracticaComponent_div_165_tr_13_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "tr")(1, "td", 118);
    i0.ɵɵtext(2, "El supervisor no ha hecho comentarios sobre esta pr\u00E1ctica.");
    i0.ɵɵelementEnd()();
  }
}
function DetallePracticaComponent_div_165_ng_template_14_tr_0_td_3_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "td", 119);
    i0.ɵɵtext(1);
    i0.ɵɵelementEnd();
  }
  if (rf & 2) {
    const resp_r15 = i0.ɵɵnextContext().$implicit;
    i0.ɵɵadvance();
    i0.ɵɵtextInterpolate1(" ", resp_r15[2], " ");
  }
}
function DetallePracticaComponent_div_165_ng_template_14_tr_0_ng_template_4_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "td", 119);
    i0.ɵɵtext(1);
    i0.ɵɵelementStart(2, "span", 122);
    i0.ɵɵtext(3);
    i0.ɵɵelementEnd();
    i0.ɵɵtext(4);
    i0.ɵɵelementEnd();
  }
  if (rf & 2) {
    const resp_r15 = i0.ɵɵnextContext().$implicit;
    i0.ɵɵadvance();
    i0.ɵɵtextInterpolate1(" ", resp_r15[2][0], " ");
    i0.ɵɵadvance(2);
    i0.ɵɵtextInterpolate1(" ", resp_r15[2][1], " ");
    i0.ɵɵadvance();
    i0.ɵɵtextInterpolate1(" ", resp_r15[2][2], " ");
  }
}
function DetallePracticaComponent_div_165_ng_template_14_tr_0_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "tr")(1, "td", 119);
    i0.ɵɵtext(2);
    i0.ɵɵelementEnd();
    i0.ɵɵtemplate(3, DetallePracticaComponent_div_165_ng_template_14_tr_0_td_3_Template, 2, 1, "td", 120)(4, DetallePracticaComponent_div_165_ng_template_14_tr_0_ng_template_4_Template, 5, 3, "ng-template", 121, 16, i0.ɵɵtemplateRefExtractor);
    i0.ɵɵelementEnd();
  }
  if (rf & 2) {
    const resp_r15 = ctx.$implicit;
    const textoSolo_r16 = i0.ɵɵreference(5);
    i0.ɵɵadvance(2);
    i0.ɵɵtextInterpolate1(" ", resp_r15[1], "");
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngIf", resp_r15[0])("ngIfElse", textoSolo_r16);
  }
}
function DetallePracticaComponent_div_165_ng_template_14_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵtemplate(0, DetallePracticaComponent_div_165_ng_template_14_tr_0_Template, 6, 3, "tr", 97);
  }
  if (rf & 2) {
    const ctx_r1 = i0.ɵɵnextContext(2);
    i0.ɵɵproperty("ngForOf", ctx_r1.respuestas_sup_parsed);
  }
}
function DetallePracticaComponent_div_165_td_23_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "td", 96);
    i0.ɵɵtext(1);
    i0.ɵɵelementEnd();
  }
  if (rf & 2) {
    const ctx_r1 = i0.ɵɵnextContext(2);
    i0.ɵɵadvance();
    i0.ɵɵtextInterpolate1(" ", ctx_r1.ev_encargado, " ");
  }
}
function DetallePracticaComponent_div_165_ng_template_24_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "td", 96);
    i0.ɵɵtext(1, "Alumno a\u00FAn no evaluado");
    i0.ɵɵelementEnd();
  }
}
function DetallePracticaComponent_div_165_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 38)(1, "div", 69)(2, "div", 70)(3, "h1", 116);
    i0.ɵɵtext(4, "Supervisor");
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(5, "table", 87)(6, "thead")(7, "tr")(8, "th", 96);
    i0.ɵɵtext(9, "Enunciado");
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(10, "th", 96);
    i0.ɵɵtext(11, "Respuesta");
    i0.ɵɵelementEnd()()();
    i0.ɵɵelementStart(12, "tbody");
    i0.ɵɵtemplate(13, DetallePracticaComponent_div_165_tr_13_Template, 3, 0, "tr", 76)(14, DetallePracticaComponent_div_165_ng_template_14_Template, 1, 1, "ng-template", null, 14, i0.ɵɵtemplateRefExtractor);
    i0.ɵɵelementEnd()();
    i0.ɵɵelementStart(16, "h1", 116);
    i0.ɵɵtext(17, "Encargado");
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(18, "table", 87)(19, "tbody")(20, "tr")(21, "td", 117);
    i0.ɵɵtext(22, "Evaluaci\u00F3n");
    i0.ɵɵelementEnd();
    i0.ɵɵtemplate(23, DetallePracticaComponent_div_165_td_23_Template, 2, 1, "td", 102)(24, DetallePracticaComponent_div_165_ng_template_24_Template, 2, 0, "ng-template", null, 15, i0.ɵɵtemplateRefExtractor);
    i0.ɵɵelementEnd()()()()()();
  }
  if (rf & 2) {
    const sin_respuestas_abiertas_r17 = i0.ɵɵreference(15);
    const sinNota_r18 = i0.ɵɵreference(25);
    const ctx_r1 = i0.ɵɵnextContext();
    i0.ɵɵadvance(13);
    i0.ɵɵproperty("ngIf", !ctx_r1.respuestas_sup_parsed || ctx_r1.respuestas_sup_parsed.length < 1)("ngIfElse", sin_respuestas_abiertas_r17);
    i0.ɵɵadvance(10);
    i0.ɵɵproperty("ngIf", ctx_r1.ev_encargado != -1)("ngIfElse", sinNota_r18);
  }
}
function DetallePracticaComponent_ng_template_166_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 123)(1, "div", 105)(2, "div", 124)(3, "span", 125);
    i0.ɵɵtext(4, "Loading...");
    i0.ɵɵelementEnd()()()();
  }
}
function DetallePracticaComponent_tr_186_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "tr")(1, "td");
    i0.ɵɵtext(2, " El resumen estar\u00E1 disponible cuando la pr\u00E1ctica haya sido terminada. ");
    i0.ɵɵelementEnd()();
  }
}
function DetallePracticaComponent_td_188_Template(rf, ctx) {
  if (rf & 1) {
    const _r19 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "td")(1, "button", 126);
    i0.ɵɵlistener("click", function DetallePracticaComponent_td_188_Template_button_click_1_listener() {
      i0.ɵɵrestoreView(_r19);
      const ctx_r1 = i0.ɵɵnextContext();
      return i0.ɵɵresetView(ctx_r1.generar_resumen());
    });
    i0.ɵɵtext(2, " Generar resumen ");
    i0.ɵɵelementEnd()();
  }
  if (rf & 2) {
    const ctx_r1 = i0.ɵɵnextContext();
    i0.ɵɵadvance();
    i0.ɵɵproperty("disabled", !ctx_r1.practica_terminada);
  }
}
function DetallePracticaComponent_ng_template_189_div_1_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div")(1, "div");
    i0.ɵɵtext(2, " No hay resumen disponible ");
    i0.ɵɵelementEnd()();
  }
}
function DetallePracticaComponent_ng_template_189_ng_template_2_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 128);
    i0.ɵɵtext(1);
    i0.ɵɵelementEnd();
  }
  if (rf & 2) {
    const ctx_r1 = i0.ɵɵnextContext(2);
    i0.ɵɵadvance();
    i0.ɵɵtextInterpolate1(" ", ctx_r1.practica.resumen.informe, " ");
  }
}
function DetallePracticaComponent_ng_template_189_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "td", 127);
    i0.ɵɵtemplate(1, DetallePracticaComponent_ng_template_189_div_1_Template, 3, 0, "div", 76)(2, DetallePracticaComponent_ng_template_189_ng_template_2_Template, 2, 1, "ng-template", null, 17, i0.ɵɵtemplateRefExtractor);
    i0.ɵɵelementEnd();
  }
  if (rf & 2) {
    const hay_resumen_alumno_r20 = i0.ɵɵreference(3);
    const ctx_r1 = i0.ɵɵnextContext();
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngIf", !ctx_r1.practica.resumen || !ctx_r1.practica.resumen.informe || ctx_r1.practica.resumen.informe == "")("ngIfElse", hay_resumen_alumno_r20);
  }
}
function DetallePracticaComponent_tr_199_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "tr")(1, "td");
    i0.ɵɵtext(2, " El resumen estar\u00E1 disponible cuando la pr\u00E1ctica haya sido terminada. ");
    i0.ɵɵelementEnd()();
  }
}
function DetallePracticaComponent_td_201_Template(rf, ctx) {
  if (rf & 1) {
    const _r21 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "td")(1, "button", 129);
    i0.ɵɵlistener("click", function DetallePracticaComponent_td_201_Template_button_click_1_listener() {
      i0.ɵɵrestoreView(_r21);
      const ctx_r1 = i0.ɵɵnextContext();
      return i0.ɵɵresetView(ctx_r1.generar_resumen());
    });
    i0.ɵɵtext(2, " Generar resumen ");
    i0.ɵɵelementEnd()();
  }
  if (rf & 2) {
    const ctx_r1 = i0.ɵɵnextContext();
    i0.ɵɵadvance();
    i0.ɵɵproperty("disabled", !ctx_r1.practica_terminada);
  }
}
function DetallePracticaComponent_ng_template_202_div_1_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div")(1, "div");
    i0.ɵɵtext(2, " No hay resumen disponible ");
    i0.ɵɵelementEnd()();
  }
}
function DetallePracticaComponent_ng_template_202_ng_template_2_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div");
    i0.ɵɵtext(1);
    i0.ɵɵelementEnd();
  }
  if (rf & 2) {
    const ctx_r1 = i0.ɵɵnextContext(2);
    i0.ɵɵadvance();
    i0.ɵɵtextInterpolate1(" ", ctx_r1.practica.resumen.supervisor, " ");
  }
}
function DetallePracticaComponent_ng_template_202_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "td", 130);
    i0.ɵɵtemplate(1, DetallePracticaComponent_ng_template_202_div_1_Template, 3, 0, "div", 76)(2, DetallePracticaComponent_ng_template_202_ng_template_2_Template, 2, 1, "ng-template", null, 18, i0.ɵɵtemplateRefExtractor);
    i0.ɵɵelementEnd();
  }
  if (rf & 2) {
    const hay_resumen_supervisor_r22 = i0.ɵɵreference(3);
    const ctx_r1 = i0.ɵɵnextContext();
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngIf", !ctx_r1.practica.resumen || !ctx_r1.practica.resumen.supervisor || ctx_r1.practica.resumen.supervisor == "")("ngIfElse", hay_resumen_supervisor_r22);
  }
}
class DetallePracticaComponent {
  constructor(fragmentosService, service, service2, _snackBar, route, service_obtener, service_resumen, service_informe, service_noti, plagioService) {
    this.fragmentosService = fragmentosService;
    this.service = service;
    this.service2 = service2;
    this._snackBar = _snackBar;
    this.route = route;
    this.service_obtener = service_obtener;
    this.service_resumen = service_resumen;
    this.service_informe = service_informe;
    this.service_noti = service_noti;
    this.plagioService = plagioService;
    this.dtOptions = {};
    this.dtTrigger = new rxjs_1.Subject();
    this.practica_terminada = false;
    this.practica = {};
    this.solicitudes_documentos = [];
    this.documento_extras = [];
    this.informes = [];
    this.informe_final = {};
    this.link_descarga_plantilla = "";
    this.link_descarga_informe = "";
    this.evaluaciones = [];
    this.respuestas_supervisor = {};
    this.data_supervisor_rdy = false;
    this.doc_str = "documento";
    this.doc_extra_str = "documento_extra";
    this.fragmentos_sup = [];
    this.respuestas_sup_parsed = [];
    this.hay_resumen = false;
    this.horas_totales = 0;
    this.preguntas_respuestas_informe = [];
    this.botones_habilitados = false;
    this.id_estudiante = -1;
    this.correo_estudiante = "";
    this.config_estudiante = "";
    this.preguntas = [];
    this.aptitudes_practica = [];
    this.notas_aptitudes = [];
    this.promedio = "";
    this.prom = -1;
    this.hay_respuesta = -1;
    this.ev_encargado = [];
    this.activada = true;
    this.correo_verificado = false;
    this.dtOptions = {
      language: {
        url: 'assets/localisation/es-es.json'
      },
      drawCallback: () => {
        //console.log(this.documentos);
      }
    };
    let respuesta = {};
    let id_practica = parseInt(this.route.snapshot.url[1].path); //obtener el id de práctica de la url
    this.id_practica = id_practica;
    if (!isNaN(id_practica)) {
      //====REQUEST para obtener la practica (con el estudiante, config_practica y otras tablas)====//
      this.service.obtener_practica(id_practica).subscribe({
        next: data => {
          respuesta = {
            ...respuesta,
            ...data
          };
        },
        error: error => {
          this.practica = [];
          this._snackBar.open("Error al solicitar datos de práctica", "Cerrar", {
            duration: 10000,
            panelClass: ['red-snackbar']
          });
        },
        complete: () => {
          this.practica = respuesta.body;
          if (this.practica.estado.toLowerCase() != "en curso") {
            this.practica_terminada = true;
          }
          this.check_resumen();
          this.activada = this.practica.modalidad.config_practica.activada;
          this.correo_verificado = this.practica.supervisor.es_correo_institucional;
          if (this.practica.ev_encargado == null) {
            this.ev_encargado = "-";
          } else {
            this.ev_encargado = this.practica.ev_encargado;
          }
          if (this.practica.estado == environment_1.environment.estado_practica.evaluada || this.practica.estado == environment_1.environment.estado_practica.aprobada || this.practica.estado == environment_1.environment.estado_practica.reprobada) {
            this.botones_habilitados = true;
          }
          this.practica.consistencia_nota = this.practica.consistencia_nota ? `${Math.round(100 * this.practica.consistencia_nota)}%` : "—";
          this.practica.consistencia_informe = this.practica.consistencia_informe ? `${Math.round(100 * this.practica.consistencia_informe)}%` : "—";
          //make request to get solicitudes documentos in /todos_docs_practica
          this.service.obtener_solicitudes_documentos(this.practica.id, this.practica.modalidad.config_practica.id).subscribe({
            next: data => {
              respuesta = {
                ...respuesta,
                ...data
              };
            },
            error: error => {
              this.solicitudes_documentos = [];
              this._snackBar.open("Error al solicitar solicitudes de documentos", "Cerrar", {
                duration: 10000,
                panelClass: ['red-snackbar']
              });
            },
            complete: () => {
              this.solicitudes_documentos = respuesta.body;
            }
          });
          this.documento_extras = this.practica.documento_extras;
          this.informes = this.practica.informes;
          // considerar como evaluaciones todas las respuestas que tengan un tipo_respuesta que sea un número
          // this.evaluaciones = this.practica.respuesta_supervisors.filter((respuesta_supervisor: any) => {
          //   return !isNaN(respuesta_supervisor.respuesta);
          // });
          this.preguntas = this.practica.respuesta_supervisors;
          for (var item of this.preguntas) {
            let temp = [];
            let nota_promedio = 0;
            let prom = 0;
            if (item.pregunta_supervisor != null) {
              if (item.pregunta_supervisor.tipo_respuesta == "evaluacion") {
                if (item.pregunta_supervisor.opciones.indexOf(";;") != -1) {
                  this.hay_respuesta = 1;
                  this.aptitudes_practica.push(item.pregunta_supervisor.opciones.split(";;"));
                  temp = item.respuesta.split(",");
                  for (var n of temp) {
                    nota_promedio += Number(n);
                    prom += 1;
                  }
                  this.notas_aptitudes.push(temp);
                  this.promedio = (nota_promedio / prom).toFixed(2);
                  break;
                }
              }
            }
          }
          // considerar como respuestas todas las que sean strings
          this.respuestas_supervisor = this.practica.respuesta_supervisors.filter(respuesta_supervisor => {
            return isNaN(respuesta_supervisor.respuesta);
          });
          for (let i = 0; i < this.respuestas_supervisor.length; i++) {
            if (this.respuestas_supervisor[i].pregunta_supervisor.tipo_respuesta != "abierta") {
              let opciones = this.respuestas_supervisor[i].pregunta_supervisor.opciones.split(";;");
              let respuestas = this.respuestas_supervisor[i].respuesta.split(",");
              let respuestas_traducidas = "";
              for (let j = 0; j < opciones.length; j++) {
                if (respuestas[j] == "1") {
                  respuestas_traducidas += opciones[j] + ", ";
                }
              }
              respuestas_traducidas = respuestas_traducidas.slice(0, -2);
              //console.log(respuestas_traducidas);
              this.respuestas_supervisor[i].respuesta = respuestas_traducidas;
            }
          }
          this.get_fragmentos_sup(id_practica);
          this.id_estudiante = this.practica.estudiante.usuario.id;
          this.correo_estudiante = this.practica.estudiante.usuario.correo;
          this.config_estudiante = this.practica.estudiante.usuario.config;
          for (let i = 0; i < this.informes.length; i++) {
            if (this.informes[i]?.config_informe.tipo_informe == "informe final") {
              console.log("informe final: ", this.informes[i]);
              this.informe_final = this.informes[i];
              if (this.informe_final.config_informe?.plantilla != null && this.informe_final.config_informe?.plantilla != "") {
                this.link_descarga_plantilla = "https://d2v9ocre132gvc.cloudfront.net/" + this.informe_final.config_informe.plantilla;
              }
              if (this.informe_final.key != null && Object.keys(this.informe_final.key).length > 0) {
                this.link_descarga_informe = "https://d2v9ocre132gvc.cloudfront.net/" + this.informe_final.key.filename;
              }
              // remove informe final from informes
              this.informes.splice(i, 1);
              break;
            }
            this.horas_totales += this.informes[i].horas_trabajadas;
          }
          if (this.practica.informes.length > 0) {
            // buscar si hay algun informe que haya sido respondido (su key es un objeto no vacío), obtener su indice dentro del arreglo
            let indice_informe_respondido = -1;
            for (let i = 0; i < this.practica.informes.length; i++) {
              if (this.practica.informes[i].key == null) continue;
              if (Object.keys(this.practica.informes[i].key).length > 0) {
                indice_informe_respondido = i;
                break;
              }
            }
            if (indice_informe_respondido != -1) {
              let key_informe_respondido = this.practica.informes[indice_informe_respondido].key;
              //console.log(key_informe_respondido)
              //obtener las respuestas de las preguntas del informe
              let lista_informes = Object.values(key_informe_respondido);
              //console.log(lista_informes)
              //obtener los ids de las preguntas del informe
              let keys = Object.keys(key_informe_respondido);
              //console.log(keys)
              let preguntas_informe = [];
              for (let i = 0; i < keys.length; i++) {
                this.service_informe.get_pregunta_informe(Number(keys[i])).subscribe({
                  next: data => {
                    respuesta = {
                      ...respuesta,
                      ...data
                    };
                  },
                  error: error => {
                    this._snackBar.open("Error al buscar configuracion de practica", "Cerrar", {
                      duration: 3000,
                      panelClass: ['red-snackbar']
                    });
                    console.log("Error al buscar configuracion de practica", error);
                  },
                  complete: () => {
                    preguntas_informe.push(respuesta.body);
                    if (i == keys.length - 1) {
                      //console.log(preguntas_informe)
                      //console.log(preguntas_informe.length)
                      //orednar preguntas informe
                      let preguntas_informe_ordenadas = [];
                      for (let id of keys) {
                        for (let pregunta of preguntas_informe) {
                          if (pregunta.id == id) {
                            preguntas_informe_ordenadas.push(pregunta.enunciado);
                          }
                        }
                      }
                      //console.log("preguntas informe ordenadas")
                      //console.log(preguntas_informe_ordenadas)
                      let preguntas_respuestas_informes_aux = [];
                      for (let i = 0; i < preguntas_informe_ordenadas.length; i++) {
                        preguntas_respuestas_informes_aux.push(preguntas_informe_ordenadas[i]);
                        preguntas_respuestas_informes_aux.push(lista_informes[i]);
                      }
                      //console.log("preguntas_respuestas_informes")
                      //console.log(preguntas_respuestas_informes_aux)
                      this.preguntas_respuestas_informe = preguntas_respuestas_informes_aux;
                    }
                  }
                });
              }
            }
            //console.log(preguntas_informe)
          }
        }
      }); // fin request para obtener la practica  
    }
  }
  get_fragmentos_sup(id_practica) {
    console.log("respuestas_supervisor:");
    console.log(this.respuestas_supervisor);
    this.respuestas_sup_parsed = this.respuestas_supervisor.filter(elem => {
      return elem.pregunta_supervisor.tipo_respuesta != "evaluacion";
    }).map(resp => {
      return [true, resp.pregunta_supervisor.enunciado, resp.respuesta];
    });
    this.data_supervisor_rdy = true;
    console.log("respuestas_sup_parsed");
    console.log(this.respuestas_sup_parsed);
    // let dataFrag: any = {};
    // this.fragmentosService.update_fragmentos_practica(id_practica).subscribe({
    //   next: (data: any) => {
    //     dataFrag = { ...dataFrag, ...data };
    //   },
    //   error: (err: any) => { },
    //   complete: () => {
    //     console.log("dataFrag: ");
    //     console.log(dataFrag);
    //     if (!dataFrag.body || !dataFrag.body.supervisor) return;
    //     this.fragmentos_sup = dataFrag.body.supervisor
    //     this.respuestas_sup_parsed = this.respuestas_supervisor.filter((elem: any) => {
    //       return elem.pregunta_supervisor.tipo_respuesta != "evaluacion"
    //     }).map((resp: any) => {
    //       // if (!(resp.id in this.fragmentos_sup)) {
    //       //   return [true, resp.pregunta_supervisor.enunciado, resp.respuesta]
    //       // } else if (this.fragmentos_sup[resp.id].length == 0) {
    //       //   return [true, resp.pregunta_supervisor.enunciado, resp.respuesta]
    //       // } else {
    //       //   let palabras = resp.respuesta.split(" ");
    //       //   return [
    //       //     false,
    //       //     resp.pregunta_supervisor.enunciado,
    //       //     [
    //       //       palabras.slice(0, this.fragmentos_sup[resp.id][0].fragmento[0]).join(" ").trim(),
    //       //       palabras.slice(this.fragmentos_sup[resp.id][0].fragmento[0], this.fragmentos_sup[resp.id][0].fragmento[1] + 1).join(" ").trim(),
    //       //       palabras.slice(this.fragmentos_sup[resp.id][0].fragmento[1] + 1, palabras.length).join(" ").trim()
    //       //     ]
    //       //   ]
    //       // }
    //     });
    //     this.data_supervisor_rdy = true;
    //   }
    // });
  }
  generar_resumen() {
    let bot_inf = document.getElementById("boton_informe");
    let bot_sup = document.getElementById("boton_supervisor");
    bot_inf.innerHTML = `
    <div class="spinner-border" role="status">
      <span class="sr-only">Loading...</span>
    </div>
    `;
    bot_sup.innerHTML = `
    <div class="spinner-border" role="status">
      <span class="sr-only">Loading...</span>
    </div>
    `;
    let data = {};
    if (this.practica.resumen && Object.keys(this.practica.resumen).length > 0) {
      this.hay_resumen = true;
      return;
    }
    this.service_resumen.get_informe_preguntas(this.practica.id).subscribe({
      next: _data => {
        data = {
          ...data,
          ..._data
        };
      },
      complete: () => {
        //console.log(data.body)
        if (!data.body) {
          this._snackBar.open("Error al solicitar resumen, por favor vuelva más tarde", "Cerrar", {
            panelClass: ['red-snackbar'],
            duration: 3000
          });
          return;
        }
        if (!data.body.informe) data.body.informe = "No hay información disponible.";
        if (!data.body.supervisor) data.body.supervisor = "No hay información disponible.";
        this.practica.resumen = data.body;
        this.hay_resumen = true;
      },
      error: error => {
        console.error(error);
        this._snackBar.open("Error al solicitar resumen, por favor vuelva más tarde", "Cerrar", {
          panelClass: ['red-snackbar'],
          duration: 3000
        });
      }
    });
  }
  /*
  downloadAsPDF(){
    console.log("generando pdf")
    let pdf = new jsPDF('l', 'pt', 'a3');
       const pdfTable = this.pdfTable2.nativeElement;
       pdf.html(this.pdfTable2.nativeElement, {
      callback: (doc) => {
        doc.save("resumen.pdf");
      }
    });
    //console.log(pdfTable.innerHTML)
    //var html = htmlToPdfmake(pdfTable.innerHTML);
       //const documentDefinition = { content: html };
    
    //let PDF_doc: any = { documentDefinition };
    
  }
  */
  generar_pdf_resumen() {
    let cantidad_paginas = 1;
    console.log("generando pdf");
    let pdf = new jspdf_1.default();
    //console.log(this.id_estudiante)
    pdf.setFontSize(20);
    //console.log(this.practica)
    pdf.text("Resumen " + this.practica.modalidad.config_practica.nombre, 15, 20);
    pdf.setFontSize(15);
    pdf.text(String(this.practica.estudiante.usuario.nombre), 15, 35);
    pdf.text("Resultado de práctica: " + this.practica.estado, 15, 45);
    pdf.text("Correo: " + this.practica.estudiante.usuario.correo, 15, 55);
    pdf.text("Empresa: " + this.practica.empresa.nombre_empresa, 15, 65);
    pdf.text("Supervisor: " + this.practica.supervisor.nombre, 15, 75);
    pdf.text("Correo supervisor: " + this.practica.supervisor.correo, 15, 85);
    //borrar desde caracter T en adelante de la fecha
    let fecha_inicio = this.practica.fecha_inicio.split("T")[0];
    let fecha_termino = this.practica.fecha_termino.split("T")[0];
    pdf.text("Fecha de inicio: " + fecha_inicio, 15, 95);
    pdf.text("Fecha de término: " + fecha_termino, 15, 105);
    //pdf.text("hola", 200, 20);
    pdf.text("Informes del alumno: ", 15, 120);
    pdf.setFontSize(13);
    //console.log(this.practica.informes[0])
    //let preguntas_informe[] = []
    //console.log(Object.values(this.practica.informes[0].key).length)
    //let keys = Object.keys(this.practica.informes[0].key)
    let linea_actual = 0;
    let continuar_desde = 130;
    //let respuesta: any = {}
    //let pregunta = ""
    //console.log(keys)
    //console.log(this.preguntas_respuestas_informe)
    for (let i = 0; i < this.preguntas_respuestas_informe.length; i++) {
      var palabras_informe = this.preguntas_respuestas_informe[i].split(" ");
      //console.log(palabras_informe)
      var lista_aux = [];
      var aux_string = "- ";
      for (let x = 0; x < palabras_informe.length; x++) {
        //console.log(aux_string)
        if (x % 10 == 0 && x != 0) {
          aux_string += palabras_informe[x] + " ";
          lista_aux.push(aux_string);
          aux_string = "";
        } else if (x == palabras_informe.length - 1) {
          aux_string += palabras_informe[x] + " ";
          lista_aux.push(aux_string);
        } else {
          aux_string += palabras_informe[x] + " ";
        }
      }
      for (let j = 0; j < lista_aux.length; j++) {
        if (cantidad_paginas == 1 && 130 + i * 5 + linea_actual * 10 > 260) {
          pdf.addPage();
          continuar_desde = 20;
          linea_actual = 0;
          cantidad_paginas += 1;
        } else if (cantidad_paginas > 1 && i * 5 + linea_actual * 10 > 260) {
          pdf.addPage();
          continuar_desde = 20;
          linea_actual = 0;
        }
        pdf.text(lista_aux[j], 15, continuar_desde + i * 5 + linea_actual * 10);
        linea_actual += 1;
      }
    }
    pdf.save("resumen.pdf");
    /*
     
    for (let i = 0; i < keys.length; i++) {
         //for (let i = 0; i < keys.length; i++) {
           //console.log("pregunta con id: ", keys[i])
      this.service_informe.get_pregunta_informe(Number(keys[i])).subscribe({
        next: (data: any) => {
          respuesta = { ...respuesta, ...data }
      },
      error: (error: any) => {
          this._snackBar.open("Error al buscar configuracion de practica", "Cerrar", {
          duration: 3000,
          panelClass: ['red-snackbar']
          });
          console.log("Error al buscar configuracion de practica", error);
      },
      complete: () => {
          console.log("enunciado: ", respuesta.body.enunciado)
          pregunta = respuesta.body.enunciado
      
        var palabras_pregunta = pregunta.split(" ")
        //var lista_aux_pregunta = []
             console.log(palabras_pregunta)
             
             var aux_string = "- "
        for(let p = 0; p<palabras_pregunta.length; p++){
          if (p%10 == 0 && p != 0){
            aux_string += (palabras_pregunta[p] + " ")
            lista_aux_pregunta.push(aux_string)
            aux_string = ""
            }
          else if(p == palabras_pregunta.length - 1){
            aux_string += (palabras_pregunta[p] + " ")
            lista_aux_pregunta.push(aux_string)
          }
          else{
            aux_string += (palabras_pregunta[p] + " ")
          }
        }
             for (let j = 0; j < lista_aux_pregunta.length; j++) {
          if (130 + i*5 + linea_actual*10 > 260){
            pdf.addPage()
            continuar_desde = 20
            linea_actual = 0
          }
          pdf.text(lista_aux_pregunta[j], 15, continuar_desde + i*5 + linea_actual*10);
          linea_actual += 1
        }
             
             // IMPRIMIER INFORME
             var informe = String(this.practica.informes[0].key[keys[i]])
        var palabras_informe = informe.split(" ")
        //var lista_cantidad_palabras = []
        //var cantidad_caracteres = 0
        //var cantidad_palabras = 0
        console.log(palabras_informe)
             var lista_aux = []
             var aux_string = "- "
        for (let x = 0; x < palabras_informe.length; x++) {
               //console.log(aux_string)
          if (x%10 == 0 && x != 0){
            aux_string += (palabras_informe[x] + " ")
            lista_aux.push(aux_string)
            aux_string = ""
          }
          else if(x == palabras_informe.length - 1){
            aux_string += (palabras_informe[x] + " ")
            lista_aux.push(aux_string)
          }
               else{
            aux_string += (palabras_informe[x] + " ")
          }
        }
             //console.log(lista_aux)
     
        for (let j = 0; j < lista_aux.length; j++) {
          if (130 + i*5 + linea_actual*10 > 260){
            pdf.addPage()
            continuar_desde = 20
            linea_actual = 0
          }
          pdf.text(lista_aux[j], 15, continuar_desde + i*5 + linea_actual*10);
          linea_actual += 1
        }
             if (i == keys.length - 1){
          pdf.save("resumen.pdf");
        }
           }
           });
         }
    //pdf.save("resumen.pdf");
    */
  }
  ngOnInit() {}
  check_resumen() {
    if (!this.practica.resumen) {
      this.hay_resumen = false;
      return;
    }
    if (Object.keys(this.practica.resumen).length == 2) {
      this.hay_resumen = true;
    } else if (Object.keys(this.practica.resumen).length == 1) {
      if (!this.practica.resumen.informe) {
        this.practica.resumen.informe = "No hay información disponible.";
      } else {
        this.practica.resumen.supervisor = "No hay información disponible.";
      }
      this.hay_resumen = true;
    } else {
      this.hay_resumen = false;
    }
  }
  rerender() {
    this.dtElement.dtInstance.then(dtInstance => {
      // Destroy the table first
      dtInstance.destroy();
      // Call the dtTrigger to rerender again
      this.dtTrigger.next(0);
    });
  }
  ngAfterViewInit() {
    this.dtTrigger.next(0);
  }
  ngOnDestroy() {
    // Do not forget to unsubscribe the event
    this.dtTrigger.unsubscribe();
  }
  isDataEmpty(data) {
    if (data == null || data == undefined) return true;
    return Object.keys(data).length === 0 && data.constructor === Object;
  }
  aprobar(id_usuario, id_estudiante, id_modalidad, aprobacion) {
    let respuesta = {};
    let mensaje = "";
    if (aprobacion == 1) {
      mensaje = "Felicidades, has aprobado esta práctica";
    } else {
      mensaje = "Desafortunadamente, has reprobado esta práctica";
    }
    this.service2.aprobar_practica(id_estudiante, id_modalidad, aprobacion).subscribe({
      next: data => {
        respuesta = {
          ...respuesta,
          ...data
        };
      },
      error: error => console.log(error),
      complete: () => {
        if (respuesta.status == 200) {
          this._snackBar.open("Práctica actualizada", "Cerrar", {
            panelClass: ['green-snackbar'],
            duration: 2000
          });
        } else {
          this._snackBar.open("Se ha producido un error", "Cerrar", {
            panelClass: ['red-snackbar']
          });
        }
        respuesta = {};
        let enlace = environment_1.environment.url_front + "/alumno/" + id_usuario;
        this.service_noti.postnotificacion(id_usuario, mensaje, this.correo_estudiante, this.config_estudiante, enlace).subscribe({
          next: data => {
            respuesta = {
              ...respuesta,
              ...data
            };
          },
          error: error => {
            console.log(error);
            return;
          },
          complete: () => {
            //console.log("Notificación enviada con éxito");
            window.location.reload();
          }
        });
        // setTimeout(() => {
        //   //window.location.reload();
        //   window.location.reload();
        // }
        //   , 2000);
      }
    });
  }
  descargar_documento(documento_id, solicitud_tipo) {
    // abrir nueva pestaña con url de descarga, que es url_backend (sacada desde el env) + /documentos/ + documento_key
    if (solicitud_tipo == "documento") {
      window.open(environment_1.environment.url_back + "/documento/download?id=" + documento_id, "_blank");
    } else {
      window.open(environment_1.environment.url_back + "/documento_extra/download?id=" + documento_id, "_blank");
    }
  }
  mostrar_informe(informe_id) {
    // abrir una ventana modal que muestre el texto del informe
    let informe = this.informes.find(informe => informe.id == informe_id);
    if (informe) {
      // abrir una ventana pequeña que muestre el texto del informe dentro de un textarea
      let ventana = window.open("", "_blank", "width=800,height=400");
      if (!ventana) {
        alert("Por favor, deshabilite el bloqueador de ventanas emergentes para este sitio");
      } else {
        ventana.document.write("<textarea style='width: 100%; height: 100%; resize: none; border: none;'>" + informe.key + "</textarea>");
      }
    }
  }
  static {
    this.ɵfac = function DetallePracticaComponent_Factory(__ngFactoryType__) {
      return new (__ngFactoryType__ || DetallePracticaComponent)(i0.ɵɵdirectiveInject(i1.FragmentosService), i0.ɵɵdirectiveInject(i2.DetallePracticaService), i0.ɵɵdirectiveInject(i3.SetDetallesAlumnoService), i0.ɵɵdirectiveInject(i4.MatSnackBar), i0.ɵɵdirectiveInject(i5.ActivatedRoute), i0.ɵɵdirectiveInject(i6.DataUsuarioService), i0.ɵɵdirectiveInject(i7.ResumenService), i0.ɵɵdirectiveInject(i8.InformeService), i0.ɵɵdirectiveInject(i9.NotificacionesService), i0.ɵɵdirectiveInject(i10.PlagioService));
    };
  }
  static {
    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({
      type: DetallePracticaComponent,
      selectors: [["app-detalle-practica"]],
      viewQuery: function DetallePracticaComponent_Query(rf, ctx) {
        if (rf & 1) {
          i0.ɵɵviewQuery(_c0, 5);
          i0.ɵɵviewQuery(_c1, 5);
        }
        if (rf & 2) {
          let _t;
          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.pdfTable = _t.first);
          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.pdfTable2 = _t.first);
        }
      },
      decls: 207,
      vars: 43,
      consts: [["pdfTable2", ""], ["nofecha", ""], ["noHaySolicitudes", ""], ["noHayInformes", ""], ["NoHayInformeFinal", ""], ["noHayRespuesta", ""], ["supervisor_data", ""], ["resumen1", ""], ["resumen2", ""], ["no_doc", ""], ["no_doc_extra", ""], ["informeNoRespondido", ""], ["InformeFinalNoSubido", ""], ["informeFinalCuestionario", ""], ["sin_respuestas_abiertas", ""], ["sinNota", ""], ["textoSolo", ""], ["hay_resumen_alumno", ""], ["hay_resumen_supervisor", ""], ["charset", "utf-8"], ["http-equiv", "X-UA-Compatible", "content", "IE=edge"], ["name", "viewport", "content", "width=device-width, initial-scale=1, shrink-to-fit=no"], ["name", "description", "content", ""], ["name", "author", "content", ""], ["id", "page-top"], ["id", "wrapper"], ["id", "content-wrapper", 1, "d-flex", "flex-column"], ["id", "content", 1, "main-content"], ["id", "pdfTable2", 1, "container-fluid"], [1, "row"], [1, "col-lg-9"], [1, "h3", "mb-2", "text-gray-800"], [1, "col-lg-1", "d-flex", "justify-content-end", "align-items-center"], ["type", "button", "onclick", "window.history.back();", 1, "btn", "btn-primary", "btn-md", "btn-block"], [1, "col-lg-2", "d-flex", "justify-content-end", "align-items-center"], ["type", "button", 1, "btn", "btn-primary", "btn-md", "btn-block", 3, "click"], [1, "col-xl-3", "col-md-6", "mb-4"], [1, "card", "border-left-primary", "shadow", "h-100", "py-2"], [1, "card-body"], [1, "row", "no-gutters", "align-items-center"], [1, "col", "mr-2"], [1, "text-xs", "font-weight-bold", "text-primary", "text-uppercase", "mb-1"], [1, "h5", "mb-0", "font-weight-bold", "text-gray-800"], [1, "col-auto"], [1, "card", "border-left-success", "shadow", "h-100", "py-2"], [1, "text-xs", "font-weight-bold", "text-success", "text-uppercase", "mb-1"], ["class", "fa-solid fa-triangle-exclamation", 4, "ngIf"], [1, "card", "border-left-warning", "shadow", "h-100", "py-2"], [1, "text-xs", "font-weight-bold", "text-warning", "text-uppercase", "mb-1"], [1, "card", "border-left-info", "shadow", "h-100", "py-2"], [1, "text-xs", "font-weight-bold", "text-info", "text-uppercase", "mb-1"], [1, "col-12", "col-lg-4", 2, "margin-bottom", "20px"], ["type", "button", 1, "btn", "btn-success", "btn-lg", "btn-block", 3, "click", "disabled"], ["type", "button", 1, "btn", "btn-secondary", "btn-lg", "btn-block", 3, "click", "disabled"], [3, "id_alumno", "correo_alumno", "configuraci\u00F3n_alumno", "id_practica"], [1, "col-lg-6"], [1, "card", "shadow", "mb-4"], ["href", "#collapseCardGeneral", "data-toggle", "collapse", "role", "button", "aria-expanded", "true", "aria-controls", "collapseCardGeneral", 1, "d-block", "card-header", "py-3"], [1, "m-0", "font-weight-bold", "text-primary"], ["id", "collapseCardGeneral", 1, "collapse", "show"], [1, "col-6"], ["class", "col-6", 4, "ngIf", "ngIfElse"], ["class", "col-6", 4, "ngIf"], ["class", "col-6 alert alert-warning", 4, "ngIf"], ["title", "Empresa verificada", "class", "fa-solid fa-check", 4, "ngIf"], ["title", "Empresa no verificada", "class", "fa-solid fa-times", 4, "ngIf"], ["class", "mt-3 mb-0 alert alert-warning", 4, "ngIf"], ["href", "#collapseCardArchivos", "data-toggle", "collapse", "role", "button", "aria-expanded", "true", "aria-controls", "collapseCardArchivos", 1, "d-block", "card-header", "py-3"], ["id", "collapseCardArchivos", 1, "collapse", "show"], [1, "overflow-auto"], [1, "table-responsive"], ["class", "table table-bordered hoverTable", "id", "dataTable", "width", "100%", "cellspacing", "0", 4, "ngIf", "ngIfElse"], ["href", "#collapseCardInformes", "data-toggle", "collapse", "role", "button", "aria-expanded", "true", "aria-controls", "collapseCardInformes", 1, "d-block", "card-header", "py-3"], ["id", "collapseCardInformes", 1, "collapse", "show"], ["href", "#collapseCardInformeFinal", "data-toggle", "collapse", "role", "button", "aria-expanded", "true", "aria-controls", "collapseCardInformeFinal", 1, "d-block", "card-header", "py-3"], ["id", "collapseCardInformeFinal", 1, "collapse", "show"], [4, "ngIf", "ngIfElse"], ["href", "#collapseCardEvaluacion", "data-toggle", "collapse", "role", "button", "aria-expanded", "true", "aria-controls", "collapseCardEvaluacion", 1, "d-block", "card-header", "py-3"], ["id", "collapseCardEvaluacion", 1, "collapse", "show"], ["href", "#collapseCardSupervisor", "data-toggle", "collapse", "role", "button", "aria-expanded", "true", "aria-controls", "collapseCardSupervisor", 1, "d-block", "card-header", "py-3"], ["id", "collapseCardSupervisor", 1, "collapse", "show"], ["class", "card-body", 4, "ngIf", "ngIfElse"], [1, "col-lg-12"], [1, "card", "shadow", "mb-4", 2, "max-height", "500px", "overflow", "auto"], ["href", "#collapseCardConsistencias", "data-toggle", "collapse", "role", "button", "aria-expanded", "true", "aria-controls", "collapseCardConsistencias", 1, "d-block", "card-header", "py-3"], ["id", "collapseCardConsistencias", 1, "collapse", "show"], [1, "col-xl-6"], ["id", "dataTable", "width", "100%", "cellspacing", "0", 1, "table", "table-bordered", "hoverTable"], [4, "ngIf"], ["href", "#page-top", 1, "scroll-to-top", "rounded"], [1, "fas", "fa-angle-up"], [1, "fa-solid", "fa-triangle-exclamation"], [1, "col-6", "alert", "alert-warning"], ["title", "Empresa verificada", 1, "fa-solid", "fa-check"], ["title", "Empresa no verificada", 1, "fa-solid", "fa-times"], [1, "mt-3", "mb-0", "alert", "alert-warning"], [1, "texto"], [4, "ngFor", "ngForOf"], ["class", "btn btn-primary btn-sm btn-block", 3, "click", 4, "ngIf", "ngIfElse"], [1, "btn", "btn-primary", "btn-sm", "btn-block", 3, "click"], [1, "text-center"], [2, "overflow", "hidden"], ["class", "texto", 4, "ngIf", "ngIfElse"], [1, "nostyle", 3, "href"], [1, "btn", "btn-primary", "btn-sm", "btn-block"], [1, "col-12", "text-center"], ["class", "row mt-4", 4, "ngIf"], ["class", "btn btn-primary btn-md", 4, "ngIf", "ngIfElse"], [1, "btn", "btn-primary", "btn-md"], ["target", "_blank", 2, "color", "white", 3, "href"], ["class", "btn btn-primary btn-md", 4, "ngIf"], [2, "color", "white", 3, "href"], [1, "row", "mt-4"], [1, "col-md-12", "text-center"], [1, "btn", "btn-md", "btn-primary"], [1, "numero"], [1, "text-gray-800"], [1, "font-weight-bold", "texto"], ["colspan", "2", 1, "texto"], [1, "texto", 2, "vertical-align", "middle"], ["class", "texto", "style", "vertical-align: middle;", 4, "ngIf", "ngIfElse"], [2, "vertical-align", "middle"], [1, "destacar", 2, "vertical-align", "middle"], [1, "row", "mb-2", "mt-2"], ["role", "status", 1, "spinner-border"], [1, "sr-only"], ["id", "boton_informe", "type", "button", 1, "btn", "btn-primary", "btn-lg", "btn-block", 3, "click", "disabled"], ["id", "resumen_informes"], [2, "max-height", "200px", "overflow", "auto"], ["id", "boton_supervisor", "type", "button", 1, "btn", "btn-primary", "btn-lg", "btn-block", 3, "click", "disabled"], ["id", "resumen_supervisor"]],
      template: function DetallePracticaComponent_Template(rf, ctx) {
        if (rf & 1) {
          const _r1 = i0.ɵɵgetCurrentView();
          i0.ɵɵelementStart(0, "head");
          i0.ɵɵelement(1, "meta", 19)(2, "meta", 20)(3, "meta", 21)(4, "meta", 22)(5, "meta", 23);
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(6, "body", 24)(7, "div", 25);
          i0.ɵɵelement(8, "app-barra-lateral-encargado");
          i0.ɵɵelementStart(9, "div", 26)(10, "div", 27);
          i0.ɵɵelement(11, "app-barra-superior");
          i0.ɵɵelementStart(12, "div", 28, 0)(14, "div", 29)(15, "div", 30)(16, "h1", 31);
          i0.ɵɵtext(17);
          i0.ɵɵelement(18, "br");
          i0.ɵɵtext(19);
          i0.ɵɵelementEnd()();
          i0.ɵɵelementStart(20, "div", 32)(21, "button", 33);
          i0.ɵɵtext(22, "Volver");
          i0.ɵɵelementEnd()();
          i0.ɵɵelementStart(23, "div", 34)(24, "button", 35);
          i0.ɵɵlistener("click", function DetallePracticaComponent_Template_button_click_24_listener() {
            i0.ɵɵrestoreView(_r1);
            return i0.ɵɵresetView(ctx.generar_pdf_resumen());
          });
          i0.ɵɵtext(25, "Descargar Resumen PDF");
          i0.ɵɵelementEnd()()();
          i0.ɵɵelement(26, "br");
          i0.ɵɵelementStart(27, "div", 29)(28, "div", 36)(29, "div", 37)(30, "div", 38)(31, "div", 39)(32, "div", 40)(33, "div", 41);
          i0.ɵɵtext(34, " Estado");
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(35, "div", 42);
          i0.ɵɵtext(36);
          i0.ɵɵelementEnd()();
          i0.ɵɵelement(37, "div", 43);
          i0.ɵɵelementEnd()()()();
          i0.ɵɵelementStart(38, "div", 36)(39, "div", 44)(40, "div", 38)(41, "div", 39)(42, "div", 40)(43, "div", 45);
          i0.ɵɵtext(44, " Empresa");
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(45, "div");
          i0.ɵɵtemplate(46, DetallePracticaComponent_i_46_Template, 1, 0, "i", 46);
          i0.ɵɵtext(47);
          i0.ɵɵelementEnd()();
          i0.ɵɵelement(48, "div", 43);
          i0.ɵɵelementEnd()()()();
          i0.ɵɵelementStart(49, "div", 36)(50, "div", 47)(51, "div", 38)(52, "div", 39)(53, "div", 40)(54, "div", 48);
          i0.ɵɵtext(55, " Supervisor");
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(56, "div", 42);
          i0.ɵɵtext(57);
          i0.ɵɵelementEnd()();
          i0.ɵɵelement(58, "div", 43);
          i0.ɵɵelementEnd()()()();
          i0.ɵɵelementStart(59, "div", 36)(60, "div", 49)(61, "div", 38)(62, "div", 39)(63, "div", 40)(64, "div", 50);
          i0.ɵɵtext(65, " Modalidad");
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(66, "div", 42);
          i0.ɵɵtext(67);
          i0.ɵɵelementEnd()();
          i0.ɵɵelement(68, "div", 43);
          i0.ɵɵelementEnd()()()()();
          i0.ɵɵelementStart(69, "div", 29)(70, "div", 51)(71, "button", 52);
          i0.ɵɵlistener("click", function DetallePracticaComponent_Template_button_click_71_listener() {
            i0.ɵɵrestoreView(_r1);
            return i0.ɵɵresetView(ctx.aprobar(ctx.practica == null ? null : ctx.practica.estudiante == null ? null : ctx.practica.estudiante.id_usuario, ctx.practica == null ? null : ctx.practica.estudiante == null ? null : ctx.practica.estudiante.id, ctx.practica == null ? null : ctx.practica.modalidad == null ? null : ctx.practica.modalidad.id, 1));
          });
          i0.ɵɵtext(72, " Aprobar ");
          i0.ɵɵelementEnd()();
          i0.ɵɵelementStart(73, "div", 51)(74, "button", 53);
          i0.ɵɵlistener("click", function DetallePracticaComponent_Template_button_click_74_listener() {
            i0.ɵɵrestoreView(_r1);
            return i0.ɵɵresetView(ctx.aprobar(ctx.practica == null ? null : ctx.practica.estudiante == null ? null : ctx.practica.estudiante.id_usuario, ctx.practica == null ? null : ctx.practica.estudiante == null ? null : ctx.practica.estudiante.id, ctx.practica == null ? null : ctx.practica.modalidad == null ? null : ctx.practica.modalidad.id, 0));
          });
          i0.ɵɵtext(75, " Reprobar ");
          i0.ɵɵelementEnd()();
          i0.ɵɵelementStart(76, "div", 51);
          i0.ɵɵelement(77, "app-boton-solicitar-archivo", 54);
          i0.ɵɵelementEnd()();
          i0.ɵɵelementStart(78, "div", 29)(79, "div", 55)(80, "div", 56)(81, "a", 57)(82, "h6", 58);
          i0.ɵɵtext(83, "Informaci\u00F3n General");
          i0.ɵɵelementEnd()();
          i0.ɵɵelementStart(84, "div", 59)(85, "div", 38)(86, "div", 29)(87, "div", 60);
          i0.ɵɵtext(88, " Correo Estudiante: ");
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(89, "div", 60);
          i0.ɵɵtext(90);
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(91, "div", 60);
          i0.ɵɵtext(92, " Fecha Inicio: ");
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(93, "div", 60);
          i0.ɵɵtext(94);
          i0.ɵɵpipe(95, "date");
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(96, "div", 60);
          i0.ɵɵtext(97, " Fecha Termino: ");
          i0.ɵɵelementEnd();
          i0.ɵɵtemplate(98, DetallePracticaComponent_div_98_Template, 3, 4, "div", 61)(99, DetallePracticaComponent_ng_template_99_Template, 2, 0, "ng-template", null, 1, i0.ɵɵtemplateRefExtractor);
          i0.ɵɵelementStart(101, "div", 60);
          i0.ɵɵtext(102, " Correo Supervisor: ");
          i0.ɵɵelementEnd();
          i0.ɵɵtemplate(103, DetallePracticaComponent_div_103_Template, 2, 1, "div", 62)(104, DetallePracticaComponent_div_104_Template, 3, 1, "div", 63);
          i0.ɵɵelementStart(105, "div", 60);
          i0.ɵɵtext(106, " Empresa verificada: ");
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(107, "div", 60);
          i0.ɵɵtemplate(108, DetallePracticaComponent_i_108_Template, 1, 0, "i", 64)(109, DetallePracticaComponent_i_109_Template, 1, 0, "i", 65);
          i0.ɵɵelementEnd();
          i0.ɵɵtemplate(110, DetallePracticaComponent_div_110_Template, 3, 0, "div", 66);
          i0.ɵɵelementEnd()()()()();
          i0.ɵɵelementStart(111, "div", 55)(112, "div", 56)(113, "a", 67)(114, "h6", 58);
          i0.ɵɵtext(115, "Solicitudes de Archivos");
          i0.ɵɵelementEnd()();
          i0.ɵɵelementStart(116, "div", 68)(117, "div", 38)(118, "div", 69)(119, "div", 70);
          i0.ɵɵtemplate(120, DetallePracticaComponent_table_120_Template, 14, 2, "table", 71)(121, DetallePracticaComponent_ng_template_121_Template, 2, 0, "ng-template", null, 2, i0.ɵɵtemplateRefExtractor);
          i0.ɵɵelementEnd()()()()()()();
          i0.ɵɵelementStart(123, "div", 29)(124, "div", 55)(125, "div", 56)(126, "a", 72)(127, "h6", 58);
          i0.ɵɵtext(128, "Informes de Avances");
          i0.ɵɵelementEnd()();
          i0.ɵɵelementStart(129, "div", 73)(130, "div", 38)(131, "div", 69)(132, "div", 70);
          i0.ɵɵtemplate(133, DetallePracticaComponent_table_133_Template, 9, 1, "table", 71)(134, DetallePracticaComponent_ng_template_134_Template, 2, 0, "ng-template", null, 3, i0.ɵɵtemplateRefExtractor);
          i0.ɵɵelementEnd()()()()()();
          i0.ɵɵelementStart(136, "div", 55)(137, "div", 56)(138, "a", 74)(139, "h6", 58);
          i0.ɵɵtext(140, "Informe Final");
          i0.ɵɵelementEnd()();
          i0.ɵɵelementStart(141, "div", 75)(142, "div", 38);
          i0.ɵɵtemplate(143, DetallePracticaComponent_div_143_Template, 7, 3, "div", 76)(144, DetallePracticaComponent_ng_template_144_Template, 2, 0, "ng-template", null, 4, i0.ɵɵtemplateRefExtractor);
          i0.ɵɵelementEnd()()()()();
          i0.ɵɵelementStart(146, "div", 29)(147, "div", 55)(148, "div", 56)(149, "a", 77)(150, "h6", 58);
          i0.ɵɵtext(151, "Evaluaci\u00F3n del Supervisor");
          i0.ɵɵelementEnd()();
          i0.ɵɵelementStart(152, "div", 78)(153, "div", 38)(154, "div", 69)(155, "div", 70);
          i0.ɵɵtemplate(156, DetallePracticaComponent_table_156_Template, 14, 2, "table", 71)(157, DetallePracticaComponent_ng_template_157_Template, 2, 0, "ng-template", null, 5, i0.ɵɵtemplateRefExtractor);
          i0.ɵɵelementEnd()()()()()();
          i0.ɵɵelementStart(159, "div", 55)(160, "div", 56)(161, "a", 79)(162, "h6", 58);
          i0.ɵɵtext(163, "Rese\u00F1as Generales");
          i0.ɵɵelementEnd()();
          i0.ɵɵelementStart(164, "div", 80);
          i0.ɵɵtemplate(165, DetallePracticaComponent_div_165_Template, 26, 4, "div", 81)(166, DetallePracticaComponent_ng_template_166_Template, 5, 0, "ng-template", null, 6, i0.ɵɵtemplateRefExtractor);
          i0.ɵɵelementEnd()()()();
          i0.ɵɵelementStart(168, "div", 29)(169, "div", 82)(170, "div", 83)(171, "a", 84)(172, "h6", 58);
          i0.ɵɵtext(173, "Consistencia de Informes");
          i0.ɵɵelementEnd()();
          i0.ɵɵelementStart(174, "div", 85)(175, "div", 38)(176, "div")(177, "div", 29)(178, "div", 86)(179, "div", 70)(180, "table", 87)(181, "thead")(182, "tr")(183, "th");
          i0.ɵɵtext(184, "Resumen de el/los informe/s del Alumno");
          i0.ɵɵelementEnd()()();
          i0.ɵɵelementStart(185, "tbody");
          i0.ɵɵtemplate(186, DetallePracticaComponent_tr_186_Template, 3, 0, "tr", 88);
          i0.ɵɵelementStart(187, "tr");
          i0.ɵɵtemplate(188, DetallePracticaComponent_td_188_Template, 3, 1, "td", 76)(189, DetallePracticaComponent_ng_template_189_Template, 4, 2, "ng-template", null, 7, i0.ɵɵtemplateRefExtractor);
          i0.ɵɵelementEnd()()()()();
          i0.ɵɵelementStart(191, "div", 86)(192, "div", 70)(193, "table", 87)(194, "thead")(195, "tr")(196, "th");
          i0.ɵɵtext(197, "Resumen del informe del supervisor");
          i0.ɵɵelementEnd()()();
          i0.ɵɵelementStart(198, "tbody");
          i0.ɵɵtemplate(199, DetallePracticaComponent_tr_199_Template, 3, 0, "tr", 88);
          i0.ɵɵelementStart(200, "tr");
          i0.ɵɵtemplate(201, DetallePracticaComponent_td_201_Template, 3, 1, "td", 76)(202, DetallePracticaComponent_ng_template_202_Template, 4, 2, "ng-template", null, 8, i0.ɵɵtemplateRefExtractor);
          i0.ɵɵelementEnd()()()()()()()()()()()()()()()();
          i0.ɵɵelementStart(204, "a", 89);
          i0.ɵɵelement(205, "i", 90);
          i0.ɵɵelementEnd();
          i0.ɵɵelement(206, "app-logout-modal");
          i0.ɵɵelementEnd();
        }
        if (rf & 2) {
          const nofecha_r23 = i0.ɵɵreference(100);
          const noHaySolicitudes_r24 = i0.ɵɵreference(122);
          const noHayInformes_r25 = i0.ɵɵreference(135);
          const NoHayInformeFinal_r26 = i0.ɵɵreference(145);
          const noHayRespuesta_r27 = i0.ɵɵreference(158);
          const supervisor_data_r28 = i0.ɵɵreference(167);
          const resumen1_r29 = i0.ɵɵreference(190);
          const resumen2_r30 = i0.ɵɵreference(203);
          i0.ɵɵadvance(17);
          i0.ɵɵtextInterpolate1("", ctx.practica == null ? null : ctx.practica.estudiante == null ? null : ctx.practica.estudiante.usuario.nombre, " ");
          i0.ɵɵadvance(2);
          i0.ɵɵtextInterpolate1(" ", ctx.practica == null ? null : ctx.practica.modalidad == null ? null : ctx.practica.modalidad.config_practica == null ? null : ctx.practica.modalidad.config_practica.nombre, "");
          i0.ɵɵadvance(17);
          i0.ɵɵtextInterpolate1(" ", ctx.practica == null ? null : ctx.practica.estado, " ");
          i0.ɵɵadvance(9);
          i0.ɵɵclassMap(!(ctx.practica == null ? null : ctx.practica.empresa == null ? null : ctx.practica.empresa.empresa_verificada) ? "alert alert-warning h5 mb-0 font-weight-bold text-gray-800" : "h5 mb-0 font-weight-bold text-gray-800");
          i0.ɵɵadvance();
          i0.ɵɵproperty("ngIf", !(ctx.practica == null ? null : ctx.practica.empresa == null ? null : ctx.practica.empresa.empresa_verificada));
          i0.ɵɵadvance();
          i0.ɵɵtextInterpolate1(" ", ctx.practica == null ? null : ctx.practica.empresa == null ? null : ctx.practica.empresa.nombre_empresa, " ");
          i0.ɵɵadvance(10);
          i0.ɵɵtextInterpolate(ctx.practica == null ? null : ctx.practica.supervisor == null ? null : ctx.practica.supervisor.nombre);
          i0.ɵɵadvance(10);
          i0.ɵɵtextInterpolate(ctx.practica == null ? null : ctx.practica.modalidad == null ? null : ctx.practica.modalidad.tipo_modalidad);
          i0.ɵɵadvance(4);
          i0.ɵɵproperty("disabled", !ctx.botones_habilitados);
          i0.ɵɵadvance(3);
          i0.ɵɵproperty("disabled", !ctx.botones_habilitados);
          i0.ɵɵadvance(3);
          i0.ɵɵproperty("id_alumno", ctx.id_estudiante)("correo_alumno", ctx.correo_estudiante)("configuraci\u00F3n_alumno", ctx.config_estudiante)("id_practica", ctx.practica.id);
          i0.ɵɵadvance(13);
          i0.ɵɵtextInterpolate1(" ", ctx.practica == null ? null : ctx.practica.estudiante == null ? null : ctx.practica.estudiante.usuario.correo, " ");
          i0.ɵɵadvance(4);
          i0.ɵɵtextInterpolate1(" ", i0.ɵɵpipeBind2(95, 40, ctx.practica == null ? null : ctx.practica.fecha_inicio, "dd/MM/yyyy"), " ");
          i0.ɵɵadvance(4);
          i0.ɵɵproperty("ngIf", ctx.practica.fecha_termino != null)("ngIfElse", nofecha_r23);
          i0.ɵɵadvance(5);
          i0.ɵɵproperty("ngIf", ctx.correo_verificado);
          i0.ɵɵadvance();
          i0.ɵɵproperty("ngIf", !ctx.correo_verificado);
          i0.ɵɵadvance(4);
          i0.ɵɵproperty("ngIf", ctx.practica == null ? null : ctx.practica.empresa == null ? null : ctx.practica.empresa.empresa_verificada);
          i0.ɵɵadvance();
          i0.ɵɵproperty("ngIf", !(ctx.practica == null ? null : ctx.practica.empresa == null ? null : ctx.practica.empresa.empresa_verificada));
          i0.ɵɵadvance();
          i0.ɵɵproperty("ngIf", !ctx.activada);
          i0.ɵɵadvance(10);
          i0.ɵɵproperty("ngIf", ctx.solicitudes_documentos.length > 0 || ctx.documento_extras.length > 0)("ngIfElse", noHaySolicitudes_r24);
          i0.ɵɵadvance(13);
          i0.ɵɵproperty("ngIf", ctx.informes.length > 0)("ngIfElse", noHayInformes_r25);
          i0.ɵɵadvance(10);
          i0.ɵɵproperty("ngIf", !ctx.isDataEmpty(ctx.informe_final))("ngIfElse", NoHayInformeFinal_r26);
          i0.ɵɵadvance(13);
          i0.ɵɵproperty("ngIf", ctx.hay_respuesta == 1)("ngIfElse", noHayRespuesta_r27);
          i0.ɵɵadvance(9);
          i0.ɵɵproperty("ngIf", ctx.data_supervisor_rdy)("ngIfElse", supervisor_data_r28);
          i0.ɵɵadvance(21);
          i0.ɵɵproperty("ngIf", !ctx.practica_terminada);
          i0.ɵɵadvance(2);
          i0.ɵɵproperty("ngIf", !ctx.hay_resumen)("ngIfElse", resumen1_r29);
          i0.ɵɵadvance(11);
          i0.ɵɵproperty("ngIf", !ctx.practica_terminada);
          i0.ɵɵadvance(2);
          i0.ɵɵproperty("ngIf", !ctx.hay_resumen)("ngIfElse", resumen2_r30);
        }
      },
      dependencies: [i11.NgForOf, i11.NgIf, i12.BarraSuperiorComponent, i13.LogoutModalComponent, i14.BarraLateralEncargadoComponent, i15.BotonSolicitarArchivoComponent, i11.DatePipe],
      styles: [".overflow-auto[_ngcontent-%COMP%] {\n    max-height: 200px;\n    font-size: medium;\n}\n\n.overflow-auto_consistencia[_ngcontent-%COMP%] {\n    max-height: 300px;\n    font-size: medium;\n}\n\n.m-0[_ngcontent-%COMP%] {\n    font-size: medium;\n}\n\na.nostyle[_ngcontent-%COMP%]:link {\n    text-decoration: inherit;\n    color: inherit;\n    cursor: auto;\n}\n\na.nostyle[_ngcontent-%COMP%]:visited {\n    text-decoration: inherit;\n    color: inherit;\n    cursor: auto;\n}\n\n.texto[_ngcontent-%COMP%] {\n    text-align: left;\n}\n\n.numero[_ngcontent-%COMP%] {\n    text-align: right;\n}\n\n.destacar[_ngcontent-%COMP%] {\n    background-color: #EBD539;\n    display: inline;\n}\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvdmlzdGFzL2RldGFsbGUtcHJhY3RpY2EvZGV0YWxsZS1wcmFjdGljYS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksaUJBQWlCO0lBQ2pCLGlCQUFpQjtBQUNyQjs7QUFFQTtJQUNJLGlCQUFpQjtJQUNqQixpQkFBaUI7QUFDckI7O0FBRUE7SUFDSSxpQkFBaUI7QUFDckI7O0FBRUE7SUFDSSx3QkFBd0I7SUFDeEIsY0FBYztJQUNkLFlBQVk7QUFDaEI7O0FBRUE7SUFDSSx3QkFBd0I7SUFDeEIsY0FBYztJQUNkLFlBQVk7QUFDaEI7O0FBRUE7SUFDSSxnQkFBZ0I7QUFDcEI7O0FBRUE7SUFDSSxpQkFBaUI7QUFDckI7O0FBRUE7SUFDSSx5QkFBeUI7SUFDekIsZUFBZTtBQUNuQiIsInNvdXJjZXNDb250ZW50IjpbIi5vdmVyZmxvdy1hdXRvIHtcbiAgICBtYXgtaGVpZ2h0OiAyMDBweDtcbiAgICBmb250LXNpemU6IG1lZGl1bTtcbn1cblxuLm92ZXJmbG93LWF1dG9fY29uc2lzdGVuY2lhIHtcbiAgICBtYXgtaGVpZ2h0OiAzMDBweDtcbiAgICBmb250LXNpemU6IG1lZGl1bTtcbn1cblxuLm0tMCB7XG4gICAgZm9udC1zaXplOiBtZWRpdW07XG59XG5cbmEubm9zdHlsZTpsaW5rIHtcbiAgICB0ZXh0LWRlY29yYXRpb246IGluaGVyaXQ7XG4gICAgY29sb3I6IGluaGVyaXQ7XG4gICAgY3Vyc29yOiBhdXRvO1xufVxuXG5hLm5vc3R5bGU6dmlzaXRlZCB7XG4gICAgdGV4dC1kZWNvcmF0aW9uOiBpbmhlcml0O1xuICAgIGNvbG9yOiBpbmhlcml0O1xuICAgIGN1cnNvcjogYXV0bztcbn1cblxuLnRleHRvIHtcbiAgICB0ZXh0LWFsaWduOiBsZWZ0O1xufVxuXG4ubnVtZXJvIHtcbiAgICB0ZXh0LWFsaWduOiByaWdodDtcbn1cblxuLmRlc3RhY2FyIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRUJENTM5O1xuICAgIGRpc3BsYXk6IGlubGluZTtcbn0iXSwic291cmNlUm9vdCI6IiJ9 */"]
    });
  }
}
exports.DetallePracticaComponent = DetallePracticaComponent;

/***/ }),

/***/ 76451:
/*!*****************************************************************!*\
  !*** ./src/app/vistas/documentacion/documentacion.component.ts ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.DocumentacionComponent = void 0;
const i0 = __webpack_require__(/*! @angular/core */ 37580);
const i1 = __webpack_require__(/*! src/app/servicios/documento_encargado/documentacion.service */ 39048);
const i2 = __webpack_require__(/*! @angular/common */ 60316);
const i3 = __webpack_require__(/*! ../../componentes/barra-superior/barra-superior.component */ 36370);
const i4 = __webpack_require__(/*! ../../componentes/logout-modal/logout-modal.component */ 15562);
const i5 = __webpack_require__(/*! ../../componentes/barra-lateral-alumno/barra-lateral-alumno.component */ 72756);
const i6 = __webpack_require__(/*! ../../componentes/barra-lateral-encargado/barra-lateral-encargado.component */ 43560);
const i7 = __webpack_require__(/*! ../../componentes/subir-documento-encargado/subir-documento-encargado.component */ 54452);
const i8 = __webpack_require__(/*! ../../componentes/editar-archivo-encargado/editar-archivo-encargado.component */ 41164);
function DocumentacionComponent_div_1_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div");
    i0.ɵɵelement(1, "app-barra-lateral-alumno");
    i0.ɵɵelementEnd();
  }
}
function DocumentacionComponent_ng_template_2_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelement(0, "app-barra-lateral-encargado");
  }
}
function DocumentacionComponent_div_14_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 16)(1, "div", 17)(2, "div", 18)(3, "div", 19)(4, "div", 20);
    i0.ɵɵelement(5, "div", 21);
    i0.ɵɵelementStart(6, "div", 22);
    i0.ɵɵtext(7, " No hay documentaci\u00F3n. ");
    i0.ɵɵelementEnd()();
    i0.ɵɵelementStart(8, "div", 23);
    i0.ɵɵelement(9, "i", 24);
    i0.ɵɵelementEnd()()()()();
  }
}
function DocumentacionComponent_div_16_app_editar_archivo_encargado_13_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelement(0, "app-editar-archivo-encargado", 32);
  }
  if (rf & 2) {
    const docu_r2 = i0.ɵɵnextContext().$implicit;
    const ctx_r2 = i0.ɵɵnextContext();
    i0.ɵɵproperty("id_carrera", ctx_r2.id_carrera)("id_encargado", ctx_r2.id_encargado)("Nombre", docu_r2.nombre)("Descripcion", docu_r2.descripcion)("id_archivo", docu_r2.id);
  }
}
function DocumentacionComponent_div_16_button_15_Template(rf, ctx) {
  if (rf & 1) {
    const _r4 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "button", 33);
    i0.ɵɵlistener("click", function DocumentacionComponent_div_16_button_15_Template_button_click_0_listener() {
      i0.ɵɵrestoreView(_r4);
      const ctx_r4 = i0.ɵɵnextContext();
      const docu_r2 = ctx_r4.$implicit;
      const indice_r6 = ctx_r4.index;
      const ctx_r2 = i0.ɵɵnextContext();
      return i0.ɵɵresetView(ctx_r2.eliminar(docu_r2.id, indice_r6));
    });
    i0.ɵɵtext(1, "Eliminar");
    i0.ɵɵelementEnd();
  }
}
function DocumentacionComponent_div_16_Template(rf, ctx) {
  if (rf & 1) {
    const _r1 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "div")(1, "div", 25)(2, "div", 26)(3, "h3", 27);
    i0.ɵɵtext(4);
    i0.ɵɵelementEnd()();
    i0.ɵɵelementStart(5, "div", 18)(6, "h4");
    i0.ɵɵtext(7);
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(8, "div", 6)(9, "div", 28)(10, "button", 29);
    i0.ɵɵlistener("click", function DocumentacionComponent_div_16_Template_button_click_10_listener() {
      const docu_r2 = i0.ɵɵrestoreView(_r1).$implicit;
      const ctx_r2 = i0.ɵɵnextContext();
      return i0.ɵɵresetView(ctx_r2.descargar_documento(docu_r2.key));
    });
    i0.ɵɵtext(11, "Descargar");
    i0.ɵɵelementEnd();
    i0.ɵɵtext(12, " \u00A0 ");
    i0.ɵɵtemplate(13, DocumentacionComponent_div_16_app_editar_archivo_encargado_13_Template, 1, 5, "app-editar-archivo-encargado", 30);
    i0.ɵɵtext(14, " \u00A0 ");
    i0.ɵɵtemplate(15, DocumentacionComponent_div_16_button_15_Template, 2, 0, "button", 31);
    i0.ɵɵelementEnd()()()()();
  }
  if (rf & 2) {
    const docu_r2 = ctx.$implicit;
    const ctx_r2 = i0.ɵɵnextContext();
    i0.ɵɵadvance(4);
    i0.ɵɵtextInterpolate(docu_r2 == null ? null : docu_r2.nombre);
    i0.ɵɵadvance(3);
    i0.ɵɵtextInterpolate(docu_r2.descripcion);
    i0.ɵɵadvance(6);
    i0.ɵɵproperty("ngIf", ctx_r2.esalumno == 0);
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngIf", ctx_r2.esalumno == 0);
  }
}
function DocumentacionComponent_div_17_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div");
    i0.ɵɵelement(1, "app-subir-documento-encargado", 34);
    i0.ɵɵelementEnd();
  }
  if (rf & 2) {
    const ctx_r2 = i0.ɵɵnextContext();
    i0.ɵɵadvance();
    i0.ɵɵproperty("id_carrera", ctx_r2.id_carrera)("id_encargado", ctx_r2.id_encargado);
  }
}
class DocumentacionComponent {
  constructor(service_docu) {
    this.service_docu = service_docu;
    this.bucketlink = "https://d2v9ocre132gvc.cloudfront.net/";
    this.esalumno = -1;
    this.usuario = {};
    this.documentos = [];
    this.id_carrera = -1;
    this.id_encargado = -1;
    this.usuario = JSON.parse(localStorage.getItem('auth-user') || '{}').userdata;
    if (this.usuario.es_estudiante == 1) {
      this.esalumno = 1;
      this.id_carrera = this.usuario.estudiante.id_carrera;
    } else {
      this.esalumno = 0;
      this.id_carrera = this.usuario.encargado.id_carrera;
      this.id_encargado = this.usuario.encargado.id;
    }
  }
  ngOnInit() {
    let respuesta = [];
    console.log("ESALUMNO=", this.esalumno);
    if (this.esalumno == 1) {
      this.service_docu.obtener_todas(this.id_carrera).subscribe({
        next: data => {
          respuesta = {
            ...respuesta,
            ...data
          };
        },
        error: error => {
          console.log(error);
        },
        complete: () => {
          this.documentos = respuesta.body;
          console.log(this.documentos);
        }
      });
    } else {
      this.service_docu.obtener_encargado(this.id_encargado).subscribe({
        next: data => {
          respuesta = {
            ...respuesta,
            ...data
          };
        },
        error: error => {
          console.log(error);
        },
        complete: () => {
          this.documentos = respuesta.body;
        }
      });
    }
  }
  eliminar(id, index) {
    let respuesta;
    this.service_docu.eliminar_documento(id).subscribe({
      next: data => {
        respuesta = {
          ...respuesta,
          ...data
        };
      },
      error: error => {
        console.log(error);
        return;
      },
      complete: () => {
        this.documentos.splice(index, 1);
      }
    });
  }
  descargar_documento(key) {
    console.log(this.bucketlink + key);
    // abrir nueva pestaña con url de descarga, que es url_backend (sacada desde el env) + /documentos/ + documento_key
    window.open(this.bucketlink + key);
  }
  static {
    this.ɵfac = function DocumentacionComponent_Factory(__ngFactoryType__) {
      return new (__ngFactoryType__ || DocumentacionComponent)(i0.ɵɵdirectiveInject(i1.DocumentacionService));
    };
  }
  static {
    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({
      type: DocumentacionComponent,
      selectors: [["app-documentacion"]],
      decls: 22,
      vars: 5,
      consts: [["elseblock", ""], ["id", "wrapper"], [4, "ngIf", "ngIfElse"], ["id", "content-wrapper", 1, "d-flex", "flex-column"], ["id", "content", 1, "main-content"], [1, "container-fluid"], [1, "row"], [1, "col-xl-10"], [1, "h3", "mb-2", "font-weight-bold", "text-gray-800"], [1, "mb-4"], ["class", "col-xl-3 col-md-6 mb-4", 4, "ngIf"], [1, "container"], [4, "ngFor", "ngForOf"], [4, "ngIf"], ["href", "#page-top", 1, "scroll-to-top", "rounded"], [1, "fas", "fa-angle-up"], [1, "col-xl-3", "col-md-6", "mb-4"], [1, "card", "shadow", "h-100", "py-2"], [1, "card-body"], [1, "row", "no-gutters", "align-items-center"], [1, "col", "mr-2"], [1, "text-xs", "font-weight-bold", "text-primary", "text-uppercase", "mb-1"], [1, "h5", "mb-0", "font-weight-bold", "text-gray-800"], [1, "col-auto"], [1, "fa-solid", "fa-note-sticky", "fa-2x", "text-gray-300"], [1, "card", "shadow", "mb-4"], [1, "card-header", "py-3"], [1, "m-0", "font-weight-bold", "text-primary"], [1, "col-6"], [1, "btn", "btn-success", 3, "click"], [3, "id_carrera", "id_encargado", "Nombre", "Descripcion", "id_archivo", 4, "ngIf"], ["class", "btn btn-secondary", 3, "click", 4, "ngIf"], [3, "id_carrera", "id_encargado", "Nombre", "Descripcion", "id_archivo"], [1, "btn", "btn-secondary", 3, "click"], [3, "id_carrera", "id_encargado"]],
      template: function DocumentacionComponent_Template(rf, ctx) {
        if (rf & 1) {
          i0.ɵɵelementStart(0, "div", 1);
          i0.ɵɵtemplate(1, DocumentacionComponent_div_1_Template, 2, 0, "div", 2)(2, DocumentacionComponent_ng_template_2_Template, 1, 0, "ng-template", null, 0, i0.ɵɵtemplateRefExtractor);
          i0.ɵɵelementStart(4, "div", 3)(5, "div", 4);
          i0.ɵɵelement(6, "app-barra-superior");
          i0.ɵɵelementStart(7, "div", 5)(8, "div", 6)(9, "div", 7)(10, "div", 8);
          i0.ɵɵtext(11, "Documentaci\u00F3n Adicional");
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(12, "p", 9);
          i0.ɵɵtext(13, "Documentaci\u00F3n que los alumnos pueden utilizar para informarse sobre el proceso de pr\u00E1cticas.");
          i0.ɵɵelementEnd()()();
          i0.ɵɵtemplate(14, DocumentacionComponent_div_14_Template, 10, 0, "div", 10);
          i0.ɵɵelementStart(15, "div", 11);
          i0.ɵɵtemplate(16, DocumentacionComponent_div_16_Template, 16, 4, "div", 12)(17, DocumentacionComponent_div_17_Template, 2, 2, "div", 13);
          i0.ɵɵelement(18, "br");
          i0.ɵɵelementEnd()()()()();
          i0.ɵɵelementStart(19, "a", 14);
          i0.ɵɵelement(20, "i", 15);
          i0.ɵɵelementEnd();
          i0.ɵɵelement(21, "app-logout-modal");
        }
        if (rf & 2) {
          const elseblock_r7 = i0.ɵɵreference(3);
          i0.ɵɵadvance();
          i0.ɵɵproperty("ngIf", ctx.esalumno == 1)("ngIfElse", elseblock_r7);
          i0.ɵɵadvance(13);
          i0.ɵɵproperty("ngIf", ctx.documentos.length == 0);
          i0.ɵɵadvance(2);
          i0.ɵɵproperty("ngForOf", ctx.documentos);
          i0.ɵɵadvance();
          i0.ɵɵproperty("ngIf", ctx.esalumno == 0);
        }
      },
      dependencies: [i2.NgForOf, i2.NgIf, i3.BarraSuperiorComponent, i4.LogoutModalComponent, i5.BarraLateralAlumnoComponent, i6.BarraLateralEncargadoComponent, i7.SubirDocumentoEncargadoComponent, i8.EditarArchivoEncargadoComponent],
      styles: ["/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */"]
    });
  }
}
exports.DocumentacionComponent = DocumentacionComponent;

/***/ }),

/***/ 79905:
/*!*******************************************************!*\
  !*** ./src/app/vistas/empresas/empresas.component.ts ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.EmpresasComponent = void 0;
const i0 = __webpack_require__(/*! @angular/core */ 37580);
const i1 = __webpack_require__(/*! @angular/router */ 95072);
const i2 = __webpack_require__(/*! @angular/common */ 60316);
const i3 = __webpack_require__(/*! @angular/material/button */ 84175);
const _c0 = () => ({
  "background-color": "#3f51b5",
  "color": "white"
});
class EmpresasComponent {
  constructor(route) {
    this.route = route;
  }
  ngOnInit() {
    this.Id = this.route.snapshot.paramMap.get("id");
  }
  static {
    this.ɵfac = function EmpresasComponent_Factory(__ngFactoryType__) {
      return new (__ngFactoryType__ || EmpresasComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute));
    };
  }
  static {
    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({
      type: EmpresasComponent,
      selectors: [["app-empresas"]],
      decls: 6,
      vars: 4,
      consts: [["mat-raised-button", "", 3, "ngStyle", "routerLink"]],
      template: function EmpresasComponent_Template(rf, ctx) {
        if (rf & 1) {
          i0.ɵɵelementStart(0, "p");
          i0.ɵɵtext(1, "empresas works!");
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(2, "h1");
          i0.ɵɵtext(3, " Ingresas Datos de Empresas Ac\u00E1\n");
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(4, "button", 0);
          i0.ɵɵtext(5, "Volver");
          i0.ɵɵelementEnd();
        }
        if (rf & 2) {
          i0.ɵɵadvance(4);
          i0.ɵɵpropertyInterpolate1("routerLink", "/alumno/", ctx.Id, "");
          i0.ɵɵproperty("ngStyle", i0.ɵɵpureFunction0(3, _c0));
        }
      },
      dependencies: [i2.NgStyle, i1.RouterLink, i3.MatButton],
      styles: ["/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */"]
    });
  }
}
exports.EmpresasComponent = EmpresasComponent;

/***/ }),

/***/ 48923:
/*!*********************************************************************************!*\
  !*** ./src/app/vistas/encuesta-fin-practica/encuesta-fin-practica.component.ts ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.EncuestaFinPracticaComponent = void 0;
//import { Component } from '@angular/core';
const common_1 = __webpack_require__(/*! @angular/common */ 60316);
const environment_1 = __webpack_require__(/*! src/environments/environment */ 45312);
const i0 = __webpack_require__(/*! @angular/core */ 37580);
const i1 = __webpack_require__(/*! @angular/router */ 95072);
const i2 = __webpack_require__(/*! src/app/servicios/alumno/obtener_datos.service */ 27095);
const i3 = __webpack_require__(/*! src/app/servicios/carrera/carrera.service */ 37890);
const i4 = __webpack_require__(/*! src/app/servicios/alumno/preguntas-encuesta-final.service */ 44275);
const i5 = __webpack_require__(/*! @angular/material/snack-bar */ 3347);
const i6 = __webpack_require__(/*! src/app/servicios/respuesta-ramos/respuesta-ramos.service */ 37990);
const i7 = __webpack_require__(/*! src/app/servicios/notificaciones/notificaciones.service */ 22004);
const i8 = __webpack_require__(/*! src/app/servicios/alumno/gestionar_practica.service */ 6632);
const i9 = __webpack_require__(/*! src/app/servicios/data_usuario/data-usuario.service */ 94160);
const i10 = __webpack_require__(/*! @angular/common */ 60316);
const i11 = __webpack_require__(/*! @angular/forms */ 34456);
const i12 = __webpack_require__(/*! ../../componentes/footer/footer.component */ 89024);
const i13 = __webpack_require__(/*! ../../componentes/barra-superior/barra-superior.component */ 36370);
const i14 = __webpack_require__(/*! ../../componentes/logout-modal/logout-modal.component */ 15562);
const i15 = __webpack_require__(/*! ../../componentes/barra-lateral-alumno/barra-lateral-alumno.component */ 72756);
function EncuestaFinPracticaComponent_div_11_Template(rf, ctx) {
  if (rf & 1) {
    const _r1 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "div", 12)(1, "div", 13)(2, "div", 14);
    i0.ɵɵtext(3, " Responde esta encuesta para finalizar tu pr\u00E1ctica ");
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(4, "div", 15);
    i0.ɵɵtext(5, " Esta encuesta es an\u00F3nima, los datos se recopilaran solo para fines estad\u00EDsticos. ");
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(6, "div", 15);
    i0.ɵɵtext(7, " Podr\u00E1s avanzar o retrodecer en ellas haciendo clic en los botones de abajo. ");
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(8, "button", 16);
    i0.ɵɵlistener("click", function EncuestaFinPracticaComponent_div_11_Template_button_click_8_listener() {
      i0.ɵɵrestoreView(_r1);
      const ctx_r1 = i0.ɵɵnextContext();
      return i0.ɵɵresetView(ctx_r1.der());
    });
    i0.ɵɵtext(9, " Comenzar Encuesta ");
    i0.ɵɵelementEnd()()();
  }
}
function EncuestaFinPracticaComponent_div_12_div_10_Template(rf, ctx) {
  if (rf & 1) {
    const _r4 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "div")(1, "textarea", 30);
    i0.ɵɵtwoWayListener("ngModelChange", function EncuestaFinPracticaComponent_div_12_div_10_Template_textarea_ngModelChange_1_listener($event) {
      i0.ɵɵrestoreView(_r4);
      const i_r5 = i0.ɵɵnextContext().index;
      const ctx_r1 = i0.ɵɵnextContext();
      i0.ɵɵtwoWayBindingSet(ctx_r1.respuestas[i_r5], $event) || (ctx_r1.respuestas[i_r5] = $event);
      return i0.ɵɵresetView($event);
    });
    i0.ɵɵlistener("ngModelChange", function EncuestaFinPracticaComponent_div_12_div_10_Template_textarea_ngModelChange_1_listener($event) {
      i0.ɵɵrestoreView(_r4);
      const i_r5 = i0.ɵɵnextContext().index;
      const ctx_r1 = i0.ɵɵnextContext();
      return i0.ɵɵresetView(ctx_r1.updateRespuestasAbierta(i_r5, $event));
    });
    i0.ɵɵelementEnd()();
  }
  if (rf & 2) {
    const i_r5 = i0.ɵɵnextContext().index;
    const ctx_r1 = i0.ɵɵnextContext();
    i0.ɵɵadvance();
    i0.ɵɵpropertyInterpolate1("id", "abierta", i_r5, "");
    i0.ɵɵtwoWayProperty("ngModel", ctx_r1.respuestas[i_r5]);
  }
}
function EncuestaFinPracticaComponent_div_12_div_11_div_4_Template(rf, ctx) {
  if (rf & 1) {
    const _r6 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "div")(1, "input", 34);
    i0.ɵɵtwoWayListener("ngModelChange", function EncuestaFinPracticaComponent_div_12_div_11_div_4_Template_input_ngModelChange_1_listener($event) {
      const j_r7 = i0.ɵɵrestoreView(_r6).index;
      const i_r5 = i0.ɵɵnextContext(2).index;
      const ctx_r1 = i0.ɵɵnextContext();
      i0.ɵɵtwoWayBindingSet(ctx_r1.respuestas[i_r5][j_r7], $event) || (ctx_r1.respuestas[i_r5][j_r7] = $event);
      return i0.ɵɵresetView($event);
    });
    i0.ɵɵlistener("ngModelChange", function EncuestaFinPracticaComponent_div_12_div_11_div_4_Template_input_ngModelChange_1_listener($event) {
      const j_r7 = i0.ɵɵrestoreView(_r6).index;
      const i_r5 = i0.ɵɵnextContext(2).index;
      const ctx_r1 = i0.ɵɵnextContext();
      return i0.ɵɵresetView(ctx_r1.updateRespuestasCasillas(i_r5, j_r7, $event));
    });
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(2, "label", 35);
    i0.ɵɵtext(3);
    i0.ɵɵelementEnd()();
  }
  if (rf & 2) {
    const opcion_r8 = ctx.$implicit;
    const j_r7 = ctx.index;
    const i_r5 = i0.ɵɵnextContext(2).index;
    const ctx_r1 = i0.ɵɵnextContext();
    i0.ɵɵadvance();
    i0.ɵɵpropertyInterpolate("value", opcion_r8);
    i0.ɵɵpropertyInterpolate2("id", "checkbox", i_r5, "_", j_r7, "");
    i0.ɵɵtwoWayProperty("ngModel", ctx_r1.respuestas[i_r5][j_r7]);
    i0.ɵɵadvance();
    i0.ɵɵpropertyInterpolate2("for", "checkbox", i_r5, "_", j_r7, "");
    i0.ɵɵadvance();
    i0.ɵɵtextInterpolate1(" ", opcion_r8, " ");
  }
}
function EncuestaFinPracticaComponent_div_12_div_11_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 31)(1, "div", 19);
    i0.ɵɵelement(2, "div", 32);
    i0.ɵɵelementStart(3, "div", 27);
    i0.ɵɵtemplate(4, EncuestaFinPracticaComponent_div_12_div_11_div_4_Template, 4, 9, "div", 33);
    i0.ɵɵelementEnd()()();
  }
  if (rf & 2) {
    const pregunta_r9 = i0.ɵɵnextContext().$implicit;
    i0.ɵɵadvance(4);
    i0.ɵɵproperty("ngForOf", pregunta_r9.opciones.split(";;"));
  }
}
function EncuestaFinPracticaComponent_div_12_div_12_div_4_Template(rf, ctx) {
  if (rf & 1) {
    const _r10 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "div")(1, "input", 36);
    i0.ɵɵtwoWayListener("ngModelChange", function EncuestaFinPracticaComponent_div_12_div_12_div_4_Template_input_ngModelChange_1_listener($event) {
      i0.ɵɵrestoreView(_r10);
      const i_r5 = i0.ɵɵnextContext(2).index;
      const ctx_r1 = i0.ɵɵnextContext();
      i0.ɵɵtwoWayBindingSet(ctx_r1.respuestas[i_r5], $event) || (ctx_r1.respuestas[i_r5] = $event);
      return i0.ɵɵresetView($event);
    });
    i0.ɵɵlistener("ngModelChange", function EncuestaFinPracticaComponent_div_12_div_12_div_4_Template_input_ngModelChange_1_listener($event) {
      i0.ɵɵrestoreView(_r10);
      const i_r5 = i0.ɵɵnextContext(2).index;
      const ctx_r1 = i0.ɵɵnextContext();
      return i0.ɵɵresetView(ctx_r1.updateRespuestasAlternativas(i_r5, $event));
    });
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(2, "label", 35);
    i0.ɵɵtext(3);
    i0.ɵɵelementEnd()();
  }
  if (rf & 2) {
    const opcion_r11 = ctx.$implicit;
    const j_r12 = ctx.index;
    const i_r5 = i0.ɵɵnextContext(2).index;
    const ctx_r1 = i0.ɵɵnextContext();
    i0.ɵɵadvance();
    i0.ɵɵpropertyInterpolate1("name", "radio", i_r5, "");
    i0.ɵɵpropertyInterpolate2("id", "radioOpcion", i_r5, "_", j_r12, "");
    i0.ɵɵpropertyInterpolate("value", opcion_r11);
    i0.ɵɵtwoWayProperty("ngModel", ctx_r1.respuestas[i_r5]);
    i0.ɵɵadvance();
    i0.ɵɵpropertyInterpolate2("for", "radioOpcion", i_r5, "_", j_r12, "");
    i0.ɵɵadvance();
    i0.ɵɵtextInterpolate1(" ", opcion_r11, " ");
  }
}
function EncuestaFinPracticaComponent_div_12_div_12_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 31)(1, "div", 19);
    i0.ɵɵelement(2, "div", 32);
    i0.ɵɵelementStart(3, "div", 27);
    i0.ɵɵtemplate(4, EncuestaFinPracticaComponent_div_12_div_12_div_4_Template, 4, 11, "div", 33);
    i0.ɵɵelementEnd()()();
  }
  if (rf & 2) {
    const pregunta_r9 = i0.ɵɵnextContext().$implicit;
    i0.ɵɵadvance(4);
    i0.ɵɵproperty("ngForOf", pregunta_r9.opciones.split(";;"));
  }
}
function EncuestaFinPracticaComponent_div_12_div_19_Template(rf, ctx) {
  if (rf & 1) {
    const _r13 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "div", 27)(1, "button", 28);
    i0.ɵɵlistener("click", function EncuestaFinPracticaComponent_div_12_div_19_Template_button_click_1_listener() {
      i0.ɵɵrestoreView(_r13);
      const ctx_r1 = i0.ɵɵnextContext(2);
      return i0.ɵɵresetView(ctx_r1.der());
    });
    i0.ɵɵtext(2, " Siguiente ");
    i0.ɵɵelementEnd()();
  }
}
function EncuestaFinPracticaComponent_div_12_div_20_Template(rf, ctx) {
  if (rf & 1) {
    const _r14 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "div", 27)(1, "button", 37);
    i0.ɵɵlistener("click", function EncuestaFinPracticaComponent_div_12_div_20_Template_button_click_1_listener() {
      i0.ɵɵrestoreView(_r14);
      const ctx_r1 = i0.ɵɵnextContext(2);
      return i0.ɵɵresetView(ctx_r1.enviarRespuestas());
    });
    i0.ɵɵtext(2, " Finalizar ");
    i0.ɵɵelementEnd()();
  }
}
function EncuestaFinPracticaComponent_div_12_Template(rf, ctx) {
  if (rf & 1) {
    const _r3 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "div", 17)(1, "div", 13)(2, "div", 18);
    i0.ɵɵtext(3);
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(4, "div", 14);
    i0.ɵɵtext(5);
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(6, "div", 19);
    i0.ɵɵelement(7, "div", 20);
    i0.ɵɵelementStart(8, "div", 21)(9, "div", 22);
    i0.ɵɵtemplate(10, EncuestaFinPracticaComponent_div_12_div_10_Template, 2, 3, "div", 23)(11, EncuestaFinPracticaComponent_div_12_div_11_Template, 5, 1, "div", 24)(12, EncuestaFinPracticaComponent_div_12_div_12_Template, 5, 1, "div", 24);
    i0.ɵɵelementEnd()()();
    i0.ɵɵelementStart(13, "div", 25);
    i0.ɵɵelement(14, "div", 26);
    i0.ɵɵelementStart(15, "div", 27)(16, "button", 28);
    i0.ɵɵlistener("click", function EncuestaFinPracticaComponent_div_12_Template_button_click_16_listener() {
      i0.ɵɵrestoreView(_r3);
      const ctx_r1 = i0.ɵɵnextContext();
      return i0.ɵɵresetView(ctx_r1.izq());
    });
    i0.ɵɵtext(17, " Anterior ");
    i0.ɵɵelementEnd()();
    i0.ɵɵelement(18, "div", 20);
    i0.ɵɵtemplate(19, EncuestaFinPracticaComponent_div_12_div_19_Template, 3, 0, "div", 29)(20, EncuestaFinPracticaComponent_div_12_div_20_Template, 3, 0, "div", 29);
    i0.ɵɵelementEnd()()();
  }
  if (rf & 2) {
    const pregunta_r9 = ctx.$implicit;
    const i_r5 = ctx.index;
    const ctx_r1 = i0.ɵɵnextContext();
    i0.ɵɵpropertyInterpolate1("id", "cont_respuesta", i_r5 + 1, "");
    i0.ɵɵadvance(3);
    i0.ɵɵtextInterpolate2(" Pregunta ", i_r5 + 1, " de ", ctx_r1.preguntas.length, " ");
    i0.ɵɵadvance(2);
    i0.ɵɵtextInterpolate1(" ", pregunta_r9.enunciado, " ");
    i0.ɵɵadvance(4);
    i0.ɵɵproperty("ngSwitch", pregunta_r9.tipo_respuesta);
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngSwitchCase", "abierta");
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngSwitchCase", "casillas");
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngSwitchCase", "alternativas");
    i0.ɵɵadvance(7);
    i0.ɵɵproperty("ngIf", i_r5 + 1 != ctx_r1.preguntas.length);
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngIf", i_r5 + 1 == ctx_r1.preguntas.length);
  }
}
class EncuestaFinPracticaComponent {
  constructor(document, router, service_obtener, route, serviceCarrera, servicePreguntas, _snackbar, ramosService, service_noti, service_gestion, _snackBar, data_usuario) {
    this.document = document;
    this.router = router;
    this.service_obtener = service_obtener;
    this.route = route;
    this.serviceCarrera = serviceCarrera;
    this.servicePreguntas = servicePreguntas;
    this._snackbar = _snackbar;
    this.ramosService = ramosService;
    this.service_noti = service_noti;
    this.service_gestion = service_gestion;
    this._snackBar = _snackBar;
    this.data_usuario = data_usuario;
    //id_config_practica = 2; // hardcodeado
    this.activated_route = this.route;
    this.id_practica = Number(this.activated_route.snapshot.paramMap.get('id_practica'));
    this.id_config_practica = 0;
    this.sesion = JSON.parse(localStorage.getItem("auth-user") || "{}");
    //id_usuario = this.sesion.userdata.id;
    this.pregunta_actual = 0;
    this.contador_preguntas = 0;
    this.preguntas = [];
    this.tipo_respuestas = [];
    this.respuestas = [];
    this.array_ramos = [];
    this.id_carrera_estudiante = 0;
    this.error = 0;
    this.enunciado_ramos = "¿Qué ramos de la carrera te han resultado útiles durante tu práctica?";
    this.evaluacion_empresa = {
      "enunciado": "Evalúa la empresa donde realizaste tu práctica entre 1 y 5, considerando qué tanto la recomendarías para que un estudiante realizara su práctica allí",
      "tipo_respuesta": "alternativas",
      "opciones": "1;;2;;3;;4;;5"
    };
    this.comentario_empresa = {
      "enunciado": "¿Qué te pareció la empresa donde realizaste tu práctica?",
      "tipo_respuesta": "abierta"
    };
    this.pregunta_sueldo = {
      "enunciado": "Indica la remuneración mensual que recibiste durante tu práctica. (Recuerda que esta información es anónima y sólo se utiliza para fines estadísticos)",
      "tipo_respuesta": "abierta"
    };
    this.practica = [];
    this.usuario = JSON.parse(localStorage.getItem('auth-user') || '{}').userdata;
    this.estado_config = "";
    this.id_encargado = -1;
    this.correo_encargado = "";
    //preguntas_encuesta: object[] = [];
    //enunciados_preguntas: string[] = [];
    //tipos_preguntas: string[] = [];
    //opciones_preguntas: string[][] = [];
    //array_values: any[] = [];
    this.isAnimating = false;
  }
  izq() {
    if (this.isAnimating) {
      return; // Don't allow animation if one is already in progress
    }
    this.contador_preguntas -= 1;
    let id = `#cont_respuesta${this.pregunta_actual}`;
    let id_izq = `#cont_respuesta${this.pregunta_actual - 1}`;
    this.isAnimating = true; // Set the flag
    $(id).fadeOut(() => {
      $(id).css("display", "none");
      $(id_izq).css({
        "display": "block"
      });
      $(id_izq).fadeIn(() => {
        this.isAnimating = false; // Reset the flag when animation is complete
      });
      this.pregunta_actual -= 1;
    });
  }
  der() {
    if (this.isAnimating) {
      return; // Don't allow animation if one is already in progress
    }
    this.contador_preguntas += 1;
    let id = `#cont_respuesta${this.pregunta_actual}`;
    let id_der = `#cont_respuesta${this.pregunta_actual + 1}`;
    this.isAnimating = true; // Set the flag
    $(id).fadeOut(() => {
      $(id).css("display", "none");
      $(id_der).css({
        "display": "block"
      });
      $(id_der).fadeIn(() => {
        this.isAnimating = false; // Reset the flag when animation is complete
      });
      this.pregunta_actual += 1;
    });
  }
  lenght_preguntas() {
    return this.preguntas.length;
  }
  ngOnInit() {
    let respuesta = {};
    this.data_usuario.obtener_usuario(this.usuario.id).subscribe({
      next: data => {
        respuesta = {
          ...respuesta,
          ...data
        };
      },
      error: error => {
        console.log(error);
        return;
      },
      complete: () => {
        this.estado_config = respuesta.body.config;
      }
    });
    this.service_obtener.obtener_practica_id(this.id_practica).subscribe({
      next: data => {
        respuesta = {
          ...respuesta,
          ...data
        };
      },
      error: error => {},
      complete: () => {
        this.practica = respuesta.body;
        this.id_config_practica = respuesta.body.id_config_practica;
        this.servicePreguntas.obtener_preguntas(this.id_config_practica).subscribe({
          next: data => {
            respuesta = {
              ...respuesta,
              ...data
            };
          },
          error: error => {},
          complete: () => {
            this.preguntas = respuesta.body;
            if (this.preguntas.length > 0) {
              for (let pregunta of this.preguntas) {
                if (pregunta.tipo_respuesta == "casillas") {
                  let array_aux = [];
                  for (let i = 0; i < pregunta.opciones.split(";;").length; i++) {
                    array_aux.push(false);
                  }
                  this.respuestas.push(array_aux);
                } else {
                  this.respuestas.push("");
                }
                this.tipo_respuestas.push(pregunta.tipo_respuesta);
              }
            }
            //CREAR PREGUNTA DE RAMOS SEGUN CARRERA
            this.service_obtener.obtener_estudiante(this.sesion.userdata.id).subscribe({
              next: data => {
                respuesta = {
                  ...respuesta,
                  ...data
                };
              },
              error: error => {},
              complete: () => {
                this.id_carrera_estudiante = respuesta.body.id_carrera;
                this.serviceCarrera.obtener_carrera(respuesta.body.id_carrera).subscribe({
                  next: data => {
                    respuesta = {
                      ...respuesta,
                      ...data
                    };
                  },
                  error: error => {},
                  complete: () => {
                    //AGREGANDO PREGUNTA DE RAMOS
                    this.array_ramos = respuesta.body.ramos.split(",");
                    //crear objeto con las preguntas de ramos
                    //crear objeto con las preguntas sobre la empresa
                    let string_ramos = "";
                    for (let i = 0; i < this.array_ramos.length; i++) {
                      if (i == this.array_ramos.length - 1) {
                        string_ramos += this.array_ramos[i];
                      } else {
                        string_ramos += this.array_ramos[i] + ";;";
                      }
                    }
                    let pregunta_ramos = {
                      "enunciado": this.enunciado_ramos,
                      "tipo_respuesta": "casillas",
                      "opciones": string_ramos
                    };
                    //agregar pregunta de ramos al arreglo de preguntas
                    this.preguntas.push(pregunta_ramos);
                    this.tipo_respuestas.push("casillas");
                    this.respuestas.push([]);
                    //AGREGANDO PREGUNTAS DE EMPRESA
                    this.preguntas.push(this.pregunta_sueldo);
                    this.preguntas.push(this.evaluacion_empresa);
                    this.preguntas.push(this.comentario_empresa);
                  }
                });
              }
            });
          }
        });
      }
    });
  }
  updateRespuestasAbierta(index, value) {
    this.respuestas[index] = value;
  }
  updateRespuestasCasillas(i, j, value) {
    this.respuestas[i][j] = value;
  }
  updateRespuestasAlternativas(i, value) {
    this.respuestas[i] = value;
  }
  enviarRespuestas() {
    let respuestas_aux = [];
    for (let i = 0; i < this.respuestas.length; i++) {
      if (this.respuestas[i] == "" || this.respuestas[i] == -1 || this.respuestas[i].length == 0) {
        this._snackbar.open("Error: no se han respondido todas las preguntas.", "Cerrar", {
          duration: 2000,
          panelClass: ['red-snackbar']
        });
        return;
      }
      if (this.preguntas[i].enunciado == this.pregunta_sueldo.enunciado) {
        //revision si respuesta ingresada es un numero
        if (isNaN(Number(this.respuestas[i]))) {
          this._snackbar.open("Error: el sueldo ingresado debe ser un número", "Cerrar", {
            duration: 2000,
            panelClass: ['red-snackbar']
          });
          return;
        }
      }
    }
    // for que envia respuestas
    for (let i = 0; i < this.respuestas.length; i++) {
      let respuesta_aux = "";
      //pregunta de ramos
      if (this.preguntas[i].enunciado == this.enunciado_ramos) {
        let ramos_aux = "";
        for (let j = 0; j < this.respuestas[i].length; j++) {
          if (this.respuestas[i][j]) {
            ramos_aux += this.array_ramos[j];
            ramos_aux += ";;";
          }
        }
        ramos_aux = ramos_aux.slice(0, -2);
        this.ramosService.crear_respuesta_ramos(this.id_carrera_estudiante, ramos_aux, this.id_practica).subscribe({
          next: data => {},
          error: error => {
            this._snackbar.open("Error al enviar la respuesta", "Cerrar", {
              duration: 2000,
              panelClass: ['red-snackbar']
            });
          },
          complete: () => {
            this._snackbar.open("Encuesta enviada. Redirigiendo a página principal...", "Cerrar", {
              duration: 3000,
              panelClass: ['green-snackbar']
            });
          }
        });
      }
      //pregunta calificacion empresa
      else if (this.preguntas[i].enunciado == this.evaluacion_empresa.enunciado) {
        this.servicePreguntas.agregar_calificacion_empresa(this.id_practica, Number(this.respuestas[i])).subscribe({
          next: data => {},
          error: error => {
            this._snackbar.open("Error al enviar la respuesta", "Cerrar", {
              duration: 2000,
              panelClass: ['red-snackbar']
            });
          },
          complete: () => {
            this._snackbar.open("Encuesta enviada. Redirigiendo a página principal...", "Cerrar", {
              duration: 3000,
              panelClass: ['green-snackbar']
            });
          }
        });
      }
      //pregunta comentario empresa
      else if (this.preguntas[i].enunciado == this.comentario_empresa.enunciado) {
        this.servicePreguntas.agregar_comentario_empresa(this.id_practica, this.respuestas[i]).subscribe({
          next: data => {},
          error: error => {
            this._snackbar.open("Error al enviar la respuesta", "Cerrar", {
              duration: 2000,
              panelClass: ['red-snackbar']
            });
          },
          complete: () => {
            this._snackbar.open("Encuesta enviada. Redirigiendo a página principal...", "Cerrar", {
              duration: 3000,
              panelClass: ['green-snackbar']
            });
          }
        });
      }
      //pregunta sueldo
      else if (this.preguntas[i].enunciado == this.pregunta_sueldo.enunciado) {
        let sueldo = Number(this.respuestas[i]);
        //console.log(sueldo);
        //console.log(this.id_practica);
        //console.log("Actualizando sueldo practica")
        this.servicePreguntas.agregar_sueldo_practica(this.id_practica, sueldo).subscribe({
          next: data => {},
          error: error => {
            this._snackbar.open("Error al enviar la respuesta", "Cerrar", {
              duration: 2000,
              panelClass: ['red-snackbar']
            });
          },
          complete: () => {
            this._snackbar.open("Encuesta enviada. Redirigiendo a página principal...", "Cerrar", {
              duration: 3000,
              panelClass: ['green-snackbar']
            });
          }
        });
      }
      //pregunta estandar
      else {
        if (this.tipo_respuestas[i] == "casillas") {
          for (let j = 0; j < this.respuestas[i].length; j++) {
            if (this.respuestas[i][j]) {
              respuesta_aux += "1";
            } else {
              respuesta_aux += "0";
            }
            if (j != this.respuestas[i].length - 1) {
              respuesta_aux += ",";
            }
          }
        }
        //si es de alternativas
        else {
          let index = this.preguntas[i].opciones.split(";;").indexOf(this.respuestas[i]);
          for (let j = 0; j < this.preguntas[i].opciones.split(";;").length; j++) {
            if (j == index) {
              respuesta_aux += "1";
            } else {
              respuesta_aux += "0";
            }
            if (j != this.preguntas[i].opciones.split(";;").length - 1) {
              respuesta_aux += ",";
            }
          }
        }
        respuestas_aux.push(respuesta_aux);
        this.servicePreguntas.agregar_respuesta(this.preguntas[i].id, respuesta_aux).subscribe({
          next: data => {},
          error: error => {
            this._snackbar.open("Error al enviar la respuesta", "Cerrar", {
              duration: 2000,
              panelClass: ['red-snackbar']
            });
          },
          complete: () => {
            this._snackbar.open("Encuesta enviada. Redirigiendo a página principal...", "Cerrar", {
              duration: 3000,
              panelClass: ['green-snackbar']
            });
          }
        });
      }
    }
    let respuesta = [];
    let correo_supervisor = this.practica.supervisor.correo;
    let nom_estudiante = this.usuario.nombre;
    this.service_obtener.obtener_practica(this.usuario.estudiante.id).subscribe({
      next: data => {
        respuesta = {
          ...respuesta,
          ...data
        };
      },
      error: error => console.log(error),
      complete: () => {
        let practicas = respuesta.body;
        for (let practi of practicas) {
          if (practi.id == this.practica.id) {
            this.id_encargado = practi.encargado.id_usuario;
            this.correo_encargado = practi.encargado.usuario.correo;
            break;
          }
        }
        this.service_gestion.finalizar_practica(this.practica.id_estudiante, this.practica.id, environment_1.environment.estado_practica.finalizada, correo_supervisor, nom_estudiante).subscribe({
          next: data => {
            //console.log("Respuesta finalizar practica:",data);
          },
          error: error => console.log("Error en finalizar practica:", error),
          complete: () => {
            let respuesta = [];
            let enlace = environment_1.environment.url_front + "/alumno/" + nom_estudiante;
            this.service_noti.postnotificacion(this.id_encargado, "El alumno " + nom_estudiante + " ha finalizado su práctica y desea su realización", this.correo_encargado, this.estado_config, enlace).subscribe({
              next: data => {
                respuesta = {
                  ...respuesta,
                  ...data
                };
              },
              error: error => {
                console.log(error);
                return;
              },
              complete: () => {
                console.log("Notificación enviada con éxito");
              }
            });
            this._snackBar.open("Práctica Finalizada", "Cerrar", {
              panelClass: ['red-snackbar'],
              duration: 3000
            });
          }
        });
      }
    });
    // after 2 seconds, redirect to home
    setTimeout(() => {
      window.history.back();
    }, 3000);
  }
  scrollToTop() {
    this.document.body.scrollTop = 0;
    this.document.documentElement.scrollTop = 0;
  }
  static {
    this.ɵfac = function EncuestaFinPracticaComponent_Factory(__ngFactoryType__) {
      return new (__ngFactoryType__ || EncuestaFinPracticaComponent)(i0.ɵɵdirectiveInject(common_1.DOCUMENT), i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.ObtenerDatosService), i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i3.CarreraService), i0.ɵɵdirectiveInject(i4.PreguntasEncuestaFinalService), i0.ɵɵdirectiveInject(i5.MatSnackBar), i0.ɵɵdirectiveInject(i6.RespuestaRamosService), i0.ɵɵdirectiveInject(i7.NotificacionesService), i0.ɵɵdirectiveInject(i8.GestionarService), i0.ɵɵdirectiveInject(i5.MatSnackBar), i0.ɵɵdirectiveInject(i9.DataUsuarioService));
    };
  }
  static {
    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({
      type: EncuestaFinPracticaComponent,
      selectors: [["app-encuesta-fin-practica"]],
      decls: 17,
      vars: 2,
      consts: [["id", "wrapper"], ["id", "content-wrapper", 1, "d-flex", "flex-column"], ["id", "content"], ["id", "content", 1, "main-content"], [1, "container-fluid", 2, "height", "100vh"], [1, "row", "pt-5"], [1, "col-lg-2"], [1, "col-lg-8", 3, "ngSwitch"], ["class", "card border-left-primary shadow py-2", "id", "cont_respuesta0", 4, "ngSwitchDefault"], ["class", "card border-left-primary shadow py-2", "style", "display: none;", 3, "id", 4, "ngFor", "ngForOf"], [1, "scroll-to-top", "rounded", 3, "click"], [1, "fas", "fa-angle-up"], ["id", "cont_respuesta0", 1, "card", "border-left-primary", "shadow", "py-2"], [1, "card-body"], [1, "h4", "mb-3", "font-weight-bold", "text-gray-800", "text-center"], [1, "h5", "mb-3", "text-gray-800", "text-center", "mx-auto", "w-50"], [1, "btn", "btn-primary", "btn-user", "btn-block", "btn-lg", "mx-auto", "w-25", 3, "click"], [1, "card", "border-left-primary", "shadow", "py-2", 2, "display", "none", 3, "id"], [1, "h6", "ml-4", "mt-2", "font-weight-bold", "text-gray-800"], [1, "row"], [1, "col-xl-2"], [1, "col-xl-8"], [3, "ngSwitch"], [4, "ngSwitchCase"], ["class", "form-check", 4, "ngSwitchCase"], [1, "row", "mt-5", "mb-3", "align-items-end"], [1, "col-xl-1"], [1, "col-xl-4"], [1, "btn", "btn-primary", "btn-user", "btn-block", "btn-md", 3, "click"], ["class", "col-xl-4", 4, "ngIf"], ["rows", "3", "placeholder", "Escriba su respuesta aqu\u00ED...", 1, "form-control", 3, "ngModelChange", "id", "ngModel"], [1, "form-check"], [1, "col-xl-5"], [4, "ngFor", "ngForOf"], ["type", "checkbox", 1, "form-check-input", 3, "ngModelChange", "value", "id", "ngModel"], [1, "form-check-label", 3, "for"], ["type", "radio", 1, "form-check-input", 3, "ngModelChange", "name", "id", "value", "ngModel"], [1, "btn", "btn-success", "btn-user", "btn-block", "btn-md", 3, "click"]],
      template: function EncuestaFinPracticaComponent_Template(rf, ctx) {
        if (rf & 1) {
          i0.ɵɵelementStart(0, "div", 0);
          i0.ɵɵelement(1, "app-barra-lateral-alumno");
          i0.ɵɵelementStart(2, "div", 1)(3, "div", 2);
          i0.ɵɵelement(4, "app-barra-superior");
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(5, "div", 1)(6, "div", 3)(7, "div", 4)(8, "div", 5);
          i0.ɵɵelement(9, "div", 6);
          i0.ɵɵelementStart(10, "div", 7);
          i0.ɵɵtemplate(11, EncuestaFinPracticaComponent_div_11_Template, 10, 0, "div", 8)(12, EncuestaFinPracticaComponent_div_12_Template, 21, 11, "div", 9);
          i0.ɵɵelementEnd()()()()();
          i0.ɵɵelement(13, "app-footer");
          i0.ɵɵelementEnd()();
          i0.ɵɵelementStart(14, "a", 10);
          i0.ɵɵlistener("click", function EncuestaFinPracticaComponent_Template_a_click_14_listener() {
            return ctx.scrollToTop();
          });
          i0.ɵɵelement(15, "i", 11);
          i0.ɵɵelementEnd();
          i0.ɵɵelement(16, "app-logout-modal");
        }
        if (rf & 2) {
          i0.ɵɵadvance(10);
          i0.ɵɵproperty("ngSwitch", ctx.pregunta_actual);
          i0.ɵɵadvance(2);
          i0.ɵɵproperty("ngForOf", ctx.preguntas);
        }
      },
      dependencies: [i10.NgForOf, i10.NgIf, i10.NgSwitch, i10.NgSwitchCase, i10.NgSwitchDefault, i11.DefaultValueAccessor, i11.CheckboxControlValueAccessor, i11.RadioControlValueAccessor, i11.NgControlStatus, i11.NgModel, i12.FooterComponent, i13.BarraSuperiorComponent, i14.LogoutModalComponent, i15.BarraLateralAlumnoComponent],
      styles: ["/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */"]
    });
  }
}
exports.EncuestaFinPracticaComponent = EncuestaFinPracticaComponent;

/***/ }),

/***/ 87975:
/*!*******************************************************************************!*\
  !*** ./src/app/vistas/estadistica-empresas/estadistica-empresas.component.ts ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.Dialog = exports.EstadisticaEmpresasComponent = void 0;
const dialog_1 = __webpack_require__(/*! @angular/material/dialog */ 12587);
const button_1 = __webpack_require__(/*! @angular/material/button */ 84175);
const forms_1 = __webpack_require__(/*! @angular/forms */ 34456);
const input_1 = __webpack_require__(/*! @angular/material/input */ 95541);
const form_field_1 = __webpack_require__(/*! @angular/material/form-field */ 24950);
const select_1 = __webpack_require__(/*! @angular/material/select */ 25175);
const common_1 = __webpack_require__(/*! @angular/common */ 60316);
const i0 = __webpack_require__(/*! @angular/core */ 37580);
const i1 = __webpack_require__(/*! @angular/material/dialog */ 12587);
const i2 = __webpack_require__(/*! @angular/common/http */ 46443);
const i3 = __webpack_require__(/*! @angular/router */ 95072);
const i4 = __webpack_require__(/*! ../../servicios/empresa/empresa.service */ 1022);
const i5 = __webpack_require__(/*! ../../servicios/alumno/obtener_datos.service */ 27095);
const i6 = __webpack_require__(/*! @angular/common */ 60316);
const i7 = __webpack_require__(/*! @angular/material/button */ 84175);
const i8 = __webpack_require__(/*! ../../componentes/barra-superior/barra-superior.component */ 36370);
const i9 = __webpack_require__(/*! ../../componentes/logout-modal/logout-modal.component */ 15562);
const i10 = __webpack_require__(/*! ../../componentes/barra-lateral-alumno/barra-lateral-alumno.component */ 72756);
function EstadisticaEmpresasComponent_div_13_tr_17_td_5_span_2_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelement(0, "span", 22);
  }
}
function EstadisticaEmpresasComponent_div_13_tr_17_td_5_span_3_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelement(0, "span", 22);
  }
}
function EstadisticaEmpresasComponent_div_13_tr_17_td_5_span_4_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelement(0, "span", 22);
  }
}
function EstadisticaEmpresasComponent_div_13_tr_17_td_5_span_5_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelement(0, "span", 22);
  }
}
function EstadisticaEmpresasComponent_div_13_tr_17_td_5_span_6_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelement(0, "span", 22);
  }
}
function EstadisticaEmpresasComponent_div_13_tr_17_td_5_span_7_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelement(0, "span", 23);
  }
}
function EstadisticaEmpresasComponent_div_13_tr_17_td_5_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "td");
    i0.ɵɵtext(1);
    i0.ɵɵtemplate(2, EstadisticaEmpresasComponent_div_13_tr_17_td_5_span_2_Template, 1, 0, "span", 20)(3, EstadisticaEmpresasComponent_div_13_tr_17_td_5_span_3_Template, 1, 0, "span", 20)(4, EstadisticaEmpresasComponent_div_13_tr_17_td_5_span_4_Template, 1, 0, "span", 20)(5, EstadisticaEmpresasComponent_div_13_tr_17_td_5_span_5_Template, 1, 0, "span", 20)(6, EstadisticaEmpresasComponent_div_13_tr_17_td_5_span_6_Template, 1, 0, "span", 20)(7, EstadisticaEmpresasComponent_div_13_tr_17_td_5_span_7_Template, 1, 0, "span", 21);
    i0.ɵɵtext(8);
    i0.ɵɵelementEnd();
  }
  if (rf & 2) {
    const ctx_r1 = i0.ɵɵnextContext();
    const empresa_r3 = ctx_r1.$implicit;
    const i_r4 = ctx_r1.index;
    const ctx_r4 = i0.ɵɵnextContext(2);
    i0.ɵɵadvance();
    i0.ɵɵtextInterpolate1(" ", empresa_r3.calificacion_promedio, " ");
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngIf", ctx_r4.cant_estrellas_completas(empresa_r3.calificacion_promedio) >= 1);
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngIf", ctx_r4.cant_estrellas_completas(empresa_r3.calificacion_promedio) >= 2);
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngIf", ctx_r4.cant_estrellas_completas(empresa_r3.calificacion_promedio) >= 3);
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngIf", ctx_r4.cant_estrellas_completas(empresa_r3.calificacion_promedio) >= 4);
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngIf", ctx_r4.cant_estrellas_completas(empresa_r3.calificacion_promedio) >= 5);
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngIf", ctx_r4.media_estrella(empresa_r3.calificacion_promedio));
    i0.ɵɵadvance();
    i0.ɵɵtextInterpolate1(" (", ctx_r4.cant_not_null(ctx_r4.comentarios[i_r4]), ") ");
  }
}
function EstadisticaEmpresasComponent_div_13_tr_17_td_6_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "td");
    i0.ɵɵtext(1, " No hay opiniones de esta empresa ");
    i0.ɵɵelementEnd();
  }
}
function EstadisticaEmpresasComponent_div_13_tr_17_Template(rf, ctx) {
  if (rf & 1) {
    const _r1 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "tr")(1, "td");
    i0.ɵɵtext(2);
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(3, "td");
    i0.ɵɵtext(4);
    i0.ɵɵelementEnd();
    i0.ɵɵtemplate(5, EstadisticaEmpresasComponent_div_13_tr_17_td_5_Template, 9, 8, "td", 16)(6, EstadisticaEmpresasComponent_div_13_tr_17_td_6_Template, 2, 0, "td", 16);
    i0.ɵɵelementStart(7, "td", 17)(8, "button", 18);
    i0.ɵɵlistener("click", function EstadisticaEmpresasComponent_div_13_tr_17_Template_button_click_8_listener() {
      const empresa_r3 = i0.ɵɵrestoreView(_r1).$implicit;
      const ctx_r4 = i0.ɵɵnextContext(2);
      return i0.ɵɵresetView(ctx_r4.openDialog("100ms", "100ms", empresa_r3.id, "comentarios"));
    });
    i0.ɵɵelementStart(9, "div", 19);
    i0.ɵɵtext(10, " Ver Comentarios");
    i0.ɵɵelementEnd()()();
    i0.ɵɵelementStart(11, "td", 17)(12, "button", 18);
    i0.ɵɵlistener("click", function EstadisticaEmpresasComponent_div_13_tr_17_Template_button_click_12_listener() {
      const empresa_r3 = i0.ɵɵrestoreView(_r1).$implicit;
      const ctx_r4 = i0.ɵɵnextContext(2);
      return i0.ɵɵresetView(ctx_r4.openDialog("100ms", "100ms", empresa_r3.id, "ramos"));
    });
    i0.ɵɵelementStart(13, "div", 19);
    i0.ɵɵtext(14, " Ver Ramos");
    i0.ɵɵelementEnd()()()();
  }
  if (rf & 2) {
    const empresa_r3 = ctx.$implicit;
    i0.ɵɵadvance(2);
    i0.ɵɵtextInterpolate(empresa_r3.nombre_empresa);
    i0.ɵɵadvance(2);
    i0.ɵɵtextInterpolate(empresa_r3.rut_empresa);
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngIf", empresa_r3.calificacion_promedio);
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngIf", !empresa_r3.calificacion_promedio);
  }
}
function EstadisticaEmpresasComponent_div_13_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 10)(1, "div", 11)(2, "div", 12)(3, "table", 13)(4, "thead")(5, "tr")(6, "th", 14);
    i0.ɵɵtext(7, "Nombre");
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(8, "th", 14);
    i0.ɵɵtext(9, "RUT");
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(10, "th", 14);
    i0.ɵɵtext(11, "Calificaci\u00F3n");
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(12, "th", 14);
    i0.ɵɵtext(13, "Comentarios");
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(14, "th", 14);
    i0.ɵɵtext(15, "Ramos m\u00E1s \u00FAtiles");
    i0.ɵɵelementEnd()()();
    i0.ɵɵelementStart(16, "tbody");
    i0.ɵɵtemplate(17, EstadisticaEmpresasComponent_div_13_tr_17_Template, 15, 4, "tr", 15);
    i0.ɵɵelementEnd()()()()();
  }
  if (rf & 2) {
    const ctx_r4 = i0.ɵɵnextContext();
    i0.ɵɵadvance(17);
    i0.ɵɵproperty("ngForOf", ctx_r4.empresas);
  }
}
function EstadisticaEmpresasComponent_div_14_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 24)(1, "p");
    i0.ɵɵtext(2, "No existen empresas registradas.");
    i0.ɵɵelementEnd()();
  }
}
function Dialog_div_0_div_4_i_3_i_2_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "i");
    i0.ɵɵtext(1, ",");
    i0.ɵɵelementEnd();
  }
}
function Dialog_div_0_div_4_i_3_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "i");
    i0.ɵɵtext(1);
    i0.ɵɵtemplate(2, Dialog_div_0_div_4_i_3_i_2_Template, 2, 0, "i", 0);
    i0.ɵɵelementEnd();
  }
  if (rf & 2) {
    const palabra_r1 = ctx.$implicit;
    const i_r2 = ctx.index;
    const ctx_r2 = i0.ɵɵnextContext(3);
    i0.ɵɵadvance();
    i0.ɵɵtextInterpolate1(" ", palabra_r1, "");
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngIf", ctx_r2.data.palabras_clave[i_r2 + 1] != null);
  }
}
function Dialog_div_0_div_4_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div")(1, "b");
    i0.ɵɵtext(2, "Palabras clave: ");
    i0.ɵɵelementEnd();
    i0.ɵɵtemplate(3, Dialog_div_0_div_4_i_3_Template, 3, 2, "i", 3);
    i0.ɵɵelement(4, "br")(5, "br");
    i0.ɵɵelementEnd();
  }
  if (rf & 2) {
    const ctx_r2 = i0.ɵɵnextContext(2);
    i0.ɵɵadvance(3);
    i0.ɵɵproperty("ngForOf", ctx_r2.data.palabras_clave);
  }
}
function Dialog_div_0_div_5_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div");
    i0.ɵɵtext(1, " No hay comentarios para mostrar ");
    i0.ɵɵelement(2, "br")(3, "br");
    i0.ɵɵelementEnd();
  }
}
function Dialog_div_0_div_6_div_1_div_1_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div");
    i0.ɵɵtext(1);
    i0.ɵɵelementEnd();
  }
  if (rf & 2) {
    const comentario_r4 = i0.ɵɵnextContext().$implicit;
    i0.ɵɵadvance();
    i0.ɵɵtextInterpolate1("- ", comentario_r4, "");
  }
}
function Dialog_div_0_div_6_div_1_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div");
    i0.ɵɵtemplate(1, Dialog_div_0_div_6_div_1_div_1_Template, 2, 1, "div", 0);
    i0.ɵɵelement(2, "br");
    i0.ɵɵelementEnd();
  }
  if (rf & 2) {
    const comentario_r4 = ctx.$implicit;
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngIf", comentario_r4);
  }
}
function Dialog_div_0_div_6_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div");
    i0.ɵɵtemplate(1, Dialog_div_0_div_6_div_1_Template, 3, 1, "div", 3);
    i0.ɵɵelementEnd();
  }
  if (rf & 2) {
    const ctx_r2 = i0.ɵɵnextContext(2);
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngForOf", ctx_r2.data.lista_comentarios);
  }
}
function Dialog_div_0_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div")(1, "h1", 1);
    i0.ɵɵtext(2);
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(3, "div", 2);
    i0.ɵɵtemplate(4, Dialog_div_0_div_4_Template, 6, 1, "div", 0)(5, Dialog_div_0_div_5_Template, 4, 0, "div", 0)(6, Dialog_div_0_div_6_Template, 2, 1, "div", 0);
    i0.ɵɵelementEnd()();
  }
  if (rf & 2) {
    const ctx_r2 = i0.ɵɵnextContext();
    i0.ɵɵadvance(2);
    i0.ɵɵtextInterpolate1("Comentarios ", ctx_r2.data.nombre_empresa, "");
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngIf", ctx_r2.data.palabras_clave[0] != null);
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngIf", ctx_r2.data.lista_comentarios[0] == null);
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngIf", ctx_r2.data.lista_comentarios[0] != null);
  }
}
function Dialog_div_1_div_4_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div");
    i0.ɵɵtext(1, " No hay ramos para mostrar ");
    i0.ɵɵelementEnd();
  }
}
function Dialog_div_1_div_5_div_1_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div")(1, "h4", 4);
    i0.ɵɵtext(2);
    i0.ɵɵelementStart(3, "span", 5);
    i0.ɵɵtext(4);
    i0.ɵɵelementEnd()();
    i0.ɵɵelementStart(5, "div", 6);
    i0.ɵɵelement(6, "div", 7);
    i0.ɵɵelementEnd()();
  }
  if (rf & 2) {
    const i_r5 = ctx.index;
    const ctx_r2 = i0.ɵɵnextContext(3);
    i0.ɵɵadvance(2);
    i0.ɵɵtextInterpolate1("", ctx_r2.data.nombre_ramos_utiles[i_r5], " ");
    i0.ɵɵadvance(2);
    i0.ɵɵtextInterpolate1("", ctx_r2.data.porcentaje_ramos_utiles[i_r5], "%");
    i0.ɵɵadvance(2);
    i0.ɵɵstyleMap("width: " + ctx_r2.data.porcentaje_ramos_utiles[i_r5] + "%");
  }
}
function Dialog_div_1_div_5_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div");
    i0.ɵɵtemplate(1, Dialog_div_1_div_5_div_1_Template, 7, 4, "div", 3);
    i0.ɵɵelementEnd();
  }
  if (rf & 2) {
    const ctx_r2 = i0.ɵɵnextContext(2);
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngForOf", ctx_r2.data.nombre_ramos_utiles);
  }
}
function Dialog_div_1_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div")(1, "h1", 1);
    i0.ɵɵtext(2);
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(3, "div", 2);
    i0.ɵɵtemplate(4, Dialog_div_1_div_4_Template, 2, 0, "div", 0)(5, Dialog_div_1_div_5_Template, 2, 1, "div", 0);
    i0.ɵɵelementEnd()();
  }
  if (rf & 2) {
    const ctx_r2 = i0.ɵɵnextContext();
    i0.ɵɵadvance(2);
    i0.ɵɵtextInterpolate1("Ramos m\u00E1s \u00FAtiles ", ctx_r2.data.nombre_empresa, "");
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngIf", ctx_r2.data.nombre_ramos_utiles[0] == null);
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngIf", ctx_r2.data.nombre_ramos_utiles[0] != null);
  }
}
class EstadisticaEmpresasComponent {
  constructor(dialog, _http, _router, empresaService, datosService) {
    this.dialog = dialog;
    this._http = _http;
    this._router = _router;
    this.empresaService = empresaService;
    this.datosService = datosService;
    this.sesion = JSON.parse(localStorage.getItem("auth-user") || "{}");
    this.closeResult = '';
    this.empresas = [];
    this.ramos_empresas = [];
    this.practicas = [];
    this.comentarios = [];
    this.comentarios_empresa = [];
    this.palabras_clave_una_empresa = [];
    this.palabras_clave_empresa = [];
    this.nombre_empresa_comentario = "";
    this.texto_explicaion = " Esto indica el porcentaje de alumnos\n que realizaron su práctica en esta empresa\n y luego, llegaron a trabajar en una gran empresa";
    this.empresas_no_encontradas = false;
    this.id_carrera_estudiante = 0;
  }
  ngOnInit() {
    let id_usuario = this.sesion.userdata.id;
    //console.log("id usuario: ", id_usuario);
    let respuesta = {};
    //obteniendo estudiante segun id_usuario
    this.datosService.obtener_estudiante(id_usuario).subscribe({
      next: data => {
        //console.log(data);
        respuesta = {
          ...respuesta,
          ...data
        };
      },
      error: error => {
        console.log(error);
      },
      complete: () => {
        //console.log("respuesta estudiante:");
        //console.log(respuesta.body);
        this.id_carrera_estudiante = respuesta.body.id_carrera;
        //console.log("id carrera estudiante: ", this.id_carrera_estudiante);   
        this.empresaService.obtener_empresas().subscribe({
          next: data => {
            //console.log(data);
            respuesta = {
              ...respuesta,
              ...data
            };
          },
          error: error => {
            console.log(error);
            if (error.status == 404) {
              this.empresas_no_encontradas = true;
            }
          },
          complete: () => {
            //console.log("respuesta empresas:");
            //console.log(respuesta.body);
            this.empresas = respuesta.body;
            //console.log(this.empresas);
            //dejando calificaciones con 1 decimal
            for (let i = 0; i < this.empresas.length; i++) {
              if (this.empresas[i].ramos_utiles == null) {
                this.ramos_empresas.push(this.empresas[i].ramos_utiles);
              } else {
                //console.log("hay ramos en la empresa");
                let ramos_carrera_empresa = this.empresas[i].ramos_utiles[this.id_carrera_estudiante];
                //console.log("ramos carrera empresa: ", ramos_carrera_empresa);
                if (ramos_carrera_empresa != null) {
                  //console.log("ramos carrera empresa no es null");
                  this.ramos_empresas.push(ramos_carrera_empresa);
                } else {
                  this.ramos_empresas.push(null);
                }
              }
              if (this.empresas[i].calificacion_promedio != null) {
                this.empresas[i].calificacion_promedio = Number(this.empresas[i].calificacion_promedio.toFixed(1));
              }
            }
            //console.log("ramos empresas: ", this.ramos_empresas);
            let comentarios_desordenados = [];
            //crear arreglo para insertar ahi los comentarios de cada empresa
            for (let i = 0; i < this.empresas.length; i++) {
              comentarios_desordenados.push([]);
            }
            for (let i = 0; i < this.empresas.length; i++) {
              //console.log("empresa: ", this.empresas[i].nombre_empresa);
              //console.log("palabras clave: ", this.empresas[i].palabras_clave);
              this.palabras_clave_empresa.push(this.empresas[i].palabras_clave);
              this.empresaService.obtener_practicas_por_empresa(this.empresas[i].id).subscribe({
                next: data => {
                  //console.log(data);
                  respuesta = {
                    ...respuesta,
                    ...data
                  };
                },
                error: error => {
                  console.log(error);
                },
                complete: () => {
                  let practica_aux = [];
                  //console.log("respuesta practicas:");
                  //console.log("practicas en empresa " + this.empresas[i].nombre_empresa);
                  //console.log(respuesta.body);
                  practica_aux = respuesta.body;
                  let comentarios_aux = [];
                  //comentarios_aux.push(this.empresas[i].id);
                  for (let j = 0; j < practica_aux.length; j++) {
                    comentarios_aux.push(practica_aux[j].comentario_empresa);
                  }
                  comentarios_desordenados[i] = comentarios_aux;
                  //let eliminar = comentarios_desordenados[i].shift();
                  //omentarios_desordenados.push(comentarios_aux);
                }
              });
            }
            this.comentarios = comentarios_desordenados;
            //console.log("empresas:");
            //console.log(this.empresas);
            //console.log("comentarios:");
            //console.log(this.comentarios);
          }
        });
      }
    });
  }
  cant_not_null(array) {
    let cant = 0;
    for (let i = 0; i < array.length; i++) {
      if (array[i] != null) {
        cant++;
      }
    }
    return cant;
  }
  cant_estrellas_completas(calificacion) {
    let cant = 0;
    if (calificacion == null) {
      return 0;
    } else if (calificacion < 1) {
      return 0;
    } else if (calificacion < 2) {
      return 1;
    } else if (calificacion < 3) {
      return 2;
    } else if (calificacion < 4) {
      return 3;
    } else if (calificacion < 5) {
      return 4;
    } else if (calificacion == 5) {
      return 5;
    } else {
      return 0;
    }
  }
  media_estrella(calificacion) {
    if (calificacion == null) {
      return false;
    }
    let decimal = calificacion - Math.floor(calificacion);
    if (decimal < 0.5) {
      return false;
    } else {
      return true;
    }
  }
  openDialog(enterAnimationDuration, exitAnimationDuration, id_empresa, tipo_dialog) {
    let ramos_utiles_aux = [];
    let nombre_ramos_utiles = [];
    let porcentaje_ramos_utiles = [];
    for (let i = 0; i < this.empresas.length; i++) {
      if (this.empresas[i].id == id_empresa) {
        let ramos_utiles_aux = this.ramos_empresas[i];
        if (ramos_utiles_aux != null) {
          for (let k = 0; k < ramos_utiles_aux.length; k++) {
            //si en number push porcentaje
            if (typeof ramos_utiles_aux[k] == 'number') {
              porcentaje_ramos_utiles.push(ramos_utiles_aux[k]);
            } else {
              nombre_ramos_utiles.push(ramos_utiles_aux[k]);
            }
          }
        }
        //console.log("ramos utiles aux: ", ramos_utiles_aux);
        //console.log("nombre ramos utiles: ", nombre_ramos_utiles);
        //console.log("porcentaje ramos utiles: ", porcentaje_ramos_utiles);
        this.comentarios_empresa = this.comentarios[i];
        this.nombre_empresa_comentario = this.empresas[i].nombre_empresa;
        if (this.palabras_clave_empresa[i]) {
          this.palabras_clave_una_empresa = this.palabras_clave_empresa[i].split(',');
        } else {
          this.palabras_clave_una_empresa = [];
        }
        //this.comentarios_empresa.splice(0, 1);
        //this.comentarios_empresa.shift();
        break;
      }
    }
    //let pos_empresa = this.empresas.indexOf()
    //this.comentarios_empresa.shift();
    const dialogRef = this.dialog.open(Dialog, {
      width: '800px',
      enterAnimationDuration,
      exitAnimationDuration,
      data: {
        nombre_empresa: this.nombre_empresa_comentario,
        lista_comentarios: this.comentarios_empresa,
        palabras_clave: this.palabras_clave_una_empresa,
        tipo: tipo_dialog,
        nombre_ramos_utiles: nombre_ramos_utiles,
        porcentaje_ramos_utiles: porcentaje_ramos_utiles
      }
    });
  }
  static {
    this.ɵfac = function EstadisticaEmpresasComponent_Factory(__ngFactoryType__) {
      return new (__ngFactoryType__ || EstadisticaEmpresasComponent)(i0.ɵɵdirectiveInject(i1.MatDialog), i0.ɵɵdirectiveInject(i2.HttpClient), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.EmpresaService), i0.ɵɵdirectiveInject(i5.ObtenerDatosService));
    };
  }
  static {
    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({
      type: EstadisticaEmpresasComponent,
      selectors: [["app-estadistica-empresas"]],
      decls: 16,
      vars: 2,
      consts: [["id", "wrapper"], ["id", "content-wrapper", 1, "d-flex", "flex-column"], ["id", "content", 1, "main-content"], [1, "container-fluid"], [1, "row"], [1, "col-xl-10"], [1, "h3", "mb-2", "font-weight-bold", "text-gray-800"], [1, "mb-4"], ["class", "card shadow mb-4", 4, "ngIf"], ["class", "alert-warning", "style", "width: auto;", 4, "ngIf"], [1, "card", "shadow", "mb-4"], [1, "card-body"], [1, "table"], ["id", "dataTable", 1, "table", "table-striped", "table-bordered", 2, "width", "100%"], [2, "vertical-align", "bottom"], [4, "ngFor", "ngForOf"], [4, "ngIf"], [2, "text-align", "center"], ["mat-flat-button", "", 2, "background-color", "#7a91d7", 3, "click"], [2, "color", "white"], ["style", "color:orange", "class", "fa fa-star checked", 4, "ngIf"], ["style", "color:orange", "class", "fa fa-star-half", "aria-hidden", "true", 4, "ngIf"], [1, "fa", "fa-star", "checked", 2, "color", "orange"], ["aria-hidden", "true", 1, "fa", "fa-star-half", 2, "color", "orange"], [1, "alert-warning", 2, "width", "auto"]],
      template: function EstadisticaEmpresasComponent_Template(rf, ctx) {
        if (rf & 1) {
          i0.ɵɵelementStart(0, "div", 0);
          i0.ɵɵelement(1, "app-barra-lateral-alumno");
          i0.ɵɵelementStart(2, "div", 1)(3, "div", 2);
          i0.ɵɵelement(4, "app-barra-superior");
          i0.ɵɵelementStart(5, "div", 3)(6, "div", 4)(7, "div", 5)(8, "div", 6);
          i0.ɵɵtext(9, " Empresas ");
          i0.ɵɵelement(10, "br");
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(11, "p", 7);
          i0.ɵɵtext(12, "Aqu\u00ED puedes ver las empresas en las que los alumnos han cursado sus pr\u00E1cticas");
          i0.ɵɵelementEnd()();
          i0.ɵɵtemplate(13, EstadisticaEmpresasComponent_div_13_Template, 18, 1, "div", 8)(14, EstadisticaEmpresasComponent_div_14_Template, 3, 0, "div", 9);
          i0.ɵɵelementEnd()()()()();
          i0.ɵɵelement(15, "app-logout-modal");
        }
        if (rf & 2) {
          i0.ɵɵadvance(13);
          i0.ɵɵproperty("ngIf", !ctx.empresas_no_encontradas);
          i0.ɵɵadvance();
          i0.ɵɵproperty("ngIf", ctx.empresas_no_encontradas);
        }
      },
      dependencies: [i6.NgForOf, i6.NgIf, i7.MatButton, i8.BarraSuperiorComponent, i9.LogoutModalComponent, i10.BarraLateralAlumnoComponent],
      styles: ["/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */"]
    });
  }
}
exports.EstadisticaEmpresasComponent = EstadisticaEmpresasComponent;
class Dialog {
  constructor(dialogRef, data) {
    this.dialogRef = dialogRef;
    this.data = data;
    //nombre: string;
    //descripcion: string;
    //formato: string[];
    this.lista_comentarios = [];
  }
  onNoClick() {
    this.dialogRef.close();
  }
  static {
    this.ɵfac = function Dialog_Factory(__ngFactoryType__) {
      return new (__ngFactoryType__ || Dialog)(i0.ɵɵdirectiveInject(i1.MatDialogRef), i0.ɵɵdirectiveInject(dialog_1.MAT_DIALOG_DATA));
    };
  }
  static {
    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({
      type: Dialog,
      selectors: [["app-dialog"]],
      standalone: true,
      features: [i0.ɵɵStandaloneFeature],
      decls: 2,
      vars: 2,
      consts: [[4, "ngIf"], ["mat-dialog-title", "", 2, "text-align", "center"], ["mat-dialog-content", ""], [4, "ngFor", "ngForOf"], [1, "small", "font-weight-bold"], [1, "float-right"], [1, "progress", "mb-4"], ["role", "progressbar", "aria-valuenow", "40", "aria-valuemin", "0", "aria-valuemax", "100", 1, "progress-bar"]],
      template: function Dialog_Template(rf, ctx) {
        if (rf & 1) {
          i0.ɵɵtemplate(0, Dialog_div_0_Template, 7, 4, "div", 0)(1, Dialog_div_1_Template, 6, 3, "div", 0);
        }
        if (rf & 2) {
          i0.ɵɵproperty("ngIf", ctx.data.tipo == "comentarios");
          i0.ɵɵadvance();
          i0.ɵɵproperty("ngIf", ctx.data.tipo == "ramos");
        }
      },
      dependencies: [dialog_1.MatDialogModule, i1.MatDialogTitle, i1.MatDialogContent, form_field_1.MatFormFieldModule, input_1.MatInputModule, forms_1.FormsModule, button_1.MatButtonModule, select_1.MatSelectModule, common_1.CommonModule, i6.NgForOf, i6.NgIf],
      encapsulation: 2
    });
  }
}
exports.Dialog = Dialog;

/***/ }),

/***/ 49603:
/*!***************************************************************!*\
  !*** ./src/app/vistas/estadisticas/estadisticas.component.ts ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.Dialog = exports.EstadisticasComponent = void 0;
const common_1 = __webpack_require__(/*! @angular/common */ 60316);
const forms_1 = __webpack_require__(/*! @angular/forms */ 34456);
const dialog_1 = __webpack_require__(/*! @angular/material/dialog */ 12587);
const button_1 = __webpack_require__(/*! @angular/material/button */ 84175);
const forms_2 = __webpack_require__(/*! @angular/forms */ 34456);
const input_1 = __webpack_require__(/*! @angular/material/input */ 95541);
const form_field_1 = __webpack_require__(/*! @angular/material/form-field */ 24950);
const select_1 = __webpack_require__(/*! @angular/material/select */ 25175);
const common_2 = __webpack_require__(/*! @angular/common */ 60316);
const i0 = __webpack_require__(/*! @angular/core */ 37580);
const i1 = __webpack_require__(/*! @angular/material/dialog */ 12587);
const i2 = __webpack_require__(/*! @angular/forms */ 34456);
const i3 = __webpack_require__(/*! @angular/router */ 95072);
const i4 = __webpack_require__(/*! src/app/servicios/data_usuario/data-usuario.service */ 94160);
const i5 = __webpack_require__(/*! src/app/servicios/encargado/barra-lateral/barra-lateral.service */ 99539);
const i6 = __webpack_require__(/*! @angular/material/snack-bar */ 3347);
const i7 = __webpack_require__(/*! src/app/servicios/encargado/config-practica/config.service */ 55971);
const i8 = __webpack_require__(/*! src/app/servicios/carrera/carrera.service */ 37890);
const i9 = __webpack_require__(/*! src/app/servicios/empresa/empresa.service */ 1022);
const i10 = __webpack_require__(/*! src/app/servicios/alumno/preguntas-encuesta-final.service */ 44275);
const i11 = __webpack_require__(/*! src/app/servicios/estadisticas/estadisticas.service */ 87738);
const i12 = __webpack_require__(/*! @angular/common */ 60316);
const i13 = __webpack_require__(/*! @angular/material/button */ 84175);
const i14 = __webpack_require__(/*! ../../componentes/barra-superior/barra-superior.component */ 36370);
const i15 = __webpack_require__(/*! ../../componentes/logout-modal/logout-modal.component */ 15562);
const i16 = __webpack_require__(/*! ../../componentes/barra-lateral-encargado/barra-lateral-encargado.component */ 43560);
function EstadisticasComponent_ul_6_Template(rf, ctx) {
  if (rf & 1) {
    const _r1 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "ul", 8)(1, "li")(2, "h1", 9);
    i0.ɵɵtext(3, "Estad\u00EDsticas \u00A0 \u00A0 ");
    i0.ɵɵelementEnd()();
    i0.ɵɵelementStart(4, "li", 10)(5, "button", 11);
    i0.ɵɵlistener("click", function EstadisticasComponent_ul_6_Template_button_click_5_listener() {
      i0.ɵɵrestoreView(_r1);
      const ctx_r1 = i0.ɵɵnextContext();
      return i0.ɵɵresetView(ctx_r1.cambio_vista("general"));
    });
    i0.ɵɵtext(6, "Generales");
    i0.ɵɵelementEnd()();
    i0.ɵɵelementStart(7, "li", 10)(8, "button", 12);
    i0.ɵɵlistener("click", function EstadisticasComponent_ul_6_Template_button_click_8_listener() {
      i0.ɵɵrestoreView(_r1);
      const ctx_r1 = i0.ɵɵnextContext();
      return i0.ɵɵresetView(ctx_r1.cambio_vista("aptitudes"));
    });
    i0.ɵɵtext(9, "Competencias");
    i0.ɵɵelementEnd()();
    i0.ɵɵelementStart(10, "li", 10)(11, "button", 12);
    i0.ɵɵlistener("click", function EstadisticasComponent_ul_6_Template_button_click_11_listener() {
      i0.ɵɵrestoreView(_r1);
      const ctx_r1 = i0.ɵɵnextContext();
      return i0.ɵɵresetView(ctx_r1.cambio_vista("remuneracion"));
    });
    i0.ɵɵtext(12, "Remuneraci\u00F3n");
    i0.ɵɵelementEnd()();
    i0.ɵɵelementStart(13, "li", 10)(14, "button", 12);
    i0.ɵɵlistener("click", function EstadisticasComponent_ul_6_Template_button_click_14_listener() {
      i0.ɵɵrestoreView(_r1);
      const ctx_r1 = i0.ɵɵnextContext();
      return i0.ɵɵresetView(ctx_r1.cambio_vista("encuesta"));
    });
    i0.ɵɵtext(15, " Encuesta final");
    i0.ɵɵelementEnd()()();
  }
}
function EstadisticasComponent_ul_7_Template(rf, ctx) {
  if (rf & 1) {
    const _r3 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "ul", 8)(1, "li")(2, "h1", 9);
    i0.ɵɵtext(3, "Estad\u00EDsticas \u00A0 \u00A0 ");
    i0.ɵɵelementEnd()();
    i0.ɵɵelementStart(4, "li", 10)(5, "button", 12);
    i0.ɵɵlistener("click", function EstadisticasComponent_ul_7_Template_button_click_5_listener() {
      i0.ɵɵrestoreView(_r3);
      const ctx_r1 = i0.ɵɵnextContext();
      return i0.ɵɵresetView(ctx_r1.cambio_vista("general"));
    });
    i0.ɵɵtext(6, "Generales");
    i0.ɵɵelementEnd()();
    i0.ɵɵelementStart(7, "li", 10)(8, "button", 11);
    i0.ɵɵlistener("click", function EstadisticasComponent_ul_7_Template_button_click_8_listener() {
      i0.ɵɵrestoreView(_r3);
      const ctx_r1 = i0.ɵɵnextContext();
      return i0.ɵɵresetView(ctx_r1.cambio_vista("aptitudes"));
    });
    i0.ɵɵtext(9, "Competencias");
    i0.ɵɵelementEnd()();
    i0.ɵɵelementStart(10, "li", 10)(11, "button", 12);
    i0.ɵɵlistener("click", function EstadisticasComponent_ul_7_Template_button_click_11_listener() {
      i0.ɵɵrestoreView(_r3);
      const ctx_r1 = i0.ɵɵnextContext();
      return i0.ɵɵresetView(ctx_r1.cambio_vista("remuneracion"));
    });
    i0.ɵɵtext(12, "Remuneraci\u00F3n");
    i0.ɵɵelementEnd()();
    i0.ɵɵelementStart(13, "li", 10)(14, "button", 12);
    i0.ɵɵlistener("click", function EstadisticasComponent_ul_7_Template_button_click_14_listener() {
      i0.ɵɵrestoreView(_r3);
      const ctx_r1 = i0.ɵɵnextContext();
      return i0.ɵɵresetView(ctx_r1.cambio_vista("encuesta"));
    });
    i0.ɵɵtext(15, " Encuesta final");
    i0.ɵɵelementEnd()()();
  }
}
function EstadisticasComponent_ul_8_Template(rf, ctx) {
  if (rf & 1) {
    const _r4 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "ul", 8)(1, "li")(2, "h1", 9);
    i0.ɵɵtext(3, "Estad\u00EDsticas \u00A0 \u00A0 ");
    i0.ɵɵelementEnd()();
    i0.ɵɵelementStart(4, "li", 10)(5, "button", 12);
    i0.ɵɵlistener("click", function EstadisticasComponent_ul_8_Template_button_click_5_listener() {
      i0.ɵɵrestoreView(_r4);
      const ctx_r1 = i0.ɵɵnextContext();
      return i0.ɵɵresetView(ctx_r1.cambio_vista("general"));
    });
    i0.ɵɵtext(6, "Generales");
    i0.ɵɵelementEnd()();
    i0.ɵɵelementStart(7, "li", 10)(8, "button", 12);
    i0.ɵɵlistener("click", function EstadisticasComponent_ul_8_Template_button_click_8_listener() {
      i0.ɵɵrestoreView(_r4);
      const ctx_r1 = i0.ɵɵnextContext();
      return i0.ɵɵresetView(ctx_r1.cambio_vista("aptitudes"));
    });
    i0.ɵɵtext(9, "Competencias");
    i0.ɵɵelementEnd()();
    i0.ɵɵelementStart(10, "li", 10)(11, "button", 11);
    i0.ɵɵlistener("click", function EstadisticasComponent_ul_8_Template_button_click_11_listener() {
      i0.ɵɵrestoreView(_r4);
      const ctx_r1 = i0.ɵɵnextContext();
      return i0.ɵɵresetView(ctx_r1.cambio_vista("remuneracion"));
    });
    i0.ɵɵtext(12, "Remuneraci\u00F3n");
    i0.ɵɵelementEnd()();
    i0.ɵɵelementStart(13, "li", 10)(14, "button", 12);
    i0.ɵɵlistener("click", function EstadisticasComponent_ul_8_Template_button_click_14_listener() {
      i0.ɵɵrestoreView(_r4);
      const ctx_r1 = i0.ɵɵnextContext();
      return i0.ɵɵresetView(ctx_r1.cambio_vista("encuesta"));
    });
    i0.ɵɵtext(15, " Encuesta final");
    i0.ɵɵelementEnd()()();
  }
}
function EstadisticasComponent_ul_9_Template(rf, ctx) {
  if (rf & 1) {
    const _r5 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "ul", 8)(1, "li")(2, "h1", 9);
    i0.ɵɵtext(3, "Estad\u00EDsticas \u00A0 \u00A0 ");
    i0.ɵɵelementEnd()();
    i0.ɵɵelementStart(4, "li", 10)(5, "button", 12);
    i0.ɵɵlistener("click", function EstadisticasComponent_ul_9_Template_button_click_5_listener() {
      i0.ɵɵrestoreView(_r5);
      const ctx_r1 = i0.ɵɵnextContext();
      return i0.ɵɵresetView(ctx_r1.cambio_vista("general"));
    });
    i0.ɵɵtext(6, "Generales");
    i0.ɵɵelementEnd()();
    i0.ɵɵelementStart(7, "li", 10)(8, "button", 12);
    i0.ɵɵlistener("click", function EstadisticasComponent_ul_9_Template_button_click_8_listener() {
      i0.ɵɵrestoreView(_r5);
      const ctx_r1 = i0.ɵɵnextContext();
      return i0.ɵɵresetView(ctx_r1.cambio_vista("aptitudes"));
    });
    i0.ɵɵtext(9, "Competencias");
    i0.ɵɵelementEnd()();
    i0.ɵɵelementStart(10, "li", 10)(11, "button", 12);
    i0.ɵɵlistener("click", function EstadisticasComponent_ul_9_Template_button_click_11_listener() {
      i0.ɵɵrestoreView(_r5);
      const ctx_r1 = i0.ɵɵnextContext();
      return i0.ɵɵresetView(ctx_r1.cambio_vista("remuneracion"));
    });
    i0.ɵɵtext(12, "Remuneraci\u00F3n");
    i0.ɵɵelementEnd()();
    i0.ɵɵelementStart(13, "li", 10)(14, "button", 11);
    i0.ɵɵlistener("click", function EstadisticasComponent_ul_9_Template_button_click_14_listener() {
      i0.ɵɵrestoreView(_r5);
      const ctx_r1 = i0.ɵɵnextContext();
      return i0.ɵɵresetView(ctx_r1.cambio_vista("encuesta"));
    });
    i0.ɵɵtext(15, " Encuesta final");
    i0.ɵɵelementEnd()()();
  }
}
function EstadisticasComponent_div_11_tr_18_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "tr")(1, "th");
    i0.ɵɵtext(2);
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(3, "th", 40);
    i0.ɵɵtext(4);
    i0.ɵɵelementEnd()();
  }
  if (rf & 2) {
    const practica_r6 = ctx.$implicit;
    const j_r7 = ctx.index;
    const ctx_r1 = i0.ɵɵnextContext(2);
    i0.ɵɵadvance(2);
    i0.ɵɵtextInterpolate(practica_r6);
    i0.ɵɵadvance(2);
    i0.ɵɵtextInterpolate(ctx_r1.alumnos_cursando_practica_cantidad[j_r7]);
  }
}
function EstadisticasComponent_div_11_tr_40_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "tr")(1, "th");
    i0.ɵɵtext(2);
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(3, "th", 40);
    i0.ɵɵtext(4);
    i0.ɵɵelementEnd()();
  }
  if (rf & 2) {
    const practica_r8 = ctx.$implicit;
    const j_r9 = ctx.index;
    const ctx_r1 = i0.ɵɵnextContext(2);
    i0.ɵɵadvance(2);
    i0.ɵɵtextInterpolate(practica_r8);
    i0.ɵɵadvance(2);
    i0.ɵɵtextInterpolate(ctx_r1.alumnos_practica_finalizada_cantidad[j_r9]);
  }
}
function EstadisticasComponent_div_11_div_53_div_1_div_1_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div")(1, "h4", 41);
    i0.ɵɵtext(2);
    i0.ɵɵelementStart(3, "span", 42);
    i0.ɵɵtext(4);
    i0.ɵɵelementEnd()();
    i0.ɵɵelementStart(5, "div", 43);
    i0.ɵɵelement(6, "div", 44);
    i0.ɵɵelementEnd()();
  }
  if (rf & 2) {
    const k_r10 = i0.ɵɵnextContext().index;
    const ctx_r1 = i0.ɵɵnextContext(3);
    i0.ɵɵadvance(2);
    i0.ɵɵtextInterpolate1("", ctx_r1.arreglo_ramos[k_r10], " ");
    i0.ɵɵadvance(2);
    i0.ɵɵtextInterpolate1("", ctx_r1.toInt(ctx_r1.arreglo_ramos[k_r10 + 1]), "%");
    i0.ɵɵadvance(2);
    i0.ɵɵstyleMap("width: " + ctx_r1.arreglo_ramos[k_r10 + 1] + "%");
  }
}
function EstadisticasComponent_div_11_div_53_div_1_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div");
    i0.ɵɵtemplate(1, EstadisticasComponent_div_11_div_53_div_1_div_1_Template, 7, 4, "div", 5);
    i0.ɵɵelementEnd();
  }
  if (rf & 2) {
    const pos_r11 = ctx.$implicit;
    const ctx_r1 = i0.ɵɵnextContext(3);
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngIf", !ctx_r1.isNumber(pos_r11));
  }
}
function EstadisticasComponent_div_11_div_53_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div");
    i0.ɵɵtemplate(1, EstadisticasComponent_div_11_div_53_div_1_Template, 2, 1, "div", 24);
    i0.ɵɵelementEnd();
  }
  if (rf & 2) {
    const ctx_r1 = i0.ɵɵnextContext(2);
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngForOf", ctx_r1.arreglo_ramos);
  }
}
function EstadisticasComponent_div_11_div_54_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div");
    i0.ɵɵtext(1, " No hay ramos para mostrar ");
    i0.ɵɵelementEnd();
  }
}
function EstadisticasComponent_div_11_tr_70_td_3_span_2_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelement(0, "span", 48);
  }
}
function EstadisticasComponent_div_11_tr_70_td_3_span_3_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelement(0, "span", 48);
  }
}
function EstadisticasComponent_div_11_tr_70_td_3_span_4_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelement(0, "span", 48);
  }
}
function EstadisticasComponent_div_11_tr_70_td_3_span_5_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelement(0, "span", 48);
  }
}
function EstadisticasComponent_div_11_tr_70_td_3_span_6_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelement(0, "span", 48);
  }
}
function EstadisticasComponent_div_11_tr_70_td_3_span_7_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelement(0, "span", 49);
  }
}
function EstadisticasComponent_div_11_tr_70_td_3_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "td", 22);
    i0.ɵɵtext(1);
    i0.ɵɵtemplate(2, EstadisticasComponent_div_11_tr_70_td_3_span_2_Template, 1, 0, "span", 46)(3, EstadisticasComponent_div_11_tr_70_td_3_span_3_Template, 1, 0, "span", 46)(4, EstadisticasComponent_div_11_tr_70_td_3_span_4_Template, 1, 0, "span", 46)(5, EstadisticasComponent_div_11_tr_70_td_3_span_5_Template, 1, 0, "span", 46)(6, EstadisticasComponent_div_11_tr_70_td_3_span_6_Template, 1, 0, "span", 46)(7, EstadisticasComponent_div_11_tr_70_td_3_span_7_Template, 1, 0, "span", 47);
    i0.ɵɵelementEnd();
  }
  if (rf & 2) {
    const i_r12 = i0.ɵɵnextContext().index;
    const ctx_r1 = i0.ɵɵnextContext(2);
    i0.ɵɵadvance();
    i0.ɵɵtextInterpolate1(" ", ctx_r1.valoracion_empresas_top5[i_r12], " ");
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngIf", ctx_r1.cant_estrellas_completas(ctx_r1.valoracion_empresas_top5[i_r12]) >= 1);
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngIf", ctx_r1.cant_estrellas_completas(ctx_r1.valoracion_empresas_top5[i_r12]) >= 2);
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngIf", ctx_r1.cant_estrellas_completas(ctx_r1.valoracion_empresas_top5[i_r12]) >= 3);
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngIf", ctx_r1.cant_estrellas_completas(ctx_r1.valoracion_empresas_top5[i_r12]) >= 4);
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngIf", ctx_r1.cant_estrellas_completas(ctx_r1.valoracion_empresas_top5[i_r12]) >= 5);
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngIf", ctx_r1.media_estrella(ctx_r1.valoracion_empresas_top5[i_r12]));
  }
}
function EstadisticasComponent_div_11_tr_70_td_4_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "td");
    i0.ɵɵtext(1, " No hay opiniones de esta empresa ");
    i0.ɵɵelementEnd();
  }
}
function EstadisticasComponent_div_11_tr_70_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "tr")(1, "td", 22);
    i0.ɵɵtext(2);
    i0.ɵɵelementEnd();
    i0.ɵɵtemplate(3, EstadisticasComponent_div_11_tr_70_td_3_Template, 8, 7, "td", 45)(4, EstadisticasComponent_div_11_tr_70_td_4_Template, 2, 0, "td", 5);
    i0.ɵɵelementEnd();
  }
  if (rf & 2) {
    const empresa_r13 = ctx.$implicit;
    const i_r12 = ctx.index;
    const ctx_r1 = i0.ɵɵnextContext(2);
    i0.ɵɵadvance(2);
    i0.ɵɵtextInterpolate(empresa_r13);
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngIf", ctx_r1.valoracion_empresas_top5[i_r12]);
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngIf", !ctx_r1.valoracion_empresas_top5[i_r12]);
  }
}
function EstadisticasComponent_div_11_tr_87_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "tr")(1, "th", 22);
    i0.ɵɵtext(2);
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(3, "th", 40);
    i0.ɵɵtext(4);
    i0.ɵɵelementEnd()();
  }
  if (rf & 2) {
    const aptitud_r14 = ctx.$implicit;
    const j_r15 = ctx.index;
    const ctx_r1 = i0.ɵɵnextContext(2);
    i0.ɵɵadvance(2);
    i0.ɵɵtextInterpolate(aptitud_r14);
    i0.ɵɵadvance(2);
    i0.ɵɵtextInterpolate(ctx_r1.promedio_aptitudes_top5[j_r15]);
  }
}
function EstadisticasComponent_div_11_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div")(1, "div", 13)(2, "div", 14)(3, "div", 15)(4, "a", 16)(5, "h6", 17);
    i0.ɵɵtext(6, "Alumnos cursando pr\u00E1ctica");
    i0.ɵɵelementEnd()();
    i0.ɵɵelementStart(7, "div", 18)(8, "div", 19)(9, "div", 20)(10, "table", 21)(11, "thead")(12, "tr")(13, "th", 22);
    i0.ɵɵtext(14, "Tipo de pr\u00E1ctica");
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(15, "th", 23);
    i0.ɵɵtext(16, "Cantidad de alumnos");
    i0.ɵɵelementEnd()()();
    i0.ɵɵelementStart(17, "tbody");
    i0.ɵɵtemplate(18, EstadisticasComponent_div_11_tr_18_Template, 5, 2, "tr", 24);
    i0.ɵɵelementStart(19, "tr", 25)(20, "th", 26);
    i0.ɵɵtext(21, "Total");
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(22, "th", 27);
    i0.ɵɵtext(23);
    i0.ɵɵelementEnd()()()()()()()()();
    i0.ɵɵelementStart(24, "div", 14)(25, "div", 15)(26, "a", 28)(27, "h6", 17);
    i0.ɵɵtext(28, "Alumnos con pr\u00E1ctica finalizada");
    i0.ɵɵelementEnd()();
    i0.ɵɵelementStart(29, "div", 29)(30, "div", 19)(31, "div", 20)(32, "table", 21)(33, "thead")(34, "tr")(35, "th", 22);
    i0.ɵɵtext(36, "Tipo de pr\u00E1ctica");
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(37, "th", 23);
    i0.ɵɵtext(38, "Cantidad de alumnos");
    i0.ɵɵelementEnd()()();
    i0.ɵɵelementStart(39, "tbody");
    i0.ɵɵtemplate(40, EstadisticasComponent_div_11_tr_40_Template, 5, 2, "tr", 24);
    i0.ɵɵelementStart(41, "tr", 25)(42, "th", 26);
    i0.ɵɵtext(43, "Total");
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(44, "th", 27);
    i0.ɵɵtext(45);
    i0.ɵɵelementEnd()()()()()()()()();
    i0.ɵɵelementStart(46, "div", 14)(47, "div", 15)(48, "a", 30)(49, "h6", 17);
    i0.ɵɵtext(50, "Top 5 ramos m\u00E1s \u00FAtiles");
    i0.ɵɵelementEnd()();
    i0.ɵɵelementStart(51, "div", 31)(52, "div", 32);
    i0.ɵɵtemplate(53, EstadisticasComponent_div_11_div_53_Template, 2, 1, "div", 5)(54, EstadisticasComponent_div_11_div_54_Template, 2, 0, "div", 5);
    i0.ɵɵelementEnd()()()();
    i0.ɵɵelementStart(55, "div", 14)(56, "div", 15)(57, "a", 33)(58, "h6", 17);
    i0.ɵɵtext(59, "Top 5 empresas mejor valoradas");
    i0.ɵɵelementEnd()();
    i0.ɵɵelementStart(60, "div", 34)(61, "div", 35)(62, "table", 36)(63, "thead")(64, "tr")(65, "th", 37);
    i0.ɵɵtext(66, "Nombre");
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(67, "th", 37);
    i0.ɵɵtext(68, "Calificaci\u00F3n");
    i0.ɵɵelementEnd()()();
    i0.ɵɵelementStart(69, "tbody");
    i0.ɵɵtemplate(70, EstadisticasComponent_div_11_tr_70_Template, 5, 3, "tr", 24);
    i0.ɵɵelementEnd()()()()()();
    i0.ɵɵelementStart(71, "div", 14)(72, "div", 15)(73, "a", 38)(74, "h6", 17);
    i0.ɵɵtext(75, "Top 5 competencias mejor valoradas");
    i0.ɵɵelementEnd()();
    i0.ɵɵelementStart(76, "div", 39)(77, "div", 19)(78, "div", 20)(79, "table", 21)(80, "thead")(81, "tr")(82, "th", 22);
    i0.ɵɵtext(83, "Competencia");
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(84, "th", 23);
    i0.ɵɵtext(85, "Promedio evaluaci\u00F3n");
    i0.ɵɵelementEnd()()();
    i0.ɵɵelementStart(86, "tbody");
    i0.ɵɵtemplate(87, EstadisticasComponent_div_11_tr_87_Template, 5, 2, "tr", 24);
    i0.ɵɵelementEnd()()()()()()()()();
  }
  if (rf & 2) {
    const ctx_r1 = i0.ɵɵnextContext();
    i0.ɵɵadvance(18);
    i0.ɵɵproperty("ngForOf", ctx_r1.alumnos_practica_nombre);
    i0.ɵɵadvance(5);
    i0.ɵɵtextInterpolate(ctx_r1.total_alumnos_cursando_practica_cantidad);
    i0.ɵɵadvance(17);
    i0.ɵɵproperty("ngForOf", ctx_r1.alumnos_practica_nombre);
    i0.ɵɵadvance(5);
    i0.ɵɵtextInterpolate(ctx_r1.total_alumnos_finalizada_practica_cantidad);
    i0.ɵɵadvance(8);
    i0.ɵɵproperty("ngIf", ctx_r1.arreglo_ramos.length != 0);
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngIf", ctx_r1.arreglo_ramos.length == 0);
    i0.ɵɵadvance(16);
    i0.ɵɵproperty("ngForOf", ctx_r1.nombre_empresas_top5);
    i0.ɵɵadvance(17);
    i0.ɵɵproperty("ngForOf", ctx_r1.nombre_aptitudes_top5);
  }
}
function EstadisticasComponent_div_12_tr_23_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "tr")(1, "th");
    i0.ɵɵtext(2);
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(3, "th", 40);
    i0.ɵɵtext(4);
    i0.ɵɵelementEnd()();
  }
  if (rf & 2) {
    const aptitud_r17 = ctx.$implicit;
    const j_r18 = ctx.index;
    const ctx_r1 = i0.ɵɵnextContext(2);
    i0.ɵɵadvance(2);
    i0.ɵɵtextInterpolate(aptitud_r17);
    i0.ɵɵadvance(2);
    i0.ɵɵtextInterpolate(ctx_r1.promedio_aptitudes[j_r18]);
  }
}
function EstadisticasComponent_div_12_tr_35_td_1_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "td", 22);
    i0.ɵɵtext(1);
    i0.ɵɵelementEnd();
  }
  if (rf & 2) {
    const empresa_r19 = i0.ɵɵnextContext().$implicit;
    i0.ɵɵadvance();
    i0.ɵɵtextInterpolate(empresa_r19);
  }
}
function EstadisticasComponent_div_12_tr_35_td_2_Template(rf, ctx) {
  if (rf & 1) {
    const _r20 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "td")(1, "button", 62);
    i0.ɵɵlistener("click", function EstadisticasComponent_div_12_tr_35_td_2_Template_button_click_1_listener() {
      i0.ɵɵrestoreView(_r20);
      const empresa_r19 = i0.ɵɵnextContext().$implicit;
      const ctx_r1 = i0.ɵɵnextContext(2);
      return i0.ɵɵresetView(ctx_r1.openDialog("100ms", "100ms", empresa_r19));
    });
    i0.ɵɵelementStart(2, "div", 63);
    i0.ɵɵtext(3, " Ver Competencias");
    i0.ɵɵelementEnd()()();
  }
}
function EstadisticasComponent_div_12_tr_35_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "tr");
    i0.ɵɵtemplate(1, EstadisticasComponent_div_12_tr_35_td_1_Template, 2, 1, "td", 45)(2, EstadisticasComponent_div_12_tr_35_td_2_Template, 4, 0, "td", 5);
    i0.ɵɵelementEnd();
  }
  if (rf & 2) {
    const empresa_r19 = ctx.$implicit;
    const ctx_r1 = i0.ɵɵnextContext(2);
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngIf", ctx_r1.empresa_in_filtro(empresa_r19));
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngIf", ctx_r1.empresa_in_filtro(empresa_r19));
  }
}
function EstadisticasComponent_div_12_Template(rf, ctx) {
  if (rf & 1) {
    const _r16 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "div")(1, "div", 13)(2, "div", 14)(3, "div", 15)(4, "a", 50)(5, "h6", 17);
    i0.ɵɵtext(6, "Evaluaci\u00F3n competencias");
    i0.ɵɵelementEnd()();
    i0.ɵɵelementStart(7, "div", 51)(8, "div", 19)(9, "div", 52)(10, "table", 53)(11, "thead", 54)(12, "tr")(13, "th", 55);
    i0.ɵɵlistener("click", function EstadisticasComponent_div_12_Template_th_click_13_listener() {
      i0.ɵɵrestoreView(_r16);
      const ctx_r1 = i0.ɵɵnextContext();
      return i0.ɵɵresetView(ctx_r1.sort("nombre"));
    });
    i0.ɵɵtext(14, "Competencia");
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(15, "th", 56);
    i0.ɵɵlistener("click", function EstadisticasComponent_div_12_Template_th_click_15_listener() {
      i0.ɵɵrestoreView(_r16);
      const ctx_r1 = i0.ɵɵnextContext();
      return i0.ɵɵresetView(ctx_r1.sort("nota"));
    });
    i0.ɵɵtext(16, "Promedio evaluaci\u00F3n");
    i0.ɵɵelementEnd()()();
    i0.ɵɵelementStart(17, "tbody")(18, "tr")(19, "th", 57);
    i0.ɵɵtext(20, "Promedio");
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(21, "th", 58);
    i0.ɵɵtext(22);
    i0.ɵɵelementEnd()();
    i0.ɵɵtemplate(23, EstadisticasComponent_div_12_tr_23_Template, 5, 2, "tr", 24);
    i0.ɵɵelementEnd()()()()()()();
    i0.ɵɵelementStart(24, "div", 14)(25, "div", 15)(26, "a", 59)(27, "h6", 17);
    i0.ɵɵtext(28, "Competencias por empresa");
    i0.ɵɵelementEnd()();
    i0.ɵɵelementStart(29, "div", 60)(30, "div", 35)(31, "table", 36)(32, "tbody")(33, "tr")(34, "input", 61);
    i0.ɵɵtwoWayListener("ngModelChange", function EstadisticasComponent_div_12_Template_input_ngModelChange_34_listener($event) {
      i0.ɵɵrestoreView(_r16);
      const ctx_r1 = i0.ɵɵnextContext();
      i0.ɵɵtwoWayBindingSet(ctx_r1.filtro_empresas, $event) || (ctx_r1.filtro_empresas = $event);
      return i0.ɵɵresetView($event);
    });
    i0.ɵɵlistener("ngModelChange", function EstadisticasComponent_div_12_Template_input_ngModelChange_34_listener($event) {
      i0.ɵɵrestoreView(_r16);
      const ctx_r1 = i0.ɵɵnextContext();
      return i0.ɵɵresetView(ctx_r1.updateFiltroEmpresas($event));
    });
    i0.ɵɵelementEnd()();
    i0.ɵɵtemplate(35, EstadisticasComponent_div_12_tr_35_Template, 3, 2, "tr", 24);
    i0.ɵɵelementEnd()()()()()()()();
  }
  if (rf & 2) {
    const ctx_r1 = i0.ɵɵnextContext();
    i0.ɵɵadvance(13);
    i0.ɵɵclassProp("asc", ctx_r1.orden_nombre == "ascendente")("desc", ctx_r1.orden_nombre == "descendente");
    i0.ɵɵadvance(2);
    i0.ɵɵclassProp("asc", ctx_r1.orden_promedio == "ascendente")("desc", ctx_r1.orden_promedio == "descendente");
    i0.ɵɵadvance(7);
    i0.ɵɵtextInterpolate(ctx_r1.promedio_aptitudes_carrera);
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngForOf", ctx_r1.nombre_aptitudes);
    i0.ɵɵadvance(11);
    i0.ɵɵtwoWayProperty("ngModel", ctx_r1.filtro_empresas);
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngForOf", ctx_r1.nombre_empresas_con_aptitudes);
  }
}
function EstadisticasComponent_div_13_tr_18_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "tr")(1, "th", 22);
    i0.ɵɵtext(2);
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(3, "th", 23);
    i0.ɵɵtext(4);
    i0.ɵɵelementEnd()();
  }
  if (rf & 2) {
    const remuneracion_practica_r21 = ctx.$implicit;
    const ctx_r1 = i0.ɵɵnextContext(2);
    i0.ɵɵadvance(2);
    i0.ɵɵtextInterpolate(remuneracion_practica_r21.tipo);
    i0.ɵɵadvance(2);
    i0.ɵɵtextInterpolate(ctx_r1.numero_separador_miles(remuneracion_practica_r21.remuneracion));
  }
}
function EstadisticasComponent_div_13_tr_40_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "tr")(1, "th", 22);
    i0.ɵɵtext(2);
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(3, "th", 23);
    i0.ɵɵtext(4);
    i0.ɵɵelementEnd()();
  }
  if (rf & 2) {
    const remuneracion_practica_r22 = ctx.$implicit;
    const ctx_r1 = i0.ɵɵnextContext(2);
    i0.ɵɵadvance(2);
    i0.ɵɵtextInterpolate(remuneracion_practica_r22.carrera);
    i0.ɵɵadvance(2);
    i0.ɵɵtextInterpolate(ctx_r1.numero_separador_miles(remuneracion_practica_r22.remuneracion));
  }
}
function EstadisticasComponent_div_13_tr_62_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "tr")(1, "th", 22);
    i0.ɵɵtext(2);
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(3, "th", 23);
    i0.ɵɵtext(4);
    i0.ɵɵelementEnd()();
  }
  if (rf & 2) {
    const remuneracion_practica_r23 = ctx.$implicit;
    const ctx_r1 = i0.ɵɵnextContext(2);
    i0.ɵɵadvance(2);
    i0.ɵɵtextInterpolate(remuneracion_practica_r23.empresa);
    i0.ɵɵadvance(2);
    i0.ɵɵtextInterpolate(ctx_r1.numero_separador_miles(remuneracion_practica_r23.remuneracion));
  }
}
function EstadisticasComponent_div_13_tr_84_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "tr")(1, "th", 22);
    i0.ɵɵtext(2);
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(3, "th", 23);
    i0.ɵɵtext(4);
    i0.ɵɵelementEnd()();
  }
  if (rf & 2) {
    const remuneracion_practica_r24 = ctx.$implicit;
    const ctx_r1 = i0.ɵɵnextContext(2);
    i0.ɵɵadvance(2);
    i0.ɵɵtextInterpolate(remuneracion_practica_r24.ramo);
    i0.ɵɵadvance(2);
    i0.ɵɵtextInterpolate(ctx_r1.numero_separador_miles(remuneracion_practica_r24.remuneracion));
  }
}
function EstadisticasComponent_div_13_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div")(1, "div", 13)(2, "div", 14)(3, "div", 15)(4, "a", 64)(5, "h6", 17);
    i0.ɵɵtext(6, "Remuneraci\u00F3n promedio por tipo de pr\u00E1ctica");
    i0.ɵɵelementEnd()();
    i0.ɵɵelementStart(7, "div", 65)(8, "div", 19)(9, "div", 20)(10, "table", 21)(11, "thead")(12, "tr")(13, "th", 22);
    i0.ɵɵtext(14, "Tipo de pr\u00E1ctica");
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(15, "th", 23);
    i0.ɵɵtext(16, "Remuneraci\u00F3n");
    i0.ɵɵelementEnd()()();
    i0.ɵɵelementStart(17, "tbody");
    i0.ɵɵtemplate(18, EstadisticasComponent_div_13_tr_18_Template, 5, 2, "tr", 24);
    i0.ɵɵelementStart(19, "tr", 25)(20, "th", 57);
    i0.ɵɵtext(21, "Promedio");
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(22, "th", 58);
    i0.ɵɵtext(23);
    i0.ɵɵelementEnd()()()()()()()()();
    i0.ɵɵelementStart(24, "div", 14)(25, "div", 15)(26, "a", 66)(27, "h6", 17);
    i0.ɵɵtext(28, "Remuneraci\u00F3n promedio por carrera");
    i0.ɵɵelementEnd()();
    i0.ɵɵelementStart(29, "div", 67)(30, "div", 19)(31, "div", 20)(32, "table", 21)(33, "thead")(34, "tr")(35, "th", 22);
    i0.ɵɵtext(36, "Carrera");
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(37, "th", 23);
    i0.ɵɵtext(38, "Remuneraci\u00F3n");
    i0.ɵɵelementEnd()()();
    i0.ɵɵelementStart(39, "tbody");
    i0.ɵɵtemplate(40, EstadisticasComponent_div_13_tr_40_Template, 5, 2, "tr", 24);
    i0.ɵɵelementStart(41, "tr", 25)(42, "th", 57);
    i0.ɵɵtext(43, "Promedio");
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(44, "th", 58);
    i0.ɵɵtext(45);
    i0.ɵɵelementEnd()()()()()()()()();
    i0.ɵɵelementStart(46, "div", 14)(47, "div", 15)(48, "a", 68)(49, "h6", 17);
    i0.ɵɵtext(50, "Remuneraci\u00F3n promedio por empresa");
    i0.ɵɵelementEnd()();
    i0.ɵɵelementStart(51, "div", 69)(52, "div", 19)(53, "div", 20)(54, "table", 21)(55, "thead")(56, "tr")(57, "th", 22);
    i0.ɵɵtext(58, "Empresa");
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(59, "th", 23);
    i0.ɵɵtext(60, "Remuneraci\u00F3n");
    i0.ɵɵelementEnd()()();
    i0.ɵɵelementStart(61, "tbody");
    i0.ɵɵtemplate(62, EstadisticasComponent_div_13_tr_62_Template, 5, 2, "tr", 24);
    i0.ɵɵelementStart(63, "tr", 25)(64, "th", 57);
    i0.ɵɵtext(65, "Promedio");
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(66, "th", 58);
    i0.ɵɵtext(67);
    i0.ɵɵelementEnd()()()()()()()()();
    i0.ɵɵelementStart(68, "div", 14)(69, "div", 15)(70, "a", 70)(71, "h6", 17);
    i0.ɵɵtext(72, "Remuneraci\u00F3n promedio por ramo marcado como \u00FAtil");
    i0.ɵɵelementEnd()();
    i0.ɵɵelementStart(73, "div", 71)(74, "div", 19)(75, "div", 20)(76, "table", 21)(77, "thead")(78, "tr")(79, "th", 22);
    i0.ɵɵtext(80, "Ramo");
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(81, "th", 23);
    i0.ɵɵtext(82, "Remuneraci\u00F3n");
    i0.ɵɵelementEnd()()();
    i0.ɵɵelementStart(83, "tbody");
    i0.ɵɵtemplate(84, EstadisticasComponent_div_13_tr_84_Template, 5, 2, "tr", 24);
    i0.ɵɵelementStart(85, "tr", 25)(86, "th", 57);
    i0.ɵɵtext(87, "Promedio");
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(88, "th", 58);
    i0.ɵɵtext(89);
    i0.ɵɵelementEnd()()()()()()()()()()();
  }
  if (rf & 2) {
    const ctx_r1 = i0.ɵɵnextContext();
    i0.ɵɵadvance(18);
    i0.ɵɵproperty("ngForOf", ctx_r1.remuneracion_tipo_practica);
    i0.ɵɵadvance(5);
    i0.ɵɵtextInterpolate(ctx_r1.numero_separador_miles(ctx_r1.remuneracion_promedio_tipo_practica));
    i0.ɵɵadvance(17);
    i0.ɵɵproperty("ngForOf", ctx_r1.remuneracion_por_carrera);
    i0.ɵɵadvance(5);
    i0.ɵɵtextInterpolate(ctx_r1.numero_separador_miles(ctx_r1.remuneracion_promedio_por_carrera));
    i0.ɵɵadvance(17);
    i0.ɵɵproperty("ngForOf", ctx_r1.remuneracion_por_empresa);
    i0.ɵɵadvance(5);
    i0.ɵɵtextInterpolate(ctx_r1.numero_separador_miles(ctx_r1.remuneracion_promedio_por_empresa));
    i0.ɵɵadvance(17);
    i0.ɵɵproperty("ngForOf", ctx_r1.remuneracion_por_ramo_util);
    i0.ɵɵadvance(5);
    i0.ɵɵtextInterpolate(ctx_r1.numero_separador_miles(ctx_r1.remuneracion_promedio_por_ramo_util));
  }
}
function EstadisticasComponent_div_14_option_7_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "option", 78);
    i0.ɵɵtext(1);
    i0.ɵɵelementEnd();
  }
  if (rf & 2) {
    const config_practica_r26 = ctx.$implicit;
    i0.ɵɵproperty("value", config_practica_r26.id);
    i0.ɵɵadvance();
    i0.ɵɵtextInterpolate1(" ", config_practica_r26.nombre, "");
  }
}
function EstadisticasComponent_div_14_div_9_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div");
    i0.ɵɵtext(1, " No hay estad\u00EDsticas para mostrar ");
    i0.ɵɵelementEnd();
  }
}
function EstadisticasComponent_div_14_div_10_div_6_div_1_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div")(1, "h4", 41);
    i0.ɵɵtext(2);
    i0.ɵɵelementStart(3, "span", 42);
    i0.ɵɵtext(4);
    i0.ɵɵelementEnd()();
    i0.ɵɵelementStart(5, "div", 43);
    i0.ɵɵelement(6, "div", 44);
    i0.ɵɵelementEnd()();
  }
  if (rf & 2) {
    const k_r27 = i0.ɵɵnextContext().index;
    const pregunta_r28 = i0.ɵɵnextContext().$implicit;
    const ctx_r1 = i0.ɵɵnextContext(2);
    i0.ɵɵadvance(2);
    i0.ɵɵtextInterpolate1("", pregunta_r28[k_r27], " ");
    i0.ɵɵadvance(2);
    i0.ɵɵtextInterpolate1("", ctx_r1.toInt(pregunta_r28[k_r27 + 1]), "%");
    i0.ɵɵadvance(2);
    i0.ɵɵstyleMap("width: " + pregunta_r28[k_r27 + 1] + "%");
  }
}
function EstadisticasComponent_div_14_div_10_div_6_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div");
    i0.ɵɵtemplate(1, EstadisticasComponent_div_14_div_10_div_6_div_1_Template, 7, 4, "div", 5);
    i0.ɵɵelementEnd();
  }
  if (rf & 2) {
    const pos_r29 = ctx.$implicit;
    const k_r27 = ctx.index;
    const ctx_r1 = i0.ɵɵnextContext(3);
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngIf", !ctx_r1.isNumber(pos_r29) && k_r27 > 1);
  }
}
function EstadisticasComponent_div_14_div_10_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 14)(1, "div", 15)(2, "div", 79)(3, "h6", 17);
    i0.ɵɵtext(4);
    i0.ɵɵelementEnd()();
    i0.ɵɵelementStart(5, "div", 32);
    i0.ɵɵtemplate(6, EstadisticasComponent_div_14_div_10_div_6_Template, 2, 1, "div", 24);
    i0.ɵɵelementEnd()()();
  }
  if (rf & 2) {
    const pregunta_r28 = ctx.$implicit;
    i0.ɵɵadvance(4);
    i0.ɵɵtextInterpolate1(" ", pregunta_r28[1], " ");
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngForOf", pregunta_r28);
  }
}
function EstadisticasComponent_div_14_Template(rf, ctx) {
  if (rf & 1) {
    const _r25 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "div")(1, "div", 72)(2, "h2", 73);
    i0.ɵɵtext(3, "Respuestas de estudiantes en encuesta realizada al finalizar la pr\u00E1ctica");
    i0.ɵɵelementEnd()();
    i0.ɵɵelementStart(4, "select", 74);
    i0.ɵɵlistener("change", function EstadisticasComponent_div_14_Template_select_change_4_listener($event) {
      i0.ɵɵrestoreView(_r25);
      const ctx_r1 = i0.ɵɵnextContext();
      return i0.ɵɵresetView(ctx_r1.cambiar_config_practica($event));
    });
    i0.ɵɵelementStart(5, "option", 75);
    i0.ɵɵtext(6, "Seleccione pr\u00E1ctica a mostrar");
    i0.ɵɵelementEnd();
    i0.ɵɵtemplate(7, EstadisticasComponent_div_14_option_7_Template, 2, 2, "option", 76);
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(8, "div", 13);
    i0.ɵɵtemplate(9, EstadisticasComponent_div_14_div_9_Template, 2, 0, "div", 5)(10, EstadisticasComponent_div_14_div_10_Template, 7, 2, "div", 77);
    i0.ɵɵelementEnd()();
  }
  if (rf & 2) {
    const ctx_r1 = i0.ɵɵnextContext();
    i0.ɵɵadvance(7);
    i0.ɵɵproperty("ngForOf", ctx_r1.AUX_config_practicas);
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngIf", ctx_r1.largo_arreglo(ctx_r1.preguntas_mostrar) == 0 && ctx_r1.id_config_practica_mostrar != 0);
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngForOf", ctx_r1.preguntas_mostrar);
  }
}
function Dialog_tr_12_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "tr")(1, "th", 4);
    i0.ɵɵtext(2);
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(3, "th", 5);
    i0.ɵɵtext(4);
    i0.ɵɵelementEnd()();
  }
  if (rf & 2) {
    const aptitud_r1 = ctx.$implicit;
    const j_r2 = ctx.index;
    const ctx_r2 = i0.ɵɵnextContext();
    i0.ɵɵadvance(2);
    i0.ɵɵtextInterpolate(aptitud_r1);
    i0.ɵɵadvance(2);
    i0.ɵɵtextInterpolate(ctx_r2.data.promedio_aptitudes[j_r2]);
  }
}
class EstadisticasComponent {
  constructor(dialog, _fb, cd, document, router, serviceUsuario, serviceBarra, _snackBar, route, serviceConfig, serviceCarrera, serviceEmpresa, servicePreguntas, _snackbar, serviceEstadisticas) {
    this.dialog = dialog;
    this._fb = _fb;
    this.cd = cd;
    this.document = document;
    this.router = router;
    this.serviceUsuario = serviceUsuario;
    this.serviceBarra = serviceBarra;
    this._snackBar = _snackBar;
    this.route = route;
    this.serviceConfig = serviceConfig;
    this.serviceCarrera = serviceCarrera;
    this.serviceEmpresa = serviceEmpresa;
    this.servicePreguntas = servicePreguntas;
    this._snackbar = _snackbar;
    this.serviceEstadisticas = serviceEstadisticas;
    this.sesion = JSON.parse(localStorage.getItem("auth-user") || "{}");
    this.id_config_practica_mostrar = 0; //va a ir cambiando con una funcion
    this.preguntas_mostrar = []; //arreglo varia segun id_config_practica_mostrar
    this.AUX_config_practicas = [];
    this.AUX_respuestas_encuestas = [];
    this.AUX_preguntas_encuestas = [];
    this.filtro_empresas = "";
    this.filtroEmpresaFORM = new forms_1.FormControl('');
    //preguntas_por_config_practica: any[][] = [];
    //respuestas_por_pregunta: any[][] = [];
    this.preguntas_abiertas_respuestas = [];
    this.preguntas_casillas_alternativas_respuestas = [];
    this.preguntas_estadisticas_AUX = [];
    this.preguntas_estadisticas = [];
    //estadisticas aptitudes general
    this.promedio_aptitudes_carrera = 0;
    this.nombre_aptitudes = [];
    this.promedio_aptitudes = [];
    this.nombre_aptitudes_top5 = [];
    this.promedio_aptitudes_top5 = [];
    this.dia_actualizacion_DB = 0;
    this.vista_actual = "general";
    //remuneracion
    this.remuneracion_tipo_practica = [];
    this.remuneracion_promedio_tipo_practica = 0;
    this.remuneracion_por_carrera = [];
    this.remuneracion_promedio_por_carrera = 0;
    this.remuneracion_por_empresa = [];
    this.remuneracion_promedio_por_empresa = 0;
    this.remuneracion_por_ramo_util = [];
    this.remuneracion_promedio_por_ramo_util = 0;
    //generales
    this.alumnos_practica_nombre = [];
    this.alumnos_cursando_practica_cantidad = [];
    this.alumnos_practica_finalizada_cantidad = [];
    this.total_alumnos_finalizada_practica_cantidad = 0;
    this.total_alumnos_cursando_practica_cantidad = 0;
    //ramos
    this.arreglo_ramos = [];
    this.ramos = [];
    this.porcentajes = [];
    this.ramos_top5 = [];
    this.porcentajes_top5 = [];
    this.arreglo_ramos_top5 = [];
    //valoracion_empresas
    this.nombre_empresas = [];
    this.valoracion_empresas = [];
    this.nombre_empresas_top5 = [];
    this.valoracion_empresas_top5 = [];
    this.top5_empresas = [];
    this.top5_aptitudes = [];
    //aptitudes
    this.jsons_empresas = [];
    this.aptitudes_empresas = [];
    this.nombre_empresas_con_aptitudes = [];
    this.aptitudes_empresas_con_aptitudes = [];
    this.id_carrera_encargado = 0;
    this.orden_nombre = "";
    this.orden_promedio = "";
  }
  ngOnInit() {
    let id_usuario = this.sesion.userdata.id;
    //console.log("id_usuario: ", id_usuario);
    let respuesta = {};
    this.serviceUsuario.obtener_encargado(id_usuario).subscribe({
      next: data => {
        //console.log(data);
        respuesta = {
          ...respuesta,
          ...data
        };
      },
      error: error => {
        console.log(error);
      },
      complete: () => {
        this.id_carrera_encargado = respuesta.body.id_carrera;
        //------------- ESTADISTIOCAS RAMOS ----------------
        this.serviceCarrera.obtener_carrera(respuesta.body.id_carrera).subscribe({
          next: data => {
            //console.log(data);
            respuesta = {
              ...respuesta,
              ...data
            };
          },
          error: error => {
            console.log(error);
          },
          complete: () => {
            this.promedio_aptitudes_carrera = respuesta.body.promedio_aptitudes.array[0];
            //console.log("promedio_aptitudes_carrera: ", this.promedio_aptitudes_carrera);
            for (let i = 1; i < respuesta.body.promedio_aptitudes.array.length; i++) {
              if (this.isNumber(respuesta.body.promedio_aptitudes.array[i])) {
                this.promedio_aptitudes.push(Number(respuesta.body.promedio_aptitudes.array[i]));
              } else {
                this.nombre_aptitudes.push(String(respuesta.body.promedio_aptitudes.array[i]));
              }
            }
            //console.log("nombre_aptitudes: ", this.nombre_aptitudes);
            //console.log("promedio_aptitudes: ", this.promedio_aptitudes);
            for (let i = 0; i < this.promedio_aptitudes.length; i++) {
              for (let k = 0; k < this.promedio_aptitudes.length; k++) {
                if (this.promedio_aptitudes[i] > this.promedio_aptitudes[k]) {
                  let aux = this.promedio_aptitudes[i];
                  this.promedio_aptitudes[i] = this.promedio_aptitudes[k];
                  this.promedio_aptitudes[k] = aux;
                  let aux2 = this.nombre_aptitudes[i];
                  this.nombre_aptitudes[i] = this.nombre_aptitudes[k];
                  this.nombre_aptitudes[k] = aux2;
                }
              }
            }
            //console.log("nombre_aptitudes_ordenado: ", this.nombre_aptitudes);
            //console.log("promedio_aptitudes_ordenado: ", this.promedio_aptitudes);
            if (this.nombre_aptitudes.length >= 5) {
              this.nombre_aptitudes_top5 = this.nombre_aptitudes.slice(0, 5);
              this.promedio_aptitudes_top5 = this.promedio_aptitudes.slice(0, 5);
            }
            //console.log("nombre_aptitudes_top5: ", this.nombre_aptitudes_top5);
            //console.log("promedio_aptitudes_top5: ", this.promedio_aptitudes_top5);
            this.arreglo_ramos = respuesta.body.estadistica_ramos.array[0];
            for (let i = 0; i < this.arreglo_ramos.length; i++) {
              if (this.isNumber(this.arreglo_ramos[i])) {
                this.porcentajes.push(Number(this.arreglo_ramos[i]));
              } else {
                this.ramos.push(String(this.arreglo_ramos[i]));
              }
            }
            for (let i = 0; i < this.ramos.length; i++) {
              this.ramos_top5.push(this.ramos[i]);
              this.porcentajes_top5.push(this.porcentajes[i]);
            }
            //ordenar porcentaje de mayor a menor
            for (let i = 0; i < this.porcentajes_top5.length; i++) {
              for (let k = 0; k < this.porcentajes_top5.length; k++) {
                if (this.porcentajes_top5[i] > this.porcentajes_top5[k]) {
                  let aux = this.porcentajes_top5[i];
                  this.porcentajes_top5[i] = this.porcentajes_top5[k];
                  this.porcentajes_top5[k] = aux;
                  let aux2 = this.ramos_top5[i];
                  this.ramos_top5[i] = this.ramos_top5[k];
                  this.ramos_top5[k] = aux2;
                }
              }
            }
            for (let i = 0; i < 5; i++) {
              if (this.ramos_top5[i] != undefined) {
                //this.ramos_top5[i] = " ";
                this.arreglo_ramos_top5.push(this.ramos_top5[i]);
                this.arreglo_ramos_top5.push(this.porcentajes_top5[i]);
              }
            }
            this.arreglo_ramos = this.arreglo_ramos_top5;
            //console.log("Arreglo top 5: ");
            //console.log(this.arreglo_ramos);
          }
        });
        //------------ FIN ESTADISTICAS RAMOS --------------
        //obteniendo datos remuneracion por tipo de practica
        this.serviceConfig.obtener_config_practica_carrera(respuesta.body.id_carrera).subscribe({
          next: data => {
            //console.log(data);
            respuesta = {
              ...respuesta,
              ...data
            };
          },
          error: error => {
            console.log(error);
          },
          complete: () => {
            //console.log("config_practica_carrera: ", respuesta.body);
            this.AUX_config_practicas = respuesta.body;
            //obteniendo datos remuneracion por tipo de practica
            let cantidad_tipos_practicas_remuneracion = 0;
            for (let i = 0; i < this.AUX_config_practicas.length; i++) {
              this.alumnos_practica_nombre.push(this.AUX_config_practicas[i].nombre);
              this.alumnos_cursando_practica_cantidad.push(0);
              this.alumnos_practica_finalizada_cantidad.push(0);
            }
            for (let i = 0; i < this.AUX_config_practicas.length; i++) {
              //let aux_cantidad_cursando = 0;
              //let aux_cantidad_finalizada = 0;
              //contando cantidad de alumnos cursando practica y con practica finalizada
              this.serviceConfig.obtener_practicas_config_practica(this.AUX_config_practicas[i].id).subscribe({
                next: data => {
                  //console.log(data);
                  respuesta = {
                    ...respuesta,
                    ...data
                  };
                },
                error: error => {
                  console.log(error);
                },
                complete: () => {
                  //console.log("practicas_por_config_practica de ID ", this.AUX_config_practicas[i].id, " : ");
                  //console.log(respuesta.body)
                  let pos_config_practica = this.alumnos_practica_nombre.indexOf(this.AUX_config_practicas[i].nombre);
                  for (i = 0; i < respuesta.body.length; i++) {
                    if (respuesta.body[i].estado == "Finalizada" || respuesta.body[i].estado == "Aprobada" || respuesta.body[i].estado == "Reprobada") {
                      this.alumnos_practica_finalizada_cantidad[pos_config_practica]++;
                      this.total_alumnos_finalizada_practica_cantidad++;
                    } else {
                      this.alumnos_cursando_practica_cantidad[pos_config_practica]++;
                      this.total_alumnos_cursando_practica_cantidad++;
                    }
                  }
                  //this.alumnos_cursando_practica_cantidad.push(aux_cantidad_cursando);
                  //this.alumnos_practica_finalizada_cantidad.push(aux_cantidad_finalizada);
                  //console.log("alumnos_practica_nombre: ", this.alumnos_practica_nombre);
                  //console.log("alumnos_cursando_practica_cantidad: ", this.alumnos_cursando_practica_cantidad);
                  //console.log("alumnos_practica_finalizada_cantidad: ", this.alumnos_practica_finalizada_cantidad);
                }
              });
              //---------------------FIN CONTANDO ALUMNOS POR PRACTICA------------------    
              if (this.AUX_config_practicas[i].sueldo_promedio != 0 && this.AUX_config_practicas[i].sueldo_promedio != null) {
                this.remuneracion_tipo_practica.push({
                  tipo: this.AUX_config_practicas[i].nombre,
                  remuneracion: this.AUX_config_practicas[i].sueldo_promedio
                });
                this.remuneracion_promedio_tipo_practica += this.AUX_config_practicas[i].sueldo_promedio;
                cantidad_tipos_practicas_remuneracion++;
              }
            }
            this.remuneracion_promedio_tipo_practica = Math.floor(this.remuneracion_promedio_tipo_practica / cantidad_tipos_practicas_remuneracion);
            this.serviceEstadisticas.obtener_todas_estadisticas().subscribe({
              next: data => {
                respuesta = {
                  ...respuesta,
                  ...data
                };
              },
              error: error => {
                console.log(error);
              },
              complete: () => {
                this.preguntas_estadisticas_AUX = respuesta.body;
                for (let x = 0; x < this.preguntas_estadisticas_AUX.length; x++) {
                  this.preguntas_estadisticas.push(this.preguntas_estadisticas_AUX[x].pregunta_respuestas.array);
                }
              }
            });
            //obtenemos datos remuneracion por carrera y ramo marcado como util
            this.serviceCarrera.obtener_carreras().subscribe({
              next: data => {
                respuesta = {
                  ...respuesta,
                  ...data
                };
              },
              error: error => {
                console.log(error);
              },
              complete: () => {
                //console.log("carreras: ", respuesta.body);
                let cantidad_carreras_remuneracion = 0;
                for (let i = 0; i < respuesta.body.length; i++) {
                  if (respuesta.body[i].sueldo_promedio != 0 && respuesta.body[i].sueldo_promedio != null) {
                    this.remuneracion_por_carrera.push({
                      carrera: respuesta.body[i].nombre,
                      remuneracion: respuesta.body[i].sueldo_promedio
                    });
                    this.remuneracion_promedio_por_carrera += respuesta.body[i].sueldo_promedio;
                    cantidad_carreras_remuneracion++;
                  }
                  if (respuesta.body[i].id == this.id_carrera_encargado) {
                    let sueldo_ramos_AUX = respuesta.body[i].sueldo_ramos.array;
                    //console.log("sueldo_ramos_AUX: ", sueldo_ramos_AUX);
                    for (let j = 0; j < sueldo_ramos_AUX.length; j = j + 2) {
                      //console.log("j: ", j);
                      //console.log("sueldo_ramos_AUX[j]: ", sueldo_ramos_AUX[j]);
                      //console.log("sueldo_ramos_AUX[j+1]: ", sueldo_ramos_AUX[j+1]);
                      this.remuneracion_por_ramo_util.push({
                        ramo: sueldo_ramos_AUX[j],
                        remuneracion: sueldo_ramos_AUX[j + 1]
                      });
                      this.remuneracion_promedio_por_ramo_util += sueldo_ramos_AUX[j + 1];
                    }
                    this.remuneracion_promedio_por_ramo_util = Math.floor(this.remuneracion_promedio_por_ramo_util / (sueldo_ramos_AUX.length / 2));
                  }
                }
                this.remuneracion_promedio_por_carrera = Math.floor(this.remuneracion_promedio_por_carrera / cantidad_carreras_remuneracion);
                //console.log("remuneracion_por_carrera: ", this.remuneracion_por_carrera);
                //console.log("remuneracion_promedio_por_carrera: ", this.remuneracion_promedio_por_carrera);
              }
            });
            //obtenemos datos remuneracion por empresa
            this.serviceEmpresa.obtener_empresas().subscribe({
              next: data => {
                respuesta = {
                  ...respuesta,
                  ...data
                };
              },
              error: error => {
                console.log(error);
              },
              complete: () => {
                //console.log("empresas: ", respuesta.body);
                let cantidad_empresas_remuneracion = 0;
                for (let i = 0; i < respuesta.body.length; i++) {
                  this.jsons_empresas.push(respuesta.body[i].promedio_aptitudes);
                  this.nombre_empresas.push(respuesta.body[i].nombre_empresa);
                  this.valoracion_empresas.push(respuesta.body[i].calificacion_promedio);
                  if (respuesta.body[i].sueldo_promedio != 0 && respuesta.body[i].sueldo_promedio != null) {
                    this.remuneracion_por_empresa.push({
                      empresa: respuesta.body[i].nombre_empresa,
                      remuneracion: respuesta.body[i].sueldo_promedio
                    });
                    this.remuneracion_promedio_por_empresa += respuesta.body[i].sueldo_promedio;
                    cantidad_empresas_remuneracion++;
                  }
                }
                //console.log("nombre_empresas: ", this.nombre_empresas)
                //console.log("jsons_empresas: ", this.jsons_empresas)
                //console.log("id_carrera_encargado", this.id_carrera_encargado)
                for (let i = 0; i < this.jsons_empresas.length; i++) {
                  this.aptitudes_empresas.push(this.jsons_empresas[i][this.id_carrera_encargado]);
                  //console.log("jsons_empresas[i]: ", this.jsons_empresas[i][this.id_carrera_encargado])
                }
                //console.log("aptitudes_empresas: ", this.aptitudes_empresas)
                //filtrando empresas por carrera
                //console.log("valoracion_empresas: ", this.valoracion_empresas)
                //ordenar valoracion de mayor a menor
                for (let i = 0; i < this.valoracion_empresas.length; i++) {
                  for (let k = 0; k < this.valoracion_empresas.length; k++) {
                    if (this.valoracion_empresas[i] > this.valoracion_empresas[k]) {
                      let aux = this.valoracion_empresas[i];
                      this.valoracion_empresas[i] = Math.round(this.valoracion_empresas[k] * 10) / 10;
                      this.valoracion_empresas[k] = aux;
                      let aux2 = this.nombre_empresas[i];
                      this.nombre_empresas[i] = this.nombre_empresas[k];
                      this.nombre_empresas[k] = aux2;
                      let aux3 = this.aptitudes_empresas[i];
                      this.aptitudes_empresas[i] = this.aptitudes_empresas[k];
                      this.aptitudes_empresas[k] = aux3;
                    }
                  }
                }
                for (let i = 0; i < this.nombre_empresas.length; i++) {
                  if (this.aptitudes_empresas[i] != null) {
                    if (this.aptitudes_empresas[i].length != 0) {
                      this.nombre_empresas_con_aptitudes.push(this.nombre_empresas[i]);
                      this.aptitudes_empresas_con_aptitudes.push(this.aptitudes_empresas[i]);
                    }
                  }
                }
                //console.log("nombre_empresas_con_aptitudes: ", this.nombre_empresas_con_aptitudes)
                //console.log("aptitudes_empresas_con_aptitudes: ", this.aptitudes_empresas_con_aptitudes)
                //console.log("nombre_empresas_ordenado: ", this.nombre_empresas)
                //console.log("valoracion_empresas_ordenado: ", this.valoracion_empresas)
                this.nombre_empresas_top5 = this.nombre_empresas.slice(0, 5);
                this.valoracion_empresas_top5 = this.valoracion_empresas.slice(0, 5);
                //console.log("nombre_empresas_ordenado_TOP5: ", this.nombre_empresas_top5)
                //console.log("valoracion_empresas_ordenado_TOP5: ", this.valoracion_empresas_top5)
                this.remuneracion_promedio_por_empresa = Math.floor(this.remuneracion_promedio_por_empresa / cantidad_empresas_remuneracion);
              }
            });
          }
        });
      }
    });
  }
  cambiar_config_practica(arg) {
    this.id_config_practica_mostrar = arg.target.value;
    this.preguntas_mostrar = [];
    for (let i = 0; i < this.preguntas_estadisticas.length; i++) {
      if (this.preguntas_estadisticas[i][0] == this.id_config_practica_mostrar) {
        this.preguntas_mostrar.push(this.preguntas_estadisticas[i]);
      }
    }
  }
  cambio_vista(arg) {
    if (arg == "general") {
      //console.log("general");
      this.vista_actual = "general";
    } else if (arg == "aptitudes") {
      //console.log("aptitudes");
      this.vista_actual = "aptitudes";
    } else if (arg == "remuneracion") {
      //console.log("remuneracion");
      this.vista_actual = "remuneracion";
    } else if (arg == "encuesta") {
      //console.log("encuesta_final");
      this.vista_actual = "encuesta";
    }
  }
  isNumber(val) {
    return typeof val === 'number';
  }
  largo_arreglo(arg) {
    return arg.length;
  }
  toInt(arg) {
    return parseInt(arg);
  }
  scrollToTop() {
    this.document.body.scrollTop = 0;
    this.document.documentElement.scrollTop = 0;
  }
  cant_estrellas_completas(calificacion) {
    let cant = 0;
    if (calificacion == null) {
      return 0;
    } else if (calificacion < 1) {
      return 0;
    } else if (calificacion < 2) {
      return 1;
    } else if (calificacion < 3) {
      return 2;
    } else if (calificacion < 4) {
      return 3;
    } else if (calificacion < 5) {
      return 4;
    } else if (calificacion == 5) {
      return 5;
    } else {
      return 0;
    }
  }
  media_estrella(calificacion) {
    if (calificacion == null) {
      return false;
    }
    let decimal = calificacion - Math.floor(calificacion);
    if (decimal < 0.5) {
      return false;
    } else {
      return true;
    }
  }
  sort(ordenar_por) {
    //console.log("ordenar_por: ", ordenar_por);
    if (ordenar_por == "nombre") {
      this.orden_promedio = "";
      if (this.orden_nombre == "descendente" || this.orden_nombre == "") {
        this.orden_nombre = "ascendente";
        //ordenando aptitudes de forma ascendente por nombre aptitudes
        for (let i = 0; i < this.nombre_aptitudes.length; i++) {
          for (let k = 0; k < this.nombre_aptitudes.length; k++) {
            if (this.nombre_aptitudes[i] < this.nombre_aptitudes[k]) {
              let aux = this.nombre_aptitudes[i];
              this.nombre_aptitudes[i] = this.nombre_aptitudes[k];
              this.nombre_aptitudes[k] = aux;
              let aux2 = this.promedio_aptitudes[i];
              this.promedio_aptitudes[i] = this.promedio_aptitudes[k];
              this.promedio_aptitudes[k] = aux2;
            }
          }
        }
      } else {
        this.orden_nombre = "descendente";
        //ordenando aptitudes de forma descendente por nombre aptitudes
        for (let i = 0; i < this.nombre_aptitudes.length; i++) {
          for (let k = 0; k < this.nombre_aptitudes.length; k++) {
            if (this.nombre_aptitudes[i] > this.nombre_aptitudes[k]) {
              let aux = this.nombre_aptitudes[i];
              this.nombre_aptitudes[i] = this.nombre_aptitudes[k];
              this.nombre_aptitudes[k] = aux;
              let aux2 = this.promedio_aptitudes[i];
              this.promedio_aptitudes[i] = this.promedio_aptitudes[k];
              this.promedio_aptitudes[k] = aux2;
            }
          }
        }
      }
      //console.log("nombre_aptitudes_ordenado: ", this.nombre_aptitudes)
      //console.log("promedio_aptitudes_ordenado: ", this.promedio_aptitudes)
    } else if (ordenar_por == "nota") {
      this.orden_nombre = "";
      if (this.orden_promedio == "descendente" || this.orden_promedio == "") {
        this.orden_promedio = "ascendente";
        //ordenando aptitudes de forma ascendente por promedio aptitudes
        for (let i = 0; i < this.promedio_aptitudes.length; i++) {
          for (let k = 0; k < this.promedio_aptitudes.length; k++) {
            if (this.promedio_aptitudes[i] == this.promedio_aptitudes[k]) {
              if (this.nombre_aptitudes[i] > this.nombre_aptitudes[k]) {
                let aux = this.promedio_aptitudes[i];
                this.promedio_aptitudes[i] = this.promedio_aptitudes[k];
                this.promedio_aptitudes[k] = aux;
                let aux2 = this.nombre_aptitudes[i];
                this.nombre_aptitudes[i] = this.nombre_aptitudes[k];
                this.nombre_aptitudes[k] = aux2;
              }
            }
            if (this.promedio_aptitudes[i] > this.promedio_aptitudes[k]) {
              let aux = this.promedio_aptitudes[i];
              this.promedio_aptitudes[i] = this.promedio_aptitudes[k];
              this.promedio_aptitudes[k] = aux;
              let aux2 = this.nombre_aptitudes[i];
              this.nombre_aptitudes[i] = this.nombre_aptitudes[k];
              this.nombre_aptitudes[k] = aux2;
            }
          }
        }
      } else {
        this.orden_promedio = "descendente";
        //ordenando aptitudes de forma descendente por promdeio aptitudes
        for (let i = 0; i < this.promedio_aptitudes.length; i++) {
          for (let k = 0; k < this.promedio_aptitudes.length; k++) {
            if (this.promedio_aptitudes[i] == this.promedio_aptitudes[k]) {
              if (this.nombre_aptitudes[i] < this.nombre_aptitudes[k]) {
                let aux = this.promedio_aptitudes[i];
                this.promedio_aptitudes[i] = this.promedio_aptitudes[k];
                this.promedio_aptitudes[k] = aux;
                let aux2 = this.nombre_aptitudes[i];
                this.nombre_aptitudes[i] = this.nombre_aptitudes[k];
                this.nombre_aptitudes[k] = aux2;
              }
            }
            if (this.promedio_aptitudes[i] < this.promedio_aptitudes[k]) {
              let aux = this.promedio_aptitudes[i];
              this.promedio_aptitudes[i] = this.promedio_aptitudes[k];
              this.promedio_aptitudes[k] = aux;
              let aux2 = this.nombre_aptitudes[i];
              this.nombre_aptitudes[i] = this.nombre_aptitudes[k];
              this.nombre_aptitudes[k] = aux2;
            }
          }
        }
      }
    }
  }
  updateFiltroEmpresas(filtro) {
    //console.log("filtro: ", filtro);
    this.filtro_empresas = filtro;
  }
  empresa_in_filtro(nombre_empresa) {
    let nombre_empresa_minusculas = nombre_empresa.toLowerCase();
    let filtro_minusculas = this.filtro_empresas.toLowerCase();
    if (nombre_empresa_minusculas.includes(filtro_minusculas)) {
      return true;
    } else {
      return false;
    }
  }
  numero_separador_miles(numero) {
    console.log("numero: ", numero);
    return numero.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ".");
  }
  openDialog(enterAnimationDuration, exitAnimationDuration, nombre_empresa) {
    /*
    for (let i = 0; i < this.empresas.length; i++){
      if (this.empresas[i].id == id_empresa){
             this.comentarios_empresa = this.comentarios[i];
        this.nombre_empresa_comentario = this.empresas[i].nombre_empresa;
        if (this.palabras_clave_empresa[i]){
          this.palabras_clave_una_empresa = this.palabras_clave_empresa[i].split(',');
        }
        else{
          this.palabras_clave_una_empresa = [];
        }
        //this.comentarios_empresa.splice(0, 1);
        //this.comentarios_empresa.shift();
        break;
      }
    }
    */
    //this.comentarios_empresa.shift();
    let pos_empresa = this.nombre_empresas_con_aptitudes.indexOf(nombre_empresa);
    let aptitudes_empresa = this.aptitudes_empresas_con_aptitudes[pos_empresa];
    let aptitudes_empresa_aux = [];
    let promedio_aptitudes_empresa_aux = [];
    for (let i = 0; i < aptitudes_empresa.length; i++) {
      if (this.isNumber(aptitudes_empresa[i])) {
        promedio_aptitudes_empresa_aux.push(aptitudes_empresa[i]);
      } else {
        aptitudes_empresa_aux.push(aptitudes_empresa[i]);
      }
    }
    const dialogRef = this.dialog.open(Dialog, {
      width: '800px',
      enterAnimationDuration,
      exitAnimationDuration,
      data: {
        nombre_empresa: nombre_empresa,
        aptitudes: aptitudes_empresa_aux,
        promedio_aptitudes: promedio_aptitudes_empresa_aux
      }
    });
  }
  static {
    this.ɵfac = function EstadisticasComponent_Factory(__ngFactoryType__) {
      return new (__ngFactoryType__ || EstadisticasComponent)(i0.ɵɵdirectiveInject(i1.MatDialog), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(common_1.DOCUMENT), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.DataUsuarioService), i0.ɵɵdirectiveInject(i5.BarraLateralService), i0.ɵɵdirectiveInject(i6.MatSnackBar), i0.ɵɵdirectiveInject(i3.ActivatedRoute), i0.ɵɵdirectiveInject(i7.ConfigService), i0.ɵɵdirectiveInject(i8.CarreraService), i0.ɵɵdirectiveInject(i9.EmpresaService), i0.ɵɵdirectiveInject(i10.PreguntasEncuestaFinalService), i0.ɵɵdirectiveInject(i6.MatSnackBar), i0.ɵɵdirectiveInject(i11.EstadisticasService));
    };
  }
  static {
    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({
      type: EstadisticasComponent,
      selectors: [["app-estadisticas"]],
      decls: 18,
      vars: 8,
      consts: [["id", "wrapper"], ["id", "content-wrapper", 1, "d-flex", "flex-column"], ["id", "content", 1, "main-content"], [1, "container-fluid"], ["class", "nav nav-pills nav-justified", 4, "ngIf"], [4, "ngIf"], [1, "scroll-to-top", "rounded", 3, "click"], [1, "fas", "fa-angle-up"], [1, "nav", "nav-pills", "nav-justified"], [1, "h3", "mb-0", "text-gray-800", 2, "padding-top", "3%"], [1, "nav-item"], [1, "nav-link", "active", 3, "click"], [1, "nav-link", 3, "click"], [1, "row"], [1, "col-lg-6", "mb-4"], [1, "card", "shadow", "mb-4"], ["href", "#collapseCardCursandoPractica", "data-toggle", "collapse", "role", "button", "aria-expanded", "true", "aria-controls", "collapseCardCursandoPractica", 1, "d-block", "card-header", "py-3"], [1, "m-0", "font-weight-bold", "text-primary", 2, "font-size", "large"], ["id", "collapseCardCursandoPractica", 1, "collapse", "show"], [1, "overflow-auto"], [1, "table-responsive"], ["id", "dataTable", "width", "100%", "cellspacing", "0", 1, "table", "table-bordered", "hover"], [2, "text-align", "left"], [2, "text-align", "right"], [4, "ngFor", "ngForOf"], [1, "table-light"], [2, "background-color", "#F9F9F9"], [1, "numero", 2, "background-color", "#F9F9F9"], ["href", "#collapseCardPracticaFinalizada", "data-toggle", "collapse", "role", "button", "aria-expanded", "true", "aria-controls", "collapseCardPracticaFinalizada", 1, "d-block", "card-header", "py-3"], ["id", "collapseCardPracticaFinalizada", 1, "collapse", "show"], ["href", "#collapseCard5Ramos", "data-toggle", "collapse", "role", "button", "aria-expanded", "true", "aria-controls", "collapseCard5Ramos", 1, "d-block", "card-header", "py-3"], ["id", "collapseCard5Ramos", 1, "collapse", "show"], [1, "card-body"], ["href", "#collapseCard5Empresas", "data-toggle", "collapse", "role", "button", "aria-expanded", "true", "aria-controls", "collapseCard5Empresas", 1, "d-block", "card-header", "py-3"], ["id", "collapseCard5Empresas", 1, "collapse", "show"], [1, "table"], ["id", "dataTable", 1, "table", "table-striped", "table-bordered", 2, "width", "100%"], [2, "vertical-align", "bottom", "text-align", "left"], ["href", "#collapseCard5Aptitudes", "data-toggle", "collapse", "role", "button", "aria-expanded", "true", "aria-controls", "collapseCardAptitudes", 1, "d-block", "card-header", "py-3"], ["id", "collapseCard5Aptitudes", 1, "collapse", "show"], [1, "numero"], [1, "small", "font-weight-bold"], [1, "float-right"], [1, "progress", "mb-4"], ["role", "progressbar", "aria-valuenow", "40", "aria-valuemin", "0", "aria-valuemax", "100", 1, "progress-bar"], ["style", "text-align: left;", 4, "ngIf"], ["style", "color:orange", "class", "fa fa-star checked", 4, "ngIf"], ["style", "color:orange", "class", "fa fa-star-half", "aria-hidden", "true", 4, "ngIf"], [1, "fa", "fa-star", "checked", 2, "color", "orange"], ["aria-hidden", "true", 1, "fa", "fa-star-half", 2, "color", "orange"], ["href", "#collapseCardAptitudes", "data-toggle", "collapse", "role", "button", "aria-expanded", "true", "aria-controls", "collapseCardAptitudes", 1, "d-block", "card-header", "py-3"], ["id", "collapseCardAptitudes", 1, "collapse", "show"], [1, "table-responsive", "table-hover"], ["id", "dataTable", "width", "100%", "cellspacing", "0", 1, "table", "table-striped", "table-hover"], ["id", "headerTabla"], [2, "vertical-align", "bottom", "text-align", "left", 3, "click"], [2, "vertical-align", "bottom", "text-align", "right", 3, "click"], [2, "background-color", "#F9F9F9", "text-align", "left"], [2, "background-color", "#F9F9F9", "text-align", "right"], ["href", "#collapseCardAptitudesEmpresa", "data-toggle", "collapse", "role", "button", "aria-expanded", "true", "aria-controls", "collapseCardAptitudesEmpresa", 1, "d-block", "card-header", "py-3"], ["id", "collapseCardAptitudesEmpresa", 1, "collapse", "show"], ["type", "text", "placeholder", "Ingresar nombre emepresa a buscar", 1, "form-control", "input-center", 3, "ngModelChange", "ngModel"], ["mat-flat-button", "", 2, "background-color", "#7a91d7", 3, "click"], [2, "color", "white"], ["href", "#collapseCardTipoPractica", "data-toggle", "collapse", "role", "button", "aria-expanded", "true", "aria-controls", "collapseCardTipoPractica", 1, "d-block", "card-header", "py-3"], ["id", "collapseCardTipoPractica", 1, "collapse", "show"], ["href", "#collapseCardCarreraRemuneracion", "data-toggle", "collapse", "role", "button", "aria-expanded", "true", "aria-controls", "collapseCardCarreraRemuneracion", 1, "d-block", "card-header", "py-3"], ["id", "collapseCardCarreraRemuneracion", 1, "collapse", "show"], ["href", "#collapseCardEmpresaRemuneracion", "data-toggle", "collapse", "role", "button", "aria-expanded", "true", "aria-controls", "collapseCardEmpresaRemuneracion", 1, "d-block", "card-header", "py-3"], ["id", "collapseCardEmpresaRemuneracion", 1, "collapse", "show"], ["href", "#collapseCardRamoRemuneracion", "data-toggle", "collapse", "role", "button", "aria-expanded", "true", "aria-controls", "collapseCardRamoRemuneracion", 1, "d-block", "card-header", "py-3"], ["id", "collapseCardRamoRemuneracion", 1, "collapse", "show"], [1, "d-sm-flex", "align-items-center", "justify-content-between", "mb-4"], [1, "h3", "mb-0", "text-gray-800"], ["name", "tipo", "id", "tipo", "aria-label", "Default select example", 1, "form-select", "form-select-sm", "mb-4", "col-4", 3, "change"], ["value", "0"], [3, "value", 4, "ngFor", "ngForOf"], ["class", "col-lg-6 mb-4", 4, "ngFor", "ngForOf"], [3, "value"], [1, "card-header", "py-3"]],
      template: function EstadisticasComponent_Template(rf, ctx) {
        if (rf & 1) {
          i0.ɵɵelementStart(0, "div", 0);
          i0.ɵɵelement(1, "app-barra-lateral-encargado");
          i0.ɵɵelementStart(2, "div", 1)(3, "div", 2);
          i0.ɵɵelement(4, "app-barra-superior");
          i0.ɵɵelementStart(5, "div", 3);
          i0.ɵɵtemplate(6, EstadisticasComponent_ul_6_Template, 16, 0, "ul", 4)(7, EstadisticasComponent_ul_7_Template, 16, 0, "ul", 4)(8, EstadisticasComponent_ul_8_Template, 16, 0, "ul", 4)(9, EstadisticasComponent_ul_9_Template, 16, 0, "ul", 4);
          i0.ɵɵelement(10, "br");
          i0.ɵɵtemplate(11, EstadisticasComponent_div_11_Template, 88, 8, "div", 5)(12, EstadisticasComponent_div_12_Template, 36, 12, "div", 5)(13, EstadisticasComponent_div_13_Template, 90, 8, "div", 5)(14, EstadisticasComponent_div_14_Template, 11, 3, "div", 5);
          i0.ɵɵelementEnd()()()();
          i0.ɵɵelementStart(15, "a", 6);
          i0.ɵɵlistener("click", function EstadisticasComponent_Template_a_click_15_listener() {
            return ctx.scrollToTop();
          });
          i0.ɵɵelement(16, "i", 7);
          i0.ɵɵelementEnd();
          i0.ɵɵelement(17, "app-logout-modal");
        }
        if (rf & 2) {
          i0.ɵɵadvance(6);
          i0.ɵɵproperty("ngIf", ctx.vista_actual == "general");
          i0.ɵɵadvance();
          i0.ɵɵproperty("ngIf", ctx.vista_actual == "aptitudes");
          i0.ɵɵadvance();
          i0.ɵɵproperty("ngIf", ctx.vista_actual == "remuneracion");
          i0.ɵɵadvance();
          i0.ɵɵproperty("ngIf", ctx.vista_actual == "encuesta");
          i0.ɵɵadvance(2);
          i0.ɵɵproperty("ngIf", ctx.vista_actual == "general");
          i0.ɵɵadvance();
          i0.ɵɵproperty("ngIf", ctx.vista_actual == "aptitudes");
          i0.ɵɵadvance();
          i0.ɵɵproperty("ngIf", ctx.vista_actual == "remuneracion");
          i0.ɵɵadvance();
          i0.ɵɵproperty("ngIf", ctx.vista_actual == "encuesta");
        }
      },
      dependencies: [i12.NgForOf, i12.NgIf, i13.MatButton, i2.NgSelectOption, i2.ɵNgSelectMultipleOption, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgModel, i14.BarraSuperiorComponent, i15.LogoutModalComponent, i16.BarraLateralEncargadoComponent],
      styles: ["@charset \"UTF-8\";\n.nav-item[_ngcontent-%COMP%] {\n  background-color: rgba(213, 213, 213, 0.4196078431);\n  border-radius: 2px;\n}\n\nbutton[_ngcontent-%COMP%] {\n  color: rgb(31, 31, 31);\n}\n\nthead[_ngcontent-%COMP%] {\n  border: #e4e4e4 solid 1px;\n}\n\nthead[_ngcontent-%COMP%]   th[_ngcontent-%COMP%] {\n  text-align: center;\n  color: #727272;\n  vertical-align: middle;\n}\n\nthead[_ngcontent-%COMP%]   th[_ngcontent-%COMP%]:not(.exclude-hover):hover {\n  background-color: #e7e7e7;\n  cursor: pointer;\n}\n\ntbody[_ngcontent-%COMP%] {\n  max-height: calc(100vh - 350px);\n  display: block;\n  overflow-y: auto;\n}\n\nthead[_ngcontent-%COMP%], tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%] {\n  display: table;\n  width: 100%;\n  table-layout: fixed; \n\n}\n\ntbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]   td[_ngcontent-%COMP%] {\n  vertical-align: middle !important;\n  text-align: center;\n  color: #686868;\n}\n\n.custom-tooltip[_ngcontent-%COMP%] {\n  font-size: 25px;\n}\n\n.pointer[_ngcontent-%COMP%] {\n  cursor: pointer;\n}\n\n\n\n.asc[_ngcontent-%COMP%]:after {\n  content: \" \u25B2\"; \n\n}\n\n\n\n.desc[_ngcontent-%COMP%]:after {\n  content: \" \u25BC\"; \n\n}\n\n.numero[_ngcontent-%COMP%] {\n  text-align: right;\n}\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvdmlzdGFzL2VzdGFkaXN0aWNhcy9lc3RhZGlzdGljYXMuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsZ0JBQWdCO0FBQWhCO0VBQ0ksbURBQUE7RUFDQSxrQkFBQTtBQUVKOztBQUNBO0VBQ0ksc0JBQUE7QUFFSjs7QUFDQTtFQUNJLHlCQUFBO0FBRUo7O0FBQ0E7RUFDSSxrQkFBQTtFQUNBLGNBQUE7RUFDQSxzQkFBQTtBQUVKOztBQUNBO0VBQ0kseUJBQUE7RUFDQSxlQUFBO0FBRUo7O0FBQ0E7RUFDSSwrQkFBQTtFQUNBLGNBQUE7RUFDQSxnQkFBQTtBQUVKOztBQUVBO0VBQ0ksY0FBQTtFQUNBLFdBQUE7RUFDQSxtQkFBQSxFQUFBLCtDQUFBO0FBQ0o7O0FBRUE7RUFDSSxpQ0FBQTtFQUNBLGtCQUFBO0VBQ0EsY0FBQTtBQUNKOztBQUVBO0VBQ0ksZUFBQTtBQUNKOztBQUVBO0VBQ0ksZUFBQTtBQUNKOztBQUVBLDBCQUFBO0FBQ0E7RUFDSSxhQUFBLEVBQUEsYUFBQTtBQUNKOztBQUVFLDJCQUFBO0FBQ0E7RUFDRSxhQUFBLEVBQUEsZUFBQTtBQUNKOztBQUVBO0VBQ0ksaUJBQUE7QUFDSiIsInNvdXJjZXNDb250ZW50IjpbIi5uYXYtaXRlbXtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZDVkNWQ1NmI7ICBcbiAgICBib3JkZXItcmFkaXVzOiAycHg7XG59XG5cbmJ1dHRvbntcbiAgICBjb2xvcjogcmdiKDMxLCAzMSwgMzEpO1xufVxuXG50aGVhZCB7XG4gICAgYm9yZGVyOiAjZTRlNGU0IHNvbGlkIDFweDtcbn1cblxudGhlYWQgdGgge1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBjb2xvcjogIzcyNzI3MjtcbiAgICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xufVxuXG50aGVhZCB0aDpub3QoLmV4Y2x1ZGUtaG92ZXIpOmhvdmVyIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZTdlN2U3O1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbn1cblxudGJvZHl7XG4gICAgbWF4LWhlaWdodDogY2FsYygxMDB2aCAtIDM1MHB4KTtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBvdmVyZmxvdy15OiBhdXRvO1xufVxuXG5cbnRoZWFkLCB0Ym9keSB0ciB7XG4gICAgZGlzcGxheTogdGFibGU7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgdGFibGUtbGF5b3V0OiBmaXhlZDsvKiBldmVuIGNvbHVtbnMgd2lkdGggLCBmaXggd2lkdGggb2YgdGFibGUgdG9vKi9cbn1cblxudGJvZHkgdHIgdGQge1xuICAgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGUgIWltcG9ydGFudDtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgY29sb3I6ICM2ODY4Njg7XG59XG5cbi5jdXN0b20tdG9vbHRpcCB7XG4gICAgZm9udC1zaXplOiAyNXB4O1xufVxuXG4ucG9pbnRlciB7XG4gICAgY3Vyc29yOiBwb2ludGVyO1xufVxuXG4vKiBBc2NlbmRpbmcgYXJyb3cgc3R5bGUgKi9cbi5hc2M6YWZ0ZXIge1xuICAgIGNvbnRlbnQ6ICcgw6LClsKyJzsgLyogVXAgYXJyb3cgKi9cbiAgfVxuICBcbiAgLyogRGVzY2VuZGluZyBhcnJvdyBzdHlsZSAqL1xuICAuZGVzYzphZnRlciB7XG4gICAgY29udGVudDogJyDDosKWwrwnOyAvKiBEb3duIGFycm93ICovXG4gIH1cblxuLm51bWVyb3tcbiAgICB0ZXh0LWFsaWduOiByaWdodDtcbn0iXSwic291cmNlUm9vdCI6IiJ9 */"]
    });
  }
}
exports.EstadisticasComponent = EstadisticasComponent;
class Dialog {
  constructor(dialogRef, data) {
    this.dialogRef = dialogRef;
    this.data = data;
    this.aptitudes = [];
  }
  onNoClick() {
    this.dialogRef.close();
  }
  static {
    this.ɵfac = function Dialog_Factory(__ngFactoryType__) {
      return new (__ngFactoryType__ || Dialog)(i0.ɵɵdirectiveInject(i1.MatDialogRef), i0.ɵɵdirectiveInject(dialog_1.MAT_DIALOG_DATA));
    };
  }
  static {
    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({
      type: Dialog,
      selectors: [["app-dialog"]],
      standalone: true,
      features: [i0.ɵɵStandaloneFeature],
      decls: 13,
      vars: 2,
      consts: [["mat-dialog-title", "", 2, "text-align", "center"], ["mat-dialog-content", ""], [1, "table-responsive"], ["id", "dataTable", "width", "100%", "cellspacing", "0", 1, "table", "table-bordered", "hover"], [2, "text-align", "left"], [2, "text-align", "right"], [4, "ngFor", "ngForOf"]],
      template: function Dialog_Template(rf, ctx) {
        if (rf & 1) {
          i0.ɵɵelementStart(0, "h1", 0);
          i0.ɵɵtext(1);
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(2, "div", 1)(3, "div", 2)(4, "table", 3)(5, "thead")(6, "tr")(7, "th", 4);
          i0.ɵɵtext(8, "Competencia");
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(9, "th", 5);
          i0.ɵɵtext(10, "Promedio evaluaci\u00F3n");
          i0.ɵɵelementEnd()()();
          i0.ɵɵelementStart(11, "tbody");
          i0.ɵɵtemplate(12, Dialog_tr_12_Template, 5, 2, "tr", 6);
          i0.ɵɵelementEnd()()()();
        }
        if (rf & 2) {
          i0.ɵɵadvance();
          i0.ɵɵtextInterpolate1("Evaluaci\u00F3n competencias ", ctx.data.nombre_empresa, "");
          i0.ɵɵadvance(11);
          i0.ɵɵproperty("ngForOf", ctx.data.aptitudes);
        }
      },
      dependencies: [dialog_1.MatDialogModule, i1.MatDialogTitle, i1.MatDialogContent, form_field_1.MatFormFieldModule, input_1.MatInputModule, forms_2.FormsModule, button_1.MatButtonModule, select_1.MatSelectModule, common_2.CommonModule, i12.NgForOf],
      encapsulation: 2
    });
  }
}
exports.Dialog = Dialog;

/***/ }),

/***/ 11735:
/*!***********************************************************************************!*\
  !*** ./src/app/vistas/estudiante-ver-informe/estudiante-ver-informe.component.ts ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.EstudianteVerInformeComponent = void 0;
const dayjs = __webpack_require__(/*! dayjs */ 49645);
const i0 = __webpack_require__(/*! @angular/core */ 37580);
const i1 = __webpack_require__(/*! @angular/router */ 95072);
const i2 = __webpack_require__(/*! @angular/material/snack-bar */ 3347);
const i3 = __webpack_require__(/*! ../../servicios/informe/informe.service */ 1142);
const i4 = __webpack_require__(/*! @angular/common */ 60316);
const i5 = __webpack_require__(/*! ../../componentes/barra-superior/barra-superior.component */ 36370);
const i6 = __webpack_require__(/*! ../../componentes/barra-lateral-alumno/barra-lateral-alumno.component */ 72756);
function EstudianteVerInformeComponent_div_20_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 13)(1, "div", 14);
    i0.ɵɵtext(2);
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(3, "div", 15)(4, "p");
    i0.ɵɵtext(5);
    i0.ɵɵelementEnd()()();
  }
  if (rf & 2) {
    const item_r1 = ctx.$implicit;
    i0.ɵɵadvance(2);
    i0.ɵɵtextInterpolate1(" ", item_r1[0], " ");
    i0.ɵɵadvance(3);
    i0.ɵɵtextInterpolate1(" ", item_r1[1], " ");
  }
}
dayjs().format();
const customParseFormat = __webpack_require__(/*! dayjs/plugin/customParseFormat */ 30001);
dayjs.extend(customParseFormat);
class EstudianteVerInformeComponent {
  constructor(route, _snackBar, informeService) {
    this.route = route;
    this._snackBar = _snackBar;
    this.informeService = informeService;
    this.id_practica = parseInt(this.route.snapshot.url[1].path);
    this.id_informe = parseInt(this.route.snapshot.url[2].path);
    let data = {};
    this.informeService.get_informe_preguntas(this.id_informe).subscribe({
      next: _data => {
        data = {
          ...data,
          ..._data
        };
      },
      complete: () => {
        let informe = data.body;
        if (!informe) {
          this.showSnackbar();
          return;
        }
        //console.log(informe.fecha.replace("T", " ").replace("Z", ""))
        this.fecha_informe = dayjs(informe.fecha, "YYYY-MM-DDTHH:mm:ssZ").format("DD/MM/YYYY");
        let respuestas = informe.key;
        let preguntas = informe.config_informe.pregunta_informes;
        for (let i = 0; i < preguntas.length; i++) {
          if (preguntas[i].tipo_respuesta != "abierta" && respuestas[preguntas[i].id] != null) {
            let opciones = preguntas[i].opciones.split(";;");
            let respuesta = respuestas[preguntas[i].id].split(",");
            if (respuesta.length != opciones.length) {
              console.log("Error en la respuesta, el largo no coincide con el de las opciones de la pregunta");
              return;
            }
            let respuestas_traducidas = "";
            for (let j = 0; j < opciones.length; j++) {
              if (respuesta[j] == "1") {
                respuestas_traducidas += opciones[j] + ", ";
              }
            }
            respuestas_traducidas = respuestas_traducidas.slice(0, -2);
            //console.log(respuestas_traducidas);
            respuestas[preguntas[i].id] = respuestas_traducidas;
          }
        }
        this.pares_pregunta_respuesta = preguntas.map(pregunta => {
          return [pregunta.enunciado, respuestas[pregunta.id]];
        });
      },
      error: err => {
        this.showSnackbar();
      }
    });
  }
  showSnackbar(message = "Se ha producido un error, por favor vuelva más tarde", action = "Cerrar", panelClass = 'red-snackbar') {
    this._snackBar.open(message, action, {
      panelClass: [panelClass],
      duration: 3000
    });
  }
  static {
    this.ɵfac = function EstudianteVerInformeComponent_Factory(__ngFactoryType__) {
      return new (__ngFactoryType__ || EstudianteVerInformeComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.MatSnackBar), i0.ɵɵdirectiveInject(i3.InformeService));
    };
  }
  static {
    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({
      type: EstudianteVerInformeComponent,
      selectors: [["app-estudiante-ver-informe"]],
      decls: 21,
      vars: 4,
      consts: [["id", "wrapper"], ["id", "content-wrapper", 1, "d-flex", "flex-column"], ["id", "content", 1, "main-content"], [1, "container"], [1, "row"], [1, "col-xl-10"], [1, "h3", "mb-1", "mt-4", "text-gray-800"], [1, "col-xl-1"], [1, "btn", "btn-primary", "btn-md", "mt-4", 3, "href"], [1, "text"], ["href", "javascript:history.back()", 1, "btn", "btn-primary", "btn-md", "mt-4"], [1, "col-xl-12"], ["class", "mt-3 card mb-4 mt-4 shadow", 4, "ngFor", "ngForOf"], [1, "mt-3", "card", "mb-4", "mt-4", "shadow"], [1, "card-header"], [1, "card-body"]],
      template: function EstudianteVerInformeComponent_Template(rf, ctx) {
        if (rf & 1) {
          i0.ɵɵelementStart(0, "div", 0);
          i0.ɵɵelement(1, "app-barra-lateral-alumno");
          i0.ɵɵelementStart(2, "div", 1)(3, "div", 2);
          i0.ɵɵelement(4, "app-barra-superior");
          i0.ɵɵelementStart(5, "div", 3)(6, "div", 4)(7, "div", 5)(8, "div", 6);
          i0.ɵɵtext(9);
          i0.ɵɵelementEnd()();
          i0.ɵɵelementStart(10, "div", 7)(11, "a", 8)(12, "span", 9);
          i0.ɵɵtext(13, "Editar");
          i0.ɵɵelementEnd()()();
          i0.ɵɵelementStart(14, "div", 7)(15, "a", 10)(16, "span", 9);
          i0.ɵɵtext(17, "Volver");
          i0.ɵɵelementEnd()()()();
          i0.ɵɵelementStart(18, "div", 4)(19, "div", 11);
          i0.ɵɵtemplate(20, EstudianteVerInformeComponent_div_20_Template, 6, 2, "div", 12);
          i0.ɵɵelementEnd()()()()()();
        }
        if (rf & 2) {
          i0.ɵɵadvance(9);
          i0.ɵɵtextInterpolate1(" Informe: ", ctx.fecha_informe, " ");
          i0.ɵɵadvance(2);
          i0.ɵɵpropertyInterpolate1("href", "/ingreso-informe?id_informe=", ctx.id_informe, "&modificando=true", i0.ɵɵsanitizeUrl);
          i0.ɵɵadvance(9);
          i0.ɵɵproperty("ngForOf", ctx.pares_pregunta_respuesta);
        }
      },
      dependencies: [i4.NgForOf, i5.BarraSuperiorComponent, i6.BarraLateralAlumnoComponent],
      styles: ["/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */"]
    });
  }
}
exports.EstudianteVerInformeComponent = EstudianteVerInformeComponent;

/***/ }),

/***/ 66163:
/*!*********************************************************************************!*\
  !*** ./src/app/vistas/evaluacion_supervisor/evaluacion_supervisor.component.ts ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.EvaluacionComponent = void 0;
const i0 = __webpack_require__(/*! @angular/core */ 37580);
const i1 = __webpack_require__(/*! ../../servicios/supervisor/supervisor.service */ 40588);
const i2 = __webpack_require__(/*! @angular/material/snack-bar */ 3347);
const i3 = __webpack_require__(/*! @angular/router */ 95072);
const i4 = __webpack_require__(/*! @angular/common */ 60316);
const i5 = __webpack_require__(/*! @angular/forms */ 34456);
function EvaluacionComponent_div_7_Template(rf, ctx) {
  if (rf & 1) {
    const _r1 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "div", 9)(1, "div", 10)(2, "div", 11);
    i0.ɵɵtext(3, " \u00A1Bienvenid@ a Praxus! ");
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(4, "div", 12);
    i0.ɵɵtext(5, " En esta p\u00E1gina podr\u00E1s evaluar al estudiante en pr\u00E1ctica. ");
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(6, "div", 12);
    i0.ɵɵtext(7, " Para hacerlo, se te guiar\u00E1 por un par de preguntas. ");
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(8, "div", 12);
    i0.ɵɵtext(9, " Podr\u00E1s avanzar o retrodecer en ellas haciendo click en los botones de abajo. ");
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(10, "div", 12);
    i0.ɵɵtext(11, " \u00A1Comencemos! ");
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(12, "button", 13);
    i0.ɵɵlistener("click", function EvaluacionComponent_div_7_Template_button_click_12_listener() {
      i0.ɵɵrestoreView(_r1);
      const ctx_r1 = i0.ɵɵnextContext();
      return i0.ɵɵresetView(ctx_r1.der());
    });
    i0.ɵɵtext(13, " Comenzar Evaluaci\u00F3n ");
    i0.ɵɵelementEnd()()();
  }
  if (rf & 2) {
    const ctx_r1 = i0.ɵɵnextContext();
    i0.ɵɵadvance(12);
    i0.ɵɵproperty("disabled", ctx_r1.boton_comenzar_deshabilitado);
  }
}
function EvaluacionComponent_div_8_div_10_Template(rf, ctx) {
  if (rf & 1) {
    const _r4 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "div")(1, "textarea", 27);
    i0.ɵɵtwoWayListener("ngModelChange", function EvaluacionComponent_div_8_div_10_Template_textarea_ngModelChange_1_listener($event) {
      i0.ɵɵrestoreView(_r4);
      const i_r5 = i0.ɵɵnextContext().index;
      const ctx_r1 = i0.ɵɵnextContext();
      i0.ɵɵtwoWayBindingSet(ctx_r1.respuestas[i_r5], $event) || (ctx_r1.respuestas[i_r5] = $event);
      return i0.ɵɵresetView($event);
    });
    i0.ɵɵlistener("ngModelChange", function EvaluacionComponent_div_8_div_10_Template_textarea_ngModelChange_1_listener($event) {
      i0.ɵɵrestoreView(_r4);
      const i_r5 = i0.ɵɵnextContext().index;
      const ctx_r1 = i0.ɵɵnextContext();
      return i0.ɵɵresetView(ctx_r1.updateRespuestasAbierta(i_r5, $event));
    });
    i0.ɵɵelementEnd()();
  }
  if (rf & 2) {
    const i_r5 = i0.ɵɵnextContext().index;
    const ctx_r1 = i0.ɵɵnextContext();
    i0.ɵɵadvance();
    i0.ɵɵpropertyInterpolate1("id", "abierta", i_r5, "");
    i0.ɵɵtwoWayProperty("ngModel", ctx_r1.respuestas[i_r5]);
  }
}
function EvaluacionComponent_div_8_div_11_div_4_Template(rf, ctx) {
  if (rf & 1) {
    const _r6 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "div")(1, "input", 31);
    i0.ɵɵtwoWayListener("ngModelChange", function EvaluacionComponent_div_8_div_11_div_4_Template_input_ngModelChange_1_listener($event) {
      const j_r7 = i0.ɵɵrestoreView(_r6).index;
      const i_r5 = i0.ɵɵnextContext(2).index;
      const ctx_r1 = i0.ɵɵnextContext();
      i0.ɵɵtwoWayBindingSet(ctx_r1.respuestas[i_r5][j_r7], $event) || (ctx_r1.respuestas[i_r5][j_r7] = $event);
      return i0.ɵɵresetView($event);
    });
    i0.ɵɵlistener("ngModelChange", function EvaluacionComponent_div_8_div_11_div_4_Template_input_ngModelChange_1_listener($event) {
      const j_r7 = i0.ɵɵrestoreView(_r6).index;
      const i_r5 = i0.ɵɵnextContext(2).index;
      const ctx_r1 = i0.ɵɵnextContext();
      return i0.ɵɵresetView(ctx_r1.updateRespuestasCasillas(i_r5, j_r7, $event));
    });
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(2, "label", 32);
    i0.ɵɵtext(3);
    i0.ɵɵelementEnd()();
  }
  if (rf & 2) {
    const opcion_r8 = ctx.$implicit;
    const j_r7 = ctx.index;
    const i_r5 = i0.ɵɵnextContext(2).index;
    const ctx_r1 = i0.ɵɵnextContext();
    i0.ɵɵadvance();
    i0.ɵɵpropertyInterpolate("value", opcion_r8);
    i0.ɵɵpropertyInterpolate2("id", "checkbox", i_r5, "_", j_r7, "");
    i0.ɵɵtwoWayProperty("ngModel", ctx_r1.respuestas[i_r5][j_r7]);
    i0.ɵɵadvance();
    i0.ɵɵpropertyInterpolate2("for", "checkbox", i_r5, "_", j_r7, "");
    i0.ɵɵadvance();
    i0.ɵɵtextInterpolate1(" ", opcion_r8, " ");
  }
}
function EvaluacionComponent_div_8_div_11_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 28)(1, "div", 16);
    i0.ɵɵelement(2, "div", 29);
    i0.ɵɵelementStart(3, "div", 24);
    i0.ɵɵtemplate(4, EvaluacionComponent_div_8_div_11_div_4_Template, 4, 9, "div", 30);
    i0.ɵɵelementEnd()()();
  }
  if (rf & 2) {
    const pregunta_r9 = i0.ɵɵnextContext().$implicit;
    i0.ɵɵadvance(4);
    i0.ɵɵproperty("ngForOf", pregunta_r9.opciones.split(";;"));
  }
}
function EvaluacionComponent_div_8_div_12_div_4_Template(rf, ctx) {
  if (rf & 1) {
    const _r10 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "div")(1, "input", 33);
    i0.ɵɵtwoWayListener("ngModelChange", function EvaluacionComponent_div_8_div_12_div_4_Template_input_ngModelChange_1_listener($event) {
      i0.ɵɵrestoreView(_r10);
      const i_r5 = i0.ɵɵnextContext(2).index;
      const ctx_r1 = i0.ɵɵnextContext();
      i0.ɵɵtwoWayBindingSet(ctx_r1.respuestas[i_r5], $event) || (ctx_r1.respuestas[i_r5] = $event);
      return i0.ɵɵresetView($event);
    });
    i0.ɵɵlistener("ngModelChange", function EvaluacionComponent_div_8_div_12_div_4_Template_input_ngModelChange_1_listener($event) {
      i0.ɵɵrestoreView(_r10);
      const i_r5 = i0.ɵɵnextContext(2).index;
      const ctx_r1 = i0.ɵɵnextContext();
      return i0.ɵɵresetView(ctx_r1.updateRespuestasAlternativas(i_r5, $event));
    });
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(2, "label", 32);
    i0.ɵɵtext(3);
    i0.ɵɵelementEnd()();
  }
  if (rf & 2) {
    const opcion_r11 = ctx.$implicit;
    const j_r12 = ctx.index;
    const i_r5 = i0.ɵɵnextContext(2).index;
    const ctx_r1 = i0.ɵɵnextContext();
    i0.ɵɵadvance();
    i0.ɵɵpropertyInterpolate1("name", "radio", i_r5, "");
    i0.ɵɵpropertyInterpolate2("id", "radioOpcion", i_r5, "_", j_r12, "");
    i0.ɵɵpropertyInterpolate("value", opcion_r11);
    i0.ɵɵtwoWayProperty("ngModel", ctx_r1.respuestas[i_r5]);
    i0.ɵɵadvance();
    i0.ɵɵpropertyInterpolate2("for", "radioOpcion", i_r5, "_", j_r12, "");
    i0.ɵɵadvance();
    i0.ɵɵtextInterpolate1(" ", opcion_r11, " ");
  }
}
function EvaluacionComponent_div_8_div_12_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 28)(1, "div", 16);
    i0.ɵɵelement(2, "div", 29);
    i0.ɵɵelementStart(3, "div", 24);
    i0.ɵɵtemplate(4, EvaluacionComponent_div_8_div_12_div_4_Template, 4, 11, "div", 30);
    i0.ɵɵelementEnd()()();
  }
  if (rf & 2) {
    const pregunta_r9 = i0.ɵɵnextContext().$implicit;
    i0.ɵɵadvance(4);
    i0.ɵɵproperty("ngForOf", pregunta_r9.opciones.split(";;"));
  }
}
function EvaluacionComponent_div_8_div_13_div_7_option_7_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "option", 40);
    i0.ɵɵtext(1);
    i0.ɵɵelementEnd();
  }
  if (rf & 2) {
    const numero_r15 = ctx.$implicit;
    i0.ɵɵproperty("value", numero_r15);
    i0.ɵɵadvance();
    i0.ɵɵtextInterpolate(numero_r15);
  }
}
function EvaluacionComponent_div_8_div_13_div_7_Template(rf, ctx) {
  if (rf & 1) {
    const _r13 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "div", 16)(1, "td", 35);
    i0.ɵɵtext(2);
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(3, "td", 36)(4, "select", 37);
    i0.ɵɵtwoWayListener("ngModelChange", function EvaluacionComponent_div_8_div_13_div_7_Template_select_ngModelChange_4_listener($event) {
      const j_r14 = i0.ɵɵrestoreView(_r13).index;
      const i_r5 = i0.ɵɵnextContext(2).index;
      const ctx_r1 = i0.ɵɵnextContext();
      i0.ɵɵtwoWayBindingSet(ctx_r1.respuestas[i_r5][j_r14], $event) || (ctx_r1.respuestas[i_r5][j_r14] = $event);
      return i0.ɵɵresetView($event);
    });
    i0.ɵɵlistener("ngModelChange", function EvaluacionComponent_div_8_div_13_div_7_Template_select_ngModelChange_4_listener($event) {
      const j_r14 = i0.ɵɵrestoreView(_r13).index;
      const i_r5 = i0.ɵɵnextContext(2).index;
      const ctx_r1 = i0.ɵɵnextContext();
      return i0.ɵɵresetView(ctx_r1.updateRespuestasEvaluacion(i_r5, j_r14, $event));
    });
    i0.ɵɵelementStart(5, "option", 38);
    i0.ɵɵtext(6, "Seleccione nota ");
    i0.ɵɵelementEnd();
    i0.ɵɵtemplate(7, EvaluacionComponent_div_8_div_13_div_7_option_7_Template, 2, 2, "option", 39);
    i0.ɵɵelementEnd()()();
  }
  if (rf & 2) {
    const aptitud_r16 = ctx.$implicit;
    const j_r14 = ctx.index;
    const i_r5 = i0.ɵɵnextContext(2).index;
    const ctx_r1 = i0.ɵɵnextContext();
    i0.ɵɵadvance(2);
    i0.ɵɵtextInterpolate1("", aptitud_r16, ":");
    i0.ɵɵadvance(2);
    i0.ɵɵtwoWayProperty("ngModel", ctx_r1.respuestas[i_r5][j_r14]);
    i0.ɵɵadvance(3);
    i0.ɵɵproperty("ngForOf", ctx_r1.array_rango_aptitudes);
  }
}
function EvaluacionComponent_div_8_div_13_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 28)(1, "div", 16);
    i0.ɵɵelement(2, "div", 17);
    i0.ɵɵelementStart(3, "div", 18)(4, "table")(5, "tr")(6, "div", 16);
    i0.ɵɵtemplate(7, EvaluacionComponent_div_8_div_13_div_7_Template, 8, 3, "div", 34);
    i0.ɵɵelementEnd()()()()()();
  }
  if (rf & 2) {
    const ctx_r1 = i0.ɵɵnextContext(2);
    i0.ɵɵadvance(7);
    i0.ɵɵproperty("ngForOf", ctx_r1.aptitudes_evaluacion);
  }
}
function EvaluacionComponent_div_8_div_20_Template(rf, ctx) {
  if (rf & 1) {
    const _r17 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "div", 24)(1, "button", 25);
    i0.ɵɵlistener("click", function EvaluacionComponent_div_8_div_20_Template_button_click_1_listener() {
      i0.ɵɵrestoreView(_r17);
      const ctx_r1 = i0.ɵɵnextContext(2);
      return i0.ɵɵresetView(ctx_r1.der());
    });
    i0.ɵɵtext(2, " Siguiente ");
    i0.ɵɵelementEnd()();
  }
}
function EvaluacionComponent_div_8_div_21_Template(rf, ctx) {
  if (rf & 1) {
    const _r18 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "div", 24)(1, "button", 41);
    i0.ɵɵlistener("click", function EvaluacionComponent_div_8_div_21_Template_button_click_1_listener() {
      i0.ɵɵrestoreView(_r18);
      const ctx_r1 = i0.ɵɵnextContext(2);
      return i0.ɵɵresetView(ctx_r1.enviarEvaluacion());
    });
    i0.ɵɵtext(2, " Finalizar ");
    i0.ɵɵelementEnd()();
  }
}
function EvaluacionComponent_div_8_Template(rf, ctx) {
  if (rf & 1) {
    const _r3 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "div", 14)(1, "div", 10)(2, "div", 15);
    i0.ɵɵtext(3);
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(4, "div", 11);
    i0.ɵɵtext(5);
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(6, "div", 16);
    i0.ɵɵelement(7, "div", 17);
    i0.ɵɵelementStart(8, "div", 18)(9, "div", 19);
    i0.ɵɵtemplate(10, EvaluacionComponent_div_8_div_10_Template, 2, 3, "div", 20)(11, EvaluacionComponent_div_8_div_11_Template, 5, 1, "div", 21)(12, EvaluacionComponent_div_8_div_12_Template, 5, 1, "div", 21)(13, EvaluacionComponent_div_8_div_13_Template, 8, 1, "div", 21);
    i0.ɵɵelementEnd()()();
    i0.ɵɵelementStart(14, "div", 22);
    i0.ɵɵelement(15, "div", 23);
    i0.ɵɵelementStart(16, "div", 24)(17, "button", 25);
    i0.ɵɵlistener("click", function EvaluacionComponent_div_8_Template_button_click_17_listener() {
      i0.ɵɵrestoreView(_r3);
      const ctx_r1 = i0.ɵɵnextContext();
      return i0.ɵɵresetView(ctx_r1.izq());
    });
    i0.ɵɵtext(18, " Anterior ");
    i0.ɵɵelementEnd()();
    i0.ɵɵelement(19, "div", 17);
    i0.ɵɵtemplate(20, EvaluacionComponent_div_8_div_20_Template, 3, 0, "div", 26)(21, EvaluacionComponent_div_8_div_21_Template, 3, 0, "div", 26);
    i0.ɵɵelementEnd()()();
  }
  if (rf & 2) {
    const pregunta_r9 = ctx.$implicit;
    const i_r5 = ctx.index;
    const ctx_r1 = i0.ɵɵnextContext();
    i0.ɵɵpropertyInterpolate1("id", "cont_respuesta", i_r5 + 1, "");
    i0.ɵɵadvance(3);
    i0.ɵɵtextInterpolate2(" Pregunta ", i_r5 + 1, " de ", ctx_r1.preguntas.length, " ");
    i0.ɵɵadvance(2);
    i0.ɵɵtextInterpolate1(" ", pregunta_r9.enunciado, " ");
    i0.ɵɵadvance(4);
    i0.ɵɵproperty("ngSwitch", pregunta_r9.tipo_respuesta);
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngSwitchCase", "abierta");
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngSwitchCase", "casillas");
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngSwitchCase", "alternativas");
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngSwitchCase", "evaluacion");
    i0.ɵɵadvance(7);
    i0.ɵɵproperty("ngIf", i_r5 + 1 != ctx_r1.preguntas.length);
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngIf", i_r5 + 1 == ctx_r1.preguntas.length);
  }
}
class EvaluacionComponent {
  constructor(service_supervisor, _snackbar, router, activated_route) {
    this.service_supervisor = service_supervisor;
    this._snackbar = _snackbar;
    this.router = router;
    this.activated_route = activated_route;
    this.id_config_practica = -1;
    this.practica = {};
    this.preguntas = [];
    this.pregunta_actual = 0;
    this.tipo_respuestas = [];
    this.boton_comenzar_deshabilitado = true;
    // Aqui se guardan temporalmente las respuestas mientras se llena el formulario. Estas se procesan antes de enviarlas al backend.
    this.respuestas = [];
    this.aptitudes_evaluacion = [];
    this.array_rango_aptitudes = [];
    this.isAnimating = false; // Flag to indicate whether an animation is in progress
  }
  izq() {
    if (this.isAnimating) {
      return; // Don't allow animation if one is already in progress
    }
    let id = `#cont_respuesta${this.pregunta_actual}`;
    let id_izq = `#cont_respuesta${this.pregunta_actual - 1}`;
    this.isAnimating = true; // Set the flag
    $(id).fadeOut(() => {
      $(id).css("display", "none");
      $(id_izq).css({
        "display": "block"
      });
      $(id_izq).fadeIn(() => {
        this.isAnimating = false; // Reset the flag when animation is complete
      });
      this.pregunta_actual -= 1;
    });
  }
  der() {
    if (this.isAnimating) {
      return; // Don't allow animation if one is already in progress
    }
    let id = `#cont_respuesta${this.pregunta_actual}`;
    let id_der = `#cont_respuesta${this.pregunta_actual + 1}`;
    this.isAnimating = true; // Set the flag
    $(id).fadeOut(() => {
      $(id).css("display", "none");
      $(id_der).css({
        "display": "block"
      });
      $(id_der).fadeIn(() => {
        this.isAnimating = false; // Reset the flag when animation is complete
      });
      this.pregunta_actual += 1;
    });
  }
  ngOnInit() {
    //obtain id_practica from url
    let token = "";
    let iv = "";
    let practica = {
      body: {}
    };
    let response = {};
    this.activated_route.queryParams.subscribe(params => {
      token = params['token'];
      iv = params['iv'];
    });
    this.service_supervisor.getPractica(token, iv).subscribe({
      next: data => {
        practica = {
          ...practica,
          ...data
        };
      },
      error: error => {
        console.log(error);
        this._snackbar.open("Error al obtener la práctica", "Cerrar", {
          duration: 2000,
          panelClass: ['red-snackbar']
        });
      },
      complete: () => {
        this.practica = practica.body;
        //console.log("PRACTICA OBTENIDA", practica);
        if (this.practica.hasOwnProperty('estado') && this.practica.estado == "Evaluada" || this.practica.estado == "Aprobada" || this.practica.estado == "Reprobada") {
          this._snackbar.open("Error: la práctica ya ha sido evaluada.", "Cerrar", {
            duration: 3000,
            panelClass: ['red-snackbar']
          });
          setTimeout(() => {
            this.router.navigate(['/']);
            return;
          }, 2000);
        } else {
          this.boton_comenzar_deshabilitado = false;
        }
        if (this.practica.hasOwnProperty('modalidad') && this.practica.modalidad.hasOwnProperty('id_config_practica')) {
          this.id_config_practica = this.practica.modalidad.id_config_practica;
          if (this.practica.modalidad.config_practica.hasOwnProperty('pregunta_supervisors')) {
            this.preguntas = this.practica.modalidad.config_practica.pregunta_supervisors;
            if (this.preguntas.length > 0) {
              console.log(0);
              for (let pregunta of this.preguntas) {
                console.log(pregunta.opciones);
                if (pregunta.tipo_respuesta == "casillas") {
                  let array_aux = [];
                  for (let i = 0; i < pregunta.opciones.split(";;").length; i++) {
                    array_aux.push(false);
                  }
                  this.respuestas.push(array_aux);
                }
                //CAMBIOS PREGUNTA EVALUACION
                else if (pregunta.tipo_respuesta == "evaluacion") {
                  let array_aux_evaluacion = [];
                  let array_aux_aptitudes = pregunta.opciones.split(";;");
                  this.aptitudes_evaluacion = array_aux_aptitudes;
                  this.rango_aptitudes = pregunta.rango;
                  console.log("RANGO APTITUDES", this.rango_aptitudes);
                  this.array_rango_aptitudes = Array.from({
                    length: this.rango_aptitudes
                  }, (_, i) => i + 1);
                  for (let i = 0; i < pregunta.opciones.split(";;").length; i++) {
                    array_aux_evaluacion.push(-1);
                  }
                  this.respuestas.push(array_aux_evaluacion);
                } else {
                  this.respuestas.push("");
                }
                this.tipo_respuestas.push(pregunta.tipo_respuesta);
              }
            } else {
              this._snackbar.open("Error: la práctica no tiene preguntas asociadas.", "Cerrar", {
                duration: 2000,
                panelClass: ['red-snackbar']
              });
              return;
            }
          } else {
            this._snackbar.open("Error: la práctica no tiene preguntas asociadas.", "Cerrar", {
              duration: 2000,
              panelClass: ['red-snackbar']
            });
            return;
          }
        } else {
          this._snackbar.open("Error: la práctica no tiene configuración asociada.", "Cerrar", {
            duration: 2000,
            panelClass: ['red-snackbar']
          });
          return;
        }
      }
    });
  }
  updateRespuestasAbierta(index, value) {
    //console.log("UPDATEANDO RESPUESTAS abierta", value)
    this.respuestas[index] = value;
    //console.log(this.respuestas);
  }
  updateRespuestasCasillas(i, j, value) {
    //console.log("UPDATEANDO RESPUESTAS casillas", value)
    this.respuestas[i][j] = value;
    //console.log(this.respuestas);
  }
  updateRespuestasAlternativas(i, value) {
    //console.log("UPDATEANDO RESPUESTAS alternativas", value);
    this.respuestas[i] = value;
    //console.log(this.respuestas);
  }
  updateRespuestasEvaluacion(index_pregunta, index_aptitud, value) {
    //console.log("UPDATEANDO RESPUESTAS evaluacion", value);
    //this.respuestas[index_pregunta][index_aptitud] = value;
    //console.log(this.respuestas);
    //console.log("RESPUESTAS", this.respuestas);
    //console.log("respuesta actual evaluacion");
    //console.log(this.respuestas)
  }
  range(n) {
    let range = [];
    for (let i = 1; i <= n; i++) {
      range.push(i);
    }
    return range;
  }
  enviarEvaluacion() {
    console.log("Enviando evaluación...");
    let respuestas_aux = [];
    let ids_preguntas = [];
    // chequear que se hayan respondido todas las preguntas
    for (let i = 0; i < this.respuestas.length; i++) {
      if (this.respuestas[i] == "" || this.respuestas[i] == -1 || this.respuestas[i].length == 0) {
        this._snackbar.open("Error: no se han respondido todas las preguntas.", "Cerrar", {
          duration: 2000,
          panelClass: ['red-snackbar']
        });
        return;
      }
    }
    // procesamiento de respuestas para convertirlas al formato acordado para el backend
    for (let i = 0; i < this.respuestas.length; i++) {
      let respuesta_aux = "";
      if (this.tipo_respuestas[i] == "casillas") {
        for (let j = 0; j < this.respuestas[i].length; j++) {
          if (this.respuestas[i][j]) {
            respuesta_aux += "1";
          } else {
            respuesta_aux += "0";
          }
          if (j != this.respuestas[i].length - 1) {
            respuesta_aux += ",";
          }
        }
      } else if (this.tipo_respuestas[i] == "evaluacion") {
        for (let j = 0; j < this.respuestas[i].length; j++) {
          respuesta_aux += String(this.respuestas[i][j]);
          respuesta_aux += ",";
        }
        respuesta_aux = respuesta_aux.slice(0, -1);
      } else if (this.tipo_respuestas[i] == "alternativas") {
        let index = this.preguntas[i].opciones.split(";;").indexOf(this.respuestas[i]);
        for (let j = 0; j < this.preguntas[i].opciones.split(";;").length; j++) {
          if (j == index) {
            respuesta_aux += "1";
          } else {
            respuesta_aux += "0";
          }
          if (j != this.preguntas[i].opciones.split(";;").length - 1) {
            respuesta_aux += ",";
          }
        }
      } else {
        respuesta_aux = this.respuestas[i];
      }
      respuestas_aux.push(respuesta_aux);
      ids_preguntas.push(this.preguntas[i].id);
    }
    // enviar respuestas al backend
    this.service_supervisor.sendAnswer(ids_preguntas, this.practica.id, respuestas_aux).subscribe({
      next: data => {},
      error: error => {
        console.log(error);
        this._snackbar.open("Error al enviar la respuesta", "Cerrar", {
          duration: 2000,
          panelClass: ['red-snackbar']
        });
      },
      complete: () => {
        this._snackbar.open("Evaluación enviada. Redirigiendo a página principal...", "Cerrar", {
          duration: 3000,
          panelClass: ['green-snackbar']
        });
        setTimeout(() => {
          this.router.navigate(['/']);
          return;
        }, 2000);
        // after 2 seconds, redirect to home
        // this.service_supervisor.setFragmentos(this.practica.id, { }).subscribe({
        //   next: (data: any) => {
        //   },
        //   error: (error: any) => {
        //     console.log(error);
        //     this._snackbar.open("Error al enviar la respuesta", "Cerrar", {
        //       duration: 2000,
        //       panelClass: ['red-snackbar']
        //     });
        //   },
        //   complete: () => {
        //     this.service_supervisor.setRepeticiones(this.practica.id).subscribe({
        //       next: (data: any) => {
        //       },
        //       error: (error: any) => {
        //         console.log(error);
        //         this._snackbar.open("Error al enviar la respuesta", "Cerrar", {
        //           duration: 2000,
        //           panelClass: ['red-snackbar']
        //         });
        //       },
        //       complete: () => {
        //         setTimeout(() => {
        //           this.router.navigate(['/']);
        //           return;
        //         }, 2000); 
        //       }
        //     });
        //   }
        // });
      }
    });
  }
  static {
    this.ɵfac = function EvaluacionComponent_Factory(__ngFactoryType__) {
      return new (__ngFactoryType__ || EvaluacionComponent)(i0.ɵɵdirectiveInject(i1.SupervisorService), i0.ɵɵdirectiveInject(i2.MatSnackBar), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i3.ActivatedRoute));
    };
  }
  static {
    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({
      type: EvaluacionComponent,
      selectors: [["evaluacion_supervisor"]],
      decls: 9,
      vars: 2,
      consts: [["id", "wrapper"], ["id", "content-wrapper", 1, "d-flex", "flex-column"], ["id", "content", 1, "main-content"], [1, "container-fluid", 2, "height", "100vh"], [1, "row", "pt-5"], [1, "col-lg-2"], [1, "col-lg-8", 3, "ngSwitch"], ["class", "card border-left-primary shadow py-2", "id", "cont_respuesta0", 4, "ngSwitchDefault"], ["class", "card border-left-primary shadow py-2", "style", "display: none;", 3, "id", 4, "ngFor", "ngForOf"], ["id", "cont_respuesta0", 1, "card", "border-left-primary", "shadow", "py-2"], [1, "card-body"], [1, "h4", "mb-3", "font-weight-bold", "text-gray-800", "text-center"], [1, "h5", "mb-3", "text-gray-800", "text-center", "mx-auto", "w-50"], [1, "btn", "btn-primary", "btn-user", "btn-block", "btn-lg", "mx-auto", "w-25", 3, "click", "disabled"], [1, "card", "border-left-primary", "shadow", "py-2", 2, "display", "none", 3, "id"], [1, "h6", "ml-4", "mt-2", "font-weight-bold", "text-gray-800"], [1, "row"], [1, "col-xl-2"], [1, "col-xl-8"], [3, "ngSwitch"], [4, "ngSwitchCase"], ["class", "form-check", 4, "ngSwitchCase"], [1, "row", "mt-5", "mb-3", "align-items-end"], [1, "col-xl-1"], [1, "col-xl-4"], [1, "btn", "btn-primary", "btn-user", "btn-block", "btn-md", 3, "click"], ["class", "col-xl-4", 4, "ngIf"], ["rows", "3", "placeholder", "Escriba su respuesta aqu\u00ED...", 1, "form-control", 3, "ngModelChange", "id", "ngModel"], [1, "form-check"], [1, "col-xl-5"], [4, "ngFor", "ngForOf"], ["type", "checkbox", 1, "form-check-input", 3, "ngModelChange", "value", "id", "ngModel"], [1, "form-check-label", 3, "for"], ["type", "radio", 1, "form-check-input", 3, "ngModelChange", "name", "id", "value", "ngModel"], ["class", "row", 4, "ngFor", "ngForOf"], [2, "width", "60%"], [2, "width", "40%"], ["name", "tipo", "id", "tipo", "aria-label", "Default select example", 1, "form-select", "form-select-sm", "mb-4", 3, "ngModelChange", "ngModel"], ["value", "-1"], [3, "value", 4, "ngFor", "ngForOf"], [3, "value"], [1, "btn", "btn-success", "btn-user", "btn-block", "btn-md", 3, "click"]],
      template: function EvaluacionComponent_Template(rf, ctx) {
        if (rf & 1) {
          i0.ɵɵelementStart(0, "div", 0)(1, "div", 1)(2, "div", 2)(3, "div", 3)(4, "div", 4);
          i0.ɵɵelement(5, "div", 5);
          i0.ɵɵelementStart(6, "div", 6);
          i0.ɵɵtemplate(7, EvaluacionComponent_div_7_Template, 14, 1, "div", 7)(8, EvaluacionComponent_div_8_Template, 22, 12, "div", 8);
          i0.ɵɵelementEnd()()()()()();
        }
        if (rf & 2) {
          i0.ɵɵadvance(6);
          i0.ɵɵproperty("ngSwitch", ctx.pregunta_actual);
          i0.ɵɵadvance(2);
          i0.ɵɵproperty("ngForOf", ctx.preguntas);
        }
      },
      dependencies: [i4.NgForOf, i4.NgIf, i4.NgSwitch, i4.NgSwitchCase, i4.NgSwitchDefault, i5.NgSelectOption, i5.ɵNgSelectMultipleOption, i5.DefaultValueAccessor, i5.CheckboxControlValueAccessor, i5.SelectControlValueAccessor, i5.RadioControlValueAccessor, i5.NgControlStatus, i5.NgModel],
      styles: ["textarea[_ngcontent-%COMP%] {\n  resize: none;\n  height: 100px;\n  width: 100%;\n}\n\n.radio-button-group[_ngcontent-%COMP%]   input[type=radio][_ngcontent-%COMP%] {\n  margin-right: 2px; \n\n}\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvdmlzdGFzL2V2YWx1YWNpb25fc3VwZXJ2aXNvci9ldmFsdWFjaW9uX3N1cGVydmlzb3IuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxZQUFBO0VBQ0EsYUFBQTtFQUNBLFdBQUE7QUFDSjs7QUFFQTtFQUNJLGlCQUFBLEVBQUEsc0RBQUE7QUFDSiIsInNvdXJjZXNDb250ZW50IjpbInRleHRhcmVhIHtcbiAgICByZXNpemU6IG5vbmU7XG4gICAgaGVpZ2h0OiAxMDBweDtcbiAgICB3aWR0aDogMTAwJTtcbn1cblxuLnJhZGlvLWJ1dHRvbi1ncm91cCBpbnB1dFt0eXBlPVwicmFkaW9cIl0ge1xuICAgIG1hcmdpbi1yaWdodDogMnB4OyAvKiBZb3UgY2FuIGFkanVzdCB0aGlzIHZhbHVlIHRvIG1ha2UgdGhlIGdhcCBzaG9ydGVyICovXG4gIH1cbiJdLCJzb3VyY2VSb290IjoiIn0= */"]
    });
  }
}
exports.EvaluacionComponent = EvaluacionComponent;

/***/ }),

/***/ 43171:
/*!***************************************************************************************!*\
  !*** ./src/app/vistas/explicacion-consistencia/explicacion-consistencia.component.ts ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.ExplicacionConsistenciaComponent = void 0;
const i0 = __webpack_require__(/*! @angular/core */ 37580);
const i1 = __webpack_require__(/*! ../../componentes/barra-superior/barra-superior.component */ 36370);
const i2 = __webpack_require__(/*! ../../componentes/logout-modal/logout-modal.component */ 15562);
const i3 = __webpack_require__(/*! ../../componentes/barra-lateral-encargado/barra-lateral-encargado.component */ 43560);
class ExplicacionConsistenciaComponent {
  static {
    this.ɵfac = function ExplicacionConsistenciaComponent_Factory(__ngFactoryType__) {
      return new (__ngFactoryType__ || ExplicacionConsistenciaComponent)();
    };
  }
  static {
    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({
      type: ExplicacionConsistenciaComponent,
      selectors: [["app-explicacion-consistencia"]],
      decls: 55,
      vars: 0,
      consts: [["id", "wrapper"], ["id", "content-wrapper", 1, "d-flex", "flex-column"], ["id", "content", 1, "main-content"], [1, "container-fluid"], [1, "h2", "mb-2", "font-weight-bold", "text-gray-800"], [1, "card-body"], [1, "card", "shadow", "mb-4"], [1, "card-header", "py-3"], [1, "m-0", "font-weight-bold", "text-primary", 2, "font-size", "large"], ["href", "#page-top", 1, "scroll-to-top", "rounded"], [1, "fas", "fa-angle-up"]],
      template: function ExplicacionConsistenciaComponent_Template(rf, ctx) {
        if (rf & 1) {
          i0.ɵɵelementStart(0, "div", 0);
          i0.ɵɵelement(1, "app-barra-lateral-encargado");
          i0.ɵɵelementStart(2, "div", 1)(3, "div", 2);
          i0.ɵɵelement(4, "app-barra-superior");
          i0.ɵɵelementStart(5, "div", 3)(6, "div", 4);
          i0.ɵɵtext(7, "Explicaci\u00F3n de Consistencias, Fragmentos y Repetici\u00F3n");
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(8, "div", 5)(9, "div", 6)(10, "div", 7)(11, "h6", 8);
          i0.ɵɵtext(12, "\u00CDndice de Repetici\u00F3n ");
          i0.ɵɵelementEnd()();
          i0.ɵɵelementStart(13, "div", 5)(14, "p");
          i0.ɵɵtext(15, "Indica qu\u00E9 tanto se repiten textos dentro de los informes del practicante. ");
          i0.ɵɵelement(16, "br")(17, "br");
          i0.ɵɵtext(18, " Para realizar esta acci\u00F3n, se analizan fragmentos de los informes del practicante, revisando cu\u00E1ntas veces se repiten las distintas frases de los informes dentro de si mismos. El \u00EDndice de repetici\u00F3n se calcula a partir de una proporci\u00F3n entre la cantidad de palabras repetidas y la cantidad de palabras totales. Mientras m\u00E1s alto el n\u00FAmero, mayor es la cantidad de contenido repetido. ");
          i0.ɵɵelementEnd()()()();
          i0.ɵɵelementStart(19, "div", 5)(20, "div", 6)(21, "div", 7)(22, "h6", 8);
          i0.ɵɵtext(23, "Consistencia de Informes");
          i0.ɵɵelementEnd()();
          i0.ɵɵelementStart(24, "div", 5)(25, "p");
          i0.ɵɵtext(26, "Indica qu\u00E9 tan coherentes son el informe del supervisor y el o los informes escritos por el practicante. ");
          i0.ɵɵelement(27, "br")(28, "br");
          i0.ɵɵtext(29, " El an\u00E1lisis de consistencia entre informes cuenta con dos m\u00F3dulos, por un lado, se cuenta con una inteligencia artificial que recibe los informes del alumno y del supervisor, a partir de ellos se asigna un puntaje seg\u00FAn qu\u00E9 tan consistentes. Adem\u00E1s, si los textos son suficientemente largos, se analizan palabras clave que puedan estar presentes en ambos, para esto, se eliminan palabras con una baja carga sem\u00E1ntica (stop words) y se emplea lematizaci\u00F3n, el cual es un proceso ling\u00FC\u00EDstico donde a partir de palabras en una forma flexionada (es decir, en plural, en femenino, conjugada, etc) se halla el lema correspondiente. ");
          i0.ɵɵelementEnd()()()();
          i0.ɵɵelementStart(30, "div", 5)(31, "div", 6)(32, "div", 7)(33, "h6", 8);
          i0.ɵɵtext(34, "Consistencia de Evaluaci\u00F3n");
          i0.ɵɵelementEnd()();
          i0.ɵɵelementStart(35, "div", 5)(36, "p");
          i0.ɵɵtext(37, "Indica que tan coherentes son el informe del supervisor y la evaluaci\u00F3n al practicante que trabajo en su empresa. ");
          i0.ɵɵelement(38, "br")(39, "br");
          i0.ɵɵtext(40, " Usando an\u00E1lisis de sentimientos, se extrae informaci\u00F3n significativa sobre emociones y opiniones del informe escrito del supervisor. De esta forma, se califica que tan positivo, neutral o negativo es el texto analizado. Finalmente se calcula la relaci\u00F3n entre la nota con la que el supervisor evalu\u00F3 al practicante y los sentimientos identificados en el informe. ");
          i0.ɵɵelementEnd()()()();
          i0.ɵɵelementStart(41, "div", 5)(42, "div", 6)(43, "div", 7)(44, "h6", 8);
          i0.ɵɵtext(45, "Fragmentos m\u00E1s Relevantes");
          i0.ɵɵelementEnd()();
          i0.ɵɵelementStart(46, "div", 5)(47, "p");
          i0.ɵɵtext(48, "Se muestran los fragmentos que m\u00E1s influyeron en el c\u00E1lculo de consistencia. ");
          i0.ɵɵelement(49, "br")(50, "br");
          i0.ɵɵtext(51, " Para esto, se usan las partes del texto que m\u00E1s informaci\u00F3n contienen, los fragmentos mostrados en el caso del practicante y supervisor ser\u00E1n los m\u00E1s relevantes a la hora de calcular la consistencia. El valor de un fragmento depende de su largo y la similitud que posee con el texto original. ");
          i0.ɵɵelementEnd()()()()()()()();
          i0.ɵɵelementStart(52, "a", 9);
          i0.ɵɵelement(53, "i", 10);
          i0.ɵɵelementEnd();
          i0.ɵɵelement(54, "app-logout-modal");
        }
      },
      dependencies: [i1.BarraSuperiorComponent, i2.LogoutModalComponent, i3.BarraLateralEncargadoComponent],
      styles: ["/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */"]
    });
  }
}
exports.ExplicacionConsistenciaComponent = ExplicacionConsistenciaComponent;

/***/ }),

/***/ 39227:
/*!*********************************************************************!*\
  !*** ./src/app/vistas/forgot-password/forgot-password.component.ts ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.ForgotPasswordComponent = void 0;
const forms_1 = __webpack_require__(/*! @angular/forms */ 34456);
const i0 = __webpack_require__(/*! @angular/core */ 37580);
const i1 = __webpack_require__(/*! ../../servicios/usuario/usuario.service */ 31446);
const i2 = __webpack_require__(/*! @angular/forms */ 34456);
const i3 = __webpack_require__(/*! @angular/material/snack-bar */ 3347);
const i4 = __webpack_require__(/*! @angular/router */ 95072);
const i5 = __webpack_require__(/*! @angular/common */ 60316);
function ForgotPasswordComponent_div_26_p_1_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "p");
    i0.ɵɵtext(1, " Ingresa Correo ");
    i0.ɵɵelementEnd();
  }
}
function ForgotPasswordComponent_div_26_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 25);
    i0.ɵɵtemplate(1, ForgotPasswordComponent_div_26_p_1_Template, 2, 0, "p", 26);
    i0.ɵɵelementEnd();
  }
  if (rf & 2) {
    const ctx_r0 = i0.ɵɵnextContext();
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngIf", ctx_r0.loginForm.controls["email"].errors == null ? null : ctx_r0.loginForm.controls["email"].errors["required"]);
  }
}
class ForgotPasswordComponent {
  constructor(usuario, fb, _snackBar, router) {
    this.usuario = usuario;
    this.fb = fb;
    this._snackBar = _snackBar;
    this.router = router;
    this.createForm();
  }
  createForm() {
    this.loginForm = this.fb.group({
      email: ['', forms_1.Validators.required]
    });
  }
  send() {
    let response = {};
    const data = this.loginForm.value;
    this.mail = data.email;
    this.usuario.send_mail(this.mail).subscribe({
      next: data => {
        response = {
          ...response,
          ...data
        };
      },
      error: err => {
        this._snackBar.open(err.error.message, "Aceptar", {
          duration: 5000
        });
      },
      complete: () => {
        this._snackBar.open("Correo enviado con éxito", "Aceptar", {
          duration: 5000
        });
        this.router.navigate(["/login"]);
      }
    });
  }
  static {
    this.ɵfac = function ForgotPasswordComponent_Factory(__ngFactoryType__) {
      return new (__ngFactoryType__ || ForgotPasswordComponent)(i0.ɵɵdirectiveInject(i1.UsuarioService), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.MatSnackBar), i0.ɵɵdirectiveInject(i4.Router));
    };
  }
  static {
    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({
      type: ForgotPasswordComponent,
      selectors: [["app-forgot-password"]],
      decls: 36,
      vars: 2,
      consts: [["lang", "en"], ["charset", "utf-8"], ["http-equiv", "X-UA-Compatible", "content", "IE=edge"], ["name", "viewport", "content", "width=device-width, initial-scale=1, shrink-to-fit=no"], ["name", "description", "content", ""], ["name", "author", "content", ""], [1, "bg-gradient-primary"], [1, "container"], [1, "row", "justify-content-center"], [1, "col-xl-10", "col-lg-12", "col-md-9"], [1, "card", "o-hidden", "border-0", "shadow-lg", "my-5"], [1, "card-body", "p-0"], [1, "row"], [1, "col-lg-12"], [1, "p-5"], [1, "text-center"], [1, "h4", "text-gray-900", "mb-2"], [1, "mb-4"], [1, "user", 3, "formGroup"], [1, "form-group"], ["type", "email", "id", "email", "name", "email", "aria-describedby", "emailHelp", "placeholder", "Ingresar correo...", "formControlName", "email", 1, "form-control", "form-control-user"], ["class", "alert alert-danger", 4, "ngIf"], ["id", "myBtn", 1, "btn-primary", "btn-user", "btn-block", 3, "click"], ["routerLink", "/registro", 1, "small"], ["routerLink", "/login", 1, "small"], [1, "alert", "alert-danger"], [4, "ngIf"]],
      template: function ForgotPasswordComponent_Template(rf, ctx) {
        if (rf & 1) {
          i0.ɵɵelementStart(0, "html", 0)(1, "head");
          i0.ɵɵelement(2, "meta", 1)(3, "meta", 2)(4, "meta", 3)(5, "meta", 4)(6, "meta", 5);
          i0.ɵɵelementStart(7, "title");
          i0.ɵɵtext(8, "Praxus - Reset Password");
          i0.ɵɵelementEnd()();
          i0.ɵɵelementStart(9, "body", 6)(10, "div", 7)(11, "div", 8)(12, "div", 9)(13, "div", 10)(14, "div", 11)(15, "div", 12)(16, "div", 13)(17, "div", 14)(18, "div", 15)(19, "h1", 16);
          i0.ɵɵtext(20, "Recuperaci\u00F3n de contrase\u00F1a");
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(21, "p", 17);
          i0.ɵɵtext(22, "Ingresa tu correo aqu\u00ED y te enviaremos un link para establecer una contrase\u00F1a nueva.");
          i0.ɵɵelementEnd()();
          i0.ɵɵelementStart(23, "form", 18)(24, "div", 19);
          i0.ɵɵelement(25, "input", 20);
          i0.ɵɵelementEnd();
          i0.ɵɵtemplate(26, ForgotPasswordComponent_div_26_Template, 2, 1, "div", 21);
          i0.ɵɵelementStart(27, "button", 22);
          i0.ɵɵlistener("click", function ForgotPasswordComponent_Template_button_click_27_listener() {
            return ctx.send();
          });
          i0.ɵɵtext(28, " Enviar correo de recuperaci\u00F3n ");
          i0.ɵɵelementEnd()();
          i0.ɵɵelement(29, "hr");
          i0.ɵɵelementStart(30, "div", 15)(31, "a", 23);
          i0.ɵɵtext(32, "Crear cuenta");
          i0.ɵɵelementEnd()();
          i0.ɵɵelementStart(33, "div", 15)(34, "a", 24);
          i0.ɵɵtext(35, "Iniciar Sesi\u00F3n");
          i0.ɵɵelementEnd()()()()()()()()()()()();
        }
        if (rf & 2) {
          i0.ɵɵadvance(23);
          i0.ɵɵproperty("formGroup", ctx.loginForm);
          i0.ɵɵadvance(3);
          i0.ɵɵproperty("ngIf", ctx.loginForm.controls["email"].invalid && (ctx.loginForm.controls["email"].dirty || ctx.loginForm.controls["email"].touched));
        }
      },
      dependencies: [i5.NgIf, i4.RouterLink, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName],
      styles: ["/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */"]
    });
  }
}
exports.ForgotPasswordComponent = ForgotPasswordComponent;

/***/ }),

/***/ 32331:
/*!*****************************************************!*\
  !*** ./src/app/vistas/informe/informe.component.ts ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.InformeComponent = void 0;
const dayjs = __webpack_require__(/*! dayjs */ 49645);
const i0 = __webpack_require__(/*! @angular/core */ 37580);
const i1 = __webpack_require__(/*! @angular/router */ 95072);
const i2 = __webpack_require__(/*! @angular/material/snack-bar */ 3347);
const i3 = __webpack_require__(/*! ../../servicios/informe/informe.service */ 1142);
const i4 = __webpack_require__(/*! @angular/common */ 60316);
const i5 = __webpack_require__(/*! ../../componentes/barra-superior/barra-superior.component */ 36370);
const i6 = __webpack_require__(/*! ../../componentes/barra-lateral-encargado/barra-lateral-encargado.component */ 43560);
function InformeComponent_div_15_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 11)(1, "div", 12);
    i0.ɵɵtext(2);
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(3, "div", 13)(4, "p");
    i0.ɵɵtext(5);
    i0.ɵɵelementEnd()()();
  }
  if (rf & 2) {
    const item_r1 = ctx.$implicit;
    i0.ɵɵadvance(2);
    i0.ɵɵtextInterpolate1(" ", item_r1[0], " ");
    i0.ɵɵadvance(3);
    i0.ɵɵtextInterpolate1(" ", item_r1[1], " ");
  }
}
dayjs().format();
const customParseFormat = __webpack_require__(/*! dayjs/plugin/customParseFormat */ 30001);
dayjs.extend(customParseFormat);
class InformeComponent {
  constructor(route, _snackBar, informeService) {
    this.route = route;
    this._snackBar = _snackBar;
    this.informeService = informeService;
    this.id_practica = parseInt(this.route.snapshot.url[1].path);
    this.id_informe = parseInt(this.route.snapshot.url[2].path);
    let data = {};
    this.informeService.get_informe_preguntas(this.id_informe).subscribe({
      next: _data => {
        data = {
          ...data,
          ..._data
        };
      },
      complete: () => {
        let informe = data.body;
        if (!informe) {
          this.showSnackbar();
          return;
        }
        console.log(informe.fecha.replace("T", " ").replace("Z", ""));
        this.fecha_informe = dayjs(informe.fecha, "YYYY-MM-DDTHH:mm:ssZ").format("DD/MM/YYYY");
        let respuestas = informe.key;
        let preguntas = informe.config_informe.pregunta_informes;
        this.pares_pregunta_respuesta = preguntas.map(pregunta => {
          return [pregunta.enunciado, respuestas[pregunta.id]];
        });
      },
      error: err => {
        this.showSnackbar();
      }
    });
  }
  showSnackbar(message = "Se ha producido un error, por favor vuelva más tarde", action = "Cerrar", panelClass = 'red-snackbar') {
    this._snackBar.open(message, action, {
      panelClass: [panelClass],
      duration: 3000
    });
  }
  static {
    this.ɵfac = function InformeComponent_Factory(__ngFactoryType__) {
      return new (__ngFactoryType__ || InformeComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.MatSnackBar), i0.ɵɵdirectiveInject(i3.InformeService));
    };
  }
  static {
    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({
      type: InformeComponent,
      selectors: [["app-informe"]],
      decls: 16,
      vars: 2,
      consts: [["id", "wrapper"], ["id", "content-wrapper", 1, "d-flex", "flex-column"], ["id", "content", 1, "main-content"], [1, "container"], [1, "row"], [1, "col-xl-10"], [1, "h3", "mb-1", "mt-4", "text-gray-800"], [1, "col-xl-1"], ["href", "javascript:history.back()", 1, "btn", "btn-primary", "btn-md", "mt-4"], [1, "text"], ["class", "mt-3 card mb-4", 4, "ngFor", "ngForOf"], [1, "mt-3", "card", "mb-4"], [1, "card-header"], [1, "card-body"]],
      template: function InformeComponent_Template(rf, ctx) {
        if (rf & 1) {
          i0.ɵɵelementStart(0, "div", 0);
          i0.ɵɵelement(1, "app-barra-lateral-encargado");
          i0.ɵɵelementStart(2, "div", 1)(3, "div", 2);
          i0.ɵɵelement(4, "app-barra-superior");
          i0.ɵɵelementStart(5, "div", 3)(6, "div", 4)(7, "div", 5)(8, "div", 6);
          i0.ɵɵtext(9);
          i0.ɵɵelementEnd()();
          i0.ɵɵelement(10, "div", 7);
          i0.ɵɵelementStart(11, "div", 7)(12, "a", 8)(13, "span", 9);
          i0.ɵɵtext(14, "Volver");
          i0.ɵɵelementEnd()()()();
          i0.ɵɵtemplate(15, InformeComponent_div_15_Template, 6, 2, "div", 10);
          i0.ɵɵelementEnd()()()();
        }
        if (rf & 2) {
          i0.ɵɵadvance(9);
          i0.ɵɵtextInterpolate1(" Informe: ", ctx.fecha_informe, " ");
          i0.ɵɵadvance(6);
          i0.ɵɵproperty("ngForOf", ctx.pares_pregunta_respuesta);
        }
      },
      dependencies: [i4.NgForOf, i5.BarraSuperiorComponent, i6.BarraLateralEncargadoComponent],
      styles: [".destacar[_ngcontent-%COMP%] {\n  background-color: #EBD539;\n  display: inline;\n}\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvdmlzdGFzL2luZm9ybWUvaW5mb3JtZS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLHlCQUFBO0VBQ0EsZUFBQTtBQUNKIiwic291cmNlc0NvbnRlbnQiOlsiLmRlc3RhY2FyIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRUJENTM5O1xuICAgIGRpc3BsYXk6IGlubGluZTtcbn0iXSwic291cmNlUm9vdCI6IiJ9 */"]
    });
  }
}
exports.InformeComponent = InformeComponent;

/***/ }),

/***/ 42875:
/*!*********************************************************************!*\
  !*** ./src/app/vistas/ingreso-informe/ingreso-informe.component.ts ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.IngresoInformeComponent = void 0;
const common_1 = __webpack_require__(/*! @angular/common */ 60316);
const i0 = __webpack_require__(/*! @angular/core */ 37580);
const i1 = __webpack_require__(/*! src/app/servicios/alumno/obtener_datos.service */ 27095);
const i2 = __webpack_require__(/*! @angular/router */ 95072);
const i3 = __webpack_require__(/*! @angular/material/snack-bar */ 3347);
const i4 = __webpack_require__(/*! src/app/servicios/informe/informe.service */ 1142);
const i5 = __webpack_require__(/*! @angular/common */ 60316);
const i6 = __webpack_require__(/*! @angular/forms */ 34456);
const i7 = __webpack_require__(/*! ../../componentes/barra-superior/barra-superior.component */ 36370);
const i8 = __webpack_require__(/*! ../../componentes/logout-modal/logout-modal.component */ 15562);
const i9 = __webpack_require__(/*! ../../componentes/barra-lateral-alumno/barra-lateral-alumno.component */ 72756);
function IngresoInformeComponent_div_11_div_2_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 15);
    i0.ɵɵtext(1, " A continuaci\u00F3n podr\u00E1s responder las preguntas de tu informe de avances. ");
    i0.ɵɵelementEnd();
  }
}
function IngresoInformeComponent_div_11_ng_template_3_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 15);
    i0.ɵɵtext(1, " A continuaci\u00F3n podr\u00E1s responder las preguntas de tu informe final. ");
    i0.ɵɵelementEnd();
  }
}
function IngresoInformeComponent_div_11_Template(rf, ctx) {
  if (rf & 1) {
    const _r1 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "div", 10)(1, "div", 11);
    i0.ɵɵtemplate(2, IngresoInformeComponent_div_11_div_2_Template, 2, 0, "div", 12)(3, IngresoInformeComponent_div_11_ng_template_3_Template, 2, 0, "ng-template", null, 0, i0.ɵɵtemplateRefExtractor);
    i0.ɵɵelementStart(5, "div", 13);
    i0.ɵɵtext(6, " Podr\u00E1s avanzar o retrodecer en ellas haciendo click en los botones de abajo. ");
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(7, "button", 14);
    i0.ɵɵlistener("click", function IngresoInformeComponent_div_11_Template_button_click_7_listener() {
      i0.ɵɵrestoreView(_r1);
      const ctx_r1 = i0.ɵɵnextContext();
      return i0.ɵɵresetView(ctx_r1.der());
    });
    i0.ɵɵtext(8, " Comenzar ");
    i0.ɵɵelementEnd()()();
  }
  if (rf & 2) {
    const esInformeFinal_r3 = i0.ɵɵreference(4);
    const ctx_r1 = i0.ɵɵnextContext();
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngIf", (ctx_r1.config_informe == null ? null : ctx_r1.config_informe.tipo_informe.toLowerCase()) == "informe avance")("ngIfElse", esInformeFinal_r3);
  }
}
function IngresoInformeComponent_div_12_div_10_Template(rf, ctx) {
  if (rf & 1) {
    const _r5 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "div")(1, "textarea", 29);
    i0.ɵɵtwoWayListener("ngModelChange", function IngresoInformeComponent_div_12_div_10_Template_textarea_ngModelChange_1_listener($event) {
      i0.ɵɵrestoreView(_r5);
      const i_r6 = i0.ɵɵnextContext().index;
      const ctx_r1 = i0.ɵɵnextContext();
      i0.ɵɵtwoWayBindingSet(ctx_r1.respuestas[i_r6], $event) || (ctx_r1.respuestas[i_r6] = $event);
      return i0.ɵɵresetView($event);
    });
    i0.ɵɵlistener("ngModelChange", function IngresoInformeComponent_div_12_div_10_Template_textarea_ngModelChange_1_listener($event) {
      i0.ɵɵrestoreView(_r5);
      const i_r6 = i0.ɵɵnextContext().index;
      const ctx_r1 = i0.ɵɵnextContext();
      return i0.ɵɵresetView(ctx_r1.updateRespuestasAbierta(i_r6, $event));
    });
    i0.ɵɵelementEnd()();
  }
  if (rf & 2) {
    const i_r6 = i0.ɵɵnextContext().index;
    const ctx_r1 = i0.ɵɵnextContext();
    i0.ɵɵadvance();
    i0.ɵɵpropertyInterpolate1("id", "abierta", i_r6, "");
    i0.ɵɵtwoWayProperty("ngModel", ctx_r1.respuestas[i_r6]);
  }
}
function IngresoInformeComponent_div_12_div_11_div_4_Template(rf, ctx) {
  if (rf & 1) {
    const _r7 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "div")(1, "input", 33);
    i0.ɵɵtwoWayListener("ngModelChange", function IngresoInformeComponent_div_12_div_11_div_4_Template_input_ngModelChange_1_listener($event) {
      const j_r8 = i0.ɵɵrestoreView(_r7).index;
      const i_r6 = i0.ɵɵnextContext(2).index;
      const ctx_r1 = i0.ɵɵnextContext();
      i0.ɵɵtwoWayBindingSet(ctx_r1.respuestas[i_r6][j_r8], $event) || (ctx_r1.respuestas[i_r6][j_r8] = $event);
      return i0.ɵɵresetView($event);
    });
    i0.ɵɵlistener("ngModelChange", function IngresoInformeComponent_div_12_div_11_div_4_Template_input_ngModelChange_1_listener($event) {
      const j_r8 = i0.ɵɵrestoreView(_r7).index;
      const i_r6 = i0.ɵɵnextContext(2).index;
      const ctx_r1 = i0.ɵɵnextContext();
      return i0.ɵɵresetView(ctx_r1.updateRespuestasCasillas(i_r6, j_r8, $event));
    });
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(2, "label", 34);
    i0.ɵɵtext(3);
    i0.ɵɵelementEnd()();
  }
  if (rf & 2) {
    const opcion_r9 = ctx.$implicit;
    const j_r8 = ctx.index;
    const i_r6 = i0.ɵɵnextContext(2).index;
    const ctx_r1 = i0.ɵɵnextContext();
    i0.ɵɵadvance();
    i0.ɵɵpropertyInterpolate("value", opcion_r9);
    i0.ɵɵpropertyInterpolate2("id", "checkbox", i_r6, "_", j_r8, "");
    i0.ɵɵtwoWayProperty("ngModel", ctx_r1.respuestas[i_r6][j_r8]);
    i0.ɵɵadvance();
    i0.ɵɵpropertyInterpolate2("for", "checkbox", i_r6, "_", j_r8, "");
    i0.ɵɵadvance();
    i0.ɵɵtextInterpolate1(" ", opcion_r9, " ");
  }
}
function IngresoInformeComponent_div_12_div_11_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 30)(1, "div", 18);
    i0.ɵɵelement(2, "div", 31);
    i0.ɵɵelementStart(3, "div", 26);
    i0.ɵɵtemplate(4, IngresoInformeComponent_div_12_div_11_div_4_Template, 4, 9, "div", 32);
    i0.ɵɵelementEnd()()();
  }
  if (rf & 2) {
    const pregunta_r10 = i0.ɵɵnextContext().$implicit;
    i0.ɵɵadvance(4);
    i0.ɵɵproperty("ngForOf", pregunta_r10.opciones.split(";;"));
  }
}
function IngresoInformeComponent_div_12_div_12_div_4_Template(rf, ctx) {
  if (rf & 1) {
    const _r11 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "div")(1, "input", 35);
    i0.ɵɵtwoWayListener("ngModelChange", function IngresoInformeComponent_div_12_div_12_div_4_Template_input_ngModelChange_1_listener($event) {
      i0.ɵɵrestoreView(_r11);
      const i_r6 = i0.ɵɵnextContext(2).index;
      const ctx_r1 = i0.ɵɵnextContext();
      i0.ɵɵtwoWayBindingSet(ctx_r1.respuestas[i_r6], $event) || (ctx_r1.respuestas[i_r6] = $event);
      return i0.ɵɵresetView($event);
    });
    i0.ɵɵlistener("ngModelChange", function IngresoInformeComponent_div_12_div_12_div_4_Template_input_ngModelChange_1_listener($event) {
      i0.ɵɵrestoreView(_r11);
      const i_r6 = i0.ɵɵnextContext(2).index;
      const ctx_r1 = i0.ɵɵnextContext();
      return i0.ɵɵresetView(ctx_r1.updateRespuestasAlternativas(i_r6, $event));
    });
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(2, "label", 34);
    i0.ɵɵtext(3);
    i0.ɵɵelementEnd()();
  }
  if (rf & 2) {
    const opcion_r12 = ctx.$implicit;
    const j_r13 = ctx.index;
    const i_r6 = i0.ɵɵnextContext(2).index;
    const ctx_r1 = i0.ɵɵnextContext();
    i0.ɵɵadvance();
    i0.ɵɵpropertyInterpolate1("name", "radio", i_r6, "");
    i0.ɵɵpropertyInterpolate2("id", "radioOpcion", i_r6, "_", j_r13, "");
    i0.ɵɵpropertyInterpolate("value", opcion_r12);
    i0.ɵɵtwoWayProperty("ngModel", ctx_r1.respuestas[i_r6]);
    i0.ɵɵadvance();
    i0.ɵɵpropertyInterpolate2("for", "radioOpcion", i_r6, "_", j_r13, "");
    i0.ɵɵadvance();
    i0.ɵɵtextInterpolate1(" ", opcion_r12, " ");
  }
}
function IngresoInformeComponent_div_12_div_12_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 30)(1, "div", 18);
    i0.ɵɵelement(2, "div", 31);
    i0.ɵɵelementStart(3, "div", 26);
    i0.ɵɵtemplate(4, IngresoInformeComponent_div_12_div_12_div_4_Template, 4, 11, "div", 32);
    i0.ɵɵelementEnd()()();
  }
  if (rf & 2) {
    const pregunta_r10 = i0.ɵɵnextContext().$implicit;
    i0.ɵɵadvance(4);
    i0.ɵɵproperty("ngForOf", pregunta_r10.opciones.split(";;"));
  }
}
function IngresoInformeComponent_div_12_div_19_Template(rf, ctx) {
  if (rf & 1) {
    const _r14 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "div", 26)(1, "button", 27);
    i0.ɵɵlistener("click", function IngresoInformeComponent_div_12_div_19_Template_button_click_1_listener() {
      i0.ɵɵrestoreView(_r14);
      const ctx_r1 = i0.ɵɵnextContext(2);
      return i0.ɵɵresetView(ctx_r1.der());
    });
    i0.ɵɵtext(2, " Siguiente ");
    i0.ɵɵelementEnd()();
  }
}
function IngresoInformeComponent_div_12_div_20_Template(rf, ctx) {
  if (rf & 1) {
    const _r15 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "div", 26)(1, "button", 36);
    i0.ɵɵlistener("click", function IngresoInformeComponent_div_12_div_20_Template_button_click_1_listener() {
      i0.ɵɵrestoreView(_r15);
      const ctx_r1 = i0.ɵɵnextContext(2);
      return i0.ɵɵresetView(ctx_r1.enviarRespuestas());
    });
    i0.ɵɵtext(2, " Finalizar ");
    i0.ɵɵelementEnd()();
  }
}
function IngresoInformeComponent_div_12_Template(rf, ctx) {
  if (rf & 1) {
    const _r4 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "div", 16)(1, "div", 11)(2, "div", 17);
    i0.ɵɵtext(3);
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(4, "div", 15);
    i0.ɵɵtext(5);
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(6, "div", 18);
    i0.ɵɵelement(7, "div", 19);
    i0.ɵɵelementStart(8, "div", 20)(9, "div", 21);
    i0.ɵɵtemplate(10, IngresoInformeComponent_div_12_div_10_Template, 2, 3, "div", 22)(11, IngresoInformeComponent_div_12_div_11_Template, 5, 1, "div", 23)(12, IngresoInformeComponent_div_12_div_12_Template, 5, 1, "div", 23);
    i0.ɵɵelementEnd()()();
    i0.ɵɵelementStart(13, "div", 24);
    i0.ɵɵelement(14, "div", 25);
    i0.ɵɵelementStart(15, "div", 26)(16, "button", 27);
    i0.ɵɵlistener("click", function IngresoInformeComponent_div_12_Template_button_click_16_listener() {
      i0.ɵɵrestoreView(_r4);
      const ctx_r1 = i0.ɵɵnextContext();
      return i0.ɵɵresetView(ctx_r1.izq());
    });
    i0.ɵɵtext(17, " Anterior ");
    i0.ɵɵelementEnd()();
    i0.ɵɵelement(18, "div", 19);
    i0.ɵɵtemplate(19, IngresoInformeComponent_div_12_div_19_Template, 3, 0, "div", 28)(20, IngresoInformeComponent_div_12_div_20_Template, 3, 0, "div", 28);
    i0.ɵɵelementEnd()()();
  }
  if (rf & 2) {
    const pregunta_r10 = ctx.$implicit;
    const i_r6 = ctx.index;
    const ctx_r1 = i0.ɵɵnextContext();
    i0.ɵɵpropertyInterpolate1("id", "cont_respuesta", i_r6 + 1, "");
    i0.ɵɵadvance(3);
    i0.ɵɵtextInterpolate2(" Pregunta ", i_r6 + 1, " de ", ctx_r1.preguntas.length, " ");
    i0.ɵɵadvance(2);
    i0.ɵɵtextInterpolate1(" ", pregunta_r10.enunciado, " ");
    i0.ɵɵadvance(4);
    i0.ɵɵproperty("ngSwitch", pregunta_r10.tipo_respuesta);
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngSwitchCase", "abierta");
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngSwitchCase", "casillas");
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngSwitchCase", "alternativas");
    i0.ɵɵadvance(7);
    i0.ɵɵproperty("ngIf", i_r6 + 1 != ctx_r1.preguntas.length);
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngIf", i_r6 + 1 == ctx_r1.preguntas.length);
  }
}
class IngresoInformeComponent {
  constructor(document, service_obtener, router, route, _snackbar, service_informe) {
    this.document = document;
    this.service_obtener = service_obtener;
    this.router = router;
    this.route = route;
    this._snackbar = _snackbar;
    this.service_informe = service_informe;
    this.activated_route = this.route;
    this.id_informe = 0;
    this.sesion = JSON.parse(localStorage.getItem("auth-user") || "{}");
    this.modificando = false;
    this.config_informe = {
      tipo_informe: ""
    };
    this.pregunta_actual = 0;
    this.contador_preguntas = 0;
    this.preguntas = [];
    this.tipo_respuestas = [];
    this.respuestas = [];
    this.isAnimating = false;
  }
  izq() {
    if (this.isAnimating) {
      return; // Don't allow animation if one is already in progress
    }
    this.contador_preguntas -= 1;
    //console.log("CONTADOR PREGUNTAS", this.contador_preguntas);
    let id = `#cont_respuesta${this.pregunta_actual}`;
    let id_izq = `#cont_respuesta${this.pregunta_actual - 1}`;
    this.isAnimating = true; // Set the flag
    $(id).fadeOut(() => {
      $(id).css("display", "none");
      $(id_izq).css({
        "display": "block"
      });
      $(id_izq).fadeIn(() => {
        this.isAnimating = false; // Reset the flag when animation is complete
      });
      this.pregunta_actual -= 1;
    });
  }
  der() {
    if (this.isAnimating) {
      return; // Don't allow animation if one is already in progress
    }
    this.contador_preguntas += 1;
    //console.log("CONTADOR PREGUNTAS", this.contador_preguntas);
    let id = `#cont_respuesta${this.pregunta_actual}`;
    let id_der = `#cont_respuesta${this.pregunta_actual + 1}`;
    this.isAnimating = true; // Set the flag
    $(id).fadeOut(() => {
      $(id).css("display", "none");
      $(id_der).css({
        "display": "block"
      });
      $(id_der).fadeIn(() => {
        this.isAnimating = false; // Reset the flag when animation is complete
      });
      this.pregunta_actual += 1;
    });
  }
  ngOnInit() {
    this.id_informe = parseInt(this.activated_route.snapshot.queryParamMap.get('id_informe') || "{}");
    this.modificando = this.activated_route.snapshot.queryParamMap.get('modificando') == "true" ? true : false;
    let respuesta = {};
    this.service_obtener.obtener_informe_preguntas(this.id_informe).subscribe({
      next: data => {
        respuesta = {
          ...respuesta,
          ...data
        };
      },
      error: error => {
        console.log(error);
        let string_error = "";
        if (this.config_informe.tipo_informe.toLowerCase() == "informe avance") {
          string_error = "Error al obtener las preguntas de informe de avances";
        } else if (this.config_informe.tipo_informe.toLowerCase() == "informe final") {
          string_error = "Error al obtener las preguntas de informe final";
        }
        this._snackbar.open(string_error, "Cerrar", {
          duration: 2000,
          panelClass: ['red-snackbar']
        });
      },
      complete: () => {
        //console.log("RESPUESTA OBTENIDA", respuesta);
        this.preguntas = respuesta.body.config_informe.pregunta_informes;
        this.config_informe = respuesta.body.config_informe;
        let respuestas_aux = respuesta.body.key;
        //console.log("PREGUNTAS", respuesta.body)
        if (this.modificando) {
          if (this.preguntas.length > 0) {
            for (let pregunta of this.preguntas) {
              if (pregunta.tipo_respuesta == "casillas") {
                let array_aux = [];
                // convertir la string a una lista de true y false
                for (let i = 0; i < pregunta.opciones.split(";;").length; i++) {
                  if (respuestas_aux[pregunta.id].split(",")[i] == "1") {
                    array_aux.push(true);
                  } else {
                    array_aux.push(false);
                  }
                }
                this.respuestas.push(array_aux);
              } else if (pregunta.tipo_respuesta == "alternativas") {
                for (let i = 0; i < pregunta.opciones.split(";;").length; i++) {
                  if (respuestas_aux[pregunta.id].split(",")[i] == "1") {
                    this.respuestas.push(pregunta.opciones.split(";;")[i]);
                  }
                }
              } else if (pregunta.tipo_respuesta == "abierta") {
                this.respuestas.push(respuesta.body.key[pregunta.id]);
              }
              this.tipo_respuestas.push(pregunta.tipo_respuesta);
            }
          }
          //console.log("RESPUESTAS", this.respuestas);
        } else {
          if (this.preguntas.length > 0) {
            for (let pregunta of this.preguntas) {
              if (pregunta.tipo_respuesta == "casillas") {
                let array_aux = [];
                for (let i = 0; i < pregunta.opciones.split(";;").length; i++) {
                  array_aux.push(false);
                }
                this.respuestas.push(array_aux);
              } else {
                this.respuestas.push("");
              }
              this.tipo_respuestas.push(pregunta.tipo_respuesta);
            }
          }
        }
      }
    });
  }
  updateRespuestasAbierta(index, value) {
    //console.log("UPDATEANDO RESPUESTAS abierta", value)
    this.respuestas[index] = value;
    //console.log(this.respuestas);
  }
  updateRespuestasCasillas(i, j, value) {
    //console.log("UPDATEANDO RESPUESTAS casillas", value)
    this.respuestas[i][j] = value;
    //console.log(this.respuestas);
  }
  updateRespuestasAlternativas(i, value) {
    //console.log("UPDATEANDO RESPUESTAS alternativas", value);
    this.respuestas[i] = value;
    //console.log(this.respuestas);
  }
  enviarRespuestas() {
    console.log("Enviando evaluación...");
    console.log(this.respuestas);
    let respuestas_aux = {};
    for (let i = 0; i < this.respuestas.length; i++) {
      if (this.respuestas[i] == "" || this.respuestas[i] == -1 || this.respuestas[i].length == 0) {
        this._snackbar.open("Error: no se han respondido todas las preguntas.", "Cerrar", {
          duration: 2000,
          panelClass: ['red-snackbar']
        });
        return;
      }
    }
    // for que convierte las respuestas al formato acordado, y los guarda en el campo key de informe
    for (let i = 0; i < this.respuestas.length; i++) {
      let respuesta_aux = "";
      if (this.tipo_respuestas[i] == "casillas") {
        for (let j = 0; j < this.respuestas[i].length; j++) {
          if (this.respuestas[i][j]) {
            respuesta_aux += "1";
          } else {
            respuesta_aux += "0";
          }
          if (j != this.respuestas[i].length - 1) {
            respuesta_aux += ",";
          }
        }
      } else if (this.tipo_respuestas[i] == "alternativas") {
        let index = this.preguntas[i].opciones.split(";;").indexOf(this.respuestas[i]);
        for (let j = 0; j < this.preguntas[i].opciones.split(";;").length; j++) {
          if (j == index) {
            respuesta_aux += "1";
          } else {
            respuesta_aux += "0";
          }
          if (j != this.preguntas[i].opciones.split(";;").length - 1) {
            respuesta_aux += ",";
          }
        }
      } else {
        respuesta_aux = this.respuestas[i];
      }
      respuestas_aux = {
        ...respuestas_aux,
        [String(this.preguntas[i].id)]: respuesta_aux
      };
    }
    //console.log("RESPUESTAS A ENVIAR EN QUERY", respuestas_aux);
    let respuesta2 = {};
    this.service_informe.update_key_informe(this.id_informe, respuestas_aux).subscribe({
      next: data => {
        respuesta2 = {
          ...respuesta2,
          ...data
        };
      },
      error: error => {
        console.log(error);
        this._snackbar.open("Error al enviar las respuestas", "Cerrar", {
          duration: 2000,
          panelClass: ['red-snackbar']
        });
      },
      complete: () => {
        //console.log("RESPUESTA OBTENIDA", respuesta2);
        this._snackbar.open("Respuestas enviadas correctamente. Redirigiendo...", "Cerrar", {
          duration: 2000,
          panelClass: ['green-snackbar']
        });
      }
    });
    // after 2 seconds, redirect to home
    setTimeout(() => {
      this.router.navigate(['/alumno/1']);
    }, 3000);
  }
  scrollToTop() {
    this.document.body.scrollTop = 0;
    this.document.documentElement.scrollTop = 0;
  }
  static {
    this.ɵfac = function IngresoInformeComponent_Factory(__ngFactoryType__) {
      return new (__ngFactoryType__ || IngresoInformeComponent)(i0.ɵɵdirectiveInject(common_1.DOCUMENT), i0.ɵɵdirectiveInject(i1.ObtenerDatosService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i3.MatSnackBar), i0.ɵɵdirectiveInject(i4.InformeService));
    };
  }
  static {
    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({
      type: IngresoInformeComponent,
      selectors: [["app-ingreso-informe"]],
      decls: 14,
      vars: 2,
      consts: [["esInformeFinal", ""], ["id", "wrapper"], ["id", "content-wrapper", 1, "d-flex", "flex-column"], ["id", "content", 1, "main-content"], [1, "container-fluid", 2, "height", "100vh"], [1, "row", "pt-5"], [1, "col-lg-2"], [1, "col-lg-8", 3, "ngSwitch"], ["class", "card border-left-primary shadow py-2", "id", "cont_respuesta0", 4, "ngSwitchDefault"], ["class", "card border-left-primary shadow py-2", "style", "display: none;", 3, "id", 4, "ngFor", "ngForOf"], ["id", "cont_respuesta0", 1, "card", "border-left-primary", "shadow", "py-2"], [1, "card-body"], ["class", "h4 mb-3 font-weight-bold text-gray-800 text-center", 4, "ngIf", "ngIfElse"], [1, "h5", "mb-3", "text-gray-800", "text-center", "mx-auto", "w-50"], [1, "btn", "btn-primary", "btn-user", "btn-block", "btn-lg", "mx-auto", "w-25", 3, "click"], [1, "h4", "mb-3", "font-weight-bold", "text-gray-800", "text-center"], [1, "card", "border-left-primary", "shadow", "py-2", 2, "display", "none", 3, "id"], [1, "h6", "ml-4", "mt-2", "font-weight-bold", "text-gray-800"], [1, "row"], [1, "col-xl-2"], [1, "col-xl-8"], [3, "ngSwitch"], [4, "ngSwitchCase"], ["class", "form-check", 4, "ngSwitchCase"], [1, "row", "mt-5", "mb-3", "align-items-end"], [1, "col-xl-1"], [1, "col-xl-4"], [1, "btn", "btn-primary", "btn-user", "btn-block", "btn-md", 3, "click"], ["class", "col-xl-4", 4, "ngIf"], ["rows", "3", "placeholder", "Escriba su respuesta aqu\u00ED...", 1, "form-control", 3, "ngModelChange", "id", "ngModel"], [1, "form-check"], [1, "col-xl-5"], [4, "ngFor", "ngForOf"], ["type", "checkbox", 1, "form-check-input", 3, "ngModelChange", "value", "id", "ngModel"], [1, "form-check-label", 3, "for"], ["type", "radio", 1, "form-check-input", 3, "ngModelChange", "name", "id", "value", "ngModel"], [1, "btn", "btn-success", "btn-user", "btn-block", "btn-md", 3, "click"]],
      template: function IngresoInformeComponent_Template(rf, ctx) {
        if (rf & 1) {
          i0.ɵɵelementStart(0, "div", 1);
          i0.ɵɵelement(1, "app-barra-lateral-alumno");
          i0.ɵɵelementStart(2, "div", 2)(3, "div", 3);
          i0.ɵɵelement(4, "app-barra-superior");
          i0.ɵɵelementStart(5, "div", 2)(6, "div", 3)(7, "div", 4)(8, "div", 5);
          i0.ɵɵelement(9, "div", 6);
          i0.ɵɵelementStart(10, "div", 7);
          i0.ɵɵtemplate(11, IngresoInformeComponent_div_11_Template, 9, 2, "div", 8)(12, IngresoInformeComponent_div_12_Template, 21, 11, "div", 9);
          i0.ɵɵelementEnd()()()()()()()();
          i0.ɵɵelement(13, "app-logout-modal");
        }
        if (rf & 2) {
          i0.ɵɵadvance(10);
          i0.ɵɵproperty("ngSwitch", ctx.pregunta_actual);
          i0.ɵɵadvance(2);
          i0.ɵɵproperty("ngForOf", ctx.preguntas);
        }
      },
      dependencies: [i5.NgForOf, i5.NgIf, i5.NgSwitch, i5.NgSwitchCase, i5.NgSwitchDefault, i6.DefaultValueAccessor, i6.CheckboxControlValueAccessor, i6.RadioControlValueAccessor, i6.NgControlStatus, i6.NgModel, i7.BarraSuperiorComponent, i8.LogoutModalComponent, i9.BarraLateralAlumnoComponent],
      styles: ["/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */"]
    });
  }
}
exports.IngresoInformeComponent = IngresoInformeComponent;

/***/ }),

/***/ 75935:
/*!*************************************************!*\
  !*** ./src/app/vistas/login/login.component.ts ***!
  \*************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.LoginComponent = void 0;
const environment_1 = __webpack_require__(/*! ../../../environments/environment */ 45312);
const forms_1 = __webpack_require__(/*! @angular/forms */ 34456);
const i0 = __webpack_require__(/*! @angular/core */ 37580);
const i1 = __webpack_require__(/*! ../../servicios/usuario/usuario.service */ 31446);
const i2 = __webpack_require__(/*! src/app/servicios/usuario/storage-user.service */ 57637);
const i3 = __webpack_require__(/*! src/app/servicios/dominios_aceptados/dominios-aceptados.service */ 93360);
const i4 = __webpack_require__(/*! @angular/router */ 95072);
const i5 = __webpack_require__(/*! @angular/forms */ 34456);
const i6 = __webpack_require__(/*! @angular/material/snack-bar */ 3347);
const i7 = __webpack_require__(/*! @angular/common */ 60316);
function LoginComponent_div_28_p_1_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "p");
    i0.ɵɵtext(1, " Se requiere correo ");
    i0.ɵɵelementEnd();
  }
}
function LoginComponent_div_28_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 34);
    i0.ɵɵtemplate(1, LoginComponent_div_28_p_1_Template, 2, 0, "p", 35);
    i0.ɵɵelementEnd();
  }
  if (rf & 2) {
    const ctx_r0 = i0.ɵɵnextContext();
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngIf", ctx_r0.loginForm.controls["email"].errors == null ? null : ctx_r0.loginForm.controls["email"].errors["required"]);
  }
}
function LoginComponent_option_34_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "option", 36);
    i0.ɵɵtext(1);
    i0.ɵɵelementEnd();
  }
  if (rf & 2) {
    const dominio_r2 = ctx.$implicit;
    i0.ɵɵpropertyInterpolate("value", dominio_r2);
    i0.ɵɵadvance();
    i0.ɵɵtextInterpolate1(" @", dominio_r2, "");
  }
}
function LoginComponent_div_38_p_1_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "p");
    i0.ɵɵtext(1, " Se requiere contrase\u00F1a ");
    i0.ɵɵelementEnd();
  }
}
function LoginComponent_div_38_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 34);
    i0.ɵɵtemplate(1, LoginComponent_div_38_p_1_Template, 2, 0, "p", 35);
    i0.ɵɵelementEnd();
  }
  if (rf & 2) {
    const ctx_r0 = i0.ɵɵnextContext();
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngIf", ctx_r0.loginForm.controls["password"].errors == null ? null : ctx_r0.loginForm.controls["password"].errors["required"]);
  }
}
class LoginComponent {
  constructor(usuario, storage, dominios_service, router, fb, _snackBar) {
    this.usuario = usuario;
    this.storage = storage;
    this.dominios_service = dominios_service;
    this.router = router;
    this.fb = fb;
    this._snackBar = _snackBar;
    this.lista_dominios = [];
    let respuesta_dominios = {};
    dominios_service.get_all().subscribe({
      next: data => {
        respuesta_dominios = {
          ...respuesta_dominios,
          ...data
        };
      },
      error: err => {},
      complete: () => {
        respuesta_dominios.body.forEach(obj => {
          this.lista_dominios.push(obj.dominio);
        });
      }
    });
    this.createForm();
  }
  createForm() {
    this.loginForm = this.fb.group({
      email: ['', forms_1.Validators.required],
      password: ['', forms_1.Validators.required],
      dominio_select: ['', forms_1.Validators.required]
    });
  }
  login() {
    let response = {};
    const data = this.loginForm.value;
    console.log(data);
    this.usuario.login(data.email, data.password, data.dominio_select).subscribe({
      next: data => {
        response = {
          ...response,
          ...data
        };
      },
      error: err => {
        this._snackBar.open(err.error.message, "OK", {
          duration: 5000
        });
      },
      complete: () => {
        if (response.status == 200) {
          this.dataUsuario = response.body.userdata;
          this.storage.saveUser(response.body); //¿response.body.userdata?
          if (this.dataUsuario.es_encargado) {
            this.router.navigate(["/" + environment_1.environment.ruta_practicas]);
          } else if (this.dataUsuario.es_estudiante) {
            this.router.navigate(["/" + environment_1.environment.ruta_alumno + "/" + this.dataUsuario.id]);
          } else if (this.dataUsuario.es_supervisor) {
            this.router.navigate(["/home_supervisor"]);
          } else if (this.dataUsuario.es_admin) {
            this.router.navigate(["/admin"]);
          }
        } else {
          this._snackBar.open(response.body.message, "OK", {
            duration: 5000
          });
          return;
        }
      }
    });
  }
  static {
    this.ɵfac = function LoginComponent_Factory(__ngFactoryType__) {
      return new (__ngFactoryType__ || LoginComponent)(i0.ɵɵdirectiveInject(i1.UsuarioService), i0.ɵɵdirectiveInject(i2.StorageUserService), i0.ɵɵdirectiveInject(i3.DominiosAceptadosService), i0.ɵɵdirectiveInject(i4.Router), i0.ɵɵdirectiveInject(i5.FormBuilder), i0.ɵɵdirectiveInject(i6.MatSnackBar));
    };
  }
  static {
    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({
      type: LoginComponent,
      selectors: [["app-login"]],
      decls: 54,
      vars: 4,
      consts: [["lang", "en"], ["charset", "utf-8"], ["http-equiv", "X-UA-Compatible", "content", "IE=edge"], ["name", "viewport", "content", "width=device-width, initial-scale=1, shrink-to-fit=no"], ["name", "description", "content", ""], ["name", "author", "content", ""], [1, "bg-gradient-primary"], [1, "container"], [1, "row", "justify-content-center"], [1, "col-xl-10", "col-lg-12", "col-md-9"], [1, "card", "o-hidden", "border-0", "shadow-lg", "my-5"], [1, "card-body", "p-0"], [1, "row"], [1, "col-lg-12"], [1, "p-5"], [1, "text-center"], [1, "h2", "text-gray-900", "mb-2"], [1, "text-gray-900", "mb-2"], [1, "user", 3, "formGroup"], [1, "form-group", "row"], [1, "col-sm-6"], ["type", "email", "id", "exampleInputEmail", "aria-describedby", "emailHelp", "placeholder", "nombre.apellido", "formControlName", "email", "name", "email", "required", "", 1, "form-control", "form-control-user"], ["class", "alert alert-danger", 4, "ngIf"], ["name", "dominio_select", "id", "dominio_select", "formControlName", "dominio_select", "required", "", 1, "form-select"], ["value", "", "disabled", "", "selected", ""], [3, "value", 4, "ngFor", "ngForOf"], [1, "form-group"], ["type", "password", "id", "exampleInputPassword", "placeholder", "**********", "name", "password", "formControlName", "password", 1, "form-control", "form-control-user"], [1, "custom-control", "custom-checkbox", "small"], ["type", "checkbox", "id", "customCheck", 1, "custom-control-input"], ["for", "customCheck", 1, "custom-control-label"], ["id", "myBtn", 1, "btn-primary", "btn-user", "btn-block", 3, "click"], ["routerLink", "/resetPass", 1, "small"], ["routerLink", "/registro", 1, "small"], [1, "alert", "alert-danger"], [4, "ngIf"], [3, "value"]],
      template: function LoginComponent_Template(rf, ctx) {
        if (rf & 1) {
          i0.ɵɵelementStart(0, "html", 0)(1, "head");
          i0.ɵɵelement(2, "meta", 1)(3, "meta", 2)(4, "meta", 3)(5, "meta", 4)(6, "meta", 5);
          i0.ɵɵelementStart(7, "title");
          i0.ɵɵtext(8, "Praxus - Login");
          i0.ɵɵelementEnd()();
          i0.ɵɵelementStart(9, "body", 6)(10, "div", 7)(11, "div", 8)(12, "div", 9)(13, "div", 10)(14, "div", 11)(15, "div", 12)(16, "div", 13)(17, "div", 14)(18, "div", 15)(19, "div", 16);
          i0.ɵɵtext(20, "Bienvenido a Praxus");
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(21, "div", 17);
          i0.ɵɵtext(22, "Sistema de pr\u00E1cticas universitarias");
          i0.ɵɵelementEnd()();
          i0.ɵɵelementStart(23, "form", 18)(24, "div", 19)(25, "div", 20);
          i0.ɵɵtext(26, " Ingresar usuario: ");
          i0.ɵɵelement(27, "input", 21);
          i0.ɵɵtemplate(28, LoginComponent_div_28_Template, 2, 1, "div", 22);
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(29, "div", 20);
          i0.ɵɵtext(30, " Ingresar dominio: ");
          i0.ɵɵelementStart(31, "select", 23)(32, "option", 24);
          i0.ɵɵtext(33, "Seleccione un dominio");
          i0.ɵɵelementEnd();
          i0.ɵɵtemplate(34, LoginComponent_option_34_Template, 2, 2, "option", 25);
          i0.ɵɵelementEnd()()();
          i0.ɵɵelementStart(35, "div", 26);
          i0.ɵɵtext(36, " Ingresar contrase\u00F1a: ");
          i0.ɵɵelement(37, "input", 27);
          i0.ɵɵtemplate(38, LoginComponent_div_38_Template, 2, 1, "div", 22);
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(39, "div", 26)(40, "div", 28);
          i0.ɵɵelement(41, "input", 29);
          i0.ɵɵelementStart(42, "label", 30);
          i0.ɵɵtext(43, "Recordarme");
          i0.ɵɵelementEnd()()();
          i0.ɵɵelementStart(44, "button", 31);
          i0.ɵɵlistener("click", function LoginComponent_Template_button_click_44_listener() {
            return ctx.login();
          });
          i0.ɵɵtext(45, " Iniciar sesi\u00F3n ");
          i0.ɵɵelementEnd();
          i0.ɵɵelement(46, "hr");
          i0.ɵɵelementEnd();
          i0.ɵɵelement(47, "hr");
          i0.ɵɵelementStart(48, "div", 15)(49, "a", 32);
          i0.ɵɵtext(50, "\u00BFHas olvidado tu contrase\u00F1a?");
          i0.ɵɵelementEnd()();
          i0.ɵɵelementStart(51, "div", 15)(52, "a", 33);
          i0.ɵɵtext(53, "Crear cuenta");
          i0.ɵɵelementEnd()()()()()()()()()()()();
        }
        if (rf & 2) {
          i0.ɵɵadvance(23);
          i0.ɵɵproperty("formGroup", ctx.loginForm);
          i0.ɵɵadvance(5);
          i0.ɵɵproperty("ngIf", ctx.loginForm.controls["email"].invalid && (ctx.loginForm.controls["email"].dirty || ctx.loginForm.controls["email"].touched));
          i0.ɵɵadvance(6);
          i0.ɵɵproperty("ngForOf", ctx.lista_dominios);
          i0.ɵɵadvance(4);
          i0.ɵɵproperty("ngIf", ctx.loginForm.controls["password"].invalid && (ctx.loginForm.controls["password"].dirty || ctx.loginForm.controls["password"].touched));
        }
      },
      dependencies: [i7.NgForOf, i7.NgIf, i4.RouterLink, i5.ɵNgNoValidate, i5.NgSelectOption, i5.ɵNgSelectMultipleOption, i5.DefaultValueAccessor, i5.SelectControlValueAccessor, i5.NgControlStatus, i5.NgControlStatusGroup, i5.RequiredValidator, i5.FormGroupDirective, i5.FormControlName],
      styles: ["/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */"]
    });
  }
}
exports.LoginComponent = LoginComponent;

/***/ }),

/***/ 20835:
/*!*********************************************************************!*\
  !*** ./src/app/vistas/notis-historial/notis-historial.component.ts ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.NotisHistorialComponent = void 0;
const dayjs = __webpack_require__(/*! dayjs */ 49645);
const i0 = __webpack_require__(/*! @angular/core */ 37580);
const i1 = __webpack_require__(/*! src/app/servicios/data_usuario/data-usuario.service */ 94160);
const i2 = __webpack_require__(/*! @angular/common */ 60316);
const i3 = __webpack_require__(/*! ../../componentes/barra-superior/barra-superior.component */ 36370);
const i4 = __webpack_require__(/*! ../../componentes/barra-lateral-alumno/barra-lateral-alumno.component */ 72756);
const i5 = __webpack_require__(/*! ../../componentes/barra-lateral-encargado/barra-lateral-encargado.component */ 43560);
function NotisHistorialComponent_div_1_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div");
    i0.ɵɵelement(1, "app-barra-lateral-alumno");
    i0.ɵɵelementEnd();
  }
}
function NotisHistorialComponent_ng_template_2_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelement(0, "app-barra-lateral-encargado");
  }
}
function NotisHistorialComponent_div_10_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div")(1, "a", 8)(2, "div", 9)(3, "div", 10);
    i0.ɵɵelement(4, "i", 11);
    i0.ɵɵelementEnd()();
    i0.ɵɵelementStart(5, "div", 12)(6, "div", 13);
    i0.ɵɵtext(7);
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(8, "span", 14);
    i0.ɵɵtext(9);
    i0.ɵɵelementEnd()()()();
  }
  if (rf & 2) {
    const noti_r1 = ctx.$implicit;
    i0.ɵɵadvance();
    i0.ɵɵproperty("href", noti_r1 == null ? null : noti_r1.link, i0.ɵɵsanitizeUrl);
    i0.ɵɵadvance(6);
    i0.ɵɵtextInterpolate(noti_r1 == null ? null : noti_r1.fecha);
    i0.ɵɵadvance(2);
    i0.ɵɵtextInterpolate(noti_r1 == null ? null : noti_r1.texto);
  }
}
dayjs().format();
const customParseFormat = __webpack_require__(/*! dayjs/plugin/customParseFormat */ 30001);
dayjs.extend(customParseFormat);
class NotisHistorialComponent {
  constructor(service_noti) {
    this.service_noti = service_noti;
    this.esalumno = -1;
    this.usuario = {};
    this.historial = [];
    this.respuesta = [];
    this.usuario = JSON.parse(localStorage.getItem('auth-user') || '{}').userdata;
    if (this.usuario.es_estudiante == 1) {
      this.esalumno = 1;
    } else {
      this.esalumno = 0;
    }
  }
  volver_atras() {
    window.history.back();
  }
  ngOnInit() {
    this.service_noti.obtener_todas_notificaciones(this.usuario.id).subscribe({
      next: data => {
        this.respuesta = {
          ...this.respuesta,
          ...data
        };
      },
      error: error => {
        console.log(error);
        return;
      },
      complete: () => {
        console.log(this.respuesta);
        let aux = this.respuesta.body.map(notificacion => {
          notificacion.fecha_og = notificacion.fecha;
          notificacion.fecha = dayjs(notificacion.fecha, "YYYY-MM-DDTHH:mm:ssZ").format("DD/MM/YYYY HH:mm");
          return notificacion;
        });
        aux.sort(function (a, b) {
          if (a.fecha_og > b.fecha_og) return -1;
          if (a.fecha_og < b.fecha_og) return 1;
          return 0;
        });
        this.historial = aux;
        console.log(this.historial);
      }
    });
  }
  static {
    this.ɵfac = function NotisHistorialComponent_Factory(__ngFactoryType__) {
      return new (__ngFactoryType__ || NotisHistorialComponent)(i0.ɵɵdirectiveInject(i1.DataUsuarioService));
    };
  }
  static {
    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({
      type: NotisHistorialComponent,
      selectors: [["app-notis-historial"]],
      decls: 11,
      vars: 3,
      consts: [["elseblock", ""], ["id", "wrapper"], [4, "ngIf", "ngIfElse"], ["id", "content-wrapper", 1, "d-flex", "flex-column"], ["id", "content", 1, "main-content"], ["id", "container-fluid overflow-auto", 2, "max-height", "80vh"], [1, "h3", "mt-2", "ml-2"], [4, "ngFor", "ngForOf"], [1, "dropdown-item", "d-flex", "align-items-center", 3, "href"], [1, "mr-3"], [1, "icon-circle", "bg-primary"], [1, "fas", "fa-file-alt", "text-white"], [1, "mt-2"], [1, "small", "text-gray-500"], [1, "font-weight-bold"]],
      template: function NotisHistorialComponent_Template(rf, ctx) {
        if (rf & 1) {
          i0.ɵɵelementStart(0, "div", 1);
          i0.ɵɵtemplate(1, NotisHistorialComponent_div_1_Template, 2, 0, "div", 2)(2, NotisHistorialComponent_ng_template_2_Template, 1, 0, "ng-template", null, 0, i0.ɵɵtemplateRefExtractor);
          i0.ɵɵelementStart(4, "div", 3)(5, "div", 4);
          i0.ɵɵelement(6, "app-barra-superior");
          i0.ɵɵelementStart(7, "div", 5)(8, "div", 6);
          i0.ɵɵtext(9, "Historial de Notificaciones");
          i0.ɵɵelementEnd();
          i0.ɵɵtemplate(10, NotisHistorialComponent_div_10_Template, 10, 3, "div", 7);
          i0.ɵɵelementEnd()()()();
        }
        if (rf & 2) {
          const elseblock_r2 = i0.ɵɵreference(3);
          i0.ɵɵadvance();
          i0.ɵɵproperty("ngIf", ctx.esalumno == 1)("ngIfElse", elseblock_r2);
          i0.ɵɵadvance(9);
          i0.ɵɵproperty("ngForOf", ctx.historial);
        }
      },
      dependencies: [i2.NgForOf, i2.NgIf, i3.BarraSuperiorComponent, i4.BarraLateralAlumnoComponent, i5.BarraLateralEncargadoComponent],
      styles: ["/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */"]
    });
  }
}
exports.NotisHistorialComponent = NotisHistorialComponent;

/***/ }),

/***/ 12043:
/*!*************************************************************************!*\
  !*** ./src/app/vistas/password-recovery/password-recovery.component.ts ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.PasswordRecoveryComponent = void 0;
const forms_1 = __webpack_require__(/*! @angular/forms */ 34456);
const i0 = __webpack_require__(/*! @angular/core */ 37580);
const i1 = __webpack_require__(/*! ../../servicios/usuario/usuario.service */ 31446);
const i2 = __webpack_require__(/*! @angular/forms */ 34456);
const i3 = __webpack_require__(/*! @angular/material/snack-bar */ 3347);
const i4 = __webpack_require__(/*! @angular/router */ 95072);
const i5 = __webpack_require__(/*! @angular/common */ 60316);
function PasswordRecoveryComponent_div_26_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 24)(1, "p", 25);
    i0.ɵɵtext(2, " Se requiere contrase\u00F1a ");
    i0.ɵɵelementEnd()();
  }
}
function PasswordRecoveryComponent_div_29_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 24)(1, "p", 26);
    i0.ɵɵtext(2, " Se requiere contrase\u00F1a ");
    i0.ɵɵelementEnd()();
  }
}
class PasswordRecoveryComponent {
  constructor(usuario, fb, _snackBar, router, route) {
    this.usuario = usuario;
    this.fb = fb;
    this._snackBar = _snackBar;
    this.router = router;
    this.route = route;
    this.createForm();
  }
  createForm() {
    this.loginForm = this.fb.group({
      password1: ['', forms_1.Validators.required],
      password2: ['', forms_1.Validators.required]
    });
  }
  ngOnInit() {
    const urls = this.route.snapshot.url;
    this.route.params.subscribe(params => {
      this.id = +params['n'];
    });
    this.route.params.subscribe(params => {
      this.token = params['token'];
    });
  }
  send() {
    let response = {};
    const data = this.loginForm.value;
    console.log(data);
    console.log(this.id);
    this.password1 = data.password1;
    this.password2 = data.password2;
    if (this.password1 === this.password2 == false) {
      this._snackBar.open("Las contraseñas no coindiden", "OK", {
        duration: 5000
      });
    } else {
      this.usuario.change_password(this.id, this.password1, this.token).subscribe({
        next: data => {
          response = {
            ...response,
            ...data
          };
          console.log(data);
        },
        error: err => {
          this._snackBar.open(err.error.message, "Aceptar", {
            duration: 5000
          });
        },
        complete: () => {
          this._snackBar.open("Contraseña cambiada con éxito", "Aceptar", {
            duration: 5000
          });
          this.router.navigate(["/login"]);
        }
      });
    }
  }
  static {
    this.ɵfac = function PasswordRecoveryComponent_Factory(__ngFactoryType__) {
      return new (__ngFactoryType__ || PasswordRecoveryComponent)(i0.ɵɵdirectiveInject(i1.UsuarioService), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.MatSnackBar), i0.ɵɵdirectiveInject(i4.Router), i0.ɵɵdirectiveInject(i4.ActivatedRoute));
    };
  }
  static {
    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({
      type: PasswordRecoveryComponent,
      selectors: [["app-password-recovery"]],
      decls: 33,
      vars: 3,
      consts: [["lang", "en"], ["charset", "utf-8"], ["http-equiv", "X-UA-Compatible", "content", "IE=edge"], ["name", "viewport", "content", "width=device-width, initial-scale=1, shrink-to-fit=no"], ["name", "description", "content", ""], ["name", "author", "content", ""], [1, "bg-gradient-primary"], [1, "container"], [1, "row", "justify-content-center"], [1, "col-xl-10", "col-lg-12", "col-md-9"], [1, "card", "o-hidden", "border-0", "shadow-lg", "my-5"], [1, "card-body", "p-0"], [1, "row"], [1, "col-lg-12"], [1, "p-5"], [1, "text-center"], [1, "h4", "text-gray-900", "mb-2"], [1, "mb-4"], [1, "user", 3, "formGroup"], [1, "form-group"], ["type", "password", "id", "password1", "name", "password1", "aria-describedby", "emailHelp", "placeholder", "Ingresar Nueva Contrase\u00F1a...", "formControlName", "password1", 1, "form-control", "form-control-user"], ["class", "alert alert-danger", 4, "ngIf"], ["type", "password", "id", "password2", "name", "password2", "aria-describedby", "emailHelp", "placeholder", "Confirmar Nueva Contrase\u00F1a...", "formControlName", "password2", 1, "form-control", "form-control-user"], ["id", "myBtn", 1, "btn-primary", "btn-user", "btn-block", 3, "click"], [1, "alert", "alert-danger"], ["ngIf", "loginForm.controls['password1'].errors?.['required']"], ["ngIf", "loginForm.controls['password'].errors?.['required']"]],
      template: function PasswordRecoveryComponent_Template(rf, ctx) {
        if (rf & 1) {
          i0.ɵɵelementStart(0, "html", 0)(1, "head");
          i0.ɵɵelement(2, "meta", 1)(3, "meta", 2)(4, "meta", 3)(5, "meta", 4)(6, "meta", 5);
          i0.ɵɵelementStart(7, "title");
          i0.ɵɵtext(8, "Praxus - Reset Password");
          i0.ɵɵelementEnd()();
          i0.ɵɵelementStart(9, "body", 6)(10, "div", 7)(11, "div", 8)(12, "div", 9)(13, "div", 10)(14, "div", 11)(15, "div", 12)(16, "div", 13)(17, "div", 14)(18, "div", 15)(19, "h1", 16);
          i0.ɵɵtext(20, "Recuperaci\u00F3n de contrase\u00F1a");
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(21, "p", 17);
          i0.ɵɵtext(22, "Ingrese aqu\u00ED su nueva contrase\u00F1a.");
          i0.ɵɵelementEnd()();
          i0.ɵɵelementStart(23, "form", 18)(24, "div", 19);
          i0.ɵɵelement(25, "input", 20);
          i0.ɵɵelementEnd();
          i0.ɵɵtemplate(26, PasswordRecoveryComponent_div_26_Template, 3, 0, "div", 21);
          i0.ɵɵelementStart(27, "div", 19);
          i0.ɵɵelement(28, "input", 22);
          i0.ɵɵelementEnd();
          i0.ɵɵtemplate(29, PasswordRecoveryComponent_div_29_Template, 3, 0, "div", 21);
          i0.ɵɵelementStart(30, "button", 23);
          i0.ɵɵlistener("click", function PasswordRecoveryComponent_Template_button_click_30_listener() {
            return ctx.send();
          });
          i0.ɵɵtext(31, " Cambiar Contrase\u00F1a ");
          i0.ɵɵelementEnd()();
          i0.ɵɵelement(32, "hr");
          i0.ɵɵelementEnd()()()()()()()()()();
        }
        if (rf & 2) {
          i0.ɵɵadvance(23);
          i0.ɵɵproperty("formGroup", ctx.loginForm);
          i0.ɵɵadvance(3);
          i0.ɵɵproperty("ngIf", ctx.loginForm.controls["password1"].invalid && (ctx.loginForm.controls["password1"].dirty || ctx.loginForm.controls["password1"].touched));
          i0.ɵɵadvance(3);
          i0.ɵɵproperty("ngIf", ctx.loginForm.controls["password2"].invalid && (ctx.loginForm.controls["password2"].dirty || ctx.loginForm.controls["password2"].touched));
        }
      },
      dependencies: [i5.NgIf, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName],
      styles: ["/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */"]
    });
  }
}
exports.PasswordRecoveryComponent = PasswordRecoveryComponent;

/***/ }),

/***/ 17645:
/*!***************************************************!*\
  !*** ./src/app/vistas/perfil/perfil.component.ts ***!
  \***************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.PerfilComponent = void 0;
const i0 = __webpack_require__(/*! @angular/core */ 37580);
const i1 = __webpack_require__(/*! src/app/servicios/data_usuario/data-usuario.service */ 94160);
const i2 = __webpack_require__(/*! src/app/servicios/usuario/usuario.service */ 31446);
const i3 = __webpack_require__(/*! @angular/common */ 60316);
const i4 = __webpack_require__(/*! @angular/forms */ 34456);
const i5 = __webpack_require__(/*! ../../componentes/barra-superior/barra-superior.component */ 36370);
const i6 = __webpack_require__(/*! ../../componentes/logout-modal/logout-modal.component */ 15562);
const i7 = __webpack_require__(/*! ../../componentes/barra-lateral-alumno/barra-lateral-alumno.component */ 72756);
const i8 = __webpack_require__(/*! ../../componentes/barra-lateral-encargado/barra-lateral-encargado.component */ 43560);
const _c0 = () => ({
  standalone: true
});
function PerfilComponent_div_1_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div");
    i0.ɵɵelement(1, "app-barra-lateral-alumno");
    i0.ɵɵelementEnd();
  }
}
function PerfilComponent_ng_template_2_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelement(0, "app-barra-lateral-encargado");
  }
}
function PerfilComponent_div_15_div_20_Template(rf, ctx) {
  if (rf & 1) {
    const _r3 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "div")(1, "textarea", 17);
    i0.ɵɵtwoWayListener("ngModelChange", function PerfilComponent_div_15_div_20_Template_textarea_ngModelChange_1_listener($event) {
      i0.ɵɵrestoreView(_r3);
      const ctx_r1 = i0.ɵɵnextContext(2);
      i0.ɵɵtwoWayBindingSet(ctx_r1.NLink, $event) || (ctx_r1.NLink = $event);
      return i0.ɵɵresetView($event);
    });
    i0.ɵɵtext(2);
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(3, "button", 18);
    i0.ɵɵlistener("click", function PerfilComponent_div_15_div_20_Template_button_click_3_listener() {
      i0.ɵɵrestoreView(_r3);
      const ctx_r1 = i0.ɵɵnextContext(2);
      return i0.ɵɵresetView(ctx_r1.confirmar_cambio_link());
    });
    i0.ɵɵtext(4, " Confirmar ");
    i0.ɵɵelementEnd()();
  }
  if (rf & 2) {
    const ctx_r1 = i0.ɵɵnextContext(2);
    i0.ɵɵadvance();
    i0.ɵɵtwoWayProperty("ngModel", ctx_r1.NLink);
    i0.ɵɵproperty("ngModelOptions", i0.ɵɵpureFunction0(3, _c0));
    i0.ɵɵadvance();
    i0.ɵɵtextInterpolate(ctx_r1.Link);
  }
}
function PerfilComponent_div_15_div_29_option_4_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "option", 22);
    i0.ɵɵtext(1);
    i0.ɵɵelementEnd();
  }
  if (rf & 2) {
    const carrera_r5 = ctx.$implicit;
    i0.ɵɵpropertyInterpolate("value", carrera_r5.id);
    i0.ɵɵadvance();
    i0.ɵɵtextInterpolate(carrera_r5.nombre);
  }
}
function PerfilComponent_div_15_div_29_Template(rf, ctx) {
  if (rf & 1) {
    const _r4 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "div")(1, "select", 19);
    i0.ɵɵlistener("input", function PerfilComponent_div_15_div_29_Template_select_input_1_listener($event) {
      i0.ɵɵrestoreView(_r4);
      const ctx_r1 = i0.ɵɵnextContext(2);
      return i0.ɵɵresetView(ctx_r1.checkout($event));
    });
    i0.ɵɵelementStart(2, "option", 20);
    i0.ɵɵtext(3, "Elija una carrera");
    i0.ɵɵelementEnd();
    i0.ɵɵtemplate(4, PerfilComponent_div_15_div_29_option_4_Template, 2, 2, "option", 21);
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(5, "button", 18);
    i0.ɵɵlistener("click", function PerfilComponent_div_15_div_29_Template_button_click_5_listener() {
      i0.ɵɵrestoreView(_r4);
      const ctx_r1 = i0.ɵɵnextContext(2);
      return i0.ɵɵresetView(ctx_r1.confirmar_cambio_carrera());
    });
    i0.ɵɵtext(6, " Confirmar ");
    i0.ɵɵelementEnd()();
  }
  if (rf & 2) {
    const ctx_r1 = i0.ɵɵnextContext(2);
    i0.ɵɵadvance(4);
    i0.ɵɵproperty("ngForOf", ctx_r1.carreras);
  }
}
function PerfilComponent_div_15_Template(rf, ctx) {
  if (rf & 1) {
    const _r1 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "div")(1, "div", 13)(2, "div", 9)(3, "p");
    i0.ɵɵtext(4);
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(5, "p");
    i0.ɵɵtext(6);
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(7, "p");
    i0.ɵɵtext(8);
    i0.ɵɵelementEnd()()();
    i0.ɵɵelementStart(9, "div", 13)(10, "div", 9)(11, "div");
    i0.ɵɵtext(12, " Perfil de Linkedin: ");
    i0.ɵɵelementStart(13, "div")(14, "a", 14);
    i0.ɵɵtext(15);
    i0.ɵɵelementEnd()();
    i0.ɵɵelement(16, "br");
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(17, "button", 15);
    i0.ɵɵlistener("click", function PerfilComponent_div_15_Template_button_click_17_listener() {
      i0.ɵɵrestoreView(_r1);
      const ctx_r1 = i0.ɵɵnextContext();
      return i0.ɵɵresetView(ctx_r1.editar1());
    });
    i0.ɵɵtext(18, "Editar");
    i0.ɵɵelementEnd();
    i0.ɵɵelement(19, "p");
    i0.ɵɵtemplate(20, PerfilComponent_div_15_div_20_Template, 5, 4, "div", 16);
    i0.ɵɵelementEnd()();
    i0.ɵɵelementStart(21, "div", 13)(22, "div", 9)(23, "div");
    i0.ɵɵtext(24);
    i0.ɵɵelementEnd();
    i0.ɵɵelement(25, "br");
    i0.ɵɵelementStart(26, "button", 15);
    i0.ɵɵlistener("click", function PerfilComponent_div_15_Template_button_click_26_listener() {
      i0.ɵɵrestoreView(_r1);
      const ctx_r1 = i0.ɵɵnextContext();
      return i0.ɵɵresetView(ctx_r1.editar2());
    });
    i0.ɵɵtext(27, "Editar");
    i0.ɵɵelementEnd();
    i0.ɵɵelement(28, "p");
    i0.ɵɵtemplate(29, PerfilComponent_div_15_div_29_Template, 7, 1, "div", 16);
    i0.ɵɵelementEnd()()();
  }
  if (rf & 2) {
    const ctx_r1 = i0.ɵɵnextContext();
    i0.ɵɵadvance(4);
    i0.ɵɵtextInterpolate1("Nombre: ", ctx_r1.Nombre, "");
    i0.ɵɵadvance(2);
    i0.ɵɵtextInterpolate1("Rut: ", ctx_r1.Rut, "");
    i0.ɵɵadvance(2);
    i0.ɵɵtextInterpolate1("Correo: ", ctx_r1.Correo, "");
    i0.ɵɵadvance(6);
    i0.ɵɵpropertyInterpolate("href", ctx_r1.Link, i0.ɵɵsanitizeUrl);
    i0.ɵɵadvance();
    i0.ɵɵtextInterpolate(ctx_r1.Link);
    i0.ɵɵadvance(5);
    i0.ɵɵproperty("ngIf", ctx_r1.edicion1 == 1);
    i0.ɵɵadvance(4);
    i0.ɵɵtextInterpolate1(" Carrera: ", ctx_r1.Carrera, " ");
    i0.ɵɵadvance(5);
    i0.ɵɵproperty("ngIf", ctx_r1.edicion2 == 1);
  }
}
function PerfilComponent_ng_template_16_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 13)(1, "p");
    i0.ɵɵtext(2);
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(3, "p");
    i0.ɵɵtext(4);
    i0.ɵɵelementEnd()();
  }
  if (rf & 2) {
    const ctx_r1 = i0.ɵɵnextContext();
    i0.ɵɵadvance(2);
    i0.ɵɵtextInterpolate1("Nombre: ", ctx_r1.Nombre, "");
    i0.ɵɵadvance(2);
    i0.ɵɵtextInterpolate1("Correo: ", ctx_r1.Correo, "");
  }
}
class PerfilComponent {
  constructor(service, user_service) {
    this.service = service;
    this.user_service = user_service;
    this.esalumno = -1;
    this.ID = -1;
    this.usuario = {};
    this.historial = [];
    this.respuesta = [];
    this.Nombre = "";
    this.Correo = "";
    this.Rut = "";
    this.Carrera = "";
    this.id_carrera = -1;
    this.Link = "";
    this.NLink = "";
    this.edicion1 = 0;
    this.edicion2 = 0;
    this.carreras = [];
    this.usuario = JSON.parse(localStorage.getItem('auth-user') || '{}').userdata;
    if (this.usuario.es_estudiante == 1) {
      this.esalumno = 1;
      this.ID = this.usuario.estudiante.id;
    } else {
      this.esalumno = 0;
    }
    this.Nombre = this.usuario.nombre;
    this.Correo = this.usuario.correo;
    if (this.esalumno == 1) {
      this.Rut = this.usuario.estudiante.rut;
      this.service.obtener_estudiante(this.usuario.estudiante.id_usuario).subscribe({
        next: data => {
          this.respuesta = {
            ...this.respuesta,
            ...data
          };
        },
        error: error => {
          console.log(error);
          return;
        },
        complete: () => {
          console.log("respuesta", this.respuesta);
          this.Link = this.Link = this.respuesta.body.perfil_linkedin || "";
          this.id_carrera = this.respuesta.body.id_carrera;
          this.respuesta = {};
          this.user_service.get_carreras().subscribe({
            next: data => {
              this.respuesta = {
                ...this.respuesta,
                ...data
              };
            },
            error: error => {
              return;
            },
            complete: () => {
              console.log("respuesta", this.respuesta);
              for (var val of this.respuesta.body) {
                this.carreras.push(val);
              }
              for (let carrera of this.carreras) {
                if (carrera.id == this.id_carrera) {
                  this.Carrera = carrera.nombre;
                  break;
                }
              }
            }
          });
        }
      });
    }
  }
  volver_atras() {
    window.history.back();
  }
  editar1() {
    this.edicion1 = 1;
  }
  editar2() {
    this.edicion2 = 1;
  }
  confirmar_cambio_link() {
    this.Link = this.NLink;
    this.NLink = "";
    this.service.cambiar_correo_linkedin(this.ID, this.Link).subscribe({
      next: data => {},
      error: error => {
        console.log(error);
        return;
      },
      complete: () => {
        this.edicion1 = 0;
      }
    });
  }
  confirmar_cambio_carrera() {
    for (let carrera of this.carreras) {
      if (carrera.id == this.id_carrera) {
        this.Carrera = carrera.nombre;
        break;
      }
    }
    this.service.cambiar_carrera(this.ID, this.id_carrera).subscribe({
      next: data => {},
      error: error => {
        console.log(error);
        return;
      },
      complete: () => {
        this.edicion2 = 0;
        window.location.reload();
      }
    });
  }
  redirecTo() {
    try {
      window.location.href = this.Link;
    } catch {
      console.log("No existe Link");
    }
  }
  checkout(arg) {
    this.id_carrera = Number(arg.target.value);
  }
  static {
    this.ɵfac = function PerfilComponent_Factory(__ngFactoryType__) {
      return new (__ngFactoryType__ || PerfilComponent)(i0.ɵɵdirectiveInject(i1.DataUsuarioService), i0.ɵɵdirectiveInject(i2.UsuarioService));
    };
  }
  static {
    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({
      type: PerfilComponent,
      selectors: [["app-perfil"]],
      decls: 19,
      vars: 4,
      consts: [["elseblock", ""], ["elseBlock", ""], ["id", "wrapper"], [4, "ngIf", "ngIfElse"], ["id", "content-wrapper", 1, "d-flex", "flex-column"], ["id", "content", 1, "main-content"], [1, "container-fluid"], ["id", "container-fluid overflow-auto", 2, "max-height", "80vh"], [1, "h3", "mt-2", "ml-2"], [1, "card-body"], ["id", "container-fluid overflow-auto"], [1, "row", "no-gutters", "align-items-center", 2, "max-width", "100%"], [1, "col-lg-6"], [1, "card", "shadow", "mb-4"], ["target", "_blank", "rel", "noopener noreferrer", 3, "href"], ["stlye", "width: 80%", 1, "btn", "btn-primary", 3, "click"], [4, "ngIf"], ["type", "text", 1, "form-control", 3, "ngModelChange", "ngModel", "ngModelOptions"], ["stlye", "width: 60%", 1, "btn", "btn-primary", 3, "click"], [1, "form-select", 3, "input"], ["value", "-1", "disabled", "", "selected", ""], [3, "value", 4, "ngFor", "ngForOf"], [3, "value"]],
      template: function PerfilComponent_Template(rf, ctx) {
        if (rf & 1) {
          i0.ɵɵelementStart(0, "div", 2);
          i0.ɵɵtemplate(1, PerfilComponent_div_1_Template, 2, 0, "div", 3)(2, PerfilComponent_ng_template_2_Template, 1, 0, "ng-template", null, 0, i0.ɵɵtemplateRefExtractor);
          i0.ɵɵelementStart(4, "div", 4)(5, "div", 5);
          i0.ɵɵelement(6, "app-barra-superior");
          i0.ɵɵelementStart(7, "div", 6)(8, "div", 7)(9, "div", 8);
          i0.ɵɵtext(10, "Datos Personales");
          i0.ɵɵelementEnd()();
          i0.ɵɵelementStart(11, "div", 9)(12, "div", 10)(13, "div", 11)(14, "div", 12);
          i0.ɵɵtemplate(15, PerfilComponent_div_15_Template, 30, 8, "div", 3)(16, PerfilComponent_ng_template_16_Template, 5, 2, "ng-template", null, 1, i0.ɵɵtemplateRefExtractor);
          i0.ɵɵelementEnd()()()()()()()();
          i0.ɵɵelement(18, "app-logout-modal");
        }
        if (rf & 2) {
          const elseblock_r6 = i0.ɵɵreference(3);
          const elseBlock_r7 = i0.ɵɵreference(17);
          i0.ɵɵadvance();
          i0.ɵɵproperty("ngIf", ctx.esalumno == 1)("ngIfElse", elseblock_r6);
          i0.ɵɵadvance(14);
          i0.ɵɵproperty("ngIf", ctx.esalumno == 1)("ngIfElse", elseBlock_r7);
        }
      },
      dependencies: [i3.NgForOf, i3.NgIf, i4.NgSelectOption, i4.ɵNgSelectMultipleOption, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgModel, i5.BarraSuperiorComponent, i6.LogoutModalComponent, i7.BarraLateralAlumnoComponent, i8.BarraLateralEncargadoComponent],
      styles: ["/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */"]
    });
  }
}
exports.PerfilComponent = PerfilComponent;

/***/ }),

/***/ 32815:
/*!*****************************************************!*\
  !*** ./src/app/vistas/plagios/plagios.component.ts ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.PlagiosComponent = void 0;
const i0 = __webpack_require__(/*! @angular/core */ 37580);
const i1 = __webpack_require__(/*! @angular/router */ 95072);
const i2 = __webpack_require__(/*! ../../servicios/plagio/plagio.service */ 5224);
const i3 = __webpack_require__(/*! @angular/common */ 60316);
const i4 = __webpack_require__(/*! ../../componentes/barra-superior/barra-superior.component */ 36370);
const i5 = __webpack_require__(/*! ../../componentes/barra-lateral-encargado/barra-lateral-encargado.component */ 43560);
function PlagiosComponent_div_15_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 6)(1, "div", 9)(2, "div", 10);
    i0.ɵɵtext(3);
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(4, "div", 11);
    i0.ɵɵtext(5);
    i0.ɵɵelementEnd()();
    i0.ɵɵelementStart(6, "div", 9)(7, "div", 10);
    i0.ɵɵtext(8);
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(9, "div", 11);
    i0.ɵɵtext(10);
    i0.ɵɵelementEnd()()();
  }
  if (rf & 2) {
    const plagio_r1 = ctx.$implicit;
    i0.ɵɵadvance(3);
    i0.ɵɵtextInterpolate1(" ", plagio_r1.pregunta_informe_origen.enunciado, " ");
    i0.ɵɵadvance(2);
    i0.ɵɵtextInterpolate1(" ", plagio_r1.informe_origen.key[plagio_r1.id_pregunta_informe_origen], " ");
    i0.ɵɵadvance(3);
    i0.ɵɵtextInterpolate1(" ", plagio_r1.pregunta_informe_plagio.enunciado, " ");
    i0.ɵɵadvance(2);
    i0.ɵɵtextInterpolate1(" ", plagio_r1.informe_plagio.key[plagio_r1.id_pregunta_informe_plagio], " ");
  }
}
class PlagiosComponent {
  constructor(route, plagioService) {
    this.route = route;
    this.plagioService = plagioService;
    this.lista_plagios = [];
    this.id_practica = parseInt(this.route.snapshot.url[1].path);
    let res_plagio = {};
    plagioService.get_plagio_por_pratica_con_informes(this.id_practica).subscribe({
      next: data => {
        res_plagio = {
          ...res_plagio,
          ...data
        };
      },
      error: error => {},
      complete: () => {
        if (res_plagio.status != 200 || !res_plagio.body) return;
        this.lista_plagios = res_plagio.body;
        console.log(this.lista_plagios);
      }
    });
  }
  static {
    this.ɵfac = function PlagiosComponent_Factory(__ngFactoryType__) {
      return new (__ngFactoryType__ || PlagiosComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.PlagioService));
    };
  }
  static {
    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({
      type: PlagiosComponent,
      selectors: [["app-plagios"]],
      decls: 16,
      vars: 1,
      consts: [["id", "wrapper"], ["id", "content-wrapper", 1, "d-flex", "flex-column"], ["id", "content", 1, "main-content"], [1, "container-fluid"], [1, "h2", "mb-2", "font-weight-bold", "text-gray-800"], [1, "mb-4"], [1, "row"], [1, "col-6", "mb-4"], ["class", "row", 4, "ngFor", "ngForOf"], [1, "col-6", "card", "shadow", "mb-4"], [1, "card-header"], [1, "card-body"]],
      template: function PlagiosComponent_Template(rf, ctx) {
        if (rf & 1) {
          i0.ɵɵelementStart(0, "div", 0);
          i0.ɵɵelement(1, "app-barra-lateral-encargado");
          i0.ɵɵelementStart(2, "div", 1)(3, "div", 2);
          i0.ɵɵelement(4, "app-barra-superior");
          i0.ɵɵelementStart(5, "div", 3)(6, "div", 4);
          i0.ɵɵtext(7, "Plagios Detectados");
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(8, "p", 5);
          i0.ɵɵtext(9, "Aqu\u00ED se pueden ver todas las respuestas con un alto grado de similitud");
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(10, "div", 6)(11, "div", 7);
          i0.ɵɵtext(12, " Textos originales: ");
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(13, "div", 7);
          i0.ɵɵtext(14, " Textos del estudiante: ");
          i0.ɵɵelementEnd()();
          i0.ɵɵtemplate(15, PlagiosComponent_div_15_Template, 11, 4, "div", 8);
          i0.ɵɵelementEnd()()()();
        }
        if (rf & 2) {
          i0.ɵɵadvance(15);
          i0.ɵɵproperty("ngForOf", ctx.lista_plagios);
        }
      },
      dependencies: [i3.NgForOf, i4.BarraSuperiorComponent, i5.BarraLateralEncargadoComponent],
      styles: ["/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */"]
    });
  }
}
exports.PlagiosComponent = PlagiosComponent;

/***/ }),

/***/ 33387:
/*!*****************************************************************!*\
  !*** ./src/app/vistas/publicaciones/publicaciones.component.ts ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.PublicacionesComponent = void 0;
const forms_1 = __webpack_require__(/*! @angular/forms */ 34456);
const dayjs = __webpack_require__(/*! dayjs */ 49645);
const i0 = __webpack_require__(/*! @angular/core */ 37580);
const i1 = __webpack_require__(/*! src/app/servicios/publicaciones/publicaciones.service */ 66222);
const i2 = __webpack_require__(/*! @angular/common */ 60316);
const i3 = __webpack_require__(/*! @angular/forms */ 34456);
const i4 = __webpack_require__(/*! @angular/material/snack-bar */ 3347);
const i5 = __webpack_require__(/*! ../../componentes/barra-superior/barra-superior.component */ 36370);
const i6 = __webpack_require__(/*! ../../componentes/logout-modal/logout-modal.component */ 15562);
const i7 = __webpack_require__(/*! ../../componentes/barra-lateral-alumno/barra-lateral-alumno.component */ 72756);
const i8 = __webpack_require__(/*! ../../componentes/barra-lateral-encargado/barra-lateral-encargado.component */ 43560);
function PublicacionesComponent_div_1_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div");
    i0.ɵɵelement(1, "app-barra-lateral-alumno");
    i0.ɵɵelementEnd();
  }
}
function PublicacionesComponent_ng_template_2_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelement(0, "app-barra-lateral-encargado");
  }
}
function PublicacionesComponent_div_14_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 16)(1, "div", 17)(2, "div", 18)(3, "div", 19)(4, "div", 20);
    i0.ɵɵelement(5, "div", 21);
    i0.ɵɵelementStart(6, "div", 22);
    i0.ɵɵtext(7, " No hay publicaciones. ");
    i0.ɵɵelementEnd()();
    i0.ɵɵelementStart(8, "div", 23);
    i0.ɵɵelement(9, "i", 24);
    i0.ɵɵelementEnd()()()()();
  }
}
function PublicacionesComponent_div_16_div_10_div_9_div_7_p_1_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "p");
    i0.ɵɵtext(1, " Se requiere un t\u00EDtulo para la publicaci\u00F3n. ");
    i0.ɵɵelementEnd();
  }
}
function PublicacionesComponent_div_16_div_10_div_9_div_7_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 46);
    i0.ɵɵtemplate(1, PublicacionesComponent_div_16_div_10_div_9_div_7_p_1_Template, 2, 0, "p", 13);
    i0.ɵɵelementEnd();
  }
  if (rf & 2) {
    const ctx_r4 = i0.ɵɵnextContext(4);
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngIf", ctx_r4.publiForm.controls["Titulo"].errors == null ? null : ctx_r4.publiForm.controls["Titulo"].errors["required"]);
  }
}
function PublicacionesComponent_div_16_div_10_div_9_div_10_p_1_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "p");
    i0.ɵɵtext(1, " Se requiere que la publicaci\u00F3n tenga un enunciado. ");
    i0.ɵɵelementEnd();
  }
}
function PublicacionesComponent_div_16_div_10_div_9_div_10_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 46);
    i0.ɵɵtemplate(1, PublicacionesComponent_div_16_div_10_div_9_div_10_p_1_Template, 2, 0, "p", 13);
    i0.ɵɵelementEnd();
  }
  if (rf & 2) {
    const ctx_r4 = i0.ɵɵnextContext(4);
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngIf", ctx_r4.publiForm.controls["Enunciado"].errors == null ? null : ctx_r4.publiForm.controls["Enunciado"].errors["required"]);
  }
}
function PublicacionesComponent_div_16_div_10_div_9_Template(rf, ctx) {
  if (rf & 1) {
    const _r6 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "div", 32)(1, "form", 33)(2, "div", 11);
    i0.ɵɵelement(3, "br");
    i0.ɵɵelementStart(4, "div", 34)(5, "div", 35);
    i0.ɵɵelement(6, "input", 36);
    i0.ɵɵelementEnd();
    i0.ɵɵtemplate(7, PublicacionesComponent_div_16_div_10_div_9_div_7_Template, 2, 1, "div", 37);
    i0.ɵɵelementStart(8, "div", 38);
    i0.ɵɵelement(9, "input", 39);
    i0.ɵɵelementEnd();
    i0.ɵɵtemplate(10, PublicacionesComponent_div_16_div_10_div_9_div_10_Template, 2, 1, "div", 37);
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(11, "div", 40)(12, "div", 6)(13, "div", 28)(14, "select", 41)(15, "option", 42);
    i0.ɵɵtext(16, "Fijar Publicacion ");
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(17, "option", 43);
    i0.ɵɵtext(18, "Si");
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(19, "option", 44);
    i0.ɵɵtext(20, "No");
    i0.ɵɵelementEnd()()()()();
    i0.ɵɵelementStart(21, "div", 28)(22, "div", 6)(23, "div", 28)(24, "button", 45);
    i0.ɵɵlistener("click", function PublicacionesComponent_div_16_div_10_div_9_Template_button_click_24_listener() {
      i0.ɵɵrestoreView(_r6);
      const ctx_r1 = i0.ɵɵnextContext(2);
      const publi_r3 = ctx_r1.$implicit;
      const indice_r4 = ctx_r1.index;
      const ctx_r4 = i0.ɵɵnextContext();
      return i0.ɵɵresetView(ctx_r4.edicion(publi_r3.id, 1, indice_r4));
    });
    i0.ɵɵtext(25, "Publicar");
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(26, "button", 30);
    i0.ɵɵlistener("click", function PublicacionesComponent_div_16_div_10_div_9_Template_button_click_26_listener() {
      i0.ɵɵrestoreView(_r6);
      const indice_r4 = i0.ɵɵnextContext(2).index;
      const ctx_r4 = i0.ɵɵnextContext();
      return i0.ɵɵresetView(ctx_r4.terminar_edicion(1, indice_r4));
    });
    i0.ɵɵtext(27, "Cancelar");
    i0.ɵɵelementEnd()()()();
    i0.ɵɵelement(28, "br");
    i0.ɵɵelementEnd()()();
  }
  if (rf & 2) {
    const publi_r3 = i0.ɵɵnextContext(2).$implicit;
    const ctx_r4 = i0.ɵɵnextContext();
    i0.ɵɵadvance();
    i0.ɵɵproperty("formGroup", ctx_r4.publiForm);
    i0.ɵɵadvance(5);
    i0.ɵɵpropertyInterpolate("placeholder", publi_r3 == null ? null : publi_r3.titulo);
    i0.ɵɵpropertyInterpolate("value", publi_r3.titulo);
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngIf", ctx_r4.publiForm.controls["Titulo"].invalid && (ctx_r4.publiForm.controls["Titulo"].dirty || ctx_r4.publiForm.controls["Titulo"].touched));
    i0.ɵɵadvance(2);
    i0.ɵɵpropertyInterpolate("placeholder", publi_r3 == null ? null : publi_r3.enunciado);
    i0.ɵɵpropertyInterpolate("value", publi_r3.enunciado);
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngIf", ctx_r4.publiForm.controls["Enunciado"].invalid && (ctx_r4.publiForm.controls["Enunciado"].dirty || ctx_r4.publiForm.controls["Enunciado"].touched));
    i0.ɵɵadvance(4);
    i0.ɵɵpropertyInterpolate("value", publi_r3.isfijo);
  }
}
function PublicacionesComponent_div_16_div_10_Template(rf, ctx) {
  if (rf & 1) {
    const _r1 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "div")(1, "div", 6)(2, "div", 28)(3, "button", 29);
    i0.ɵɵlistener("click", function PublicacionesComponent_div_16_div_10_Template_button_click_3_listener() {
      i0.ɵɵrestoreView(_r1);
      const ctx_r1 = i0.ɵɵnextContext();
      const publi_r3 = ctx_r1.$implicit;
      const indice_r4 = ctx_r1.index;
      const ctx_r4 = i0.ɵɵnextContext();
      return i0.ɵɵresetView(ctx_r4.inicio_edicion(1, indice_r4, publi_r3.titulo, publi_r3.enunciado, publi_r3.isfijo));
    });
    i0.ɵɵtext(4, " Editar ");
    i0.ɵɵelementEnd();
    i0.ɵɵtext(5, " \u00A0 ");
    i0.ɵɵelementStart(6, "button", 30);
    i0.ɵɵlistener("click", function PublicacionesComponent_div_16_div_10_Template_button_click_6_listener() {
      i0.ɵɵrestoreView(_r1);
      const ctx_r1 = i0.ɵɵnextContext();
      const publi_r3 = ctx_r1.$implicit;
      const indice_r4 = ctx_r1.index;
      const ctx_r4 = i0.ɵɵnextContext();
      return i0.ɵɵresetView(ctx_r4.eliminar(publi_r3.id, 1, indice_r4));
    });
    i0.ɵɵtext(7, " Eliminar ");
    i0.ɵɵelementEnd()()();
    i0.ɵɵelement(8, "br");
    i0.ɵɵtemplate(9, PublicacionesComponent_div_16_div_10_div_9_Template, 29, 8, "div", 31);
    i0.ɵɵelementEnd();
  }
  if (rf & 2) {
    const indice_r4 = i0.ɵɵnextContext().index;
    const ctx_r4 = i0.ɵɵnextContext();
    i0.ɵɵadvance(9);
    i0.ɵɵproperty("ngIf", ctx_r4.fixed_edit_flags[indice_r4] == 1);
  }
}
function PublicacionesComponent_div_16_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div")(1, "div", 25)(2, "div", 26)(3, "h3", 27);
    i0.ɵɵtext(4);
    i0.ɵɵelementEnd()();
    i0.ɵɵelementStart(5, "div", 18)(6, "p");
    i0.ɵɵtext(7);
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(8, "p");
    i0.ɵɵtext(9);
    i0.ɵɵelementEnd();
    i0.ɵɵtemplate(10, PublicacionesComponent_div_16_div_10_Template, 10, 1, "div", 13);
    i0.ɵɵelementEnd()()();
  }
  if (rf & 2) {
    const publi_r3 = ctx.$implicit;
    const ctx_r4 = i0.ɵɵnextContext();
    i0.ɵɵadvance(4);
    i0.ɵɵtextInterpolate1("(Publicaci\u00F3n Fijada) ", publi_r3 == null ? null : publi_r3.titulo, " ");
    i0.ɵɵadvance(3);
    i0.ɵɵtextInterpolate(publi_r3 == null ? null : publi_r3.fecha);
    i0.ɵɵadvance(2);
    i0.ɵɵtextInterpolate(publi_r3 == null ? null : publi_r3.enunciado);
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngIf", ctx_r4.esalumno == 0);
  }
}
function PublicacionesComponent_div_17_div_10_div_8_div_6_p_1_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "p");
    i0.ɵɵtext(1, " Se requiere un t\u00EDtulo para la publicaci\u00F3n. ");
    i0.ɵɵelementEnd();
  }
}
function PublicacionesComponent_div_17_div_10_div_8_div_6_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 46);
    i0.ɵɵtemplate(1, PublicacionesComponent_div_17_div_10_div_8_div_6_p_1_Template, 2, 0, "p", 13);
    i0.ɵɵelementEnd();
  }
  if (rf & 2) {
    const ctx_r4 = i0.ɵɵnextContext(4);
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngIf", ctx_r4.publiForm.controls["Titulo"].errors == null ? null : ctx_r4.publiForm.controls["Titulo"].errors["required"]);
  }
}
function PublicacionesComponent_div_17_div_10_div_8_div_9_p_1_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "p");
    i0.ɵɵtext(1, " Se requiere que la publicaci\u00F3n tenga un enunciado. ");
    i0.ɵɵelementEnd();
  }
}
function PublicacionesComponent_div_17_div_10_div_8_div_9_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 46);
    i0.ɵɵtemplate(1, PublicacionesComponent_div_17_div_10_div_8_div_9_p_1_Template, 2, 0, "p", 13);
    i0.ɵɵelementEnd();
  }
  if (rf & 2) {
    const ctx_r4 = i0.ɵɵnextContext(4);
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngIf", ctx_r4.publiForm.controls["Enunciado"].errors == null ? null : ctx_r4.publiForm.controls["Enunciado"].errors["required"]);
  }
}
function PublicacionesComponent_div_17_div_10_div_8_Template(rf, ctx) {
  if (rf & 1) {
    const _r11 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "div", 32)(1, "form", 33)(2, "div", 11)(3, "div", 34)(4, "div", 35);
    i0.ɵɵelement(5, "input", 36);
    i0.ɵɵelementEnd();
    i0.ɵɵtemplate(6, PublicacionesComponent_div_17_div_10_div_8_div_6_Template, 2, 1, "div", 37);
    i0.ɵɵelementStart(7, "div", 38);
    i0.ɵɵelement(8, "input", 39);
    i0.ɵɵelementEnd();
    i0.ɵɵtemplate(9, PublicacionesComponent_div_17_div_10_div_8_div_9_Template, 2, 1, "div", 37);
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(10, "div", 40)(11, "div", 6)(12, "div", 28)(13, "select", 41)(14, "option", 42);
    i0.ɵɵtext(15, "Fijar Publicacion ");
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(16, "option", 43);
    i0.ɵɵtext(17, "Si");
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(18, "option", 44);
    i0.ɵɵtext(19, "No");
    i0.ɵɵelementEnd()()()()();
    i0.ɵɵelementStart(20, "div", 28)(21, "div", 6)(22, "div", 28)(23, "button", 45);
    i0.ɵɵlistener("click", function PublicacionesComponent_div_17_div_10_div_8_Template_button_click_23_listener() {
      i0.ɵɵrestoreView(_r11);
      const ctx_r7 = i0.ɵɵnextContext(2);
      const publi_r9 = ctx_r7.$implicit;
      const indice_r10 = ctx_r7.index;
      const ctx_r4 = i0.ɵɵnextContext();
      return i0.ɵɵresetView(ctx_r4.edicion(publi_r9.id, 0, indice_r10));
    });
    i0.ɵɵtext(24, "Publicar");
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(25, "button", 30);
    i0.ɵɵlistener("click", function PublicacionesComponent_div_17_div_10_div_8_Template_button_click_25_listener() {
      i0.ɵɵrestoreView(_r11);
      const indice_r10 = i0.ɵɵnextContext(2).index;
      const ctx_r4 = i0.ɵɵnextContext();
      return i0.ɵɵresetView(ctx_r4.terminar_edicion(0, indice_r10));
    });
    i0.ɵɵtext(26, "Cancelar");
    i0.ɵɵelementEnd()()()()()()();
  }
  if (rf & 2) {
    const publi_r9 = i0.ɵɵnextContext(2).$implicit;
    const ctx_r4 = i0.ɵɵnextContext();
    i0.ɵɵadvance();
    i0.ɵɵproperty("formGroup", ctx_r4.publiForm);
    i0.ɵɵadvance(4);
    i0.ɵɵpropertyInterpolate("placeholder", publi_r9 == null ? null : publi_r9.titulo);
    i0.ɵɵpropertyInterpolate("value", publi_r9.titulo);
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngIf", ctx_r4.publiForm.controls["Titulo"].invalid && (ctx_r4.publiForm.controls["Titulo"].dirty || ctx_r4.publiForm.controls["Titulo"].touched));
    i0.ɵɵadvance(2);
    i0.ɵɵpropertyInterpolate("placeholder", publi_r9 == null ? null : publi_r9.enunciado);
    i0.ɵɵpropertyInterpolate("value", publi_r9.enunciado);
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngIf", ctx_r4.publiForm.controls["Enunciado"].invalid && (ctx_r4.publiForm.controls["Enunciado"].dirty || ctx_r4.publiForm.controls["Enunciado"].touched));
    i0.ɵɵadvance(4);
    i0.ɵɵpropertyInterpolate("value", publi_r9.isfijo);
  }
}
function PublicacionesComponent_div_17_div_10_Template(rf, ctx) {
  if (rf & 1) {
    const _r7 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "div")(1, "div", 6)(2, "div", 28)(3, "button", 29);
    i0.ɵɵlistener("click", function PublicacionesComponent_div_17_div_10_Template_button_click_3_listener() {
      i0.ɵɵrestoreView(_r7);
      const ctx_r7 = i0.ɵɵnextContext();
      const publi_r9 = ctx_r7.$implicit;
      const indice_r10 = ctx_r7.index;
      const ctx_r4 = i0.ɵɵnextContext();
      return i0.ɵɵresetView(ctx_r4.inicio_edicion(0, indice_r10, publi_r9.titulo, publi_r9.enunciado, publi_r9.isfijo));
    });
    i0.ɵɵtext(4, "Editar");
    i0.ɵɵelementEnd();
    i0.ɵɵtext(5, " \u00A0 ");
    i0.ɵɵelementStart(6, "button", 30);
    i0.ɵɵlistener("click", function PublicacionesComponent_div_17_div_10_Template_button_click_6_listener() {
      i0.ɵɵrestoreView(_r7);
      const ctx_r7 = i0.ɵɵnextContext();
      const publi_r9 = ctx_r7.$implicit;
      const indice_r10 = ctx_r7.index;
      const ctx_r4 = i0.ɵɵnextContext();
      return i0.ɵɵresetView(ctx_r4.eliminar(publi_r9.id, 0, indice_r10));
    });
    i0.ɵɵtext(7, "Eliminar");
    i0.ɵɵelementEnd()()();
    i0.ɵɵtemplate(8, PublicacionesComponent_div_17_div_10_div_8_Template, 27, 8, "div", 31);
    i0.ɵɵelementEnd();
  }
  if (rf & 2) {
    const indice_r10 = i0.ɵɵnextContext().index;
    const ctx_r4 = i0.ɵɵnextContext();
    i0.ɵɵadvance(8);
    i0.ɵɵproperty("ngIf", ctx_r4.edit_flags[indice_r10] == 1);
  }
}
function PublicacionesComponent_div_17_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div")(1, "div", 25)(2, "div", 26)(3, "h3", 27);
    i0.ɵɵtext(4);
    i0.ɵɵelementEnd()();
    i0.ɵɵelementStart(5, "div", 18)(6, "p");
    i0.ɵɵtext(7);
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(8, "p");
    i0.ɵɵtext(9);
    i0.ɵɵelementEnd();
    i0.ɵɵtemplate(10, PublicacionesComponent_div_17_div_10_Template, 9, 1, "div", 13);
    i0.ɵɵelementEnd()()();
  }
  if (rf & 2) {
    const publi_r9 = ctx.$implicit;
    const ctx_r4 = i0.ɵɵnextContext();
    i0.ɵɵadvance(4);
    i0.ɵɵtextInterpolate(publi_r9 == null ? null : publi_r9.titulo);
    i0.ɵɵadvance(3);
    i0.ɵɵtextInterpolate(publi_r9 == null ? null : publi_r9.fecha);
    i0.ɵɵadvance(2);
    i0.ɵɵtextInterpolate(publi_r9 == null ? null : publi_r9.enunciado);
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngIf", ctx_r4.esalumno == 0);
  }
}
function PublicacionesComponent_div_18_div_4_div_10_p_1_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "p");
    i0.ɵɵtext(1, " Se requiere un t\u00EDtulo para la publicaci\u00F3n. ");
    i0.ɵɵelementEnd();
  }
}
function PublicacionesComponent_div_18_div_4_div_10_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 46);
    i0.ɵɵtemplate(1, PublicacionesComponent_div_18_div_4_div_10_p_1_Template, 2, 0, "p", 13);
    i0.ɵɵelementEnd();
  }
  if (rf & 2) {
    const ctx_r4 = i0.ɵɵnextContext(3);
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngIf", ctx_r4.publiForm.controls["Titulo"].errors == null ? null : ctx_r4.publiForm.controls["Titulo"].errors["required"]);
  }
}
function PublicacionesComponent_div_18_div_4_div_13_p_1_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "p");
    i0.ɵɵtext(1, " Se requiere que la publicaci\u00F3n tenga un enunciado. ");
    i0.ɵɵelementEnd();
  }
}
function PublicacionesComponent_div_18_div_4_div_13_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 46);
    i0.ɵɵtemplate(1, PublicacionesComponent_div_18_div_4_div_13_p_1_Template, 2, 0, "p", 13);
    i0.ɵɵelementEnd();
  }
  if (rf & 2) {
    const ctx_r4 = i0.ɵɵnextContext(3);
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngIf", ctx_r4.publiForm.controls["Enunciado"].errors == null ? null : ctx_r4.publiForm.controls["Enunciado"].errors["required"]);
  }
}
function PublicacionesComponent_div_18_div_4_div_32_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div");
    i0.ɵɵelement(1, "input", 56)(2, "input", 57);
    i0.ɵɵelementEnd();
  }
}
function PublicacionesComponent_div_18_div_4_Template(rf, ctx) {
  if (rf & 1) {
    const _r13 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "div", 25)(1, "div", 49)(2, "h3", 27);
    i0.ɵɵtext(3, "Rellene el Formulario");
    i0.ɵɵelementEnd()();
    i0.ɵɵelementStart(4, "div", 18)(5, "form", 33)(6, "div", 11)(7, "div", 34)(8, "div", 35);
    i0.ɵɵelement(9, "input", 50);
    i0.ɵɵelementEnd();
    i0.ɵɵtemplate(10, PublicacionesComponent_div_18_div_4_div_10_Template, 2, 1, "div", 37);
    i0.ɵɵelementStart(11, "div", 38);
    i0.ɵɵelement(12, "input", 51);
    i0.ɵɵelementEnd();
    i0.ɵɵtemplate(13, PublicacionesComponent_div_18_div_4_div_13_Template, 2, 1, "div", 37);
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(14, "div", 40)(15, "div", 6)(16, "div", 28)(17, "select", 52)(18, "option", 42);
    i0.ɵɵtext(19, "Fijar Publicacion");
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(20, "option", 43);
    i0.ɵɵtext(21, "Si");
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(22, "option", 44);
    i0.ɵɵtext(23, "No");
    i0.ɵɵelementEnd()()();
    i0.ɵɵelementStart(24, "div", 28)(25, "select", 53);
    i0.ɵɵlistener("input", function PublicacionesComponent_div_18_div_4_Template_select_input_25_listener($event) {
      i0.ɵɵrestoreView(_r13);
      const ctx_r4 = i0.ɵɵnextContext(2);
      return i0.ɵɵresetView(ctx_r4.checkout($event));
    });
    i0.ɵɵelementStart(26, "option", 42);
    i0.ɵɵtext(27, "Programar Publicacion ");
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(28, "option", 43);
    i0.ɵɵtext(29, " Si ");
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(30, "option", 44);
    i0.ɵɵtext(31, " No ");
    i0.ɵɵelementEnd()()()()();
    i0.ɵɵtemplate(32, PublicacionesComponent_div_18_div_4_div_32_Template, 3, 0, "div", 13);
    i0.ɵɵelementStart(33, "div", 28)(34, "div", 6)(35, "button", 54);
    i0.ɵɵlistener("click", function PublicacionesComponent_div_18_div_4_Template_button_click_35_listener() {
      i0.ɵɵrestoreView(_r13);
      const ctx_r4 = i0.ɵɵnextContext(2);
      return i0.ɵɵresetView(ctx_r4.crear());
    });
    i0.ɵɵtext(36, " Publicar ");
    i0.ɵɵelementEnd();
    i0.ɵɵtext(37, " \u00A0 ");
    i0.ɵɵelementStart(38, "button", 55);
    i0.ɵɵlistener("click", function PublicacionesComponent_div_18_div_4_Template_button_click_38_listener() {
      i0.ɵɵrestoreView(_r13);
      const ctx_r4 = i0.ɵɵnextContext(2);
      return i0.ɵɵresetView(ctx_r4.cancelar_creacion());
    });
    i0.ɵɵtext(39, " Cancelar ");
    i0.ɵɵelementEnd()()()()()()();
  }
  if (rf & 2) {
    const ctx_r4 = i0.ɵɵnextContext(2);
    i0.ɵɵadvance(5);
    i0.ɵɵproperty("formGroup", ctx_r4.publiForm);
    i0.ɵɵadvance(5);
    i0.ɵɵproperty("ngIf", ctx_r4.publiForm.controls["Titulo"].invalid && (ctx_r4.publiForm.controls["Titulo"].dirty || ctx_r4.publiForm.controls["Titulo"].touched));
    i0.ɵɵadvance(3);
    i0.ɵɵproperty("ngIf", ctx_r4.publiForm.controls["Enunciado"].invalid && (ctx_r4.publiForm.controls["Enunciado"].dirty || ctx_r4.publiForm.controls["Enunciado"].touched));
    i0.ɵɵadvance(19);
    i0.ɵɵproperty("ngIf", ctx_r4.fecha_flag == 1);
  }
}
function PublicacionesComponent_div_18_Template(rf, ctx) {
  if (rf & 1) {
    const _r12 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "div")(1, "button", 47);
    i0.ɵɵlistener("click", function PublicacionesComponent_div_18_Template_button_click_1_listener() {
      i0.ɵɵrestoreView(_r12);
      const ctx_r4 = i0.ɵɵnextContext();
      return i0.ɵɵresetView(ctx_r4.inicio_creacion());
    });
    i0.ɵɵtext(2, "Agregar Publicacion");
    i0.ɵɵelementEnd();
    i0.ɵɵelement(3, "br");
    i0.ɵɵtemplate(4, PublicacionesComponent_div_18_div_4_Template, 40, 4, "div", 48);
    i0.ɵɵelementEnd();
  }
  if (rf & 2) {
    const ctx_r4 = i0.ɵɵnextContext();
    i0.ɵɵadvance(4);
    i0.ɵɵproperty("ngIf", ctx_r4.create_flag == 1);
  }
}
dayjs().format();
const customParseFormat = __webpack_require__(/*! dayjs/plugin/customParseFormat */ 30001);
dayjs.extend(customParseFormat);
class PublicacionesComponent {
  constructor(service_publi, datetime, fb, _snackBar) {
    this.service_publi = service_publi;
    this.datetime = datetime;
    this.fb = fb;
    this._snackBar = _snackBar;
    this.esalumno = -1;
    this.usuario = {};
    this.publicaciones = [];
    this.fixed_publicaciones = [];
    this.create_flag = 0;
    this.fixed_edit_flags = [];
    this.edit_flags = [];
    this.fecha_flag = 0;
    this.Titulo = "";
    this.Enunciado = "";
    this.ID_carrera = -1;
    this.ID_encargado = -1;
    this.usuario = JSON.parse(localStorage.getItem('auth-user') || '{}').userdata;
    if (this.usuario.es_estudiante == 1) {
      this.esalumno = 1;
    } else {
      this.esalumno = 0;
      this.ID_carrera = this.usuario.encargado.id_carrera;
      this.ID_encargado = this.usuario.encargado.id;
    }
    this.createForm();
  }
  createForm() {
    this.publiForm = this.fb.group({
      Titulo: ['', [forms_1.Validators.required]],
      Enunciado: ['', [forms_1.Validators.required]],
      IsFijo: ['', [forms_1.Validators.required]],
      fecha_programada1: ['', [forms_1.Validators.required]],
      fecha_programada2: ['', [forms_1.Validators.required]]
    });
  }
  ngOnInit() {
    console.log(this.usuario);
    let respuesta = [];
    if (this.esalumno == 1) {
      this.service_publi.obtener_todas(this.usuario.estudiante.id_carrera).subscribe({
        next: data => {
          respuesta = {
            ...respuesta,
            ...data
          };
        },
        error: error => {
          console.log(error);
          return;
        },
        complete: () => {
          let aux = respuesta.body.map(notificacion => {
            notificacion.fecha_og = notificacion.fecha;
            notificacion.fecha = dayjs(notificacion.fecha, "YYYY-MM-DDTHH:mm:ssZ").format("DD/MM/YYYY HH:mm");
            return notificacion;
          });
          aux.sort(function (a, b) {
            if (a.fecha_og > b.fecha_og) return -1;
            if (a.fecha_og < b.fecha_og) return 1;
            return 0;
          });
          let temp_publicaciones = aux;
          if (temp_publicaciones.length != 0) {
            for (let publi of temp_publicaciones) {
              if (publi.isfijo == 1) {
                this.fixed_publicaciones.push(publi);
                this.fixed_edit_flags.push(0);
              } else {
                this.publicaciones.push(publi);
                this.edit_flags.push(0);
              }
            }
          }
        }
      });
    } else {
      this.obtener_como_encargado();
    }
  }
  obtener_como_encargado() {
    let respuesta = [];
    this.service_publi.obtener_encargado(this.ID_encargado).subscribe({
      next: data => {
        respuesta = {
          ...respuesta,
          ...data
        };
      },
      error: error => {
        console.log(error);
        return;
      },
      complete: () => {
        let aux = respuesta.body.map(notificacion => {
          notificacion.fecha_og = notificacion.fecha;
          notificacion.fecha = dayjs(notificacion.fecha, "YYYY-MM-DDTHH:mm:ssZ").format("DD/MM/YYYY HH:mm");
          return notificacion;
        });
        aux.sort(function (a, b) {
          if (a.fecha_og > b.fecha_og) return -1;
          if (a.fecha_og < b.fecha_og) return 1;
          return 0;
        });
        let temp_publicaciones = aux;
        if (temp_publicaciones.length != 0) {
          for (let publi of temp_publicaciones) {
            if (publi.isfijo) {
              this.fixed_publicaciones.push(publi);
              this.fixed_edit_flags.push(0);
            } else {
              this.publicaciones.push(publi);
              this.edit_flags.push(0);
            }
          }
        }
      }
    });
  }
  crear() {
    const data = this.publiForm.value;
    console.log(data);
    let titulo = data.Titulo;
    let enunciado = data.Enunciado;
    let fecha = this.datetime.transform(new Date(), 'MM/dd/yyyy h:mm:ss');
    console.log(fecha);
    let isfijo;
    if (data.IsFijo == "1") {
      isfijo = true;
    } else if (data.IsFijo == "0") {
      isfijo = false;
    } else {
      this._snackBar.open("Debe ingresar todos los datos", "Cerrar", {
        duration: 10000,
        panelClass: ['red-snackbar']
      });
      return;
    }
    let fecha_programada = [];
    if (this.fecha_flag == 1) {
      let fechaF = data.fecha_programada1 + " " + data.fecha_programada2;
      fecha_programada = new Date(fechaF);
      console.log(fecha_programada);
    }
    if (titulo == "" || enunciado == "") {
      this._snackBar.open("Debe ingresar todos los datos", "Cerrar", {
        duration: 10000,
        panelClass: ['red-snackbar']
      });
      this.createForm();
      this.create_flag = 0;
      this.fecha_flag = 0;
      return;
    }
    ;
    this.service_publi.nueva_publicacion(this.ID_encargado, this.ID_carrera, titulo, enunciado, fecha, isfijo, fecha_programada).subscribe({
      next: () => {},
      error: error => {
        console.log(error);
        return;
      },
      complete: () => {
        this.fixed_publicaciones = [];
        this.publicaciones = [];
        this.obtener_como_encargado();
        console.log("Publicación Creada");
        this.createForm();
        this.create_flag = 0;
        this.fecha_flag = 0;
      }
    });
  }
  edicion(id, fixed, index) {
    const data = this.publiForm.value;
    let titulo = data.Titulo;
    let enunciado = data.Enunciado;
    let isfijo;
    if (data.IsFijo == "1") {
      isfijo = true;
    } else if (data.IsFijo == "0") {
      isfijo = false;
    } else {
      this._snackBar.open("Debe ingresar todos los datos", "Cerrar", {
        duration: 10000,
        panelClass: ['red-snackbar']
      });
      return;
    }
    if (titulo == "" || enunciado == "") {
      this._snackBar.open("Debe ingresar todos los datos", "Cerrar", {
        duration: 10000,
        panelClass: ['red-snackbar']
      });
      return;
    }
    this.service_publi.editar_publciacion(id, titulo, enunciado, isfijo).subscribe({
      next: () => {},
      error: error => {
        console.log(error);
      },
      complete: () => {
        this.fixed_publicaciones = [];
        this.publicaciones = [];
        this.obtener_como_encargado();
        console.log("Publicación Editada");
        if (data.IsFijo == 1) {
          this.fixed_edit_flags[index] = 0;
        } else {
          this.edit_flags[index] = 0;
        }
        this.createForm();
      }
    });
  }
  eliminar(id, fix, index) {
    this.service_publi.eliminar_publicacion(id).subscribe({
      next: () => {},
      error: error => {
        console.log(error);
        return;
      },
      complete: () => {
        console.log("Publicación eliminada");
        if (fix == 1) {
          this.fixed_publicaciones.splice(index, 1);
        } else {
          this.publicaciones.splice(index, 1);
        }
      }
    });
  }
  inicio_creacion() {
    this.createForm();
    this.create_flag = 1;
  }
  cancelar_creacion() {
    this.create_flag = 0;
  }
  inicio_edicion(fix, index, titulo, enunciado, IsFijo) {
    if (fix == 1) {
      this.fixed_edit_flags[index] = 1;
    } else {
      this.edit_flags[index] = 1;
    }
    let fixed;
    if (IsFijo == true) {
      fixed = "1";
    } else {
      fixed = "0";
    }
    this.publiForm = this.fb.group({
      Titulo: [titulo, [forms_1.Validators.required]],
      Enunciado: [enunciado, [forms_1.Validators.required]],
      IsFijo: [fixed, [forms_1.Validators.required]],
      fecha_programada1: ['', [forms_1.Validators.required]],
      fecha_programada2: ['', [forms_1.Validators.required]]
    });
  }
  terminar_edicion(fix, index) {
    if (fix == 1) {
      this.fixed_edit_flags[index] = 0;
    } else {
      this.edit_flags[index] = 0;
    }
  }
  checkout(arg) {
    this.fecha_flag = Number(arg.target.value);
  }
  static {
    this.ɵfac = function PublicacionesComponent_Factory(__ngFactoryType__) {
      return new (__ngFactoryType__ || PublicacionesComponent)(i0.ɵɵdirectiveInject(i1.PublicacionesService), i0.ɵɵdirectiveInject(i2.DatePipe), i0.ɵɵdirectiveInject(i3.FormBuilder), i0.ɵɵdirectiveInject(i4.MatSnackBar));
    };
  }
  static {
    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({
      type: PublicacionesComponent,
      selectors: [["app-publicaciones"]],
      decls: 23,
      vars: 6,
      consts: [["elseblock", ""], ["id", "wrapper"], [4, "ngIf", "ngIfElse"], ["id", "content-wrapper", 1, "d-flex", "flex-column"], ["id", "content", 1, "main-content"], [1, "container-fluid"], [1, "row"], [1, "col-xl-10"], [1, "h3", "mb-2", "font-weight-bold", "text-gray-800"], [1, "mb-4"], ["class", "col-xl-3 col-md-6 mb-4", 4, "ngIf"], [1, "container"], [4, "ngFor", "ngForOf"], [4, "ngIf"], ["href", "#page-top", 1, "scroll-to-top", "rounded"], [1, "fas", "fa-angle-up"], [1, "col-xl-3", "col-md-6", "mb-4"], [1, "card", "shadow", "h-100", "py-2"], [1, "card-body"], [1, "row", "no-gutters", "align-items-center"], [1, "col", "mr-2"], [1, "text-xs", "font-weight-bold", "text-primary", "text-uppercase", "mb-1"], [1, "h5", "mb-0", "font-weight-bold", "text-gray-800"], [1, "col-auto"], [1, "fa-solid", "fa-note-sticky", "fa-2x", "text-gray-300"], [1, "card", "shadow", "mb-4"], [1, "card-header", "py-3"], [1, "m-0", "font-weight-bold", "text-primary"], [1, "col-6"], [1, "btn", "btn-primary", 3, "click"], [1, "btn", "btn-secondary", 3, "click"], ["class", "shadow mb-4", 4, "ngIf"], [1, "shadow", "mb-4"], [1, "user", 3, "formGroup"], [1, "form-group", "row"], [1, "col-sm-6", "mb-3", "mb-sm-0"], ["type", "text", "id", "Titulo", "formControlName", "Titulo", "name", "Titulo", 1, "form-control", "form-control-user", 3, "placeholder", "value"], ["class", "alert alert-danger", 4, "ngIf"], [1, "col-sm-6"], ["type", "text", "id", "Enunciado", "formControlName", "Enunciado", "name", "Enunciado", 1, "form-control", "form-control-user", 3, "placeholder", "value"], [1, "col-6", "mb-2"], ["name", "IsFijo", "id", "IsFijo", "formControlName", "IsFijo", 1, "form-select", 3, "value"], ["value", "", "disabled", "", "selected", ""], ["value", "1"], ["value", "0"], ["type", "submit", 1, "btn", "btn-primary", 3, "click"], [1, "alert", "alert-danger"], [1, "btn", "btn-primary", "btn-user", "btn-block", 2, "width", "150px", 3, "click"], ["class", "card shadow mb-4", 4, "ngIf"], [1, "card-header"], ["type", "text", "id", "Titulo", "placeholder", "Titulo", "formControlName", "Titulo", "name", "Titulo", "value", "Titulo", 1, "form-control", "form-control-user"], ["type", "text", "id", "Enunciado", "placeholder", "Enunciado", "formControlName", "Enunciado", "name", "Enunciado", "value", "Enunciado", 1, "form-control", "form-control-user"], ["name", "IsFijo", "id", "IsFijo", "formControlName", "IsFijo", "value", "", 1, "form-select"], [1, "form-select", 3, "input"], ["type", "submit", 1, "btn", "btn-primary", 2, "width", "150px", 3, "click"], [1, "btn", "btn-secondary", 2, "width", "150px", 3, "click"], ["type", "date", "id", "start", "name", "trip-start", "value", "2018-07-22", "name", "fecha_programada1", "id", "fecha_programada1", "formControlName", "fecha_programada1"], ["type", "time", "id", "fecha_programada2", "name", "fecha_programada2", "formControlName", "fecha_programada2"]],
      template: function PublicacionesComponent_Template(rf, ctx) {
        if (rf & 1) {
          i0.ɵɵelementStart(0, "div", 1);
          i0.ɵɵtemplate(1, PublicacionesComponent_div_1_Template, 2, 0, "div", 2)(2, PublicacionesComponent_ng_template_2_Template, 1, 0, "ng-template", null, 0, i0.ɵɵtemplateRefExtractor);
          i0.ɵɵelementStart(4, "div", 3)(5, "div", 4);
          i0.ɵɵelement(6, "app-barra-superior");
          i0.ɵɵelementStart(7, "div", 5)(8, "div", 6)(9, "div", 7)(10, "div", 8);
          i0.ɵɵtext(11, "Publicaciones");
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(12, "p", 9);
          i0.ɵɵtext(13, "Avisos con informaci\u00F3n importante para alumnos.");
          i0.ɵɵelementEnd()()();
          i0.ɵɵtemplate(14, PublicacionesComponent_div_14_Template, 10, 0, "div", 10);
          i0.ɵɵelementStart(15, "div", 11);
          i0.ɵɵtemplate(16, PublicacionesComponent_div_16_Template, 11, 4, "div", 12)(17, PublicacionesComponent_div_17_Template, 11, 4, "div", 12)(18, PublicacionesComponent_div_18_Template, 5, 1, "div", 13);
          i0.ɵɵelement(19, "br");
          i0.ɵɵelementEnd()()()()();
          i0.ɵɵelementStart(20, "a", 14);
          i0.ɵɵelement(21, "i", 15);
          i0.ɵɵelementEnd();
          i0.ɵɵelement(22, "app-logout-modal");
        }
        if (rf & 2) {
          const elseblock_r14 = i0.ɵɵreference(3);
          i0.ɵɵadvance();
          i0.ɵɵproperty("ngIf", ctx.esalumno == 1)("ngIfElse", elseblock_r14);
          i0.ɵɵadvance(13);
          i0.ɵɵproperty("ngIf", ctx.fixed_publicaciones.length == 0 && ctx.publicaciones.length == 0);
          i0.ɵɵadvance(2);
          i0.ɵɵproperty("ngForOf", ctx.fixed_publicaciones);
          i0.ɵɵadvance();
          i0.ɵɵproperty("ngForOf", ctx.publicaciones);
          i0.ɵɵadvance();
          i0.ɵɵproperty("ngIf", ctx.esalumno == 0);
        }
      },
      dependencies: [i2.NgForOf, i2.NgIf, i3.ɵNgNoValidate, i3.NgSelectOption, i3.ɵNgSelectMultipleOption, i3.DefaultValueAccessor, i3.SelectControlValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName, i5.BarraSuperiorComponent, i6.LogoutModalComponent, i7.BarraLateralAlumnoComponent, i8.BarraLateralEncargadoComponent],
      styles: ["/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */"]
    });
  }
}
exports.PublicacionesComponent = PublicacionesComponent;

/***/ }),

/***/ 57575:
/*!*****************************************************************!*\
  !*** ./src/app/vistas/ramos-alumnos/ramos-alumnos.component.ts ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.RamosAlumnosComponent = void 0;
const i0 = __webpack_require__(/*! @angular/core */ 37580);
const i1 = __webpack_require__(/*! @angular/common/http */ 46443);
const i2 = __webpack_require__(/*! @angular/router */ 95072);
const i3 = __webpack_require__(/*! ../../servicios/alumno/obtener_datos.service */ 27095);
const i4 = __webpack_require__(/*! ../../servicios/carrera/carrera.service */ 37890);
const i5 = __webpack_require__(/*! @angular/common */ 60316);
const i6 = __webpack_require__(/*! ../../componentes/barra-superior/barra-superior.component */ 36370);
const i7 = __webpack_require__(/*! ../../componentes/logout-modal/logout-modal.component */ 15562);
const i8 = __webpack_require__(/*! ../../componentes/barra-lateral-alumno/barra-lateral-alumno.component */ 72756);
function RamosAlumnosComponent_div_16_div_1_div_1_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div")(1, "h4", 13);
    i0.ɵɵtext(2);
    i0.ɵɵelementStart(3, "span", 14);
    i0.ɵɵtext(4);
    i0.ɵɵelementEnd()();
    i0.ɵɵelementStart(5, "div", 15);
    i0.ɵɵelement(6, "div", 16);
    i0.ɵɵelementEnd()();
  }
  if (rf & 2) {
    const k_r1 = i0.ɵɵnextContext().index;
    const ctx_r1 = i0.ɵɵnextContext(2);
    i0.ɵɵadvance(2);
    i0.ɵɵtextInterpolate1("", ctx_r1.arreglo_ramos[k_r1], " ");
    i0.ɵɵadvance(2);
    i0.ɵɵtextInterpolate1("", ctx_r1.toInt(ctx_r1.arreglo_ramos[k_r1 + 1]), "%");
    i0.ɵɵadvance(2);
    i0.ɵɵstyleMap("width: " + ctx_r1.arreglo_ramos[k_r1 + 1] + "%");
  }
}
function RamosAlumnosComponent_div_16_div_1_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div");
    i0.ɵɵtemplate(1, RamosAlumnosComponent_div_16_div_1_div_1_Template, 7, 4, "div", 11);
    i0.ɵɵelementEnd();
  }
  if (rf & 2) {
    const pos_r3 = ctx.$implicit;
    const ctx_r1 = i0.ɵɵnextContext(2);
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngIf", !ctx_r1.isNumber(pos_r3));
  }
}
function RamosAlumnosComponent_div_16_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div");
    i0.ɵɵtemplate(1, RamosAlumnosComponent_div_16_div_1_Template, 2, 1, "div", 12);
    i0.ɵɵelementEnd();
  }
  if (rf & 2) {
    const ctx_r1 = i0.ɵɵnextContext();
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngForOf", ctx_r1.arreglo_ramos);
  }
}
function RamosAlumnosComponent_div_17_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div");
    i0.ɵɵtext(1, " No hay ramos para mostrar ");
    i0.ɵɵelementEnd();
  }
}
class RamosAlumnosComponent {
  constructor(_http, _router, _obtenerDatosService, carreraService) {
    this._http = _http;
    this._router = _router;
    this._obtenerDatosService = _obtenerDatosService;
    this.carreraService = carreraService;
    this.sesion = JSON.parse(localStorage.getItem("auth-user") || "{}");
    this.arreglo_ramos = [];
    //arreglo_ramos = ["programacion",50,"talf",50,"lenguajes de programacion",100,"bases de datos",60,"redes",50,"ing SW",25,"SO",7.5,"IA",30,"IO",5,"IMAFI",10,"Computacion cientifica",10,"Sitemas distribuidos",40]
    //arreglo_ramos = ["programacion",50,"talf",50,"lenguajes de programacion",100,"bases de datos",60,"redes",50,"ing SW",25,"SO",7.5]
    //filtrar lista a 10 ramos mas importantes
    this.ramos = [];
    this.porcentajes = [];
    this.ramos_top10 = [];
    this.porcentajes_top10 = [];
    this.arreglo_ramos_top10 = [];
  }
  ngOnInit() {
    //console.log(this.sesion);
    //console.log(this.sesion.userdata.id);
    let id_usuario = this.sesion.userdata.id;
    //obte
    let respuesta = {};
    this._obtenerDatosService.obtener_estudiante(this.sesion.userdata.id).subscribe({
      next: data => {
        //console.log(data);
        respuesta = {
          ...respuesta,
          ...data
        };
      },
      error: error => {
        console.log(error);
      },
      complete: () => {
        //console.log("respuesta id_carrera:");
        //console.log(respuesta.body.id_carrera);
        this.carreraService.obtener_carrera(respuesta.body.id_carrera).subscribe({
          next: data => {
            //console.log(data);
            respuesta = {
              ...respuesta,
              ...data
            };
          },
          error: error => {
            console.log(error);
          },
          complete: () => {
            //console.log("estadistica ramos carrera:");
            //console.log(respuesta.body.estadistica_ramos.array);
            //let arreglo_ramos_aux = respuesta.body.estadistica_ramos.array;
            //console.log("arreglo ramos aux:");
            //console.log(arreglo_ramos_aux[0]);
            console.log(respuesta.body);
            console.log("Estadística Ramos: " + respuesta.body.estadistica_ramos);
            this.arreglo_ramos = respuesta.body.estadistica_ramos.array[0];
            for (let i = 0; i < this.arreglo_ramos.length; i++) {
              if (this.isNumber(this.arreglo_ramos[i])) {
                this.porcentajes.push(Number(this.arreglo_ramos[i]));
              } else {
                this.ramos.push(String(this.arreglo_ramos[i]));
              }
            }
            //console.log("Ramos: ");
            //console.log(this.ramos);
            //console.log("Porcentajes: ");
            //console.log(this.porcentajes);
            for (let i = 0; i < this.ramos.length; i++) {
              this.ramos_top10.push(this.ramos[i]);
              this.porcentajes_top10.push(this.porcentajes[i]);
            }
            //ordenar porcentaje de mayor a menor
            for (let i = 0; i < this.porcentajes_top10.length; i++) {
              for (let k = 0; k < this.porcentajes_top10.length; k++) {
                if (this.porcentajes_top10[i] > this.porcentajes_top10[k]) {
                  let aux = this.porcentajes_top10[i];
                  this.porcentajes_top10[i] = this.porcentajes_top10[k];
                  this.porcentajes_top10[k] = aux;
                  let aux2 = this.ramos_top10[i];
                  this.ramos_top10[i] = this.ramos_top10[k];
                  this.ramos_top10[k] = aux2;
                }
              }
            }
            //console.log("Ramos top 10 ordenados: ");
            //console.log(this.ramos_top10);
            //console.log("Porcentajes top 10 ordenados: ");
            //console.log(this.porcentajes_top10);
            for (let i = 0; i < 10; i++) {
              if (this.ramos_top10[i] != undefined) {
                //this.ramos_top10[i] = " ";
                this.arreglo_ramos_top10.push(this.ramos_top10[i]);
                this.arreglo_ramos_top10.push(this.porcentajes_top10[i]);
              }
            }
            console.log("Arreglo top 10: ");
            console.log(this.arreglo_ramos_top10);
            this.arreglo_ramos = this.arreglo_ramos_top10;
          }
        });
      }
    });
  }
  isNumber(val) {
    return typeof val === 'number';
  }
  largo_arreglo(arg) {
    return arg.length;
  }
  toInt(arg) {
    return parseInt(arg);
  }
  static {
    this.ɵfac = function RamosAlumnosComponent_Factory(__ngFactoryType__) {
      return new (__ngFactoryType__ || RamosAlumnosComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.ObtenerDatosService), i0.ɵɵdirectiveInject(i4.CarreraService));
    };
  }
  static {
    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({
      type: RamosAlumnosComponent,
      selectors: [["app-ramos-alumnos"]],
      decls: 19,
      vars: 2,
      consts: [["id", "wrapper"], ["id", "content-wrapper", 1, "d-flex", "flex-column"], ["id", "content", 1, "main-content"], [1, "container-fluid"], [1, "row"], [1, "col-xl-12"], [1, "h3", "mb-2", "font-weight-bold", "text-gray-800"], [1, "mb-4"], [1, "col-lg-8", "mb-4"], [1, "card", "shadow", "mb-4"], [1, "card-body"], [4, "ngIf"], [4, "ngFor", "ngForOf"], [1, "small", "font-weight-bold"], [1, "float-right"], [1, "progress", "mb-4"], ["role", "progressbar", "aria-valuenow", "40", "aria-valuemin", "0", "aria-valuemax", "100", 1, "progress-bar"]],
      template: function RamosAlumnosComponent_Template(rf, ctx) {
        if (rf & 1) {
          i0.ɵɵelementStart(0, "div", 0);
          i0.ɵɵelement(1, "app-barra-lateral-alumno");
          i0.ɵɵelementStart(2, "div", 1)(3, "div", 2);
          i0.ɵɵelement(4, "app-barra-superior");
          i0.ɵɵelementStart(5, "div", 3)(6, "div", 4)(7, "div", 5)(8, "div", 6);
          i0.ɵɵtext(9, " Estad\u00EDsticas Ramos ");
          i0.ɵɵelement(10, "br");
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(11, "p", 7);
          i0.ɵɵtext(12, "Aqu\u00ED puedes ver los 10 ramos m\u00E1s \u00FAtiles para desempe\u00F1arse de mejor manera en la pr\u00E1ctica seg\u00FAn los dem\u00E1s alumnos de tu carrera");
          i0.ɵɵelementEnd()();
          i0.ɵɵelementStart(13, "div", 8)(14, "div", 9)(15, "div", 10);
          i0.ɵɵtemplate(16, RamosAlumnosComponent_div_16_Template, 2, 1, "div", 11)(17, RamosAlumnosComponent_div_17_Template, 2, 0, "div", 11);
          i0.ɵɵelementEnd()()()()()()();
          i0.ɵɵelement(18, "app-logout-modal");
          i0.ɵɵelementEnd();
        }
        if (rf & 2) {
          i0.ɵɵadvance(16);
          i0.ɵɵproperty("ngIf", ctx.arreglo_ramos.length != 0);
          i0.ɵɵadvance();
          i0.ɵɵproperty("ngIf", ctx.arreglo_ramos.length == 0);
        }
      },
      dependencies: [i5.NgForOf, i5.NgIf, i6.BarraSuperiorComponent, i7.LogoutModalComponent, i8.BarraLateralAlumnoComponent],
      styles: ["/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */"]
    });
  }
}
exports.RamosAlumnosComponent = RamosAlumnosComponent;

/***/ }),

/***/ 33627:
/*!*********************************************************************!*\
  !*** ./src/app/vistas/ramos-encargado/ramos-encargado.component.ts ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.RamosEncargadoComponent = void 0;
const common_1 = __webpack_require__(/*! @angular/common */ 60316);
const forms_1 = __webpack_require__(/*! @angular/forms */ 34456);
const i0 = __webpack_require__(/*! @angular/core */ 37580);
const i1 = __webpack_require__(/*! @angular/forms */ 34456);
const i2 = __webpack_require__(/*! @angular/material/snack-bar */ 3347);
const i3 = __webpack_require__(/*! src/app/servicios/encargado/ramos/ramos.service */ 41595);
const i4 = __webpack_require__(/*! @angular/common */ 60316);
const i5 = __webpack_require__(/*! ../../componentes/barra-superior/barra-superior.component */ 36370);
const i6 = __webpack_require__(/*! ../../componentes/logout-modal/logout-modal.component */ 15562);
const i7 = __webpack_require__(/*! ../../componentes/barra-lateral-encargado/barra-lateral-encargado.component */ 43560);
function RamosEncargadoComponent_div_10_Template(rf, ctx) {
  if (rf & 1) {
    const _r1 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "div")(1, "div", 15)(2, "div", 16)(3, "p");
    i0.ɵɵtext(4);
    i0.ɵɵelementEnd()();
    i0.ɵɵelementStart(5, "div", 17)(6, "button", 18);
    i0.ɵɵlistener("click", function RamosEncargadoComponent_div_10_Template_button_click_6_listener() {
      const i_r2 = i0.ɵɵrestoreView(_r1).index;
      const ctx_r2 = i0.ɵɵnextContext();
      return i0.ɵɵresetView(ctx_r2.eliminarRamo(i_r2));
    });
    i0.ɵɵtext(7, "Eliminar Ramo");
    i0.ɵɵelementEnd()()()();
  }
  if (rf & 2) {
    const ramo_r4 = ctx.$implicit;
    i0.ɵɵadvance(4);
    i0.ɵɵtextInterpolate1("Ramo Ingresado: ", ramo_r4, "");
  }
}
function RamosEncargadoComponent_div_15_span_1_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "span");
    i0.ɵɵtext(1, " Campo requerido ");
    i0.ɵɵelementEnd();
  }
}
function RamosEncargadoComponent_div_15_span_2_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "span");
    i0.ɵɵtext(1, " Nombre es muy corto ");
    i0.ɵɵelementEnd();
  }
}
function RamosEncargadoComponent_div_15_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 19);
    i0.ɵɵtemplate(1, RamosEncargadoComponent_div_15_span_1_Template, 2, 0, "span", 20)(2, RamosEncargadoComponent_div_15_span_2_Template, 2, 0, "span", 20);
    i0.ɵɵelementEnd();
  }
  if (rf & 2) {
    const ctx_r2 = i0.ɵɵnextContext();
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngIf", ctx_r2.fg.controls["ramoFORM"].errors == null ? null : ctx_r2.fg.controls["ramoFORM"].errors["required"]);
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngIf", ctx_r2.fg.controls["ramoFORM"].errors == null ? null : ctx_r2.fg.controls["ramoFORM"].errors["minlength"]);
  }
}
class RamosEncargadoComponent {
  constructor(fb, snackBar, service, document) {
    this.fb = fb;
    this.snackBar = snackBar;
    this.service = service;
    this.document = document;
    this.ramoFORM = new forms_1.FormControl('');
    this.lista_ramos = [];
    this.user = window.localStorage.getItem('auth-user');
    this.id_carrera = JSON.parse(this.user).userdata.encargado.id_carrera;
    this.ramos_elminados = false;
    this.requestInicial();
    this.generarForm();
  }
  requestInicial() {
    let respuesta = {};
    this.service.getRamos(this.id_carrera).subscribe({
      next: data => {
        respuesta = {
          ...respuesta,
          ...data
        };
      },
      error: error => {
        this.snackBar.open("Error al buscar ramos", "Cerrar", {
          duration: 3000,
          panelClass: ['red-snackbar']
        });
        console.log("Error al buscar ramos", error);
      },
      complete: () => {
        this.nombre_carrera = respuesta.body.nombre;
        let ramos = respuesta.body.ramos.split(",");
        for (let i = 0; i < ramos.length; i++) {
          if (ramos[i] != "") {
            this.lista_ramos.push(ramos[i]);
          }
        }
        //this.generarForm();
      }
    });
  }
  generarForm() {
    this.fg = this.fb.group({
      ramoFORM: ['', [forms_1.Validators.required, forms_1.Validators.minLength(3)]]
    });
  }
  onSubmitAddRamo() {
    this.ramo = this.fg.value.ramoFORM;
    this.lista_ramos.push(this.ramo);
    //console.log(this.lista_ramos);
    this.fg.reset();
  }
  eliminarRamo(index) {
    //console.log("eliminando ramo", index);
    this.lista_ramos.splice(index, 1);
  }
  mandarDatos() {
    let respuesta = {};
    console.log("mandando datos");
    let ramos = "";
    for (let i = 0; i < this.lista_ramos.length; i++) {
      if (i == this.lista_ramos.length - 1) {
        ramos = ramos + this.lista_ramos[i];
      } else {
        ramos = ramos + this.lista_ramos[i] + ",";
      }
    }
    console.log("lista original:", this.lista_ramos, "ramos:", ramos);
    this.service.actualizarRamos(this.id_carrera, ramos).subscribe({
      next: data => {
        respuesta = {
          ...respuesta,
          ...data
        };
      },
      error: error => {
        this.snackBar.open("Error al guardar cambios", "Cerrar", {
          duration: 3500,
          panelClass: ['red-snackbar']
        });
        console.log("Error al guardar ramos", error);
      },
      complete: () => {
        this.snackBar.open("Los cambios han sido guardados exitosamente", "Cerrar", {
          duration: 3500,
          panelClass: ['green-snackbar']
        });
        setTimeout(function () {
          window.location.reload();
        }, 2000);
        console.log("Ramos guardados exitosamente");
      }
    });
  }
  scrollToTop() {
    this.document.body.scrollTop = 0;
    this.document.documentElement.scrollTop = 0;
  }
  static {
    this.ɵfac = function RamosEncargadoComponent_Factory(__ngFactoryType__) {
      return new (__ngFactoryType__ || RamosEncargadoComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.MatSnackBar), i0.ɵɵdirectiveInject(i3.RamosService), i0.ɵɵdirectiveInject(common_1.DOCUMENT));
    };
  }
  static {
    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({
      type: RamosEncargadoComponent,
      selectors: [["app-ramos-encargado"]],
      decls: 21,
      vars: 5,
      consts: [["id", "page-top"], ["id", "wrapper"], ["id", "content-wrapper", 1, "d-flex", "flex-column"], ["id", "content", 1, "main-content"], [1, "container-fluid"], [1, "h3", "mb-4", "text-gray-800"], [4, "ngFor", "ngForOf"], [1, "formulario", 3, "ngSubmit", "formGroup"], ["type", "text", "placeholder", "Ingresar Ramo", "formControlName", "ramoFORM", 1, "form-control", 2, "display", "inline-block", "width", "auto"], ["type", "submit", 1, "btn", "btn-primary", "btn-add", 3, "disabled"], [1, "fas", "fa-plus", "addRamo", 3, "click"], ["class", "alert-danger", "style", "width: auto;", 4, "ngIf"], ["id", "save", 1, "btn", "btn-success", 3, "click"], [1, "scroll-to-top", "rounded", 3, "click"], [1, "fas", "fa-angle-up"], [1, "row", 2, "margin-bottom", "10px"], [1, "col-7"], [1, "col-5"], [1, "btn", "btn-secondary", 3, "click"], [1, "alert-danger", 2, "width", "auto"], [4, "ngIf"]],
      template: function RamosEncargadoComponent_Template(rf, ctx) {
        if (rf & 1) {
          i0.ɵɵelementStart(0, "body", 0)(1, "div", 1);
          i0.ɵɵelement(2, "app-barra-lateral-encargado");
          i0.ɵɵelementStart(3, "div", 2)(4, "div", 3);
          i0.ɵɵelement(5, "app-barra-superior");
          i0.ɵɵelementStart(6, "div", 4)(7, "h1", 5);
          i0.ɵɵtext(8);
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(9, "div");
          i0.ɵɵtemplate(10, RamosEncargadoComponent_div_10_Template, 8, 1, "div", 6);
          i0.ɵɵelementStart(11, "form", 7);
          i0.ɵɵlistener("ngSubmit", function RamosEncargadoComponent_Template_form_ngSubmit_11_listener() {
            return ctx.onSubmitAddRamo();
          });
          i0.ɵɵelement(12, "input", 8);
          i0.ɵɵelementStart(13, "button", 9)(14, "i", 10);
          i0.ɵɵlistener("click", function RamosEncargadoComponent_Template_i_click_14_listener() {
            return ctx.onSubmitAddRamo();
          });
          i0.ɵɵelementEnd()();
          i0.ɵɵtemplate(15, RamosEncargadoComponent_div_15_Template, 3, 2, "div", 11);
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(16, "button", 12);
          i0.ɵɵlistener("click", function RamosEncargadoComponent_Template_button_click_16_listener() {
            return ctx.mandarDatos();
          });
          i0.ɵɵtext(17, " Guardar ");
          i0.ɵɵelementEnd()()()()()();
          i0.ɵɵelementStart(18, "a", 13);
          i0.ɵɵlistener("click", function RamosEncargadoComponent_Template_a_click_18_listener() {
            return ctx.scrollToTop();
          });
          i0.ɵɵelement(19, "i", 14);
          i0.ɵɵelementEnd();
          i0.ɵɵelement(20, "app-logout-modal");
          i0.ɵɵelementEnd();
        }
        if (rf & 2) {
          i0.ɵɵadvance(8);
          i0.ɵɵtextInterpolate1("Ramos para la carrera de ", ctx.nombre_carrera, "");
          i0.ɵɵadvance(2);
          i0.ɵɵproperty("ngForOf", ctx.lista_ramos);
          i0.ɵɵadvance();
          i0.ɵɵproperty("formGroup", ctx.fg);
          i0.ɵɵadvance(2);
          i0.ɵɵproperty("disabled", ctx.fg.pristine || ctx.fg.invalid);
          i0.ɵɵadvance(2);
          i0.ɵɵproperty("ngIf", ctx.fg.controls["ramoFORM"].invalid && (ctx.fg.controls["ramoFORM"].dirty || ctx.fg.controls["ramoFORM"].touched));
        }
      },
      dependencies: [i4.NgForOf, i4.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i5.BarraSuperiorComponent, i6.LogoutModalComponent, i7.BarraLateralEncargadoComponent],
      styles: ["#save[_ngcontent-%COMP%] {\n  margin-top: 30px;\n  width: 150px;\n  height: fit-content;\n}\n\n.btn-add[_ngcontent-%COMP%] {\n  height: auto;\n  border-radius: 50%;\n  padding: 0px;\n  margin-left: 3px;\n}\n\n.addRamo[_ngcontent-%COMP%] {\n  font-size: 20px;\n  vertical-align: middle;\n  padding: 3px 4px;\n}\n\n.addRamo[_ngcontent-%COMP%]:hover {\n  color: #f5f5f5;\n}\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvdmlzdGFzL3JhbW9zLWVuY2FyZ2Fkby9yYW1vcy1lbmNhcmdhZG8uY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxnQkFBQTtFQUNBLFlBQUE7RUFDQSxtQkFBQTtBQUNKOztBQUVBO0VBQ0ksWUFBQTtFQUNBLGtCQUFBO0VBQ0EsWUFBQTtFQUNBLGdCQUFBO0FBQ0o7O0FBRUE7RUFDSSxlQUFBO0VBQ0Esc0JBQUE7RUFDQSxnQkFBQTtBQUNKOztBQUVBO0VBQ0ksY0FBQTtBQUNKIiwic291cmNlc0NvbnRlbnQiOlsiI3NhdmUge1xuICAgIG1hcmdpbi10b3A6IDMwcHg7XG4gICAgd2lkdGg6IDE1MHB4O1xuICAgIGhlaWdodDogZml0LWNvbnRlbnQ7XG59XG5cbi5idG4tYWRkIHtcbiAgICBoZWlnaHQ6IGF1dG87XG4gICAgYm9yZGVyLXJhZGl1czogNTAlO1xuICAgIHBhZGRpbmc6IDBweDtcbiAgICBtYXJnaW4tbGVmdDogM3B4O1xufVxuXG4uYWRkUmFtbyB7XG4gICAgZm9udC1zaXplOiAyMHB4O1xuICAgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XG4gICAgcGFkZGluZzogM3B4IDRweDtcbn1cblxuLmFkZFJhbW86aG92ZXIge1xuICAgIGNvbG9yOiAjZjVmNWY1O1xufSJdLCJzb3VyY2VSb290IjoiIn0= */"]
    });
  }
}
exports.RamosEncargadoComponent = RamosEncargadoComponent;

/***/ }),

/***/ 74905:
/*!***************************************************************************!*\
  !*** ./src/app/vistas/registro-encargado/registro-encargado.component.ts ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.RegistroEncargadoComponent = void 0;
const forms_1 = __webpack_require__(/*! @angular/forms */ 34456);
const environment_1 = __webpack_require__(/*! ../../../environments/environment */ 45312);
const i0 = __webpack_require__(/*! @angular/core */ 37580);
const i1 = __webpack_require__(/*! ../../servicios/usuario/usuario.service */ 31446);
const i2 = __webpack_require__(/*! @angular/forms */ 34456);
const i3 = __webpack_require__(/*! @angular/material/snack-bar */ 3347);
const i4 = __webpack_require__(/*! @angular/router */ 95072);
const i5 = __webpack_require__(/*! @angular/common */ 60316);
function RegistroEncargadoComponent_div_23_div_1_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div");
    i0.ɵɵtext(1, " Se requiere nombre ");
    i0.ɵɵelementEnd();
  }
}
function RegistroEncargadoComponent_div_23_div_2_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div");
    i0.ɵɵtext(1, " M\u00EDnimo 3 caracteres. ");
    i0.ɵɵelementEnd();
  }
}
function RegistroEncargadoComponent_div_23_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 27);
    i0.ɵɵtemplate(1, RegistroEncargadoComponent_div_23_div_1_Template, 2, 0, "div", 28)(2, RegistroEncargadoComponent_div_23_div_2_Template, 2, 0, "div", 28);
    i0.ɵɵelementEnd();
  }
  if (rf & 2) {
    const ctx_r0 = i0.ɵɵnextContext();
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngIf", ctx_r0.registroForm.controls["nombre"].errors == null ? null : ctx_r0.registroForm.controls["nombre"].errors["required"]);
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngIf", ctx_r0.registroForm.controls["nombre"].errors == null ? null : ctx_r0.registroForm.controls["nombre"].errors["minlength"]);
  }
}
function RegistroEncargadoComponent_div_30_p_1_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "p");
    i0.ɵɵtext(1, " Se requiere correo ");
    i0.ɵɵelementEnd();
  }
}
function RegistroEncargadoComponent_div_30_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 27);
    i0.ɵɵtemplate(1, RegistroEncargadoComponent_div_30_p_1_Template, 2, 0, "p", 28);
    i0.ɵɵelementEnd();
  }
  if (rf & 2) {
    const ctx_r0 = i0.ɵɵnextContext();
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngIf", ctx_r0.registroForm.controls["email"].errors == null ? null : ctx_r0.registroForm.controls["email"].errors["required"]);
  }
}
function RegistroEncargadoComponent_div_35_p_1_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "p");
    i0.ɵɵtext(1, " Se requiere contrase\u00F1a ");
    i0.ɵɵelementEnd();
  }
}
function RegistroEncargadoComponent_div_35_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 27);
    i0.ɵɵtemplate(1, RegistroEncargadoComponent_div_35_p_1_Template, 2, 0, "p", 28);
    i0.ɵɵelementEnd();
  }
  if (rf & 2) {
    const ctx_r0 = i0.ɵɵnextContext();
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngIf", ctx_r0.registroForm.controls["password"].errors == null ? null : ctx_r0.registroForm.controls["password"].errors["required"]);
  }
}
class RegistroEncargadoComponent {
  constructor(usuario, fb, _snackBar, router) {
    this.usuario = usuario;
    this.fb = fb;
    this._snackBar = _snackBar;
    this.router = router;
    this.nombre = "";
    this.apellido = "";
    this.email = "";
    this.password = "";
    this.confirmPassword = "";
    this.es_supervisor = false;
    this.es_estudiante = false;
    this.es_encargado = false;
    this.extras = {};
    this.checkEs = true;
    this.createForm();
  }
  createForm() {
    this.registroForm = this.fb.group({
      nombre: ['', [forms_1.Validators.required, forms_1.Validators.minLength(3)]],
      apellido: ['', [forms_1.Validators.required, forms_1.Validators.minLength(3)]],
      email: ['', forms_1.Validators.required],
      password: ['', [forms_1.Validators.required, forms_1.Validators.minLength(3)]],
      confirmPassword: ['', forms_1.Validators.required]
    });
  }
  ngOnInit() {}
  register() {
    const data = this.registroForm.value;
    this.nombre = data.nombre + " " + data.apellido;
    let _data = {};
    this.usuario.register(data.email, data.password, data.confirmPassword, this.nombre, true, this.es_supervisor, this.es_estudiante, false, this.extras).subscribe({
      next: data => {
        _data = {
          ..._data,
          ...data
        };
      },
      complete: () => {
        if (_data.status == 200) {
          this.router.navigate(["/" + environment_1.environment.ruta_login]);
          this._snackBar.open("Usuario creado correctamente", "Cerrar", {
            panelClass: ['green-snackbar'],
            duration: 2000
          });
        } else {
          this._snackBar.open("Error al crear usuario", "Cerrar", {
            panelClass: ['red-snackbar'],
            duration: 2000
          });
        }
      },
      error: err => {
        this._snackBar.open("Error al crear usuario", "Cerrar", {
          panelClass: ['red-snackbar'],
          duration: 2000
        });
      }
    });
  }
  static {
    this.ɵfac = function RegistroEncargadoComponent_Factory(__ngFactoryType__) {
      return new (__ngFactoryType__ || RegistroEncargadoComponent)(i0.ɵɵdirectiveInject(i1.UsuarioService), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.MatSnackBar), i0.ɵɵdirectiveInject(i4.Router));
    };
  }
  static {
    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({
      type: RegistroEncargadoComponent,
      selectors: [["app-registro-encargado"]],
      decls: 46,
      vars: 5,
      consts: [["lang", "en"], ["charset", "utf-8"], ["http-equiv", "X-UA-Compatible", "content", "IE=edge"], ["name", "viewport", "content", "width=device-width, initial-scale=1, shrink-to-fit=no"], ["name", "description", "content", ""], ["name", "author", "content", ""], [1, "bg-gradient-primary"], [1, "container"], [1, "row", "justify-content-center"], [1, "col-xl-10", "col-lg-12", "col-md-9"], [1, "card", "o-hidden", "border-0", "shadow-lg", "my-5"], [1, "p-5"], [1, "text-center"], [1, "h4", "text-gray-900", "mb-4"], [1, "user", 3, "formGroup"], [1, "form-group", "row"], [1, "col-sm-6", "mb-3", "mb-sm-0"], ["type", "text", "id", "exampleFirstName", "placeholder", "Juan Alberto", "formControlName", "nombre", "name", "nombre", 1, "form-control", "form-control-user"], ["class", "alert alert-danger", 4, "ngIf"], [1, "col-sm-6"], ["type", "text", "id", "exampleLastName", "placeholder", "Diaz Maturana", "formControlName", "apellido", 1, "form-control", "form-control-user"], [1, "form-group"], ["type", "email", "id", "exampleInputEmail", "placeholder", "alias@dominio.com", "formControlName", "email", "name", "email", 1, "form-control", "form-control-user"], ["type", "password", "id", "exampleInputPassword", "placeholder", "**********", "formControlName", "password", "name", "password", 1, "form-control", "form-control-user"], ["type", "password", "id", "exampleRepeatPassword", "placeholder", "**********", "formControlName", "confirmPassword", "name", "password", 1, "form-control", "form-control-user"], ["id", "myBtn", "type", "submit", 1, "btn", "btn-primary", "btn-user", "btn-block", 3, "click", "disabled"], ["routerLink", "/login", 1, "small"], [1, "alert", "alert-danger"], [4, "ngIf"]],
      template: function RegistroEncargadoComponent_Template(rf, ctx) {
        if (rf & 1) {
          i0.ɵɵelementStart(0, "html", 0)(1, "head");
          i0.ɵɵelement(2, "meta", 1)(3, "meta", 2)(4, "meta", 3)(5, "meta", 4)(6, "meta", 5);
          i0.ɵɵelementStart(7, "title");
          i0.ɵɵtext(8, "Praxus - Login");
          i0.ɵɵelementEnd()();
          i0.ɵɵelementStart(9, "body", 6)(10, "div", 7)(11, "div", 8)(12, "div", 9)(13, "div", 10)(14, "div", 11)(15, "div", 12)(16, "h1", 13);
          i0.ɵɵtext(17, "Registro de Praxus");
          i0.ɵɵelementEnd()();
          i0.ɵɵelementStart(18, "form", 14)(19, "div", 15)(20, "div", 16);
          i0.ɵɵtext(21, " Nombre: ");
          i0.ɵɵelement(22, "input", 17);
          i0.ɵɵtemplate(23, RegistroEncargadoComponent_div_23_Template, 3, 2, "div", 18);
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(24, "div", 19);
          i0.ɵɵtext(25, " Apellido: ");
          i0.ɵɵelement(26, "input", 20);
          i0.ɵɵelementEnd()();
          i0.ɵɵelementStart(27, "div", 21);
          i0.ɵɵtext(28, " Correo ");
          i0.ɵɵelement(29, "input", 22);
          i0.ɵɵtemplate(30, RegistroEncargadoComponent_div_30_Template, 2, 1, "div", 18);
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(31, "div", 15)(32, "div", 16);
          i0.ɵɵtext(33, " Contrase\u00F1a: ");
          i0.ɵɵelement(34, "input", 23);
          i0.ɵɵtemplate(35, RegistroEncargadoComponent_div_35_Template, 2, 1, "div", 18);
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(36, "div", 19);
          i0.ɵɵtext(37, " Repetir contrase\u00F1a: ");
          i0.ɵɵelement(38, "input", 24);
          i0.ɵɵelementEnd()();
          i0.ɵɵelementStart(39, "button", 25);
          i0.ɵɵlistener("click", function RegistroEncargadoComponent_Template_button_click_39_listener() {
            return ctx.register();
          });
          i0.ɵɵtext(40, " Registrar Cuenta ");
          i0.ɵɵelementEnd();
          i0.ɵɵelement(41, "hr");
          i0.ɵɵelementEnd();
          i0.ɵɵelement(42, "hr");
          i0.ɵɵelementStart(43, "div", 12)(44, "a", 26);
          i0.ɵɵtext(45, "Iniciar sesi\u00F3n");
          i0.ɵɵelementEnd()()()()()()()()();
        }
        if (rf & 2) {
          i0.ɵɵadvance(18);
          i0.ɵɵproperty("formGroup", ctx.registroForm);
          i0.ɵɵadvance(5);
          i0.ɵɵproperty("ngIf", ctx.registroForm.controls["nombre"].invalid && (ctx.registroForm.controls["nombre"].dirty || ctx.registroForm.controls["nombre"].touched));
          i0.ɵɵadvance(7);
          i0.ɵɵproperty("ngIf", ctx.registroForm.controls["email"].invalid && (ctx.registroForm.controls["email"].dirty || ctx.registroForm.controls["email"].touched));
          i0.ɵɵadvance(5);
          i0.ɵɵproperty("ngIf", ctx.registroForm.controls["password"].invalid && (ctx.registroForm.controls["password"].dirty || ctx.registroForm.controls["password"].touched));
          i0.ɵɵadvance(4);
          i0.ɵɵproperty("disabled", ctx.registroForm.pristine || ctx.registroForm.invalid);
        }
      },
      dependencies: [i5.NgIf, i4.RouterLink, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName],
      styles: ["/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */"]
    });
  }
}
exports.RegistroEncargadoComponent = RegistroEncargadoComponent;

/***/ }),

/***/ 58535:
/*!*****************************************************************************!*\
  !*** ./src/app/vistas/registro-supervisor/registro-supervisor.component.ts ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.RegistroSupervisorComponent = void 0;
const i0 = __webpack_require__(/*! @angular/core */ 37580);
class RegistroSupervisorComponent {
  static {
    this.ɵfac = function RegistroSupervisorComponent_Factory(__ngFactoryType__) {
      return new (__ngFactoryType__ || RegistroSupervisorComponent)();
    };
  }
  static {
    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({
      type: RegistroSupervisorComponent,
      selectors: [["app-registro-supervisor"]],
      decls: 2,
      vars: 0,
      template: function RegistroSupervisorComponent_Template(rf, ctx) {
        if (rf & 1) {
          i0.ɵɵelementStart(0, "p");
          i0.ɵɵtext(1, "registro-supervisor works!");
          i0.ɵɵelementEnd();
        }
      },
      styles: ["/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */"]
    });
  }
}
exports.RegistroSupervisorComponent = RegistroSupervisorComponent;

/***/ }),

/***/ 72691:
/*!*******************************************************!*\
  !*** ./src/app/vistas/registro/registro.component.ts ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.RegistroComponent = void 0;
const forms_1 = __webpack_require__(/*! @angular/forms */ 34456);
const environment_1 = __webpack_require__(/*! ../../../environments/environment */ 45312);
const i0 = __webpack_require__(/*! @angular/core */ 37580);
const i1 = __webpack_require__(/*! ../../servicios/usuario/usuario.service */ 31446);
const i2 = __webpack_require__(/*! ../../servicios/carrera/carrera.service */ 37890);
const i3 = __webpack_require__(/*! ../../servicios/dominios_aceptados/dominios-aceptados.service */ 93360);
const i4 = __webpack_require__(/*! @angular/forms */ 34456);
const i5 = __webpack_require__(/*! @angular/material/snack-bar */ 3347);
const i6 = __webpack_require__(/*! @angular/router */ 95072);
const i7 = __webpack_require__(/*! @angular/common */ 60316);
function RegistroComponent_div_23_div_1_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div");
    i0.ɵɵtext(1, " Se requiere nombre ");
    i0.ɵɵelementEnd();
  }
}
function RegistroComponent_div_23_div_2_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div");
    i0.ɵɵtext(1, " M\u00EDnimo 3 caracteres. ");
    i0.ɵɵelementEnd();
  }
}
function RegistroComponent_div_23_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 32);
    i0.ɵɵtemplate(1, RegistroComponent_div_23_div_1_Template, 2, 0, "div", 33)(2, RegistroComponent_div_23_div_2_Template, 2, 0, "div", 33);
    i0.ɵɵelementEnd();
  }
  if (rf & 2) {
    const ctx_r0 = i0.ɵɵnextContext();
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngIf", ctx_r0.registroForm.controls["nombre"].errors == null ? null : ctx_r0.registroForm.controls["nombre"].errors["required"]);
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngIf", ctx_r0.registroForm.controls["nombre"].errors == null ? null : ctx_r0.registroForm.controls["nombre"].errors["minlength"]);
  }
}
function RegistroComponent_div_27_div_1_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div");
    i0.ɵɵtext(1, " Se requiere apellido ");
    i0.ɵɵelementEnd();
  }
}
function RegistroComponent_div_27_div_2_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div");
    i0.ɵɵtext(1, " M\u00EDnimo 3 caracteres. ");
    i0.ɵɵelementEnd();
  }
}
function RegistroComponent_div_27_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 32);
    i0.ɵɵtemplate(1, RegistroComponent_div_27_div_1_Template, 2, 0, "div", 33)(2, RegistroComponent_div_27_div_2_Template, 2, 0, "div", 33);
    i0.ɵɵelementEnd();
  }
  if (rf & 2) {
    const ctx_r0 = i0.ɵɵnextContext();
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngIf", ctx_r0.registroForm.controls["apellido"].errors == null ? null : ctx_r0.registroForm.controls["apellido"].errors["required"]);
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngIf", ctx_r0.registroForm.controls["apellido"].errors == null ? null : ctx_r0.registroForm.controls["apellido"].errors["minlength"]);
  }
}
function RegistroComponent_div_32_p_1_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "p");
    i0.ɵɵtext(1, " Se requiere alias ");
    i0.ɵɵelementEnd();
  }
}
function RegistroComponent_div_32_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 32);
    i0.ɵɵtemplate(1, RegistroComponent_div_32_p_1_Template, 2, 0, "p", 33);
    i0.ɵɵelementEnd();
  }
  if (rf & 2) {
    const ctx_r0 = i0.ɵɵnextContext();
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngIf", ctx_r0.registroForm.controls["email"].errors == null ? null : ctx_r0.registroForm.controls["email"].errors["required"]);
  }
}
function RegistroComponent_option_38_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "option", 34);
    i0.ɵɵtext(1);
    i0.ɵɵelementEnd();
  }
  if (rf & 2) {
    const dominio_r2 = ctx.$implicit;
    i0.ɵɵpropertyInterpolate("value", dominio_r2);
    i0.ɵɵadvance();
    i0.ɵɵtextInterpolate1("@", dominio_r2, " ");
  }
}
function RegistroComponent_div_39_p_1_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "p");
    i0.ɵɵtext(1, " Se requiere dominio ");
    i0.ɵɵelementEnd();
  }
}
function RegistroComponent_div_39_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 32);
    i0.ɵɵtemplate(1, RegistroComponent_div_39_p_1_Template, 2, 0, "p", 33);
    i0.ɵɵelementEnd();
  }
  if (rf & 2) {
    const ctx_r0 = i0.ɵɵnextContext();
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngIf", ctx_r0.registroForm.controls["dom"].errors == null ? null : ctx_r0.registroForm.controls["dom"].errors["required"]);
  }
}
function RegistroComponent_div_44_p_1_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "p");
    i0.ɵɵtext(1, " Se requiere contrase\u00F1a ");
    i0.ɵɵelementEnd();
  }
}
function RegistroComponent_div_44_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 32);
    i0.ɵɵtemplate(1, RegistroComponent_div_44_p_1_Template, 2, 0, "p", 33);
    i0.ɵɵelementEnd();
  }
  if (rf & 2) {
    const ctx_r0 = i0.ɵɵnextContext();
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngIf", ctx_r0.registroForm.controls["password"].errors == null ? null : ctx_r0.registroForm.controls["password"].errors["required"]);
  }
}
function RegistroComponent_option_56_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "option", 34);
    i0.ɵɵtext(1);
    i0.ɵɵelementEnd();
  }
  if (rf & 2) {
    const carrera_r3 = ctx.$implicit;
    i0.ɵɵpropertyInterpolate("value", carrera_r3.id);
    i0.ɵɵadvance();
    i0.ɵɵtextInterpolate1("", carrera_r3.nombre, " ");
  }
}
class RegistroComponent {
  constructor(usuario, carrera_service, dominios_service, fb, _snackBar, router) {
    this.usuario = usuario;
    this.carrera_service = carrera_service;
    this.dominios_service = dominios_service;
    this.fb = fb;
    this._snackBar = _snackBar;
    this.router = router;
    this.nombre = "";
    this.apellido = "";
    this.email = "";
    this.password = "";
    this.confirmPassword = "";
    this.es_supervisor = false;
    this.es_estudiante = true;
    this.es_encargado = false;
    this.RUT = "";
    this.extras = {};
    this.checkEs = true;
    this.carreras = [];
    this.dominios = [];
    let respuesta = {};
    carrera_service.obtener_carreras().subscribe({
      next: data => {
        respuesta = {
          ...respuesta,
          data
        };
      },
      error: error => {
        return;
      },
      complete: () => {
        for (var val of respuesta.data.body) {
          this.carreras.push(val);
        }
      }
    });
    let respuesta_dominios = {};
    dominios_service.get_all().subscribe({
      next: data => {
        respuesta_dominios = {
          ...respuesta,
          ...data
        };
      },
      error: err => {},
      complete: () => {
        respuesta_dominios.body.forEach(obj => {
          this.dominios.push(obj.dominio);
        });
      }
    });
    this.createForm();
  }
  // funcion de comprobacion de correo
  comprobar_dominio(val) {
    let dominio = val.correos_admitidos;
    if (this.dominios.indexOf(dominio) == -1 && dominio != null && dominio != "") {
      this.dominios.push(dominio);
    }
    return;
  }
  createForm() {
    this.registroForm = this.fb.group({
      nombre: ['', [forms_1.Validators.required, forms_1.Validators.minLength(3)]],
      apellido: ['', [forms_1.Validators.required, forms_1.Validators.minLength(3)]],
      email: ['', forms_1.Validators.required],
      dom: ['', forms_1.Validators.required],
      password: ['', [forms_1.Validators.required, forms_1.Validators.minLength(3)]],
      confirmPassword: ['', forms_1.Validators.required],
      RUT: ['', forms_1.Validators.required],
      id_carrera: ['', forms_1.Validators.required]
    });
  }
  ngOnInit() {}
  register() {
    const data = this.registroForm.value;
    this.RUT = data.RUT;
    //this.email = data.email
    this.email = data.email + "@" + data.dom;
    this.nombre = data.nombre + " " + data.apellido;
    this.id_carrera = data.id_carrera;
    if (this.es_estudiante) {
      this.extras = {
        RUT: this.RUT,
        id_carrera: this.id_carrera
      };
    }
    if (this.es_supervisor) {
      this.extras = {};
    }
    if (this.es_encargado) {
      this.extras = {};
    }
    let _data = {};
    this.usuario.register(this.email, data.password, data.confirmPassword, this.nombre, false, false, true, false, this.extras).subscribe({
      next: data => {
        _data = {
          ..._data,
          ...data
        };
      },
      complete: () => {
        if (_data.status == 200) {
          this.router.navigate(["/" + environment_1.environment.ruta_login]);
          this._snackBar.open("Se ha enviado correo de confirmación para crear al usuario.", "Cerrar", {
            panelClass: ['green-snackbar'],
            duration: 2000
          });
        } else {
          this._snackBar.open(_data.body.message, "Cerrar", {
            panelClass: ['red-snackbar'],
            duration: 2000
          });
        }
      },
      error: err => {
        this._snackBar.open(err.error.message, "Cerrar", {
          panelClass: ['red-snackbar'],
          duration: 2000
        });
      }
    });
  }
  static {
    this.ɵfac = function RegistroComponent_Factory(__ngFactoryType__) {
      return new (__ngFactoryType__ || RegistroComponent)(i0.ɵɵdirectiveInject(i1.UsuarioService), i0.ɵɵdirectiveInject(i2.CarreraService), i0.ɵɵdirectiveInject(i3.DominiosAceptadosService), i0.ɵɵdirectiveInject(i4.FormBuilder), i0.ɵɵdirectiveInject(i5.MatSnackBar), i0.ɵɵdirectiveInject(i6.Router));
    };
  }
  static {
    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({
      type: RegistroComponent,
      selectors: [["app-registro"]],
      decls: 65,
      vars: 9,
      consts: [["lang", "en"], ["charset", "utf-8"], ["http-equiv", "X-UA-Compatible", "content", "IE=edge"], ["name", "viewport", "content", "width=device-width, initial-scale=1, shrink-to-fit=no"], ["name", "description", "content", ""], ["name", "author", "content", ""], [1, "bg-gradient-primary"], [1, "container"], [1, "row", "justify-content-center"], [1, "col-xl-10", "col-lg-12", "col-md-9"], [1, "card", "o-hidden", "border-0", "shadow-lg", "my-5"], [1, "p-5"], [1, "text-center"], [1, "h4", "text-gray-900", "mb-4"], [1, "user", 3, "formGroup"], [1, "form-group", "row"], [1, "col-sm-6", "mb-3", "mb-sm-0"], ["type", "text", "id", "exampleFirstName", "placeholder", "Juan Alberto", "formControlName", "nombre", "name", "nombre", 1, "form-control", "form-control-user"], ["class", "alert alert-danger", 4, "ngIf"], [1, "col-sm-6"], ["type", "text", "id", "exampleLastName", "placeholder", "Diaz Maturana", "formControlName", "apellido", 1, "form-control", "form-control-user"], ["type", "text", "id", "exampleInputEmail", "placeholder", "alias", "formControlName", "email", "name", "email", 1, "form-control", "form-control-user"], ["name", "dom", "id", "dom", "formControlName", "dom", 1, "form-select"], ["value", "", "disabled", "", "selected", ""], [3, "value", 4, "ngFor", "ngForOf"], ["type", "password", "id", "exampleInputPassword", "placeholder", "**********", "formControlName", "password", "name", "password", 1, "form-control", "form-control-user"], ["type", "password", "id", "exampleRepeatPassword", "placeholder", "**********", "formControlName", "confirmPassword", "name", "password", 1, "form-control", "form-control-user"], [1, "form-group"], ["formControlName", "RUT", "type", "text", "name", "RUT", "placeholder", "12345678-9", "required", "required", 1, "form-control", "form-control-user"], ["name", "id_carrera", "id", "id_carrera", "formControlName", "id_carrera", 1, "form-select"], ["id", "myBtn", "type", "submit", 1, "btn", "btn-primary", "btn-user", "btn-block", 3, "click", "disabled"], ["routerLink", "/login", 1, "small"], [1, "alert", "alert-danger"], [4, "ngIf"], [3, "value"]],
      template: function RegistroComponent_Template(rf, ctx) {
        if (rf & 1) {
          i0.ɵɵelementStart(0, "html", 0)(1, "head");
          i0.ɵɵelement(2, "meta", 1)(3, "meta", 2)(4, "meta", 3)(5, "meta", 4)(6, "meta", 5);
          i0.ɵɵelementStart(7, "title");
          i0.ɵɵtext(8, "Praxus - Login");
          i0.ɵɵelementEnd()();
          i0.ɵɵelementStart(9, "body", 6)(10, "div", 7)(11, "div", 8)(12, "div", 9)(13, "div", 10)(14, "div", 11)(15, "div", 12)(16, "h1", 13);
          i0.ɵɵtext(17, "Registro de Praxus para Estudiantes");
          i0.ɵɵelementEnd()();
          i0.ɵɵelementStart(18, "form", 14)(19, "div", 15)(20, "div", 16);
          i0.ɵɵtext(21, " Nombre: ");
          i0.ɵɵelement(22, "input", 17);
          i0.ɵɵtemplate(23, RegistroComponent_div_23_Template, 3, 2, "div", 18);
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(24, "div", 19);
          i0.ɵɵtext(25, " Apellido: ");
          i0.ɵɵelement(26, "input", 20);
          i0.ɵɵtemplate(27, RegistroComponent_div_27_Template, 3, 2, "div", 18);
          i0.ɵɵelementEnd()();
          i0.ɵɵelementStart(28, "div", 15)(29, "div", 16);
          i0.ɵɵtext(30, " Correo: ");
          i0.ɵɵelement(31, "input", 21);
          i0.ɵɵtemplate(32, RegistroComponent_div_32_Template, 2, 1, "div", 18);
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(33, "div", 19);
          i0.ɵɵtext(34, " Dominio: ");
          i0.ɵɵelementStart(35, "select", 22)(36, "option", 23);
          i0.ɵɵtext(37, "Seleccione un dominio");
          i0.ɵɵelementEnd();
          i0.ɵɵtemplate(38, RegistroComponent_option_38_Template, 2, 2, "option", 24);
          i0.ɵɵelementEnd();
          i0.ɵɵtemplate(39, RegistroComponent_div_39_Template, 2, 1, "div", 18);
          i0.ɵɵelementEnd()();
          i0.ɵɵelementStart(40, "div", 15)(41, "div", 16);
          i0.ɵɵtext(42, " Contrase\u00F1a: ");
          i0.ɵɵelement(43, "input", 25);
          i0.ɵɵtemplate(44, RegistroComponent_div_44_Template, 2, 1, "div", 18);
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(45, "div", 19);
          i0.ɵɵtext(46, " Repetir contrase\u00F1a: ");
          i0.ɵɵelement(47, "input", 26);
          i0.ɵɵelementEnd()();
          i0.ɵɵelementStart(48, "div", 27);
          i0.ɵɵtext(49, " Ingrese su rut: ");
          i0.ɵɵelement(50, "input", 28);
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(51, "div", 27);
          i0.ɵɵtext(52, " Carrera: ");
          i0.ɵɵelementStart(53, "select", 29)(54, "option", 23);
          i0.ɵɵtext(55, "Seleccione carrera");
          i0.ɵɵelementEnd();
          i0.ɵɵtemplate(56, RegistroComponent_option_56_Template, 2, 2, "option", 24);
          i0.ɵɵelementEnd()();
          i0.ɵɵelement(57, "hr");
          i0.ɵɵelementStart(58, "button", 30);
          i0.ɵɵlistener("click", function RegistroComponent_Template_button_click_58_listener() {
            return ctx.register();
          });
          i0.ɵɵtext(59, " Registrar Cuenta ");
          i0.ɵɵelementEnd();
          i0.ɵɵelement(60, "hr");
          i0.ɵɵelementEnd();
          i0.ɵɵelement(61, "hr");
          i0.ɵɵelementStart(62, "div", 12)(63, "a", 31);
          i0.ɵɵtext(64, "Iniciar sesi\u00F3n");
          i0.ɵɵelementEnd()()()()()()()()();
        }
        if (rf & 2) {
          i0.ɵɵadvance(18);
          i0.ɵɵproperty("formGroup", ctx.registroForm);
          i0.ɵɵadvance(5);
          i0.ɵɵproperty("ngIf", ctx.registroForm.controls["nombre"].invalid && (ctx.registroForm.controls["nombre"].dirty || ctx.registroForm.controls["nombre"].touched));
          i0.ɵɵadvance(4);
          i0.ɵɵproperty("ngIf", ctx.registroForm.controls["apellido"].invalid && (ctx.registroForm.controls["apellido"].dirty || ctx.registroForm.controls["apellido"].touched));
          i0.ɵɵadvance(5);
          i0.ɵɵproperty("ngIf", ctx.registroForm.controls["email"].invalid && (ctx.registroForm.controls["email"].dirty || ctx.registroForm.controls["email"].touched));
          i0.ɵɵadvance(6);
          i0.ɵɵproperty("ngForOf", ctx.dominios);
          i0.ɵɵadvance();
          i0.ɵɵproperty("ngIf", ctx.registroForm.controls["dom"].invalid && (ctx.registroForm.controls["dom"].dirty || ctx.registroForm.controls["dom"].touched));
          i0.ɵɵadvance(5);
          i0.ɵɵproperty("ngIf", ctx.registroForm.controls["password"].invalid && (ctx.registroForm.controls["password"].dirty || ctx.registroForm.controls["password"].touched));
          i0.ɵɵadvance(12);
          i0.ɵɵproperty("ngForOf", ctx.carreras);
          i0.ɵɵadvance(2);
          i0.ɵɵproperty("disabled", ctx.registroForm.pristine || ctx.registroForm.invalid);
        }
      },
      dependencies: [i7.NgForOf, i7.NgIf, i6.RouterLink, i4.ɵNgNoValidate, i4.NgSelectOption, i4.ɵNgSelectMultipleOption, i4.DefaultValueAccessor, i4.SelectControlValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.FormGroupDirective, i4.FormControlName],
      styles: ["/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */"]
    });
  }
}
exports.RegistroComponent = RegistroComponent;

/***/ }),

/***/ 6451:
/*!*************************************************************************!*\
  !*** ./src/app/vistas/resumen_practicas/resumen_practicas.component.ts ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.TablaComponent = void 0;
const angular_datatables_1 = __webpack_require__(/*! angular-datatables */ 21541);
const rxjs_1 = __webpack_require__(/*! rxjs */ 51184);
const environment_1 = __webpack_require__(/*! src/environments/environment */ 45312);
const i0 = __webpack_require__(/*! @angular/core */ 37580);
const i1 = __webpack_require__(/*! ../../servicios/encargado/resumen_practicas.service */ 11274);
const i2 = __webpack_require__(/*! @angular/material/snack-bar */ 3347);
const i3 = __webpack_require__(/*! @angular/router */ 95072);
const i4 = __webpack_require__(/*! src/app/servicios/encargado/detalle-practica.service */ 58471);
const i5 = __webpack_require__(/*! @angular/common */ 60316);
const i6 = __webpack_require__(/*! @angular/forms */ 34456);
const i7 = __webpack_require__(/*! ../../componentes/revision/revision.component */ 57892);
const i8 = __webpack_require__(/*! ../../componentes/barra-superior/barra-superior.component */ 36370);
const i9 = __webpack_require__(/*! ../../componentes/logout-modal/logout-modal.component */ 15562);
const i10 = __webpack_require__(/*! ../../componentes/barra-lateral-encargado/barra-lateral-encargado.component */ 43560);
function TablaComponent_tr_35_div_10_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div");
    i0.ɵɵtext(1);
    i0.ɵɵpipe(2, "number");
    i0.ɵɵelementEnd();
  }
  if (rf & 2) {
    const practica_r1 = i0.ɵɵnextContext().$implicit;
    const ctx_r1 = i0.ɵɵnextContext();
    i0.ɵɵadvance();
    i0.ɵɵtextInterpolate1(" ", i0.ɵɵpipeBind2(2, 1, ctx_r1.notas_promedio[practica_r1.id], "1.2-2"), " ");
  }
}
function TablaComponent_tr_35_div_12_div_1_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div");
    i0.ɵɵtext(1);
    i0.ɵɵpipe(2, "number");
    i0.ɵɵelementEnd();
  }
  if (rf & 2) {
    const practica_r1 = i0.ɵɵnextContext(2).$implicit;
    const ctx_r1 = i0.ɵɵnextContext();
    i0.ɵɵadvance();
    i0.ɵɵtextInterpolate1(" ", i0.ɵɵpipeBind2(2, 1, ctx_r1.ev_values[practica_r1.id], "1.2"), " ");
  }
}
function TablaComponent_tr_35_div_12_button_2_Template(rf, ctx) {
  if (rf & 1) {
    const _r3 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "button", 32);
    i0.ɵɵlistener("click", function TablaComponent_tr_35_div_12_button_2_Template_button_click_0_listener() {
      i0.ɵɵrestoreView(_r3);
      const practica_r1 = i0.ɵɵnextContext(2).$implicit;
      const ctx_r1 = i0.ɵɵnextContext();
      return i0.ɵɵresetView(ctx_r1.editar(practica_r1.id));
    });
    i0.ɵɵtext(1, "Evaluar");
    i0.ɵɵelementEnd();
  }
}
function TablaComponent_tr_35_div_12_ng_template_3_Template(rf, ctx) {
  if (rf & 1) {
    const _r4 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "button", 33);
    i0.ɵɵlistener("click", function TablaComponent_tr_35_div_12_ng_template_3_Template_button_click_0_listener() {
      i0.ɵɵrestoreView(_r4);
      const practica_r1 = i0.ɵɵnextContext(2).$implicit;
      const ctx_r1 = i0.ɵɵnextContext();
      return i0.ɵɵresetView(ctx_r1.editar(practica_r1.id));
    });
    i0.ɵɵtext(1, "Cambiar");
    i0.ɵɵelementEnd();
  }
}
function TablaComponent_tr_35_div_12_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div");
    i0.ɵɵtemplate(1, TablaComponent_tr_35_div_12_div_1_Template, 3, 4, "div", 25)(2, TablaComponent_tr_35_div_12_button_2_Template, 2, 0, "button", 31)(3, TablaComponent_tr_35_div_12_ng_template_3_Template, 2, 0, "ng-template", null, 1, i0.ɵɵtemplateRefExtractor);
    i0.ɵɵelementEnd();
  }
  if (rf & 2) {
    const yaEvaluado_r5 = i0.ɵɵreference(4);
    const practica_r1 = i0.ɵɵnextContext().$implicit;
    const ctx_r1 = i0.ɵɵnextContext();
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngIf", ctx_r1.isNumber(ctx_r1.ev_values[practica_r1.id]));
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngIf", !ctx_r1.isNumber(ctx_r1.ev_values[practica_r1.id]))("ngIfElse", yaEvaluado_r5);
  }
}
function TablaComponent_tr_35_ng_template_13_Template(rf, ctx) {
  if (rf & 1) {
    const _r6 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "select", 34);
    i0.ɵɵlistener("input", function TablaComponent_tr_35_ng_template_13_Template_select_input_0_listener($event) {
      i0.ɵɵrestoreView(_r6);
      const ctx_r1 = i0.ɵɵnextContext(2);
      return i0.ɵɵresetView(ctx_r1.checkout($event));
    });
    i0.ɵɵelementStart(1, "option", 35);
    i0.ɵɵtext(2, "Eval\u00FAe la pr\u00E1ctica");
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(3, "option", 36);
    i0.ɵɵtext(4, "1");
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(5, "option", 37);
    i0.ɵɵtext(6, "2");
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(7, "option", 38);
    i0.ɵɵtext(8, "3");
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(9, "option", 39);
    i0.ɵɵtext(10, "4");
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(11, "option", 40);
    i0.ɵɵtext(12, "5");
    i0.ɵɵelementEnd()();
    i0.ɵɵelementStart(13, "button", 41);
    i0.ɵɵlistener("click", function TablaComponent_tr_35_ng_template_13_Template_button_click_13_listener() {
      i0.ɵɵrestoreView(_r6);
      const practica_r1 = i0.ɵɵnextContext().$implicit;
      const ctx_r1 = i0.ɵɵnextContext();
      return i0.ɵɵresetView(ctx_r1.evaluacion_encargado(practica_r1.id));
    });
    i0.ɵɵtext(14, "Confirmar");
    i0.ɵɵelementEnd();
  }
}
function TablaComponent_tr_35_app_revision_16_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelement(0, "app-revision", 42);
  }
  if (rf & 2) {
    const practica_r1 = i0.ɵɵnextContext().$implicit;
    i0.ɵɵproperty("id_estudiante", practica_r1.id_estudiante)("id_modalidad", practica_r1.modalidad.id)("id_usuario_estudiante", practica_r1.estudiante.id_usuario)("estado_practica", practica_r1.estado);
  }
}
function TablaComponent_tr_35_app_revision_17_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelement(0, "app-revision", 42);
  }
  if (rf & 2) {
    const practica_r1 = i0.ɵɵnextContext().$implicit;
    i0.ɵɵproperty("id_estudiante", practica_r1.id_estudiante)("id_modalidad", practica_r1.modalidad.id)("id_usuario_estudiante", practica_r1.estudiante.id_usuario)("estado_practica", practica_r1.estado);
  }
}
function TablaComponent_tr_35_app_revision_18_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelement(0, "app-revision", 42);
  }
  if (rf & 2) {
    const practica_r1 = i0.ɵɵnextContext().$implicit;
    i0.ɵɵproperty("id_estudiante", practica_r1.id_estudiante)("id_modalidad", practica_r1.modalidad.id)("id_usuario_estudiante", practica_r1.estudiante.id_usuario)("estado_practica", practica_r1.estado);
  }
}
function TablaComponent_tr_35_div_19_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div");
    i0.ɵɵtext(1, "No disponible");
    i0.ɵɵelementEnd();
  }
}
function TablaComponent_tr_35_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "tr", 21)(1, "td", 22);
    i0.ɵɵtext(2);
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(3, "td", 22);
    i0.ɵɵtext(4);
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(5, "td", 22);
    i0.ɵɵtext(6);
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(7, "td", 23);
    i0.ɵɵtext(8);
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(9, "td", 24);
    i0.ɵɵtemplate(10, TablaComponent_tr_35_div_10_Template, 3, 4, "div", 25);
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(11, "td", 26);
    i0.ɵɵtemplate(12, TablaComponent_tr_35_div_12_Template, 5, 3, "div", 27)(13, TablaComponent_tr_35_ng_template_13_Template, 15, 0, "ng-template", null, 0, i0.ɵɵtemplateRefExtractor);
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(15, "td", 28);
    i0.ɵɵtemplate(16, TablaComponent_tr_35_app_revision_16_Template, 1, 4, "app-revision", 29)(17, TablaComponent_tr_35_app_revision_17_Template, 1, 4, "app-revision", 29)(18, TablaComponent_tr_35_app_revision_18_Template, 1, 4, "app-revision", 29)(19, TablaComponent_tr_35_div_19_Template, 2, 0, "div", 30);
    i0.ɵɵelementEnd()();
  }
  if (rf & 2) {
    const practica_r1 = ctx.$implicit;
    const editable_r7 = i0.ɵɵreference(14);
    const ctx_r1 = i0.ɵɵnextContext();
    i0.ɵɵadvance();
    i0.ɵɵpropertyInterpolate2("routerLink", "/", ctx_r1.rutas.ruta_practicas, "/", practica_r1.id, "");
    i0.ɵɵadvance();
    i0.ɵɵtextInterpolate1(" ", practica_r1 == null ? null : practica_r1.estudiante == null ? null : practica_r1.estudiante.usuario == null ? null : practica_r1.estudiante.usuario.nombre, "");
    i0.ɵɵadvance();
    i0.ɵɵpropertyInterpolate2("routerLink", "/", ctx_r1.rutas.ruta_practicas, "/", practica_r1.id, "");
    i0.ɵɵadvance();
    i0.ɵɵtextInterpolate1(" ", practica_r1 == null ? null : practica_r1.estudiante == null ? null : practica_r1.estudiante.rut, "");
    i0.ɵɵadvance();
    i0.ɵɵpropertyInterpolate2("routerLink", "/", ctx_r1.rutas.ruta_practicas, "/", practica_r1.id, "");
    i0.ɵɵadvance();
    i0.ɵɵtextInterpolate1(" ", practica_r1 == null ? null : practica_r1.modalidad == null ? null : practica_r1.modalidad.config_practica == null ? null : practica_r1.modalidad.config_practica.nombre, "");
    i0.ɵɵadvance();
    i0.ɵɵpropertyInterpolate2("routerLink", "/", ctx_r1.rutas.ruta_practicas, "/", practica_r1.id, "");
    i0.ɵɵproperty("ngClass", ctx_r1.getEstadoClass(practica_r1.estado));
    i0.ɵɵadvance();
    i0.ɵɵtextInterpolate1(" ", (practica_r1 == null ? null : practica_r1.estado) === "Evaluada" ? "Evaluada por supervisor" : (practica_r1 == null ? null : practica_r1.estado) === "Finalizada" ? "Esperando evaluaci\u00F3n de supervisor" : practica_r1 == null ? null : practica_r1.estado, "");
    i0.ɵɵadvance();
    i0.ɵɵpropertyInterpolate2("routerLink", "/", ctx_r1.rutas.ruta_practicas, "/", practica_r1.id, "");
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngIf", ctx_r1.isNumber(ctx_r1.notas_promedio[practica_r1.id]));
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngIf", ctx_r1.editables[practica_r1.id] == "0")("ngIfElse", editable_r7);
    i0.ɵɵadvance(3);
    i0.ɵɵproperty("ngSwitch", practica_r1.estado);
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngSwitchCase", "Evaluada");
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngSwitchCase", "Aprobada");
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngSwitchCase", "Reprobada");
  }
}
class TablaComponent {
  constructor(service, _snackBar, router, practi_service) {
    //console.log("ESTE ES EL COMPONENTE ENCARGADO");
    this.service = service;
    this._snackBar = _snackBar;
    this.router = router;
    this.practi_service = practi_service;
    this.rutas = environment_1.environment;
    this.dtOptions = {};
    this.dtTrigger = new rxjs_1.Subject();
    this.practicas = [];
    this.temp_notas = [];
    this.notas_promedio = {};
    this.carreras = [];
    this.carrera_encargado = -1;
    this.usuario = [];
    this.encargado = [];
    this.booleanValue = true;
    this.editables = {};
    this.ev_values = {};
    this.ev_value = -1;
    this.texto_consistencia_informe = "Indica qué tan relacionados están los informes del\n" + "estudiante con lo que escribió su supervisor.\n" + "Para más información, haga click en el botón.";
    this.texto_consistencia_evaluacion = "Indica qué tan relacionada está la evaluación escrita del\n" + "supervisor, con las notas que este mismo le haya puesto.\n" + "Para más información, haga click en el botón.";
    this.texto_interpretacion_nota = "Texto que ayuda a entender qué significa el puntaje\n" + "de consistencia evaluación obtenido.\n";
    this.texto_interpretacion_informes = "Texto que ayuda a entender qué significa el puntaje\n" + "de consistencia informes obtenido.\n";
    this.texto_indice_repeticion = "Es un valor que indica qué tanto contenido de los informes es texto repetido\n" + "Para más información, haga click en el botón.";
    this.texto_evaluacion_encargado = "Valor numérico del 1 al 5 (de peor a mejor), que le da un encargado como evaluación a una práctica.";
    this.texto_promedio_evaluacion = "Valor numérico que indica el promedio las aptitudes del estudiante evaluadas por el supervisor";
    this.sortedColumn = null;
    this.sortOrder = null;
    this.usuario = JSON.parse(localStorage.getItem('auth-user') || '{}').userdata;
    this.encargado = this.usuario.encargado;
    this.carrera_encargado = this.encargado.id_carrera;
    this.dtOptions = {
      language: {
        url: 'assets/localisation/es-es.json'
      },
      drawCallback: () => {
        //console.log(this.practicas);
      }
    };
    let respuesta = {};
    this.service.full_estudiante_practicas(this.carrera_encargado).subscribe({
      next: data => {
        respuesta = {
          ...respuesta,
          ...data
        };
      },
      error: error => {
        this.practicas = [];
        this._snackBar.open("Error al solicitar datos", "Cerrar", {
          duration: 10000,
          panelClass: ['red-snackbar']
        });
      },
      complete: () => {
        let temppracticas = [];
        for (let practicaux of respuesta.body) {
          //console.log(alumno)
          if (practicaux?.modalidad?.config_practica?.id_carrera == this.carrera_encargado && practicaux?.modalidad?.config_practica?.id_carrera != null) {
            temppracticas.push(practicaux);
            if (practicaux.ev_encargado == null || practicaux.ev_encargado == -1) {
              this.ev_values[practicaux.id] = "-";
            } else {
              this.ev_values[practicaux.id] = practicaux.ev_encargado;
            }
          }
        }
        this.practicas = temppracticas.map(practicaux => {
          practicaux.consistencia_nota = practicaux.consistencia_nota ? `${Math.round(100 * practicaux.consistencia_nota)}%` : "—";
          practicaux.consistencia_informe = practicaux.consistencia_informe ? `${Math.round(100 * practicaux.consistencia_informe)}%` : "—";
          practicaux.nota_eval = practicaux.nota_eval ? practicaux.nota_eval : "—";
          practicaux.interpretacion_nota = practicaux.interpretacion_nota ? practicaux.interpretacion_nota : "—";
          practicaux.interpretacion_informe = practicaux.interpretacion_informe ? practicaux.interpretacion_informe : "—";
          /*alumno ={... alumno, carrera: this.carreras[Math.floor(Math.random() * this.carreras.length)]}
          console.log(alumno);
          if (alumno.carrera != "Ingeniería Civil en Informática"){
            let index: number = this.practicas.indexOf(alumno);
            this.practicas.splice(index, 1);
          }
          */
          return practicaux;
        });
        console.log(this.practicas);
        for (var practicaux of this.practicas) {
          this.editables[practicaux.id] = "0";
          let id_practicaux = practicaux.id;
          this.practi_service.obtener_practica(id_practicaux).subscribe({
            next: data => {
              respuesta = {
                ...respuesta,
                ...data
              };
            },
            error: error => {
              this._snackBar.open("Error al solicitar datos de práctica", "Cerrar", {
                duration: 10000,
                panelClass: ['red-snackbar']
              });
            },
            complete: () => {
              let evaluaciones = respuesta.body.respuesta_supervisors;
              //console.log(evaluaciones)
              if (evaluaciones.length == 0) {
                this.temp_notas.push([id_practicaux, 0]);
              } else {
                let find = -1;
                for (var val of evaluaciones) {
                  let nota_promedio = 0;
                  let prom = 0;
                  let temp = [];
                  if (val.pregunta_supervisor != null) {
                    if (val.pregunta_supervisor.tipo_respuesta == "evaluacion") {
                      find = 1;
                      temp = val.respuesta.split(",");
                      //console.log("temp:",temp)
                      for (var n of temp) {
                        nota_promedio += Number(n);
                        prom += 1;
                      }
                      nota_promedio = nota_promedio / prom;
                      if (prom == 0) {
                        this.notas_promedio[id_practicaux] = "—";
                      } else {
                        this.notas_promedio[id_practicaux] = nota_promedio;
                      }
                      break;
                    }
                  }
                }
                if (find == -1) {
                  this.temp_notas.push([id_practicaux, 0]);
                }
                //console.log("notas_promedio:",this.notas_promedio) 
                const element = document.getElementById('cuerpoTabla');
                const targetElement = document.getElementById('headerTabla');
                if (element) {
                  const elementWidth = element.offsetWidth;
                  targetElement.style.width = elementWidth + 'px';
                }
              }
            }
          });
        }
      }
    });
  }
  ngAfterViewInit() {
    this.dtTrigger.next(0);
  }
  redirecting() {
    this.router.navigate(["/consistencia"]);
  }
  ngOnDestroy() {
    // Do not forget to unsubscribe the event
    this.dtTrigger.unsubscribe();
  }
  sort(n) {
    this.sortedColumn = n;
    this.sortOrder = this.booleanValue ? 1 : -1;
    //console.log(this.booleanValue, this.sortOrder)
    if (this.booleanValue == false) {
      switch (n) {
        case 1:
          this.practicas.sort((a, b) => a.estudiante.usuario.nombre > b.estudiante.usuario.nombre ? 1 : a.estudiante.usuario.nombre < b.estudiante.usuario.nombre ? -1 : 0);
          break;
        case 2:
          this.practicas.sort((a, b) => a.estudiante.rut > b.estudiante.rut ? 1 : a.estudiante.rut < b.estudiante.rut ? -1 : 0);
          break;
        case 3:
          this.practicas.sort((a, b) => a.modalidad.config_practica.nombre > b.modalidad.config_practica.nombre ? 1 : a.modalidad.config_practica.nombre < b.modalidad.config_practica.nombre ? -1 : 0);
          break;
        case 4:
          this.practicas.sort((a, b) => a.estado > b.estado ? 1 : a.estado < b.estado ? -1 : 0);
          break;
      }
      this.booleanValue = !this.booleanValue;
    } else {
      switch (n) {
        case 1:
          this.practicas.sort((a, b) => a.estudiante.usuario.nombre < b.estudiante.usuario.nombre ? 1 : a.estudiante.usuario.nombre > b.estudiante.usuario.nombre ? -1 : 0);
          break;
        case 2:
          this.practicas.sort((a, b) => a.estudiante.rut < b.estudiante.rut ? 1 : a.estudiante.rut > b.estudiante.rut ? -1 : 0);
          break;
        case 3:
          this.practicas.sort((a, b) => a.modalidad.config_practica.nombre < b.modalidad.config_practica.nombre ? 1 : a.modalidad.config_practica.nombre > b.modalidad.config_practica.nombre ? -1 : 0);
          break;
        case 4:
          this.practicas.sort((a, b) => a.estado < b.estado ? 1 : a.estado > b.estado ? -1 : 0);
      }
      this.booleanValue = !this.booleanValue;
    }
  }
  onResize(event) {
    // Handle the window resize event here
    //console.log('Window has been resized', window.innerWidth, window.innerHeight);
    // You can put your custom logic here
    const element = document.getElementById('cuerpoTabla');
    const targetElement = document.getElementById('headerTabla');
    if (element) {
      const elementWidth = element.offsetWidth;
      targetElement.style.width = elementWidth + 'px';
    }
  }
  editar(id_practica) {
    this.editables[id_practica] = "1";
  }
  checkout(arg) {
    this.ev_value = Number(arg.target.value);
  }
  evaluacion_encargado(id_practica) {
    if (this.ev_value == -1) {
      this.editables[id_practica] = "0";
      return;
    }
    let respuesta = [];
    this.practi_service.evaluacion_encargado(id_practica, this.ev_value).subscribe({
      next: data => {
        respuesta = {
          ...respuesta,
          ...data
        };
      },
      error: error => {
        console.log(error);
        return;
      },
      complete: () => {}
    });
    this.editables[id_practica] = "0";
    this.ev_values[id_practica] = this.ev_value;
    this.ev_value = -1;
  }
  isNumber(value) {
    return !isNaN(parseFloat(value)) && isFinite(value);
  }
  getEstadoClass(estado) {
    switch (estado) {
      case 'Aprobada':
        return 'text-success';
      case 'Reprobada':
        return 'text-danger';
      case 'Evaluada':
        return 'text-primary';
      default:
        return '';
      // Clase por defecto o ninguna clase si no coincide
    }
  }
  static {
    this.ɵfac = function TablaComponent_Factory(__ngFactoryType__) {
      return new (__ngFactoryType__ || TablaComponent)(i0.ɵɵdirectiveInject(i1.GetDetallesAlumnoService), i0.ɵɵdirectiveInject(i2.MatSnackBar), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.DetallePracticaService));
    };
  }
  static {
    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({
      type: TablaComponent,
      selectors: [["resumen_practicas"]],
      viewQuery: function TablaComponent_Query(rf, ctx) {
        if (rf & 1) {
          i0.ɵɵviewQuery(angular_datatables_1.DataTableDirective, 5);
        }
        if (rf & 2) {
          let _t;
          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.dtElement = _t.first);
        }
      },
      hostBindings: function TablaComponent_HostBindings(rf, ctx) {
        if (rf & 1) {
          i0.ɵɵlistener("resize", function TablaComponent_resize_HostBindingHandler($event) {
            return ctx.onResize($event);
          }, false, i0.ɵɵresolveWindow);
        }
      },
      decls: 39,
      vars: 19,
      consts: [["editable", ""], ["yaEvaluado", ""], ["id", "wrapper"], ["id", "content-wrapper", 1, "d-flex", "flex-column"], ["id", "content", 1, "main-content"], [1, "container-fluid"], [1, "h2", "mb-2", "font-weight-bold", "text-gray-800"], [1, "mb-4"], [1, "card", "shadow", "mb-4"], [1, "card-body"], [1, "table-responsive", "table-hover"], ["id", "dataTable", "width", "100%", "cellspacing", "0", 1, "table", "table-striped", "table-bordered", "table-hover"], ["id", "headerTabla"], [1, "texto", 3, "click"], [1, "exclude-hover", "numero"], ["data-toggle", "tooltip", "data-placement", "bottom", 1, "pointer", 3, "click", "title"], [1, "fas", "fa-info-circle"], [1, "exclude-hover", "retraso", 2, "vertical-align", "bottom"], ["id", "cuerpoTabla", "class", "pointer", 4, "ngFor", "ngForOf"], ["href", "#page-top", 1, "scroll-to-top", "rounded"], [1, "fas", "fa-angle-up"], ["id", "cuerpoTabla", 1, "pointer"], [1, "texto", 3, "routerLink"], [1, "font-weight-bold", "texto", 3, "routerLink", "ngClass"], [1, "numero", 3, "routerLink"], [4, "ngIf"], [1, "numero"], [4, "ngIf", "ngIfElse"], [1, "retraso", 3, "ngSwitch"], [3, "id_estudiante", "id_modalidad", "id_usuario_estudiante", "estado_practica", 4, "ngSwitchCase"], [4, "ngSwitchDefault"], ["class", "btn btn-sm btn-primary btn-user", 3, "click", 4, "ngIf", "ngIfElse"], [1, "btn", "btn-sm", "btn-primary", "btn-user", 3, "click"], [1, "btn", "btn-sm", "btn-secondary", "btn-user", 3, "click"], [1, "form-select", 3, "input"], ["value", "-1", "disabled", "", "selected", ""], ["value", "1"], ["value", "2"], ["value", "3"], ["value", "4"], ["value", "5"], [1, "btn", "btn-sm", "btn-primary", "btn-user", "btn-block", 3, "click"], [3, "id_estudiante", "id_modalidad", "id_usuario_estudiante", "estado_practica"]],
      template: function TablaComponent_Template(rf, ctx) {
        if (rf & 1) {
          i0.ɵɵelementStart(0, "div", 2);
          i0.ɵɵelement(1, "app-barra-lateral-encargado");
          i0.ɵɵelementStart(2, "div", 3)(3, "div", 4);
          i0.ɵɵelement(4, "app-barra-superior");
          i0.ɵɵelementStart(5, "div", 5)(6, "div", 6);
          i0.ɵɵtext(7, "Pr\u00E1cticas");
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(8, "p", 7);
          i0.ɵɵtext(9, "Aqu\u00ED se pueden ver todas las pr\u00E1cticas que est\u00E1n siendo cursadas actualmente");
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(10, "div", 8)(11, "div", 9)(12, "div", 10)(13, "table", 11)(14, "thead", 12)(15, "tr")(16, "th", 13);
          i0.ɵɵlistener("click", function TablaComponent_Template_th_click_16_listener() {
            return ctx.sort(1);
          });
          i0.ɵɵtext(17, "Nombre Estudiante");
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(18, "th", 13);
          i0.ɵɵlistener("click", function TablaComponent_Template_th_click_18_listener() {
            return ctx.sort(2);
          });
          i0.ɵɵtext(19, "Rut");
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(20, "th", 13);
          i0.ɵɵlistener("click", function TablaComponent_Template_th_click_20_listener() {
            return ctx.sort(3);
          });
          i0.ɵɵtext(21, "Tipo Pr\u00E1ctica");
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(22, "th", 13);
          i0.ɵɵlistener("click", function TablaComponent_Template_th_click_22_listener() {
            return ctx.sort(4);
          });
          i0.ɵɵtext(23, "Estado");
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(24, "th", 14);
          i0.ɵɵtext(25, "Nota Supervisor ");
          i0.ɵɵelementStart(26, "a", 15);
          i0.ɵɵlistener("click", function TablaComponent_Template_a_click_26_listener() {
            return ctx.redirecting();
          });
          i0.ɵɵelement(27, "i", 16);
          i0.ɵɵelementEnd()();
          i0.ɵɵelementStart(28, "th", 14);
          i0.ɵɵtext(29, "Nota Encargado ");
          i0.ɵɵelementStart(30, "a", 15);
          i0.ɵɵlistener("click", function TablaComponent_Template_a_click_30_listener() {
            return ctx.redirecting();
          });
          i0.ɵɵelement(31, "i", 16);
          i0.ɵɵelementEnd()();
          i0.ɵɵelementStart(32, "th", 17);
          i0.ɵɵtext(33, "Aprobaci\u00F3n");
          i0.ɵɵelementEnd()()();
          i0.ɵɵelementStart(34, "tbody");
          i0.ɵɵtemplate(35, TablaComponent_tr_35_Template, 20, 27, "tr", 18);
          i0.ɵɵelementEnd()()()()()()()()();
          i0.ɵɵelementStart(36, "a", 19);
          i0.ɵɵelement(37, "i", 20);
          i0.ɵɵelementEnd();
          i0.ɵɵelement(38, "app-logout-modal");
        }
        if (rf & 2) {
          i0.ɵɵadvance(16);
          i0.ɵɵclassProp("asc", ctx.sortedColumn === 1 && ctx.sortOrder === -1)("desc", ctx.sortedColumn === 1 && ctx.sortOrder === 1);
          i0.ɵɵadvance(2);
          i0.ɵɵclassProp("asc", ctx.sortedColumn === 2 && ctx.sortOrder === -1)("desc", ctx.sortedColumn === 2 && ctx.sortOrder === 1);
          i0.ɵɵadvance(2);
          i0.ɵɵclassProp("asc", ctx.sortedColumn === 3 && ctx.sortOrder === -1)("desc", ctx.sortedColumn === 3 && ctx.sortOrder === 1);
          i0.ɵɵadvance(2);
          i0.ɵɵclassProp("asc", ctx.sortedColumn === 4 && ctx.sortOrder === -1)("desc", ctx.sortedColumn === 4 && ctx.sortOrder === 1);
          i0.ɵɵadvance(4);
          i0.ɵɵpropertyInterpolate("title", ctx.texto_promedio_evaluacion);
          i0.ɵɵadvance(4);
          i0.ɵɵpropertyInterpolate("title", ctx.texto_evaluacion_encargado);
          i0.ɵɵadvance(5);
          i0.ɵɵproperty("ngForOf", ctx.practicas);
        }
      },
      dependencies: [i5.NgClass, i5.NgForOf, i5.NgIf, i5.NgSwitch, i5.NgSwitchCase, i5.NgSwitchDefault, i3.RouterLink, i6.NgSelectOption, i6.ɵNgSelectMultipleOption, i7.RevisionComponent, i8.BarraSuperiorComponent, i9.LogoutModalComponent, i10.BarraLateralEncargadoComponent, i5.DecimalPipe],
      styles: ["@charset \"UTF-8\";\nthead {\n  border: #e4e4e4 solid 1px;\n}\n\nthead th {\n  text-align: center;\n  color: #727272;\n  vertical-align: middle;\n}\n\nthead th:not(.exclude-hover):hover {\n  background-color: #e7e7e7;\n  cursor: pointer;\n}\n\ntbody {\n  max-height: calc(100vh - 350px);\n  display: block;\n  overflow-y: auto;\n}\n\nthead,\ntbody tr {\n  display: table;\n  width: 100%;\n  table-layout: fixed;\n  /* even columns width , fix width of table too*/\n}\n\ntbody tr td {\n  vertical-align: middle !important;\n  text-align: center;\n  color: #686868;\n}\n\n.custom-tooltip {\n  font-size: 25px;\n}\n\n.pointer {\n  cursor: pointer;\n}\n\n/* Ascending arrow style */\n.asc:after {\n  content: \" \u25B2\";\n  /* Up arrow */\n}\n\n/* Descending arrow style */\n.desc:after {\n  content: \" \u25BC\";\n  /* Down arrow */\n}\n\n.texto {\n  text-align: left;\n}\n\n.retraso {\n  text-align: center;\n}\n\n.numero {\n  text-align: right;\n}\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvdmlzdGFzL3Jlc3VtZW5fcHJhY3RpY2FzL3Jlc3VtZW5fcHJhY3RpY2FzLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLGdCQUFnQjtBQUFoQjtFQUNJLHlCQUFBO0FBRUo7O0FBQ0E7RUFDSSxrQkFBQTtFQUNBLGNBQUE7RUFDQSxzQkFBQTtBQUVKOztBQUNBO0VBQ0kseUJBQUE7RUFDQSxlQUFBO0FBRUo7O0FBQ0E7RUFDSSwrQkFBQTtFQUNBLGNBQUE7RUFDQSxnQkFBQTtBQUVKOztBQUVBOztFQUVJLGNBQUE7RUFDQSxXQUFBO0VBQ0EsbUJBQUE7RUFDQSwrQ0FBQTtBQUNKOztBQUVBO0VBQ0ksaUNBQUE7RUFDQSxrQkFBQTtFQUNBLGNBQUE7QUFDSjs7QUFFQTtFQUNJLGVBQUE7QUFDSjs7QUFFQTtFQUNJLGVBQUE7QUFDSjs7QUFFQSwwQkFBQTtBQUNBO0VBQ0ksYUFBQTtFQUNBLGFBQUE7QUFDSjs7QUFFQSwyQkFBQTtBQUNBO0VBQ0ksYUFBQTtFQUNBLGVBQUE7QUFDSjs7QUFFQTtFQUNJLGdCQUFBO0FBQ0o7O0FBRUE7RUFDSSxrQkFBQTtBQUNKOztBQUVBO0VBQ0ksaUJBQUE7QUFDSiIsInNvdXJjZXNDb250ZW50IjpbInRoZWFkIHtcbiAgICBib3JkZXI6ICNlNGU0ZTQgc29saWQgMXB4O1xufVxuXG50aGVhZCB0aCB7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIGNvbG9yOiAjNzI3MjcyO1xuICAgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XG59XG5cbnRoZWFkIHRoOm5vdCguZXhjbHVkZS1ob3Zlcik6aG92ZXIge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNlN2U3ZTc7XG4gICAgY3Vyc29yOiBwb2ludGVyO1xufVxuXG50Ym9keSB7XG4gICAgbWF4LWhlaWdodDogY2FsYygxMDB2aCAtIDM1MHB4KTtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBvdmVyZmxvdy15OiBhdXRvO1xufVxuXG5cbnRoZWFkLFxudGJvZHkgdHIge1xuICAgIGRpc3BsYXk6IHRhYmxlO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIHRhYmxlLWxheW91dDogZml4ZWQ7XG4gICAgLyogZXZlbiBjb2x1bW5zIHdpZHRoICwgZml4IHdpZHRoIG9mIHRhYmxlIHRvbyovXG59XG5cbnRib2R5IHRyIHRkIHtcbiAgICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlICFpbXBvcnRhbnQ7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIGNvbG9yOiAjNjg2ODY4O1xufVxuXG4uY3VzdG9tLXRvb2x0aXAge1xuICAgIGZvbnQtc2l6ZTogMjVweDtcbn1cblxuLnBvaW50ZXIge1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbn1cblxuLyogQXNjZW5kaW5nIGFycm93IHN0eWxlICovXG4uYXNjOmFmdGVyIHtcbiAgICBjb250ZW50OiAnIMOiwpbCsic7XG4gICAgLyogVXAgYXJyb3cgKi9cbn1cblxuLyogRGVzY2VuZGluZyBhcnJvdyBzdHlsZSAqL1xuLmRlc2M6YWZ0ZXIge1xuICAgIGNvbnRlbnQ6ICcgw6LClsK8JztcbiAgICAvKiBEb3duIGFycm93ICovXG59XG5cbi50ZXh0byB7XG4gICAgdGV4dC1hbGlnbjogbGVmdDtcbn1cblxuLnJldHJhc28ge1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cblxuLm51bWVybyB7XG4gICAgdGV4dC1hbGlnbjogcmlnaHQ7XG59Il0sInNvdXJjZVJvb3QiOiIifQ== */"],
      encapsulation: 2
    });
  }
}
exports.TablaComponent = TablaComponent;

/***/ }),

/***/ 92379:
/*!***********************************************************************************!*\
  !*** ./src/app/vistas/vista-configs-practica/vista-configs-practica.component.ts ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.VistaConfigsPracticaComponent = void 0;
const forms_1 = __webpack_require__(/*! @angular/forms */ 34456);
const i0 = __webpack_require__(/*! @angular/core */ 37580);
const i1 = __webpack_require__(/*! src/app/servicios/encargado/config-practica/config.service */ 55971);
const i2 = __webpack_require__(/*! src/app/servicios/encargado/edicion-simple/edicion.service */ 92836);
const i3 = __webpack_require__(/*! @angular/material/snack-bar */ 3347);
const i4 = __webpack_require__(/*! @angular/forms */ 34456);
const i5 = __webpack_require__(/*! @angular/common */ 60316);
const i6 = __webpack_require__(/*! @angular/router */ 95072);
const i7 = __webpack_require__(/*! @angular/material/tooltip */ 80640);
const i8 = __webpack_require__(/*! ../../componentes/barra-superior/barra-superior.component */ 36370);
const i9 = __webpack_require__(/*! ../../componentes/logout-modal/logout-modal.component */ 15562);
const i10 = __webpack_require__(/*! ../../componentes/barra-lateral-encargado/barra-lateral-encargado.component */ 43560);
const i11 = __webpack_require__(/*! ../../componentes/edicion-simple-modal/edicion-simple-modal.component */ 34662);
const i12 = __webpack_require__(/*! ../../componentes/subir-plantilla-informe-final/subir-plantilla-informe-final.component */ 9604);
const _c0 = a0 => ["/configurar", a0];
function VistaConfigsPracticaComponent_div_5_div_7_p_40_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "p");
    i0.ɵɵtext(1);
    i0.ɵɵelementEnd();
  }
  if (rf & 2) {
    const modalidad_r5 = ctx.$implicit;
    i0.ɵɵadvance();
    i0.ɵɵtextInterpolate2(" ", modalidad_r5.cantidad_tiempo, " ", modalidad_r5.tipo_modalidad, " ");
  }
}
function VistaConfigsPracticaComponent_div_5_div_7_div_44_div_6_div_8_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 24)(1, "button", 56)(2, "a", 57);
    i0.ɵɵtext(3, "Ver plantilla ");
    i0.ɵɵelementEnd()()();
  }
  if (rf & 2) {
    const config_informe_r6 = i0.ɵɵnextContext(2).$implicit;
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("href", "https://d2v9ocre132gvc.cloudfront.net/" + config_informe_r6.plantilla, i0.ɵɵsanitizeUrl);
  }
}
function VistaConfigsPracticaComponent_div_5_div_7_div_44_div_6_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div")(1, "div")(2, "p");
    i0.ɵɵtext(3, "Formatos aceptados: ");
    i0.ɵɵelementEnd();
    i0.ɵɵelement(4, "input", 55);
    i0.ɵɵtext(5, " pdf ");
    i0.ɵɵelement(6, "input", 55);
    i0.ɵɵtext(7, " word ");
    i0.ɵɵelementEnd();
    i0.ɵɵtemplate(8, VistaConfigsPracticaComponent_div_5_div_7_div_44_div_6_div_8_Template, 4, 1, "div", 39);
    i0.ɵɵelementEnd();
  }
  if (rf & 2) {
    const config_informe_r6 = i0.ɵɵnextContext().$implicit;
    i0.ɵɵadvance(4);
    i0.ɵɵproperty("checked", config_informe_r6.tipo_archivo.includes("pdf"));
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("checked", config_informe_r6.tipo_archivo.includes("doc"));
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngIf", config_informe_r6.plantilla != null && config_informe_r6.plantilla != "");
  }
}
function VistaConfigsPracticaComponent_div_5_div_7_div_44_p_7_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "p");
    i0.ɵɵtext(1);
    i0.ɵɵelementEnd();
  }
  if (rf & 2) {
    const pregunta_r7 = ctx.$implicit;
    const k_r8 = ctx.index;
    i0.ɵɵadvance();
    i0.ɵɵtextInterpolate2(" ", k_r8 + 1, ". ", pregunta_r7.enunciado, " ");
  }
}
function VistaConfigsPracticaComponent_div_5_div_7_div_44_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 19)(1, "div", 14)(2, "div", 20)(3, "h4", 16);
    i0.ɵɵtext(4);
    i0.ɵɵelementEnd()();
    i0.ɵɵelementStart(5, "div", 18);
    i0.ɵɵtemplate(6, VistaConfigsPracticaComponent_div_5_div_7_div_44_div_6_Template, 9, 3, "div", 38)(7, VistaConfigsPracticaComponent_div_5_div_7_div_44_p_7_Template, 2, 2, "p", 40);
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(8, "div", 41)(9, "span", 42);
    i0.ɵɵtext(10, "Editar");
    i0.ɵɵelementEnd()()()();
  }
  if (rf & 2) {
    const config_informe_r6 = ctx.$implicit;
    const ctx_r2 = i0.ɵɵnextContext(3);
    i0.ɵɵadvance(4);
    i0.ɵɵtextInterpolate1(" ", config_informe_r6.tipo_informe, " ");
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngIf", config_informe_r6.archivo_o_encuesta != null && (config_informe_r6 == null ? null : config_informe_r6.archivo_o_encuesta.toLowerCase()) == "archivo");
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngForOf", config_informe_r6.pregunta_informes);
    i0.ɵɵadvance(2);
    i0.ɵɵpropertyInterpolate("matTooltip", ctx_r2.string_bloqueo);
  }
}
function VistaConfigsPracticaComponent_div_5_div_7_div_45_p_6_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "p");
    i0.ɵɵtext(1);
    i0.ɵɵelementEnd();
  }
  if (rf & 2) {
    const doc_r9 = ctx.$implicit;
    const j_r10 = ctx.index;
    i0.ɵɵadvance();
    i0.ɵɵtextInterpolate3(" ", j_r10 + 1, ". ", doc_r9.nombre_solicitud, " [", doc_r9.tipo_archivo, "] ");
  }
}
function VistaConfigsPracticaComponent_div_5_div_7_div_45_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 19)(1, "div", 14)(2, "div", 20)(3, "h4", 16);
    i0.ɵɵtext(4, " Solicitudes de documentos ");
    i0.ɵɵelementEnd()();
    i0.ɵɵelementStart(5, "div", 18);
    i0.ɵɵtemplate(6, VistaConfigsPracticaComponent_div_5_div_7_div_45_p_6_Template, 2, 3, "p", 40);
    i0.ɵɵelementEnd()()();
  }
  if (rf & 2) {
    const config_r11 = i0.ɵɵnextContext().$implicit;
    i0.ɵɵadvance(6);
    i0.ɵɵproperty("ngForOf", config_r11.solicitud_documentos);
  }
}
function VistaConfigsPracticaComponent_div_5_div_7_p_52_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "p");
    i0.ɵɵtext(1);
    i0.ɵɵelementEnd();
  }
  if (rf & 2) {
    const pregunta_r12 = ctx.$implicit;
    const j_r13 = ctx.index;
    i0.ɵɵadvance();
    i0.ɵɵtextInterpolate3(" ", j_r13 + 1, ". ", pregunta_r12.enunciado, " [", pregunta_r12.tipo_respuesta, "] ");
  }
}
function VistaConfigsPracticaComponent_div_5_div_7_p_62_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "p");
    i0.ɵɵtext(1);
    i0.ɵɵelementEnd();
  }
  if (rf & 2) {
    const pregunta_r14 = ctx.$implicit;
    const j_r15 = ctx.index;
    i0.ɵɵadvance();
    i0.ɵɵtextInterpolate3(" ", j_r15 + 1, ". ", pregunta_r14.enunciado, " [", pregunta_r14.tipo_respuesta, "] ");
  }
}
function VistaConfigsPracticaComponent_div_5_div_7_Template(rf, ctx) {
  if (rf & 1) {
    const _r2 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "div", 8)(1, "div", 49)(2, "div", 14)(3, "a", 50)(4, "h2", 16);
    i0.ɵɵtext(5);
    i0.ɵɵelementEnd()();
    i0.ɵɵelementStart(6, "div", 51)(7, "div", 18)(8, "div", 8)(9, "div", 19)(10, "div", 14)(11, "div", 20)(12, "h4", 16);
    i0.ɵɵtext(13, " General ");
    i0.ɵɵelementEnd()();
    i0.ɵɵelementStart(14, "div", 18)(15, "table")(16, "tr")(17, "td");
    i0.ɵɵtext(18, "Nombre:");
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(19, "td");
    i0.ɵɵtext(20);
    i0.ɵɵelementEnd()();
    i0.ɵɵelementStart(21, "tr")(22, "td");
    i0.ɵɵtext(23, "Frecuencia de Informes:");
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(24, "td");
    i0.ɵɵtext(25);
    i0.ɵɵelementEnd()();
    i0.ɵɵelementStart(26, "tr")(27, "td");
    i0.ɵɵtext(28, "Informe final:");
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(29, "td");
    i0.ɵɵtext(30);
    i0.ɵɵelementEnd()()()();
    i0.ɵɵelementStart(31, "div", 41)(32, "button", 52);
    i0.ɵɵlistener("click", function VistaConfigsPracticaComponent_div_5_div_7_Template_button_click_32_listener() {
      i0.ɵɵrestoreView(_r2);
      const ctx_r2 = i0.ɵɵnextContext(2);
      return i0.ɵɵresetView(ctx_r2.seccion_edit = "general");
    })("click", function VistaConfigsPracticaComponent_div_5_div_7_Template_button_click_32_listener() {
      const i_r4 = i0.ɵɵrestoreView(_r2).index;
      const ctx_r2 = i0.ɵɵnextContext(2);
      return i0.ɵɵresetView(ctx_r2.practica_edit_id = i_r4);
    })("click", function VistaConfigsPracticaComponent_div_5_div_7_Template_button_click_32_listener() {
      const i_r4 = i0.ɵɵrestoreView(_r2).index;
      const ctx_r2 = i0.ɵɵnextContext(2);
      return i0.ɵɵresetView(ctx_r2.practica_edit = ctx_r2.configs[i_r4]);
    });
    i0.ɵɵtext(33, " Editar ");
    i0.ɵɵelementEnd()()()();
    i0.ɵɵelementStart(34, "div", 19)(35, "div", 14)(36, "div", 20)(37, "h4", 16);
    i0.ɵɵtext(38, " Modalidades ");
    i0.ɵɵelementEnd()();
    i0.ɵɵelementStart(39, "div", 18);
    i0.ɵɵtemplate(40, VistaConfigsPracticaComponent_div_5_div_7_p_40_Template, 2, 2, "p", 40);
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(41, "div", 41)(42, "span", 42);
    i0.ɵɵtext(43, "Editar");
    i0.ɵɵelementEnd()()()();
    i0.ɵɵtemplate(44, VistaConfigsPracticaComponent_div_5_div_7_div_44_Template, 11, 4, "div", 43)(45, VistaConfigsPracticaComponent_div_5_div_7_div_45_Template, 7, 1, "div", 53);
    i0.ɵɵelementStart(46, "div", 19)(47, "div", 14)(48, "div", 20)(49, "h4", 16);
    i0.ɵɵtext(50, " Preguntas para el supervisor ");
    i0.ɵɵelementEnd()();
    i0.ɵɵelementStart(51, "div", 18);
    i0.ɵɵtemplate(52, VistaConfigsPracticaComponent_div_5_div_7_p_52_Template, 2, 3, "p", 40);
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(53, "div", 41)(54, "span", 42);
    i0.ɵɵtext(55, "Editar");
    i0.ɵɵelementEnd()()()();
    i0.ɵɵelementStart(56, "div", 19)(57, "div", 14)(58, "div", 20)(59, "h4", 16);
    i0.ɵɵtext(60, " Preguntas para el alumno al terminar ");
    i0.ɵɵelementEnd()();
    i0.ɵɵelementStart(61, "div", 18);
    i0.ɵɵtemplate(62, VistaConfigsPracticaComponent_div_5_div_7_p_62_Template, 2, 3, "p", 40);
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(63, "div", 41)(64, "span", 42);
    i0.ɵɵtext(65, "Editar");
    i0.ɵɵelementEnd()()()()();
    i0.ɵɵelementStart(66, "div", 8)(67, "div", 44)(68, "button", 54);
    i0.ɵɵtext(69, " Edici\u00F3n avanzada ");
    i0.ɵɵelementEnd()()()()()()()();
  }
  if (rf & 2) {
    const config_r11 = ctx.$implicit;
    const i_r4 = ctx.index;
    const ctx_r2 = i0.ɵɵnextContext(2);
    i0.ɵɵadvance(3);
    i0.ɵɵproperty("href", "#card" + i_r4, i0.ɵɵsanitizeUrl);
    i0.ɵɵattribute("aria-controls", "card" + i_r4);
    i0.ɵɵadvance(2);
    i0.ɵɵtextInterpolate(config_r11.nombre);
    i0.ɵɵadvance();
    i0.ɵɵpropertyInterpolate("id", "card" + i_r4);
    i0.ɵɵadvance(14);
    i0.ɵɵtextInterpolate(config_r11.nombre);
    i0.ɵɵadvance(5);
    i0.ɵɵtextInterpolate(config_r11.frecuencia_informes);
    i0.ɵɵadvance(5);
    i0.ɵɵtextInterpolate(config_r11.informe_final);
    i0.ɵɵadvance(10);
    i0.ɵɵproperty("ngForOf", config_r11.modalidads);
    i0.ɵɵadvance(2);
    i0.ɵɵpropertyInterpolate("matTooltip", ctx_r2.string_bloqueo);
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngForOf", config_r11.config_informes);
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngIf", config_r11.solicitud_documentos.length > 0);
    i0.ɵɵadvance(7);
    i0.ɵɵproperty("ngForOf", config_r11.pregunta_supervisors);
    i0.ɵɵadvance(2);
    i0.ɵɵpropertyInterpolate("matTooltip", ctx_r2.string_bloqueo);
    i0.ɵɵadvance(8);
    i0.ɵɵproperty("ngForOf", config_r11.pregunta_encuesta_finals);
    i0.ɵɵadvance(2);
    i0.ɵɵpropertyInterpolate("matTooltip", ctx_r2.string_bloqueo);
    i0.ɵɵadvance(4);
    i0.ɵɵproperty("routerLink", i0.ɵɵpureFunction1(16, _c0, config_r11.nombre));
  }
}
function VistaConfigsPracticaComponent_div_5_div_56_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div")(1, "p", 24);
    i0.ɵɵtext(2, " Elija el tipo de informe final que desea utilizar:");
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(3, "div", 25);
    i0.ɵɵelement(4, "input", 58);
    i0.ɵɵelementStart(5, "label", 59);
    i0.ɵɵtext(6, "Encuesta");
    i0.ɵɵelementEnd()();
    i0.ɵɵelementStart(7, "div", 25);
    i0.ɵɵelement(8, "input", 60);
    i0.ɵɵelementStart(9, "label", 61);
    i0.ɵɵtext(10, "Archivo");
    i0.ɵɵelementEnd()()();
  }
}
function VistaConfigsPracticaComponent_div_5_div_57_div_18_ng_template_5_div_0_Template(rf, ctx) {
  if (rf & 1) {
    const _r17 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "div")(1, "button", 56)(2, "a", 57);
    i0.ɵɵtext(3, "Descargar plantilla actual");
    i0.ɵɵelementEnd()();
    i0.ɵɵelement(4, "br")(5, "br");
    i0.ɵɵtext(6, " Subir nueva plantilla de ejemplo");
    i0.ɵɵelement(7, "br");
    i0.ɵɵtext(8, "(Reemplazar\u00E1 la plantilla actual)");
    i0.ɵɵelement(9, "br");
    i0.ɵɵelementStart(10, "app-subir-plantilla-informe-final", 70);
    i0.ɵɵlistener("key_event", function VistaConfigsPracticaComponent_div_5_div_57_div_18_ng_template_5_div_0_Template_app_subir_plantilla_informe_final_key_event_10_listener($event) {
      i0.ɵɵrestoreView(_r17);
      const ctx_r2 = i0.ɵɵnextContext(5);
      return i0.ɵɵresetView(ctx_r2.recibirPlantillaInforme($event));
    })("file_plantilla_event", function VistaConfigsPracticaComponent_div_5_div_57_div_18_ng_template_5_div_0_Template_app_subir_plantilla_informe_final_file_plantilla_event_10_listener($event) {
      i0.ɵɵrestoreView(_r17);
      const ctx_r2 = i0.ɵɵnextContext(5);
      return i0.ɵɵresetView(ctx_r2.recibirPlantillaInforme($event));
    });
    i0.ɵɵelementEnd()();
  }
  if (rf & 2) {
    const ctx_r2 = i0.ɵɵnextContext(5);
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("href", ctx_r2.link_descarga_plantilla, i0.ɵɵsanitizeUrl);
  }
}
function VistaConfigsPracticaComponent_div_5_div_57_div_18_ng_template_5_ng_template_1_Template(rf, ctx) {
  if (rf & 1) {
    const _r18 = i0.ɵɵgetCurrentView();
    i0.ɵɵtext(0, " Subir Plantilla de ejemplo");
    i0.ɵɵelement(1, "br");
    i0.ɵɵelementStart(2, "app-subir-plantilla-informe-final", 70);
    i0.ɵɵlistener("key_event", function VistaConfigsPracticaComponent_div_5_div_57_div_18_ng_template_5_ng_template_1_Template_app_subir_plantilla_informe_final_key_event_2_listener($event) {
      i0.ɵɵrestoreView(_r18);
      const ctx_r2 = i0.ɵɵnextContext(5);
      return i0.ɵɵresetView(ctx_r2.recibirPlantillaInforme($event));
    })("file_plantilla_event", function VistaConfigsPracticaComponent_div_5_div_57_div_18_ng_template_5_ng_template_1_Template_app_subir_plantilla_informe_final_file_plantilla_event_2_listener($event) {
      i0.ɵɵrestoreView(_r18);
      const ctx_r2 = i0.ɵɵnextContext(5);
      return i0.ɵɵresetView(ctx_r2.recibirPlantillaInforme($event));
    });
    i0.ɵɵelementEnd();
  }
}
function VistaConfigsPracticaComponent_div_5_div_57_div_18_ng_template_5_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵtemplate(0, VistaConfigsPracticaComponent_div_5_div_57_div_18_ng_template_5_div_0_Template, 11, 1, "div", 71)(1, VistaConfigsPracticaComponent_div_5_div_57_div_18_ng_template_5_ng_template_1_Template, 3, 0, "ng-template", null, 1, i0.ɵɵtemplateRefExtractor);
  }
  if (rf & 2) {
    const editandoAntiguaSinPlantilla_r19 = i0.ɵɵreference(2);
    const ctx_r2 = i0.ɵɵnextContext(4);
    i0.ɵɵproperty("ngIf", ctx_r2.link_descarga_plantilla != "")("ngIfElse", editandoAntiguaSinPlantilla_r19);
  }
}
function VistaConfigsPracticaComponent_div_5_div_57_div_18_Template(rf, ctx) {
  if (rf & 1) {
    const _r16 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "div")(1, "div");
    i0.ɵɵtext(2, " Subir Plantilla de ejemplo");
    i0.ɵɵelement(3, "br");
    i0.ɵɵelementStart(4, "app-subir-plantilla-informe-final", 70);
    i0.ɵɵlistener("key_event", function VistaConfigsPracticaComponent_div_5_div_57_div_18_Template_app_subir_plantilla_informe_final_key_event_4_listener($event) {
      i0.ɵɵrestoreView(_r16);
      const ctx_r2 = i0.ɵɵnextContext(3);
      return i0.ɵɵresetView(ctx_r2.recibirPlantillaInforme($event));
    })("file_plantilla_event", function VistaConfigsPracticaComponent_div_5_div_57_div_18_Template_app_subir_plantilla_informe_final_file_plantilla_event_4_listener($event) {
      i0.ɵɵrestoreView(_r16);
      const ctx_r2 = i0.ɵɵnextContext(3);
      return i0.ɵɵresetView(ctx_r2.recibirPlantillaInforme($event));
    });
    i0.ɵɵelementEnd()();
    i0.ɵɵtemplate(5, VistaConfigsPracticaComponent_div_5_div_57_div_18_ng_template_5_Template, 3, 2, "ng-template", null, 0, i0.ɵɵtemplateRefExtractor);
    i0.ɵɵelementEnd();
  }
}
function VistaConfigsPracticaComponent_div_5_div_57_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 24)(1, "div", 62);
    i0.ɵɵtext(2, "Formatos aceptados: ");
    i0.ɵɵelementEnd();
    i0.ɵɵelement(3, "input", 63);
    i0.ɵɵtext(4, " pdf ");
    i0.ɵɵelement(5, "input", 64);
    i0.ɵɵtext(6, " word ");
    i0.ɵɵelement(7, "br");
    i0.ɵɵelementStart(8, "div", 65);
    i0.ɵɵtext(9, "\u00BFDesea incluir una plantilla de ejemplo?");
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(10, "div", 25);
    i0.ɵɵelement(11, "input", 66);
    i0.ɵɵelementStart(12, "label", 67);
    i0.ɵɵtext(13, "Si");
    i0.ɵɵelementEnd();
    i0.ɵɵelement(14, "input", 68);
    i0.ɵɵelementStart(15, "label", 69);
    i0.ɵɵtext(16, "No");
    i0.ɵɵelementEnd()();
    i0.ɵɵelement(17, "br");
    i0.ɵɵtemplate(18, VistaConfigsPracticaComponent_div_5_div_57_div_18_Template, 7, 0, "div", 38);
    i0.ɵɵelementEnd();
  }
  if (rf & 2) {
    const ctx_r2 = i0.ɵɵnextContext(2);
    i0.ɵɵadvance(18);
    i0.ɵɵproperty("ngIf", ctx_r2.crearForm.value.plantillaInformeFinal == "si");
  }
}
function VistaConfigsPracticaComponent_div_5_p_64_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "p");
    i0.ɵɵtext(1);
    i0.ɵɵelementEnd();
  }
  if (rf & 2) {
    const modalidad_r20 = ctx.$implicit;
    i0.ɵɵadvance();
    i0.ɵɵtextInterpolate2(" ", modalidad_r20.cantidad_tiempo, " ", modalidad_r20.tipo_modalidad, " ");
  }
}
function VistaConfigsPracticaComponent_div_5_div_68_div_1_p_5_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "p");
    i0.ɵɵtext(1);
    i0.ɵɵelementEnd();
  }
  if (rf & 2) {
    const pregunta_r21 = ctx.$implicit;
    const k_r22 = ctx.index;
    i0.ɵɵadvance();
    i0.ɵɵtextInterpolate2(" ", k_r22 + 1, ". ", pregunta_r21.enunciado, " ");
  }
}
function VistaConfigsPracticaComponent_div_5_div_68_div_1_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 14)(1, "div", 20)(2, "h4", 16);
    i0.ɵɵtext(3);
    i0.ɵɵelementEnd()();
    i0.ɵɵelementStart(4, "div", 18);
    i0.ɵɵtemplate(5, VistaConfigsPracticaComponent_div_5_div_68_div_1_p_5_Template, 2, 2, "p", 40);
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(6, "div", 41)(7, "span", 42);
    i0.ɵɵtext(8, "Editar");
    i0.ɵɵelementEnd()()();
  }
  if (rf & 2) {
    const config_informe_r23 = i0.ɵɵnextContext().$implicit;
    const ctx_r2 = i0.ɵɵnextContext(2);
    i0.ɵɵadvance(3);
    i0.ɵɵtextInterpolate1(" ", config_informe_r23.tipo_informe, " ");
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngForOf", config_informe_r23.pregunta_informes);
    i0.ɵɵadvance(2);
    i0.ɵɵpropertyInterpolate("matTooltip", ctx_r2.string_bloqueo);
  }
}
function VistaConfigsPracticaComponent_div_5_div_68_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 19);
    i0.ɵɵtemplate(1, VistaConfigsPracticaComponent_div_5_div_68_div_1_Template, 9, 3, "div", 72);
    i0.ɵɵelementEnd();
  }
  if (rf & 2) {
    const config_informe_r23 = ctx.$implicit;
    const ctx_r2 = i0.ɵɵnextContext(2);
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngIf", config_informe_r23.tipo_informe == "Informe avance" && ctx_r2.crearForm.value.frecuencia_informes != "sinAvance" || config_informe_r23.tipo_informe == "Informe final" && ctx_r2.crearForm.value.informe_final == "si");
  }
}
function VistaConfigsPracticaComponent_div_5_p_75_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "p");
    i0.ɵɵtext(1);
    i0.ɵɵelementEnd();
  }
  if (rf & 2) {
    const pregunta_r24 = ctx.$implicit;
    const j_r25 = ctx.index;
    i0.ɵɵadvance();
    i0.ɵɵtextInterpolate3(" ", j_r25 + 1, ". ", pregunta_r24.enunciado, " [", pregunta_r24.tipo_respuesta, "] ");
  }
}
function VistaConfigsPracticaComponent_div_5_p_87_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "p");
    i0.ɵɵtext(1);
    i0.ɵɵelementEnd();
  }
  if (rf & 2) {
    const pregunta_r26 = ctx.$implicit;
    const j_r27 = ctx.index;
    i0.ɵɵadvance();
    i0.ɵɵtextInterpolate3(" ", j_r27 + 1, ". ", pregunta_r26.enunciado, " [", pregunta_r26.tipo_respuesta, "] ");
  }
}
function VistaConfigsPracticaComponent_div_5_Template(rf, ctx) {
  if (rf & 1) {
    const _r1 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "div", 7)(1, "div", 8)(2, "div", 9)(3, "div", 10);
    i0.ɵɵtext(4, "Configurar pr\u00E1cticas");
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(5, "p", 11);
    i0.ɵɵtext(6, " Lista de pr\u00E1cticas que pueden elegir los alumnos. ");
    i0.ɵɵelementEnd()()();
    i0.ɵɵtemplate(7, VistaConfigsPracticaComponent_div_5_div_7_Template, 70, 18, "div", 12);
    i0.ɵɵelementStart(8, "div", 8)(9, "div", 13)(10, "div", 14)(11, "a", 15)(12, "h2", 16);
    i0.ɵɵtext(13, "Crear pr\u00E1ctica");
    i0.ɵɵelementEnd()();
    i0.ɵɵelementStart(14, "div", 17)(15, "div", 18)(16, "div", 8)(17, "div", 19)(18, "div", 14)(19, "div", 20)(20, "h4", 16);
    i0.ɵɵtext(21, " General ");
    i0.ɵɵelementEnd()();
    i0.ɵɵelementStart(22, "div", 18)(23, "form", 21)(24, "label", 22);
    i0.ɵɵtext(25, "Nombre:");
    i0.ɵɵelementEnd();
    i0.ɵɵelement(26, "input", 23);
    i0.ɵɵelementStart(27, "p", 24);
    i0.ɵɵtext(28, "Frecuencia informe: ");
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(29, "div", 25);
    i0.ɵɵelement(30, "input", 26);
    i0.ɵɵelementStart(31, "label", 27);
    i0.ɵɵtext(32, "Diario");
    i0.ɵɵelementEnd()();
    i0.ɵɵelementStart(33, "div", 25);
    i0.ɵɵelement(34, "input", 28);
    i0.ɵɵelementStart(35, "label", 29);
    i0.ɵɵtext(36, "Semanal");
    i0.ɵɵelementEnd()();
    i0.ɵɵelementStart(37, "div", 25);
    i0.ɵɵelement(38, "input", 30);
    i0.ɵɵelementStart(39, "label", 31);
    i0.ɵɵtext(40, "Mensual");
    i0.ɵɵelementEnd()();
    i0.ɵɵelementStart(41, "div", 25);
    i0.ɵɵelement(42, "input", 32);
    i0.ɵɵelementStart(43, "label", 33);
    i0.ɵɵtext(44, "Ninguno");
    i0.ɵɵelementEnd()();
    i0.ɵɵelement(45, "br");
    i0.ɵɵelementStart(46, "p", 24);
    i0.ɵɵtext(47, "Informe final: ");
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(48, "div", 25);
    i0.ɵɵelement(49, "input", 34);
    i0.ɵɵelementStart(50, "label", 35);
    i0.ɵɵtext(51, "S\u00ED");
    i0.ɵɵelementEnd()();
    i0.ɵɵelementStart(52, "div", 25);
    i0.ɵɵelement(53, "input", 36);
    i0.ɵɵelementStart(54, "label", 37);
    i0.ɵɵtext(55, "No");
    i0.ɵɵelementEnd()();
    i0.ɵɵtemplate(56, VistaConfigsPracticaComponent_div_5_div_56_Template, 11, 0, "div", 38)(57, VistaConfigsPracticaComponent_div_5_div_57_Template, 19, 1, "div", 39);
    i0.ɵɵelementEnd()()()();
    i0.ɵɵelementStart(58, "div", 19)(59, "div", 14)(60, "div", 20)(61, "h4", 16);
    i0.ɵɵtext(62, " Modalidades ");
    i0.ɵɵelementEnd()();
    i0.ɵɵelementStart(63, "div", 18);
    i0.ɵɵtemplate(64, VistaConfigsPracticaComponent_div_5_p_64_Template, 2, 2, "p", 40);
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(65, "div", 41)(66, "span", 42);
    i0.ɵɵtext(67, "Editar");
    i0.ɵɵelementEnd()()()();
    i0.ɵɵtemplate(68, VistaConfigsPracticaComponent_div_5_div_68_Template, 2, 1, "div", 43);
    i0.ɵɵelementStart(69, "div", 19)(70, "div", 14)(71, "div", 20)(72, "h4", 16);
    i0.ɵɵtext(73, " Preguntas para el supervisor ");
    i0.ɵɵelementEnd()();
    i0.ɵɵelementStart(74, "div", 18);
    i0.ɵɵtemplate(75, VistaConfigsPracticaComponent_div_5_p_75_Template, 2, 3, "p", 40);
    i0.ɵɵelementStart(76, "p");
    i0.ɵɵtext(77, "Se pedir\u00E1 tambi\u00E9n evaluar las competencias configuradas en la secci\u00F3n de competencias");
    i0.ɵɵelementEnd()();
    i0.ɵɵelementStart(78, "div", 41)(79, "span", 42);
    i0.ɵɵtext(80, "Editar");
    i0.ɵɵelementEnd()()()();
    i0.ɵɵelementStart(81, "div", 19)(82, "div", 14)(83, "div", 20)(84, "h4", 16);
    i0.ɵɵtext(85, " Preguntas para el alumno al terminar ");
    i0.ɵɵelementEnd()();
    i0.ɵɵelementStart(86, "div", 18);
    i0.ɵɵtemplate(87, VistaConfigsPracticaComponent_div_5_p_87_Template, 2, 3, "p", 40);
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(88, "div", 41)(89, "span", 42);
    i0.ɵɵtext(90, "Editar");
    i0.ɵɵelementEnd()()()()();
    i0.ɵɵelementStart(91, "div", 8)(92, "div", 44)(93, "button", 45);
    i0.ɵɵlistener("click", function VistaConfigsPracticaComponent_div_5_Template_button_click_93_listener() {
      i0.ɵɵrestoreView(_r1);
      const ctx_r2 = i0.ɵɵnextContext();
      return i0.ɵɵresetView(ctx_r2.crearSimple());
    });
    i0.ɵɵtext(94, " Crear ");
    i0.ɵɵelementEnd()();
    i0.ɵɵelement(95, "div", 46);
    i0.ɵɵelementStart(96, "div", 47)(97, "button", 48);
    i0.ɵɵtext(98, " Configurar de cero ");
    i0.ɵɵelementEnd()()()()()()()()();
  }
  if (rf & 2) {
    const ctx_r2 = i0.ɵɵnextContext();
    i0.ɵɵadvance(7);
    i0.ɵɵproperty("ngForOf", ctx_r2.configs);
    i0.ɵɵadvance(16);
    i0.ɵɵproperty("formGroup", ctx_r2.crearForm);
    i0.ɵɵadvance(33);
    i0.ɵɵproperty("ngIf", ctx_r2.crearForm.value.informe_final == "si");
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngIf", ctx_r2.crearForm.value.tipoInformeFinal == "archivo" && ctx_r2.crearForm.value.informe_final == "si");
    i0.ɵɵadvance(7);
    i0.ɵɵproperty("ngForOf", ctx_r2.practica_default.modalidads);
    i0.ɵɵadvance(2);
    i0.ɵɵpropertyInterpolate("matTooltip", ctx_r2.string_bloqueo);
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngForOf", ctx_r2.practica_default.config_informes);
    i0.ɵɵadvance(7);
    i0.ɵɵproperty("ngForOf", ctx_r2.practica_default.pregunta_supervisors);
    i0.ɵɵadvance(4);
    i0.ɵɵpropertyInterpolate("matTooltip", ctx_r2.string_bloqueo);
    i0.ɵɵadvance(8);
    i0.ɵɵproperty("ngForOf", ctx_r2.practica_default.pregunta_encuesta_finals);
    i0.ɵɵadvance(2);
    i0.ɵɵpropertyInterpolate("matTooltip", ctx_r2.string_bloqueo);
  }
}
class VistaConfigsPracticaComponent {
  constructor(service, serviceEdicion, snackBar, fb) {
    //console.log("user: ", this.user);
    this.service = service;
    this.serviceEdicion = serviceEdicion;
    this.snackBar = snackBar;
    this.fb = fb;
    this.disabled = true; //const
    this.string_bloqueo = "Se requiere usar la configuración avanzada";
    this.key_plantilla = "";
    this.link_descarga_plantilla = "";
    this.plantillaInformeFinal = "no";
    this.tipoInformeFinal = "encuesta";
    this.tiene_alumnos = false;
    this.user = JSON.parse(localStorage.getItem('auth-user') || "{}").userdata;
    this.configs = {};
    this.flag = false;
    this.practica_default = {
      "nombre": "Práctica 1",
      "frecuencia_informes": "semanal",
      "informe_final": "si",
      "modalidads": [{
        "tipo_modalidad": "meses",
        "cantidad_tiempo": 1
      }, {
        "tipo_modalidad": "meses",
        "cantidad_tiempo": 2
      }, {
        "tipo_modalidad": "horas",
        "cantidad_tiempo": 180
      }, {
        "tipo_modalidad": "horas",
        "cantidad_tiempo": 360
      }],
      "config_informes": [{
        "tipo_informe": "informe avance",
        "pregunta_informes": [{
          "enunciado": "Describa el trabajo realizado",
          "tipo_respuesta": "abierta",
          "opciones": ""
        }]
      }, {
        "tipo_informe": "informe final",
        "archivo_o_encuesta": "encuesta",
        "pregunta_informes": [{
          "enunciado": "Que conocimientos adquirió trabajando en la empresa",
          "tipo_respuesta": "abierta",
          "opciones": ""
        }, {
          "enunciado": "Describa el trabajo realizado durante la práctica",
          "tipo_respuesta": "abierta",
          "opciones": ""
        }]
      }],
      "solicitud_documentos": [{
        "tipo_archivo": "pdf",
        "nombre_solicitud": "un pdf",
        "descripcion": "mas detalles"
      }, {
        "tipo_archivo": "DOCX",
        "nombre_solicitud": "un word",
        "descripcion": "mas detalles"
      }],
      "pregunta_supervisors": [{
        "enunciado": "¿Consideraría contratar a este practicante?",
        "tipo_respuesta": "alternativas",
        "opciones": "Sí;;No;;No sé"
      }, {
        "enunciado": "Describa el trabajo realizado por el practicante",
        "tipo_respuesta": "abierta",
        "opciones": ""
      }],
      "pregunta_encuesta_finals": [{
        "enunciado": "Le gustaría continuar trabajando en la empresa donde realizó su práctica",
        "tipo_respuesta": "alternativas",
        "opciones": "Sí;;No;;No sé"
      }]
    };
    this.opcion_word = false;
    this.opcion_pdf = false;
    this.crearForm = this.fb.group({
      nombre: [this.practica_default.nombre, [forms_1.Validators.required, forms_1.Validators.minLength(3)]],
      //meses: [meses, [Validators.required]],
      //horas: [horas, [Validators.required]],
      frecuencia_informes: [this.practica_default.frecuencia_informes, [forms_1.Validators.required]],
      informe_final: [this.practica_default.informe_final, [forms_1.Validators.required]],
      plantillaInformeFinal: [this.plantillaInformeFinal],
      opcion_word: [this.opcion_word],
      opcion_pdf: [this.opcion_pdf],
      tipoInformeFinal: [this.tipoInformeFinal]
    });
    let respuesta = {};
    this.service.getConfigsCarrera(this.user.encargado.id_carrera).subscribe({
      next: data => {
        respuesta = {
          ...respuesta,
          ...data
        };
      },
      error: error => {
        this.snackBar.open("Error al buscar configuraciones", "Cerrar", {
          duration: 3000,
          panelClass: ['red-snackbar']
        });
        console.log("Error al buscar config practica", error);
      },
      complete: () => {
        //console.log("request grande:", respuesta.body);
        this.configs = respuesta.body;
        for (let i = 0; i < this.configs.length; i++) {
          if (this.configs[i].frecuencia_informes == "sinAvance") {
            this.configs[i].frecuencia_informes = "Sin informe de avance";
          }
        }
        this.flag = true;
        console.log("configs: ", this.configs);
      }
    });
  }
  ngOnInit() {
    //console.log("practica default: ", this.practica_default);
    //console.log(this.crearForm);
    this.crearForm.valueChanges.subscribe(change => {
      //console.log(change);
    });
  }
  editarSimple(input) {
    //console.log("event: ", input);
    console.log("practica", this.practica_edit_id);
    let id_practica = this.configs[this.practica_edit_id].id;
    let respuesta1 = {};
    this.serviceEdicion.getConfigsConPractica(id_practica).subscribe({
      next: data => {
        respuesta1 = {
          ...respuesta1,
          ...data
        };
      },
      error: error => {
        this.snackBar.open("Error al buscar estudiantes", "Cerrar", {
          duration: 3000,
          panelClass: ['red-snackbar']
        });
        console.log("Error al buscar estudiantes", error);
      },
      complete: () => {
        //console.log("request:", respuesta1.body);
        this.tiene_alumnos = respuesta1.body.practicas.length > 0 ? true : false;
        if (!this.tiene_alumnos) {
          let respuesta = {};
          this.serviceEdicion.actualizarConfigPractica(id_practica, input[0], input[1], input[2]).subscribe({
            next: data => {
              respuesta = {
                ...respuesta,
                ...data
              };
            },
            error: error => {
              this.snackBar.open("Error al actualizar configuración de práctica", "Cerrar", {
                duration: 3500,
                panelClass: ['red-snackbar']
              });
              console.log("Error al actualizar config practica", error);
            },
            complete: () => {
              this.snackBar.open("Configuración de práctica actualizada exitosamente", "Cerrar", {
                duration: 3500,
                panelClass: ['green-snackbar']
              });
              setTimeout(() => {
                window.location.reload();
              }, 3000);
            }
          });
        } else {
          let respuesta = {};
          //desactivar practica actual
          this.service.actualizarConfigPractica(id_practica, false).subscribe({
            next: data => {
              respuesta = {
                ...respuesta,
                ...data
              };
            },
            error: error => {
              console.log("Error al desactivar config practica", error);
            },
            complete: () => {
              console.log("Configuración de práctica desactivada exitosamente");
            }
          });
          //se crea una nueva
          this.service.crearConfigPractica(input[0], input[1], input[2], this.user.encargado.id_carrera).subscribe({
            next: data => {
              respuesta = {
                ...respuesta,
                ...data
              };
            },
            error: error => {
              this.snackBar.open("Error al actualizar configuración de práctica", "Cerrar", {
                duration: 3500,
                panelClass: ['red-snackbar']
              });
              console.log("Error al crear config practica", error);
            },
            complete: () => {
              this.snackBar.open("Configuración de práctica actualizada exitosamente", "Cerrar", {
                duration: 3500,
                panelClass: ['green-snackbar']
              });
              //console.log("crear respuesta:", respuesta);
              let indice = this.practica_edit_id;
              let datos_modalidad = this.configs[indice].modalidads;
              for (let i = 0; i < datos_modalidad.length; i++) {
                this.tablaModalidad(id_practica, datos_modalidad[i].tipo_modalidad, datos_modalidad[i].cantidad_tiempo);
              }
              let datos_encuesta = this.configs[indice].pregunta_encuesta_finals;
              for (let i = 0; i < datos_encuesta.length; i++) {
                this.crearPreguntaEncuestaFinal(id_practica, datos_encuesta[i].enunciado, datos_encuesta[i].tipo_respuesta, datos_encuesta[i].opciones);
              }
              let datos_sup = this.configs[indice].pregunta_supervisors;
              for (let i = 0; i < datos_sup.length; i++) {
                this.crearPreguntaSupervisor(id_practica, datos_sup[i].enunciado, datos_sup[i].tipo_respuesta, datos_sup[i].opciones, false);
              }
              let datos_informe = this.configs[indice].config_informes;
              for (let i = 0; i < datos_informe.length; i++) {
                this.crearConfigInforme(id_practica, datos_informe[i].tipo_informe, datos_informe[i].pregunta_informes);
              }
              setTimeout(() => {
                window.location.reload();
              }, 3000);
            }
          });
        }
      }
    });
  }
  crearSimple() {
    let valores = this.crearForm.value;
    let respuesta = {};
    this.service.crearConfigPractica(valores.nombre, valores.frecuencia_informes, valores.informe_final, this.user.encargado.id_carrera, false).subscribe({
      next: data => {
        respuesta = {
          ...respuesta,
          ...data
        };
      },
      error: error => {
        this.snackBar.open("Error al crear configuración de práctica", "Cerrar", {
          duration: 3500,
          panelClass: ['red-snackbar']
        });
        console.log("Error al crear config practica", error);
      },
      complete: () => {
        this.snackBar.open("Configuración de práctica creada exitosamente", "Cerrar", {
          duration: 3500,
          panelClass: ['green-snackbar']
        });
        //console.log("crear respuesta:", respuesta);
        for (let i = 0; i < this.practica_default.modalidads.length; i++) {
          this.tablaModalidad(respuesta.body.id, this.practica_default.modalidads[i].tipo_modalidad, this.practica_default.modalidads[i].cantidad_tiempo);
        }
        let datos_encuesta = this.practica_default.pregunta_encuesta_finals;
        for (let i = 0; i < datos_encuesta.length; i++) {
          this.crearPreguntaEncuestaFinal(respuesta.body.id, datos_encuesta[i].enunciado, datos_encuesta[i].tipo_respuesta, datos_encuesta[i].opciones);
        }
        let datos_sup = this.practica_default.pregunta_supervisors;
        for (let i = 0; i < datos_sup.length; i++) {
          this.crearPreguntaSupervisor(respuesta.body.id, datos_sup[i].enunciado, datos_sup[i].tipo_respuesta, datos_sup[i].opciones, false);
        }
        let datos_informe = this.practica_default.config_informes;
        for (let i = 0; i < datos_informe.length; i++) {
          if (datos_informe[i].tipo_informe == "informe final") {
            this.crearConfigInforme(respuesta.body.id, datos_informe[i].tipo_informe, datos_informe[i].pregunta_informes, this.crearForm.value.tipoInformeFinal);
          } else {
            this.crearConfigInforme(respuesta.body.id, datos_informe[i].tipo_informe, datos_informe[i].pregunta_informes);
          }
        }
        setTimeout(() => {
          window.location.reload();
        }, 3000);
      }
    });
  }
  tablaModalidad(id_config_practica, tipo_modalidad, cant) {
    let respuesta = {};
    this.service.crearModalidad(id_config_practica, tipo_modalidad, cant).subscribe({
      next: data => {
        respuesta = {
          ...respuesta,
          ...data
        };
      },
      error: error => {
        this.snackBar.open("Error al guardar modalidad", "Cerrar", {
          duration: 3500,
          panelClass: ['red-snackbar']
        });
        console.log("Error al guardar modalidad", error);
      },
      complete: () => {
        console.log("Modalidad guardada exitosamente");
      }
    });
  }
  crearConfigInforme(id_config_practica, tipoInforme, preguntas, archivo_o_encuesta = "") {
    let respuesta = {};
    if (tipoInforme.toLocaleLowerCase() == "informe final") {
      if (archivo_o_encuesta.toLocaleLowerCase() == "archivo") {
        let formatoInformeFinal = "";
        if (this.crearForm.value.opcion_pdf == true) {
          formatoInformeFinal += "pdf,";
        }
        if (this.crearForm.value.opcion_word == true) {
          formatoInformeFinal += "doc,docx,";
        }
        if (formatoInformeFinal.slice(-1) == ",") {
          formatoInformeFinal = formatoInformeFinal.slice(0, -1);
        }
        this.service.crearConfigInforme(id_config_practica, tipoInforme, archivo_o_encuesta, formatoInformeFinal, this.key_plantilla, this.archivo_plantilla).subscribe({
          next: data => {
            respuesta = {
              ...respuesta,
              ...data
            };
          },
          error: error => {
            this.snackBar.open("Error al guardar configuracion de informe", "Cerrar", {
              duration: 3500,
              panelClass: ['red-snackbar']
            });
            console.log("Error al guardar configuracion de informe", error);
          },
          complete: () => {}
        });
      } else if (archivo_o_encuesta == "encuesta") {
        this.service.crearConfigInforme(id_config_practica, tipoInforme, this.practica_default.config_informes[1].archivo_o_encuesta).subscribe({
          next: data => {
            respuesta = {
              ...respuesta,
              ...data
            };
          },
          error: error => {
            this.snackBar.open("Error al guardar configuracion de informe", "Cerrar", {
              duration: 3500,
              panelClass: ['red-snackbar']
            });
            console.log("Error al guardar configuracion de informe", error);
          },
          complete: () => {
            //console.log("BUSACR EL ID: ", respuesta);
            for (let i = 0; i < preguntas.length; i++) {
              this.crearPreguntaInforme(respuesta.body.id, preguntas[i].enunciado, preguntas[i].tipo_respuesta, preguntas[i].opciones);
            }
          }
        });
      }
    } else {
      this.service.crearConfigInforme(id_config_practica, tipoInforme).subscribe({
        next: data => {
          respuesta = {
            ...respuesta,
            ...data
          };
        },
        error: error => {
          this.snackBar.open("Error al guardar configuracion de informe", "Cerrar", {
            duration: 3500,
            panelClass: ['red-snackbar']
          });
          console.log("Error al guardar configuracion de informe", error);
        },
        complete: () => {
          //console.log("BUSACR EL ID: ", respuesta);
          for (let i = 0; i < preguntas.length; i++) {
            this.crearPreguntaInforme(respuesta.body.id, preguntas[i].enunciado, preguntas[i].tipo_respuesta, preguntas[i].opciones);
          }
        }
      });
    }
  }
  crearPreguntaInforme(id_config_informe, pregunta, tipo_pregunta, opciones) {
    let respuesta = {};
    //console.log("pregunta: ", pregunta, "tipo_pregunta: ", tipo_pregunta, "opciones: ", opciones);
    this.service.crearPreguntaInforme(id_config_informe, pregunta, tipo_pregunta, opciones).subscribe({
      next: data => {
        respuesta = {
          ...respuesta,
          ...data
        };
      },
      error: error => {
        this.snackBar.open("Error al guardar pregunta de informe", "Cerrar", {
          duration: 3500,
          panelClass: ['red-snackbar']
        });
        console.log("Error al guardar pregunta de informe", error);
      },
      complete: () => {
        console.log("Pregunta de informe guardada exitosamente");
      }
    });
  }
  crearPreguntaEncuestaFinal(id_config_practica, pregunta, tipo_pregunta, opciones) {
    let respuesta = {};
    this.service.crearPreguntaEncuestaFinal(id_config_practica, pregunta, tipo_pregunta, opciones).subscribe({
      next: data => {
        respuesta = {
          ...respuesta,
          ...data
        };
      },
      error: error => {
        this.snackBar.open("Error al guardar pregunta de encuesta", "Cerrar", {
          duration: 3500,
          panelClass: ['red-snackbar']
        });
        console.log("Error al guardar pregunta de encuesta", error);
      },
      complete: () => {
        console.log("Pregunta de encuesta guardada exitosamente");
      }
    });
  }
  crearPreguntaSupervisor(id_config_practica, pregunta, tipo_pregunta, opciones, fija) {
    let respuesta = {};
    this.service.crearPreguntaSupervisor(id_config_practica, pregunta, tipo_pregunta, opciones, fija).subscribe({
      next: data => {
        respuesta = {
          ...respuesta,
          ...data
        };
      },
      error: error => {
        this.snackBar.open("Error al guardar pregunta de supervisor", "Cerrar", {
          duration: 3500,
          panelClass: ['red-snackbar']
        });
        console.log("Error al guardar pregunta de supervisor", error);
      },
      complete: () => {
        console.log("Pregunta de supervisor guardada exitosamente");
      }
    });
  }
  recibirPlantillaInforme(data) {
    if (typeof data == "string") {
      this.key_plantilla = data;
    } else if (typeof data == "object") {
      this.archivo_plantilla = data;
    }
    //console.log("key: ", this.key_plantilla, "archivo: ", this.archivo_plantilla);
  }
  static {
    this.ɵfac = function VistaConfigsPracticaComponent_Factory(__ngFactoryType__) {
      return new (__ngFactoryType__ || VistaConfigsPracticaComponent)(i0.ɵɵdirectiveInject(i1.ConfigService), i0.ɵɵdirectiveInject(i2.EdicionService), i0.ɵɵdirectiveInject(i3.MatSnackBar), i0.ɵɵdirectiveInject(i4.FormBuilder));
    };
  }
  static {
    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({
      type: VistaConfigsPracticaComponent,
      selectors: [["app-vista-configs-practica"]],
      decls: 8,
      vars: 3,
      consts: [["editandoExistente", ""], ["editandoAntiguaSinPlantilla", ""], ["id", "wrapper"], ["id", "content-wrapper", 1, "d-flex", "flex-column"], ["id", "content", 1, "main-content"], ["class", "container-fluid", 4, "ngIf"], [3, "completo", "seccion", "practica"], [1, "container-fluid"], [1, "row"], [1, "col-xl-10"], [1, "h3", "mb-2", "font-weight-bold", "text-gray-800"], [1, "mb-4"], ["class", "row", 4, "ngFor", "ngForOf"], [1, "col-12"], [1, "card", "shadow", "mb-4"], ["href", "#cardCrear", "data-toggle", "collapse", "role", "button", "aria-expanded", "true", "aria-controls", "cardCrear", 1, "d-block", "card-header", "py-3", "collapsed", 2, "background-color", "#a5a6af"], [1, "m-0", "font-weight-bold", "text-primary"], ["id", "cardCrear", 1, "collapse"], [1, "card-body"], [1, "card-body", "col-6"], [1, "card-header", "py-3"], [3, "formGroup"], ["for", "nombre"], ["type", "text", "formControlName", "nombre", 1, "form-control", "form-control-user"], [1, "mt-2"], [1, "form-check", "form-check-inline"], ["type", "radio", "id", "informeDiario", "value", "diario", "formControlName", "frecuencia_informes", 1, "form-check-input"], ["for", "informeDiario", 1, "form-check-label"], ["type", "radio", "id", "infomreSemanal", "value", "semanal", "formControlName", "frecuencia_informes", 1, "form-check-input"], ["for", "infomreSemanal", 1, "form-check-label"], ["type", "radio", "id", "informeMensual", "value", "mensual", "formControlName", "frecuencia_informes", 1, "form-check-input"], ["for", "informeMensual", 1, "form-check-label"], ["type", "radio", "id", "sinAvance", "value", "sinAvance", "formControlName", "frecuencia_informes", 1, "form-check-input"], ["for", "sinAvance", 1, "form-check-label"], ["type", "radio", "id", "informeFinalSI", "value", "si", "formControlName", "informe_final", 1, "form-check-input"], ["for", "informeFinalSI", 1, "form-check-label"], ["type", "radio", "id", "informeFinalNO", "value", "no", "formControlName", "informe_final", 1, "form-check-input"], ["for", "informeFinalNO", 1, "form-check-label"], [4, "ngIf"], ["class", "mt-2", 4, "ngIf"], [4, "ngFor", "ngForOf"], [1, "card-footer"], [1, "btn", "btn-primary", "disabled-button", 3, "matTooltip"], ["class", "card-body col-6", 4, "ngFor", "ngForOf"], [1, "col-md-3"], ["type", "button", 1, "btn", "btn-primary", "btn-lg", "btn-block", 3, "click"], [1, "col-md-5"], [1, "col-md-4"], ["type", "button", "routerLink", "/configurar/blanco", 1, "btn", "btn-primary", "btn-lg", "btn-block"], [1, "col-xl-12"], ["data-toggle", "collapse", "role", "button", "aria-expanded", "true", 1, "d-block", "card-header", "py-3", "collapsed", 3, "href"], [1, "collapse", 3, "id"], ["data-toggle", "modal", "data-target", "#editarModal", 1, "btn", "btn-primary", 3, "click"], ["class", "card-body col-6", 4, "ngIf"], ["type", "button", 1, "btn", "btn-primary", "btn-lg", "btn-block", 3, "routerLink"], ["type", "checkbox", "disabled", "", 3, "checked"], ["type", "button", 1, "btn", "btn-primary", "btn-md", "mb-2"], ["target", "_blank", 2, "color", "white", 3, "href"], ["type", "radio", "id", "informeFinalEncuesta", "value", "encuesta", "formControlName", "tipoInformeFinal", 1, "form-check-input"], ["for", "informeFinalEncuesta", 1, "form-check-label"], ["type", "radio", "id", "informeFinalArchivo", "value", "archivo", "formControlName", "tipoInformeFinal", 1, "form-check-input"], ["for", "informeFinalArchivo", 1, "form-check-label"], [1, "mb-2"], ["type", "checkbox", "formControlName", "opcion_pdf"], ["type", "checkbox", "formControlName", "opcion_word"], [1, "mt-2", "mb-2"], ["type", "radio", "name", "plantillaInformeFinal", "id", "plantillaInformeFinalSI", "value", "si", "formControlName", "plantillaInformeFinal", 1, "form-check-input"], ["for", "plantillaInformeFinalSI", 1, "form-check-label", "mr-2"], ["type", "radio", "name", "plantillaInformeFinal", "id", "plantillaInformeFinalNO", "value", "no", "formControlName", "plantillaInformeFinal", 1, "form-check-input"], ["for", "plantillaInformeFinalNO", 1, "form-check-label"], [3, "key_event", "file_plantilla_event"], [4, "ngIf", "ngIfElse"], ["class", "card shadow mb-4", 4, "ngIf"]],
      template: function VistaConfigsPracticaComponent_Template(rf, ctx) {
        if (rf & 1) {
          i0.ɵɵelementStart(0, "div", 2);
          i0.ɵɵelement(1, "app-barra-lateral-encargado");
          i0.ɵɵelementStart(2, "div", 3)(3, "div", 4);
          i0.ɵɵelement(4, "app-barra-superior");
          i0.ɵɵtemplate(5, VistaConfigsPracticaComponent_div_5_Template, 99, 11, "div", 5);
          i0.ɵɵelementEnd()()();
          i0.ɵɵelement(6, "app-logout-modal");
          i0.ɵɵelementStart(7, "app-edicion-simple-modal", 6);
          i0.ɵɵlistener("completo", function VistaConfigsPracticaComponent_Template_app_edicion_simple_modal_completo_7_listener($event) {
            return ctx.editarSimple($event);
          });
          i0.ɵɵelementEnd();
        }
        if (rf & 2) {
          i0.ɵɵadvance(5);
          i0.ɵɵproperty("ngIf", ctx.flag);
          i0.ɵɵadvance(2);
          i0.ɵɵproperty("seccion", ctx.seccion_edit)("practica", ctx.practica_edit);
        }
      },
      dependencies: [i5.NgForOf, i5.NgIf, i6.RouterLink, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.CheckboxControlValueAccessor, i4.RadioControlValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.FormGroupDirective, i4.FormControlName, i7.MatTooltip, i8.BarraSuperiorComponent, i9.LogoutModalComponent, i10.BarraLateralEncargadoComponent, i11.EdicionSimpleModalComponent, i12.SubirPlantillaInformeFinalComponent],
      styles: ["th[_ngcontent-%COMP%], td[_ngcontent-%COMP%] {\n  padding: 2px 15px;\n}\n\ninput.form-control[_ngcontent-%COMP%] {\n  width: auto;\n  display: inline-block;\n}\n\nlabel[_ngcontent-%COMP%] {\n  display: inline-block;\n  margin-right: 5px;\n}\n\n.disabled-button[_ngcontent-%COMP%] {\n  opacity: 0.65;\n}\n\n.disabled-button[_ngcontent-%COMP%]:hover {\n  cursor: not-allowed;\n}\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvdmlzdGFzL3Zpc3RhLWNvbmZpZ3MtcHJhY3RpY2EvdmlzdGEtY29uZmlncy1wcmFjdGljYS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGlCQUFBO0FBQ0o7O0FBRUE7RUFDSSxXQUFBO0VBQ0EscUJBQUE7QUFDSjs7QUFFQTtFQUNJLHFCQUFBO0VBQ0EsaUJBQUE7QUFDSjs7QUFFQTtFQUNJLGFBQUE7QUFDSjs7QUFFQTtFQUNJLG1CQUFBO0FBQ0oiLCJzb3VyY2VzQ29udGVudCI6WyJ0aCwgdGQge1xuICAgIHBhZGRpbmc6IDJweCAxNXB4O1xufVxuXG5pbnB1dC5mb3JtLWNvbnRyb2wge1xuICAgIHdpZHRoOiBhdXRvO1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbn1cblxubGFiZWwge1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICBtYXJnaW4tcmlnaHQ6IDVweDtcbn1cblxuLmRpc2FibGVkLWJ1dHRvbiB7XG4gICAgb3BhY2l0eTogLjY1O1xufVxuXG4uZGlzYWJsZWQtYnV0dG9uOmhvdmVyIHtcbiAgICBjdXJzb3I6IG5vdC1hbGxvd2VkO1xufSJdLCJzb3VyY2VSb290IjoiIn0= */"]
    });
  }
}
exports.VistaConfigsPracticaComponent = VistaConfigsPracticaComponent;

/***/ }),

/***/ 55384:
/*!****************************************************************************************!*\
  !*** ./src/app/vistas/vista-supervisor/vista-supervisor/vista-supervisor.component.ts ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.VistaSupervisorComponent = void 0;
const dayjs = __webpack_require__(/*! dayjs */ 49645);
const i0 = __webpack_require__(/*! @angular/core */ 37580);
const i1 = __webpack_require__(/*! src/app/servicios/usuario/storage-user.service */ 57637);
const i2 = __webpack_require__(/*! src/app/servicios/usuario-supervisor/usuario-supervisor.service */ 12926);
const i3 = __webpack_require__(/*! @angular/common */ 60316);
const i4 = __webpack_require__(/*! ../../../componentes/barra-superior/barra-superior.component */ 36370);
const i5 = __webpack_require__(/*! ../../../componentes/logout-modal/logout-modal.component */ 15562);
const i6 = __webpack_require__(/*! ../../../componentes/barra-lateral-encargado/barra-lateral-encargado.component */ 43560);
function VistaSupervisorComponent_div_13_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div")(1, "div", 13)(2, "div", 14)(3, "h6", 15);
    i0.ɵɵtext(4);
    i0.ɵɵelementEnd()();
    i0.ɵɵelementStart(5, "div", 16)(6, "p");
    i0.ɵɵtext(7);
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(8, "p");
    i0.ɵɵtext(9);
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(10, "p");
    i0.ɵɵtext(11);
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(12, "p");
    i0.ɵɵtext(13);
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(14, "p");
    i0.ɵɵtext(15);
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(16, "p");
    i0.ɵɵtext(17);
    i0.ɵɵelementEnd()()()();
  }
  if (rf & 2) {
    const elemento_r1 = ctx.$implicit;
    i0.ɵɵadvance(4);
    i0.ɵɵtextInterpolate(elemento_r1 == null ? null : elemento_r1.nombre);
    i0.ɵɵadvance(3);
    i0.ɵɵtextInterpolate1("Correo: ", elemento_r1 == null ? null : elemento_r1.correo, "");
    i0.ɵɵadvance(2);
    i0.ɵɵtextInterpolate1("Estado: ", elemento_r1 == null ? null : elemento_r1.estado, "");
    i0.ɵɵadvance(2);
    i0.ɵɵtextInterpolate1("Empresa: ", elemento_r1 == null ? null : elemento_r1.nombre_empresa, "");
    i0.ɵɵadvance(2);
    i0.ɵɵtextInterpolate1("Rut: ", elemento_r1 == null ? null : elemento_r1.rut_empresa, "");
    i0.ɵɵadvance(2);
    i0.ɵɵtextInterpolate1("Inicio: ", elemento_r1 == null ? null : elemento_r1.inicio, "");
    i0.ɵɵadvance(2);
    i0.ɵɵtextInterpolate1("Fin: ", elemento_r1 == null ? null : elemento_r1.fin, "");
  }
}
dayjs().format();
const customParseFormat = __webpack_require__(/*! dayjs/plugin/customParseFormat */ 30001);
dayjs.extend(customParseFormat);
class VistaSupervisorComponent {
  constructor(storage, service) {
    this.storage = storage;
    this.service = service;
    this.list = [];
  }
  ngOnInit() {
    let id = this.storage.getUser().userdata.id;
    let response = {};
    this.service.buscar_estudiantes(id).subscribe({
      next: data => {
        response = {
          ...response,
          ...data
        };
      },
      error: error => {
        console.log(error);
      },
      complete: () => {
        this.estudiantes = response.body;
        //dayjs(informe.fecha, "YYYY-MM-DDTHH:mm:ssZ").format("DD/MM/YYYY")
        for (let estudiante of this.estudiantes.body) {
          let nombre = estudiante.nombre;
          let correo = estudiante.correo;
          let rut_empresa = estudiante.rut_empresa;
          let nombre_empresa = estudiante.nombre_empresa;
          let estado = estudiante.estado;
          let inicio = dayjs(estudiante.inicio, "YYYY-MM-DDTHH:mm:ssZ").format("DD/MM/YYYY");
          let fin = dayjs(estudiante.fin, "YYYY-MM-DDTHH:mm:ssZ").format("DD/MM/YYYY");
          this.list.push({
            nombre,
            correo,
            rut_empresa,
            nombre_empresa,
            estado,
            inicio,
            fin
          });
        }
      }
    });
  }
  static {
    this.ɵfac = function VistaSupervisorComponent_Factory(__ngFactoryType__) {
      return new (__ngFactoryType__ || VistaSupervisorComponent)(i0.ɵɵdirectiveInject(i1.StorageUserService), i0.ɵɵdirectiveInject(i2.UsuarioSupervisorService));
    };
  }
  static {
    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({
      type: VistaSupervisorComponent,
      selectors: [["app-vista-supervisor"]],
      decls: 17,
      vars: 1,
      consts: [["charset", "utf-8"], ["http-equiv", "X-UA-Compatible", "content", "IE=edge"], ["name", "viewport", "content", "width=device-width, initial-scale=1, shrink-to-fit=no"], ["name", "description", "content", ""], ["name", "author", "content", ""], ["id", "page-top"], ["id", "wrapper"], ["id", "content-wrapper", 1, "d-flex", "flex-column"], ["id", "content", 1, "main-content"], [1, "container-fluid"], [4, "ngFor", "ngForOf"], ["href", "#page-top", 1, "scroll-to-top", "rounded"], [1, "fas", "fa-angle-up"], [1, "card", "shadow", "mb-4"], [1, "card-header", "py-3"], [1, "m-0", "font-weight-bold", "text-primary", 2, "font-size", "large"], [1, "card-body"]],
      template: function VistaSupervisorComponent_Template(rf, ctx) {
        if (rf & 1) {
          i0.ɵɵelementStart(0, "head");
          i0.ɵɵelement(1, "meta", 0)(2, "meta", 1)(3, "meta", 2)(4, "meta", 3)(5, "meta", 4);
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(6, "body", 5)(7, "div", 6);
          i0.ɵɵelement(8, "app-barra-lateral-encargado");
          i0.ɵɵelementStart(9, "div", 7)(10, "div", 8);
          i0.ɵɵelement(11, "app-barra-superior");
          i0.ɵɵelementStart(12, "div", 9);
          i0.ɵɵtemplate(13, VistaSupervisorComponent_div_13_Template, 18, 7, "div", 10);
          i0.ɵɵelementEnd()()()();
          i0.ɵɵelementStart(14, "a", 11);
          i0.ɵɵelement(15, "i", 12);
          i0.ɵɵelementEnd();
          i0.ɵɵelement(16, "app-logout-modal");
          i0.ɵɵelementEnd();
        }
        if (rf & 2) {
          i0.ɵɵadvance(13);
          i0.ɵɵproperty("ngForOf", ctx.list);
        }
      },
      dependencies: [i3.NgForOf, i4.BarraSuperiorComponent, i5.LogoutModalComponent, i6.BarraLateralEncargadoComponent],
      styles: ["/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */"]
    });
  }
}
exports.VistaSupervisorComponent = VistaSupervisorComponent;

/***/ }),

/***/ 98880:
/*!*****************************************************************************!*\
  !*** ./src/app/vistas/wizards/config-practica/config-practica.component.ts ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.ConfigPracticaComponent = void 0;
const shepherd_js_1 = __webpack_require__(/*! shepherd.js */ 84242);
const i0 = __webpack_require__(/*! @angular/core */ 37580);
const i1 = __webpack_require__(/*! @angular/router */ 95072);
const i2 = __webpack_require__(/*! @angular/common */ 60316);
const i3 = __webpack_require__(/*! @angular/material/button */ 84175);
const i4 = __webpack_require__(/*! @angular/material/input */ 95541);
const i5 = __webpack_require__(/*! @angular/material/form-field */ 24950);
const i6 = __webpack_require__(/*! @angular/forms */ 34456);
const i7 = __webpack_require__(/*! @angular/material/table */ 77697);
const i8 = __webpack_require__(/*! ../../../componentes/barra-superior/barra-superior.component */ 36370);
const i9 = __webpack_require__(/*! ../../../componentes/barra-lateral-encargado/barra-lateral-encargado.component */ 43560);
const _c0 = () => ({
  "background-color": "#4e73df",
  "color": "white"
});
function ConfigPracticaComponent_div_8_form_4_div_6_mat_header_cell_4_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelement(0, "mat-header-cell");
  }
}
function ConfigPracticaComponent_div_8_form_4_div_6_mat_cell_5_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "mat-cell")(1, "mat-form-field");
    i0.ɵɵelement(2, "input", 43);
    i0.ɵɵelementEnd()();
  }
}
function ConfigPracticaComponent_div_8_form_4_div_6_mat_header_cell_7_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelement(0, "mat-header-cell");
  }
}
function ConfigPracticaComponent_div_8_form_4_div_6_mat_cell_8_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "mat-cell")(1, "button", 44)(2, "mat-icon", 45);
    i0.ɵɵtext(3, "Eliminar opci\u00F3n");
    i0.ɵɵelementEnd()()();
  }
}
function ConfigPracticaComponent_div_8_form_4_div_6_mat_header_row_9_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelement(0, "mat-header-row");
  }
}
function ConfigPracticaComponent_div_8_form_4_div_6_mat_row_10_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelement(0, "mat-row");
  }
}
function ConfigPracticaComponent_div_8_form_4_div_6_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div")(1, "mat-table");
    i0.ɵɵelementContainerStart(2)(3, 35);
    i0.ɵɵtemplate(4, ConfigPracticaComponent_div_8_form_4_div_6_mat_header_cell_4_Template, 1, 0, "mat-header-cell", 36)(5, ConfigPracticaComponent_div_8_form_4_div_6_mat_cell_5_Template, 3, 0, "mat-cell", 37);
    i0.ɵɵelementContainerEnd();
    i0.ɵɵelementContainerStart(6, 38);
    i0.ɵɵtemplate(7, ConfigPracticaComponent_div_8_form_4_div_6_mat_header_cell_7_Template, 1, 0, "mat-header-cell", 36)(8, ConfigPracticaComponent_div_8_form_4_div_6_mat_cell_8_Template, 4, 0, "mat-cell", 37);
    i0.ɵɵelementContainerEnd();
    i0.ɵɵtemplate(9, ConfigPracticaComponent_div_8_form_4_div_6_mat_header_row_9_Template, 1, 0, "mat-header-row", 39)(10, ConfigPracticaComponent_div_8_form_4_div_6_mat_row_10_Template, 1, 0, "mat-row", 40);
    i0.ɵɵelementContainerEnd();
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(11, "div", 41)(12, "button", 42);
    i0.ɵɵtext(13, "Agregar opci\u00F3n de horas");
    i0.ɵɵelementEnd()()();
  }
  if (rf & 2) {
    const ctx_r0 = i0.ɵɵnextContext(3);
    i0.ɵɵadvance(9);
    i0.ɵɵproperty("matHeaderRowDef", ctx_r0.displayedColumnsHoras);
    i0.ɵɵadvance();
    i0.ɵɵproperty("matRowDefColumns", ctx_r0.displayedColumnsHoras);
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngStyle", i0.ɵɵpureFunction0(3, _c0));
  }
}
function ConfigPracticaComponent_div_8_form_4_div_7_mat_header_cell_4_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelement(0, "mat-header-cell");
  }
}
function ConfigPracticaComponent_div_8_form_4_div_7_mat_cell_5_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "mat-cell")(1, "mat-form-field");
    i0.ɵɵelement(2, "input", 47);
    i0.ɵɵelementEnd()();
  }
}
function ConfigPracticaComponent_div_8_form_4_div_7_mat_header_cell_7_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelement(0, "mat-header-cell");
  }
}
function ConfigPracticaComponent_div_8_form_4_div_7_mat_cell_8_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "mat-cell")(1, "button", 44)(2, "mat-icon", 45);
    i0.ɵɵtext(3, "Eliminar opci\u00F3n");
    i0.ɵɵelementEnd()()();
  }
}
function ConfigPracticaComponent_div_8_form_4_div_7_mat_header_row_9_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelement(0, "mat-header-row");
  }
}
function ConfigPracticaComponent_div_8_form_4_div_7_mat_row_10_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelement(0, "mat-row");
  }
}
function ConfigPracticaComponent_div_8_form_4_div_7_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div")(1, "mat-table");
    i0.ɵɵelementContainerStart(2)(3, 46);
    i0.ɵɵtemplate(4, ConfigPracticaComponent_div_8_form_4_div_7_mat_header_cell_4_Template, 1, 0, "mat-header-cell", 36)(5, ConfigPracticaComponent_div_8_form_4_div_7_mat_cell_5_Template, 3, 0, "mat-cell", 37);
    i0.ɵɵelementContainerEnd();
    i0.ɵɵelementContainerStart(6, 38);
    i0.ɵɵtemplate(7, ConfigPracticaComponent_div_8_form_4_div_7_mat_header_cell_7_Template, 1, 0, "mat-header-cell", 36)(8, ConfigPracticaComponent_div_8_form_4_div_7_mat_cell_8_Template, 4, 0, "mat-cell", 37);
    i0.ɵɵelementContainerEnd();
    i0.ɵɵtemplate(9, ConfigPracticaComponent_div_8_form_4_div_7_mat_header_row_9_Template, 1, 0, "mat-header-row", 39)(10, ConfigPracticaComponent_div_8_form_4_div_7_mat_row_10_Template, 1, 0, "mat-row", 40);
    i0.ɵɵelementContainerEnd();
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(11, "div", 41)(12, "button", 42);
    i0.ɵɵtext(13, "Agregar opci\u00F3n de meses");
    i0.ɵɵelementEnd()()();
  }
  if (rf & 2) {
    const ctx_r0 = i0.ɵɵnextContext(3);
    i0.ɵɵadvance(9);
    i0.ɵɵproperty("matHeaderRowDef", ctx_r0.displayedColumnsMeses);
    i0.ɵɵadvance();
    i0.ɵɵproperty("matRowDefColumns", ctx_r0.displayedColumnsMeses);
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngStyle", i0.ɵɵpureFunction0(3, _c0));
  }
}
function ConfigPracticaComponent_div_8_form_4_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "form", 17);
    i0.ɵɵelement(1, "input", 18)(2, "input", 19);
    i0.ɵɵtext(3, "Horas ");
    i0.ɵɵelement(4, "input", 19);
    i0.ɵɵtext(5, "Meses ");
    i0.ɵɵtemplate(6, ConfigPracticaComponent_div_8_form_4_div_6_Template, 14, 4, "div", 20)(7, ConfigPracticaComponent_div_8_form_4_div_7_Template, 14, 4, "div", 20);
    i0.ɵɵelement(8, "br");
    i0.ɵɵelementStart(9, "p");
    i0.ɵɵtext(10, " Frecuencia informes de avance (bit\u00E1coras) ");
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(11, "div", 21);
    i0.ɵɵelement(12, "input", 22);
    i0.ɵɵelementStart(13, "label", 23);
    i0.ɵɵtext(14, "Diario");
    i0.ɵɵelementEnd()();
    i0.ɵɵelementStart(15, "div", 21);
    i0.ɵɵelement(16, "input", 24);
    i0.ɵɵelementStart(17, "label", 25);
    i0.ɵɵtext(18, "Semanal");
    i0.ɵɵelementEnd()();
    i0.ɵɵelementStart(19, "div", 21);
    i0.ɵɵelement(20, "input", 26);
    i0.ɵɵelementStart(21, "label", 27);
    i0.ɵɵtext(22, "Mensual");
    i0.ɵɵelementEnd()();
    i0.ɵɵelementStart(23, "div", 21);
    i0.ɵɵelement(24, "input", 28);
    i0.ɵɵelementStart(25, "label", 29);
    i0.ɵɵtext(26, "Ninguno");
    i0.ɵɵelementEnd()();
    i0.ɵɵelement(27, "br")(28, "br");
    i0.ɵɵelementStart(29, "p");
    i0.ɵɵtext(30, " Informe Final ");
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(31, "div", 21);
    i0.ɵɵelement(32, "input", 30);
    i0.ɵɵelementStart(33, "label", 31);
    i0.ɵɵtext(34, "Si");
    i0.ɵɵelementEnd()();
    i0.ɵɵelementStart(35, "div", 21);
    i0.ɵɵelement(36, "input", 32);
    i0.ɵɵelementStart(37, "label", 33);
    i0.ɵɵtext(38, "No");
    i0.ɵɵelementEnd()();
    i0.ɵɵelement(39, "br")(40, "br");
    i0.ɵɵelementStart(41, "button", 34);
    i0.ɵɵtext(42, "Siguiente");
    i0.ɵɵelementEnd()();
  }
  if (rf & 2) {
    const ctx_r0 = i0.ɵɵnextContext(2);
    i0.ɵɵadvance(6);
    i0.ɵɵproperty("ngIf", ctx_r0.habilitarHoras);
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngIf", ctx_r0.habilitarMeses);
  }
}
function ConfigPracticaComponent_div_8_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 13)(1, "div", 14)(2, "div", 15);
    i0.ɵɵtext(3, " Configuraci\u00F3n de pr\u00E1ctica ");
    i0.ɵɵelementEnd();
    i0.ɵɵtemplate(4, ConfigPracticaComponent_div_8_form_4_Template, 43, 2, "form", 16);
    i0.ɵɵelementEnd()();
  }
  if (rf & 2) {
    const ctx_r0 = i0.ɵɵnextContext();
    i0.ɵɵadvance(4);
    i0.ɵɵproperty("ngIf", ctx_r0.flag);
  }
}
function ConfigPracticaComponent_div_9_div_4_div_1_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 57);
    i0.ɵɵtext(1);
    i0.ɵɵelement(2, "br")(3, "br")(4, "textarea", 58);
    i0.ɵɵelementEnd();
  }
  if (rf & 2) {
    const pregunta_avance_r2 = i0.ɵɵnextContext().$implicit;
    i0.ɵɵadvance();
    i0.ɵɵtextInterpolate1(" ", pregunta_avance_r2, " ");
  }
}
function ConfigPracticaComponent_div_9_div_4_div_2_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 57);
    i0.ɵɵtext(1);
    i0.ɵɵelementEnd();
  }
  if (rf & 2) {
    const pregunta_avance_r2 = i0.ɵɵnextContext().$implicit;
    i0.ɵɵadvance();
    i0.ɵɵtextInterpolate1(" ", pregunta_avance_r2, " ");
  }
}
function ConfigPracticaComponent_div_9_div_4_div_3_form_19_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "form")(1, "button", 64);
    i0.ɵɵtext(2, " Eliminar Pregunta ");
    i0.ɵɵelementEnd()();
  }
}
function ConfigPracticaComponent_div_9_div_4_div_3_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 59)(1, "div", 60);
    i0.ɵɵelement(2, "div", 51);
    i0.ɵɵelementStart(3, "div", 61)(4, "table")(5, "tr")(6, "div")(7, "td");
    i0.ɵɵelement(8, "i", 62);
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(9, "td")(10, "label", 63);
    i0.ɵɵtext(11, "don");
    i0.ɵɵelementEnd()()();
    i0.ɵɵelementStart(12, "div")(13, "td");
    i0.ɵɵelement(14, "i", 62);
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(15, "td")(16, "label", 63);
    i0.ɵɵtext(17, "juan");
    i0.ɵɵelementEnd()()()()()();
    i0.ɵɵelement(18, "div", 51);
    i0.ɵɵelementEnd();
    i0.ɵɵtemplate(19, ConfigPracticaComponent_div_9_div_4_div_3_form_19_Template, 3, 0, "form", 20);
    i0.ɵɵelementEnd();
  }
  if (rf & 2) {
    const ctx_r0 = i0.ɵɵnextContext(3);
    i0.ɵɵadvance(19);
    i0.ɵɵproperty("ngIf", ctx_r0.flag);
  }
}
function ConfigPracticaComponent_div_9_div_4_div_4_form_1_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "form")(1, "button", 64);
    i0.ɵɵtext(2, " Eliminar Pregunta ");
    i0.ɵɵelementEnd()();
  }
}
function ConfigPracticaComponent_div_9_div_4_div_4_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div");
    i0.ɵɵtemplate(1, ConfigPracticaComponent_div_9_div_4_div_4_form_1_Template, 3, 0, "form", 20);
    i0.ɵɵelementEnd();
  }
  if (rf & 2) {
    const ctx_r0 = i0.ɵɵnextContext(3);
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngIf", ctx_r0.flag);
  }
}
function ConfigPracticaComponent_div_9_div_4_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 54);
    i0.ɵɵtemplate(1, ConfigPracticaComponent_div_9_div_4_div_1_Template, 5, 1, "div", 55)(2, ConfigPracticaComponent_div_9_div_4_div_2_Template, 2, 1, "div", 55)(3, ConfigPracticaComponent_div_9_div_4_div_3_Template, 20, 1, "div", 56)(4, ConfigPracticaComponent_div_9_div_4_div_4_Template, 2, 1, "div", 20);
    i0.ɵɵelementEnd();
  }
  if (rf & 2) {
    const i_r3 = ctx.index;
    const ctx_r0 = i0.ɵɵnextContext(2);
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngIf", ctx_r0.tipos_preguntas_avance[i_r3] == "abierta");
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngIf", ctx_r0.tipos_preguntas_avance[i_r3] == "casillas" || ctx_r0.tipos_preguntas_avance[i_r3] == "alternativas");
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngIf", ctx_r0.lista_opciones_preguntas_avance[i_r3] != "");
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngIf", ctx_r0.lista_opciones_preguntas_avance[i_r3] == "");
  }
}
function ConfigPracticaComponent_div_9_form_6_form_1_div_11_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelement(0, "div");
  }
}
function ConfigPracticaComponent_div_9_form_6_form_1_div_12_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelement(0, "div");
  }
}
function ConfigPracticaComponent_div_9_form_6_form_1_div_13_mat_header_cell_5_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelement(0, "mat-header-cell");
  }
}
function ConfigPracticaComponent_div_9_form_6_form_1_div_13_mat_cell_6_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "mat-cell")(1, "mat-form-field");
    i0.ɵɵelement(2, "input", 73);
    i0.ɵɵelementEnd()();
  }
}
function ConfigPracticaComponent_div_9_form_6_form_1_div_13_mat_header_cell_8_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelement(0, "mat-header-cell");
  }
}
function ConfigPracticaComponent_div_9_form_6_form_1_div_13_mat_cell_9_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "mat-cell")(1, "button", 44)(2, "mat-icon", 45);
    i0.ɵɵtext(3, "Eliminar opci\u00F3n");
    i0.ɵɵelementEnd()()();
  }
}
function ConfigPracticaComponent_div_9_form_6_form_1_div_13_mat_header_row_10_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelement(0, "mat-header-row");
  }
}
function ConfigPracticaComponent_div_9_form_6_form_1_div_13_mat_row_11_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelement(0, "mat-row");
  }
}
function ConfigPracticaComponent_div_9_form_6_form_1_div_13_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div");
    i0.ɵɵelement(1, "br");
    i0.ɵɵelementStart(2, "mat-table");
    i0.ɵɵelementContainerStart(3)(4, 72);
    i0.ɵɵtemplate(5, ConfigPracticaComponent_div_9_form_6_form_1_div_13_mat_header_cell_5_Template, 1, 0, "mat-header-cell", 36)(6, ConfigPracticaComponent_div_9_form_6_form_1_div_13_mat_cell_6_Template, 3, 0, "mat-cell", 37);
    i0.ɵɵelementContainerEnd();
    i0.ɵɵelementContainerStart(7, 38);
    i0.ɵɵtemplate(8, ConfigPracticaComponent_div_9_form_6_form_1_div_13_mat_header_cell_8_Template, 1, 0, "mat-header-cell", 36)(9, ConfigPracticaComponent_div_9_form_6_form_1_div_13_mat_cell_9_Template, 4, 0, "mat-cell", 37);
    i0.ɵɵelementContainerEnd();
    i0.ɵɵtemplate(10, ConfigPracticaComponent_div_9_form_6_form_1_div_13_mat_header_row_10_Template, 1, 0, "mat-header-row", 39)(11, ConfigPracticaComponent_div_9_form_6_form_1_div_13_mat_row_11_Template, 1, 0, "mat-row", 40);
    i0.ɵɵelementContainerEnd();
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(12, "div", 41)(13, "button", 42);
    i0.ɵɵtext(14, "Agregar Opci\u00F3n");
    i0.ɵɵelementEnd()();
    i0.ɵɵelement(15, "br");
    i0.ɵɵelementEnd();
  }
  if (rf & 2) {
    const ctx_r0 = i0.ɵɵnextContext(4);
    i0.ɵɵadvance(10);
    i0.ɵɵproperty("matHeaderRowDef", ctx_r0.displayedColumnsOpcionesPregunta);
    i0.ɵɵadvance();
    i0.ɵɵproperty("matRowDefColumns", ctx_r0.displayedColumnsOpcionesPregunta);
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngStyle", i0.ɵɵpureFunction0(3, _c0));
  }
}
function ConfigPracticaComponent_div_9_form_6_form_1_div_14_mat_header_cell_5_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelement(0, "mat-header-cell");
  }
}
function ConfigPracticaComponent_div_9_form_6_form_1_div_14_mat_cell_6_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "mat-cell")(1, "mat-form-field");
    i0.ɵɵelement(2, "input", 73);
    i0.ɵɵelementEnd()();
  }
}
function ConfigPracticaComponent_div_9_form_6_form_1_div_14_mat_header_cell_8_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelement(0, "mat-header-cell");
  }
}
function ConfigPracticaComponent_div_9_form_6_form_1_div_14_mat_cell_9_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "mat-cell")(1, "button", 44)(2, "mat-icon", 45);
    i0.ɵɵtext(3, "Eliminar opci\u00F3n");
    i0.ɵɵelementEnd()()();
  }
}
function ConfigPracticaComponent_div_9_form_6_form_1_div_14_mat_header_row_10_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelement(0, "mat-header-row");
  }
}
function ConfigPracticaComponent_div_9_form_6_form_1_div_14_mat_row_11_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelement(0, "mat-row");
  }
}
function ConfigPracticaComponent_div_9_form_6_form_1_div_14_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div");
    i0.ɵɵelement(1, "br");
    i0.ɵɵelementStart(2, "mat-table");
    i0.ɵɵelementContainerStart(3)(4, 72);
    i0.ɵɵtemplate(5, ConfigPracticaComponent_div_9_form_6_form_1_div_14_mat_header_cell_5_Template, 1, 0, "mat-header-cell", 36)(6, ConfigPracticaComponent_div_9_form_6_form_1_div_14_mat_cell_6_Template, 3, 0, "mat-cell", 37);
    i0.ɵɵelementContainerEnd();
    i0.ɵɵelementContainerStart(7, 38);
    i0.ɵɵtemplate(8, ConfigPracticaComponent_div_9_form_6_form_1_div_14_mat_header_cell_8_Template, 1, 0, "mat-header-cell", 36)(9, ConfigPracticaComponent_div_9_form_6_form_1_div_14_mat_cell_9_Template, 4, 0, "mat-cell", 37);
    i0.ɵɵelementContainerEnd();
    i0.ɵɵtemplate(10, ConfigPracticaComponent_div_9_form_6_form_1_div_14_mat_header_row_10_Template, 1, 0, "mat-header-row", 39)(11, ConfigPracticaComponent_div_9_form_6_form_1_div_14_mat_row_11_Template, 1, 0, "mat-row", 40);
    i0.ɵɵelementContainerEnd();
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(12, "div", 41)(13, "button", 42);
    i0.ɵɵtext(14, "Agregar Opci\u00F3n");
    i0.ɵɵelementEnd()();
    i0.ɵɵelement(15, "br");
    i0.ɵɵelementEnd();
  }
  if (rf & 2) {
    const ctx_r0 = i0.ɵɵnextContext(4);
    i0.ɵɵadvance(10);
    i0.ɵɵproperty("matHeaderRowDef", ctx_r0.displayedColumnsOpcionesPregunta);
    i0.ɵɵadvance();
    i0.ɵɵproperty("matRowDefColumns", ctx_r0.displayedColumnsOpcionesPregunta);
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngStyle", i0.ɵɵpureFunction0(3, _c0));
  }
}
function ConfigPracticaComponent_div_9_form_6_form_1_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "form", 17);
    i0.ɵɵelement(1, "input", 65);
    i0.ɵɵelementStart(2, "select", 66)(3, "option", 67);
    i0.ɵɵtext(4, "Seleccione el tipo de respuesta");
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(5, "option", 68);
    i0.ɵɵtext(6, "Abierta");
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(7, "option", 69);
    i0.ɵɵtext(8, "Casillas");
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(9, "option", 70);
    i0.ɵɵtext(10, "Alternativas");
    i0.ɵɵelementEnd()();
    i0.ɵɵtemplate(11, ConfigPracticaComponent_div_9_form_6_form_1_div_11_Template, 1, 0, "div", 20)(12, ConfigPracticaComponent_div_9_form_6_form_1_div_12_Template, 1, 0, "div", 20)(13, ConfigPracticaComponent_div_9_form_6_form_1_div_13_Template, 16, 4, "div", 20)(14, ConfigPracticaComponent_div_9_form_6_form_1_div_14_Template, 16, 4, "div", 20);
    i0.ɵɵelementStart(15, "button", 71);
    i0.ɵɵtext(16, "Agregar Pregunta");
    i0.ɵɵelementEnd()();
  }
  if (rf & 2) {
    const ctx_r0 = i0.ɵɵnextContext(3);
    i0.ɵɵadvance(11);
    i0.ɵɵproperty("ngIf", ctx_r0.tipo_pregunta == "");
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngIf", ctx_r0.tipo_pregunta == "abierta");
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngIf", ctx_r0.tipo_pregunta == "casillas");
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngIf", ctx_r0.tipo_pregunta == "alternativas");
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngStyle", i0.ɵɵpureFunction0(5, _c0));
  }
}
function ConfigPracticaComponent_div_9_form_6_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "form");
    i0.ɵɵtemplate(1, ConfigPracticaComponent_div_9_form_6_form_1_Template, 17, 6, "form", 16);
    i0.ɵɵelementEnd();
  }
  if (rf & 2) {
    const ctx_r0 = i0.ɵɵnextContext(2);
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngIf", ctx_r0.flag);
  }
}
function ConfigPracticaComponent_div_9_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 48)(1, "div", 14)(2, "div", 15);
    i0.ɵɵtext(3, " Preguntas informe de avance ");
    i0.ɵɵelementEnd();
    i0.ɵɵtemplate(4, ConfigPracticaComponent_div_9_div_4_Template, 5, 4, "div", 49);
    i0.ɵɵelement(5, "br");
    i0.ɵɵtemplate(6, ConfigPracticaComponent_div_9_form_6_Template, 2, 1, "form", 20);
    i0.ɵɵelementStart(7, "div", 50);
    i0.ɵɵelement(8, "div", 51);
    i0.ɵɵelementStart(9, "button", 52);
    i0.ɵɵtext(10, " Volver ");
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(11, "button", 53);
    i0.ɵɵtext(12, " Siguiente ");
    i0.ɵɵelementEnd();
    i0.ɵɵelement(13, "div", 51);
    i0.ɵɵelementEnd()()();
  }
  if (rf & 2) {
    const ctx_r0 = i0.ɵɵnextContext();
    i0.ɵɵadvance(4);
    i0.ɵɵproperty("ngForOf", ctx_r0.lista_preguntas_avance);
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngIf", ctx_r0.flag);
  }
}
function ConfigPracticaComponent_div_10_div_4_div_1_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 57);
    i0.ɵɵtext(1);
    i0.ɵɵelement(2, "br")(3, "br")(4, "textarea", 76);
    i0.ɵɵelementEnd();
  }
  if (rf & 2) {
    const pregunta_final_r5 = i0.ɵɵnextContext().$implicit;
    i0.ɵɵadvance();
    i0.ɵɵtextInterpolate1(" ", pregunta_final_r5, " ");
  }
}
function ConfigPracticaComponent_div_10_div_4_div_2_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 57);
    i0.ɵɵtext(1);
    i0.ɵɵelementEnd();
  }
  if (rf & 2) {
    const pregunta_final_r5 = i0.ɵɵnextContext().$implicit;
    i0.ɵɵadvance();
    i0.ɵɵtextInterpolate1(" ", pregunta_final_r5, " ");
  }
}
function ConfigPracticaComponent_div_10_div_4_div_3_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 59)(1, "div", 60);
    i0.ɵɵelement(2, "div", 51);
    i0.ɵɵelementStart(3, "div", 61)(4, "table")(5, "tr")(6, "div")(7, "td");
    i0.ɵɵelement(8, "i", 62);
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(9, "td")(10, "label", 63);
    i0.ɵɵtext(11, "do\u00F1a");
    i0.ɵɵelementEnd()()();
    i0.ɵɵelementStart(12, "div")(13, "td");
    i0.ɵɵelement(14, "i", 62);
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(15, "td")(16, "label", 63);
    i0.ɵɵtext(17, "juan");
    i0.ɵɵelementEnd()()()()()();
    i0.ɵɵelement(18, "div", 51);
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(19, "form")(20, "button", 64);
    i0.ɵɵtext(21, " Eliminar Pregunta ");
    i0.ɵɵelementEnd()()();
  }
}
function ConfigPracticaComponent_div_10_div_4_div_4_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div")(1, "form")(2, "button", 64);
    i0.ɵɵtext(3, " Eliminar Pregunta ");
    i0.ɵɵelementEnd()()();
  }
}
function ConfigPracticaComponent_div_10_div_4_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 54);
    i0.ɵɵtemplate(1, ConfigPracticaComponent_div_10_div_4_div_1_Template, 5, 1, "div", 55)(2, ConfigPracticaComponent_div_10_div_4_div_2_Template, 2, 1, "div", 55)(3, ConfigPracticaComponent_div_10_div_4_div_3_Template, 22, 0, "div", 56)(4, ConfigPracticaComponent_div_10_div_4_div_4_Template, 4, 0, "div", 20);
    i0.ɵɵelementEnd();
  }
  if (rf & 2) {
    const i_r6 = ctx.index;
    const ctx_r0 = i0.ɵɵnextContext(2);
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngIf", ctx_r0.tipos_preguntas_final[i_r6] == "abierta");
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngIf", ctx_r0.tipos_preguntas_final[i_r6] == "casillas" || ctx_r0.tipos_preguntas_final[i_r6] == "alternativas");
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngIf", ctx_r0.lista_opciones_preguntas_final[i_r6] != "");
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngIf", ctx_r0.lista_opciones_preguntas_final[i_r6] == "");
  }
}
function ConfigPracticaComponent_div_10_form_6_form_1_div_11_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelement(0, "div");
  }
}
function ConfigPracticaComponent_div_10_form_6_form_1_div_12_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelement(0, "div");
  }
}
function ConfigPracticaComponent_div_10_form_6_form_1_div_13_mat_header_cell_5_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelement(0, "mat-header-cell");
  }
}
function ConfigPracticaComponent_div_10_form_6_form_1_div_13_mat_cell_6_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "mat-cell")(1, "mat-form-field");
    i0.ɵɵelement(2, "input", 73);
    i0.ɵɵelementEnd()();
  }
}
function ConfigPracticaComponent_div_10_form_6_form_1_div_13_mat_header_cell_8_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelement(0, "mat-header-cell");
  }
}
function ConfigPracticaComponent_div_10_form_6_form_1_div_13_mat_cell_9_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "mat-cell")(1, "button", 44)(2, "mat-icon", 45);
    i0.ɵɵtext(3, "Eliminar opci\u00F3n");
    i0.ɵɵelementEnd()()();
  }
}
function ConfigPracticaComponent_div_10_form_6_form_1_div_13_mat_header_row_10_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelement(0, "mat-header-row");
  }
}
function ConfigPracticaComponent_div_10_form_6_form_1_div_13_mat_row_11_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelement(0, "mat-row");
  }
}
function ConfigPracticaComponent_div_10_form_6_form_1_div_13_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div");
    i0.ɵɵelement(1, "br");
    i0.ɵɵelementStart(2, "mat-table");
    i0.ɵɵelementContainerStart(3)(4, 72);
    i0.ɵɵtemplate(5, ConfigPracticaComponent_div_10_form_6_form_1_div_13_mat_header_cell_5_Template, 1, 0, "mat-header-cell", 36)(6, ConfigPracticaComponent_div_10_form_6_form_1_div_13_mat_cell_6_Template, 3, 0, "mat-cell", 37);
    i0.ɵɵelementContainerEnd();
    i0.ɵɵelementContainerStart(7, 38);
    i0.ɵɵtemplate(8, ConfigPracticaComponent_div_10_form_6_form_1_div_13_mat_header_cell_8_Template, 1, 0, "mat-header-cell", 36)(9, ConfigPracticaComponent_div_10_form_6_form_1_div_13_mat_cell_9_Template, 4, 0, "mat-cell", 37);
    i0.ɵɵelementContainerEnd();
    i0.ɵɵtemplate(10, ConfigPracticaComponent_div_10_form_6_form_1_div_13_mat_header_row_10_Template, 1, 0, "mat-header-row", 39)(11, ConfigPracticaComponent_div_10_form_6_form_1_div_13_mat_row_11_Template, 1, 0, "mat-row", 40);
    i0.ɵɵelementContainerEnd();
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(12, "div", 41)(13, "button", 42);
    i0.ɵɵtext(14, "Agregar Opci\u00F3n");
    i0.ɵɵelementEnd()();
    i0.ɵɵelement(15, "br");
    i0.ɵɵelementEnd();
  }
  if (rf & 2) {
    const ctx_r0 = i0.ɵɵnextContext(4);
    i0.ɵɵadvance(10);
    i0.ɵɵproperty("matHeaderRowDef", ctx_r0.displayedColumnsOpcionesPregunta);
    i0.ɵɵadvance();
    i0.ɵɵproperty("matRowDefColumns", ctx_r0.displayedColumnsOpcionesPregunta);
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngStyle", i0.ɵɵpureFunction0(3, _c0));
  }
}
function ConfigPracticaComponent_div_10_form_6_form_1_div_14_mat_header_cell_5_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelement(0, "mat-header-cell");
  }
}
function ConfigPracticaComponent_div_10_form_6_form_1_div_14_mat_cell_6_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "mat-cell")(1, "mat-form-field");
    i0.ɵɵelement(2, "input", 73);
    i0.ɵɵelementEnd()();
  }
}
function ConfigPracticaComponent_div_10_form_6_form_1_div_14_mat_header_cell_8_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelement(0, "mat-header-cell");
  }
}
function ConfigPracticaComponent_div_10_form_6_form_1_div_14_mat_cell_9_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "mat-cell")(1, "button", 44)(2, "mat-icon", 45);
    i0.ɵɵtext(3, "Eliminar opci\u00F3n");
    i0.ɵɵelementEnd()()();
  }
}
function ConfigPracticaComponent_div_10_form_6_form_1_div_14_mat_header_row_10_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelement(0, "mat-header-row");
  }
}
function ConfigPracticaComponent_div_10_form_6_form_1_div_14_mat_row_11_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelement(0, "mat-row");
  }
}
function ConfigPracticaComponent_div_10_form_6_form_1_div_14_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div");
    i0.ɵɵelement(1, "br");
    i0.ɵɵelementStart(2, "mat-table");
    i0.ɵɵelementContainerStart(3)(4, 72);
    i0.ɵɵtemplate(5, ConfigPracticaComponent_div_10_form_6_form_1_div_14_mat_header_cell_5_Template, 1, 0, "mat-header-cell", 36)(6, ConfigPracticaComponent_div_10_form_6_form_1_div_14_mat_cell_6_Template, 3, 0, "mat-cell", 37);
    i0.ɵɵelementContainerEnd();
    i0.ɵɵelementContainerStart(7, 38);
    i0.ɵɵtemplate(8, ConfigPracticaComponent_div_10_form_6_form_1_div_14_mat_header_cell_8_Template, 1, 0, "mat-header-cell", 36)(9, ConfigPracticaComponent_div_10_form_6_form_1_div_14_mat_cell_9_Template, 4, 0, "mat-cell", 37);
    i0.ɵɵelementContainerEnd();
    i0.ɵɵtemplate(10, ConfigPracticaComponent_div_10_form_6_form_1_div_14_mat_header_row_10_Template, 1, 0, "mat-header-row", 39)(11, ConfigPracticaComponent_div_10_form_6_form_1_div_14_mat_row_11_Template, 1, 0, "mat-row", 40);
    i0.ɵɵelementContainerEnd();
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(12, "div", 41)(13, "button", 42);
    i0.ɵɵtext(14, "Agregar Opci\u00F3n");
    i0.ɵɵelementEnd()();
    i0.ɵɵelement(15, "br");
    i0.ɵɵelementEnd();
  }
  if (rf & 2) {
    const ctx_r0 = i0.ɵɵnextContext(4);
    i0.ɵɵadvance(10);
    i0.ɵɵproperty("matHeaderRowDef", ctx_r0.displayedColumnsOpcionesPregunta);
    i0.ɵɵadvance();
    i0.ɵɵproperty("matRowDefColumns", ctx_r0.displayedColumnsOpcionesPregunta);
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngStyle", i0.ɵɵpureFunction0(3, _c0));
  }
}
function ConfigPracticaComponent_div_10_form_6_form_1_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "form", 17);
    i0.ɵɵelement(1, "input", 65);
    i0.ɵɵelementStart(2, "select", 66)(3, "option", 67);
    i0.ɵɵtext(4, "Seleccione el tipo de respuesta");
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(5, "option", 68);
    i0.ɵɵtext(6, "Abierta");
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(7, "option", 69);
    i0.ɵɵtext(8, "Casillas");
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(9, "option", 70);
    i0.ɵɵtext(10, "Alternativas");
    i0.ɵɵelementEnd()();
    i0.ɵɵtemplate(11, ConfigPracticaComponent_div_10_form_6_form_1_div_11_Template, 1, 0, "div", 20)(12, ConfigPracticaComponent_div_10_form_6_form_1_div_12_Template, 1, 0, "div", 20)(13, ConfigPracticaComponent_div_10_form_6_form_1_div_13_Template, 16, 4, "div", 20)(14, ConfigPracticaComponent_div_10_form_6_form_1_div_14_Template, 16, 4, "div", 20);
    i0.ɵɵelementStart(15, "button", 71);
    i0.ɵɵtext(16, "Agregar Pregunta");
    i0.ɵɵelementEnd()();
  }
  if (rf & 2) {
    const ctx_r0 = i0.ɵɵnextContext(3);
    i0.ɵɵadvance(11);
    i0.ɵɵproperty("ngIf", ctx_r0.tipo_pregunta == "");
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngIf", ctx_r0.tipo_pregunta == "abierta");
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngIf", ctx_r0.tipo_pregunta == "casillas");
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngIf", ctx_r0.tipo_pregunta == "alternativas");
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngStyle", i0.ɵɵpureFunction0(5, _c0));
  }
}
function ConfigPracticaComponent_div_10_form_6_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "form");
    i0.ɵɵtemplate(1, ConfigPracticaComponent_div_10_form_6_form_1_Template, 17, 6, "form", 16);
    i0.ɵɵelementEnd();
  }
  if (rf & 2) {
    const ctx_r0 = i0.ɵɵnextContext(2);
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngIf", ctx_r0.flag);
  }
}
function ConfigPracticaComponent_div_10_Template(rf, ctx) {
  if (rf & 1) {
    const _r4 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "div", 74)(1, "div", 14)(2, "div", 15);
    i0.ɵɵtext(3, " Preguntas informe final ");
    i0.ɵɵelementEnd();
    i0.ɵɵtemplate(4, ConfigPracticaComponent_div_10_div_4_Template, 5, 4, "div", 49);
    i0.ɵɵelement(5, "br");
    i0.ɵɵtemplate(6, ConfigPracticaComponent_div_10_form_6_Template, 2, 1, "form", 20);
    i0.ɵɵelementStart(7, "div", 50);
    i0.ɵɵelement(8, "div", 51);
    i0.ɵɵelementStart(9, "button", 52);
    i0.ɵɵtext(10, " Volver ");
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(11, "button", 75);
    i0.ɵɵlistener("click", function ConfigPracticaComponent_div_10_Template_button_click_11_listener() {
      i0.ɵɵrestoreView(_r4);
      const ctx_r0 = i0.ɵɵnextContext();
      return i0.ɵɵresetView(ctx_r0.avanzarDesdePreguntasFinal());
    });
    i0.ɵɵtext(12, " Siguiente ");
    i0.ɵɵelementEnd();
    i0.ɵɵelement(13, "div", 51);
    i0.ɵɵelementEnd()()();
  }
  if (rf & 2) {
    const ctx_r0 = i0.ɵɵnextContext();
    i0.ɵɵadvance(4);
    i0.ɵɵproperty("ngForOf", ctx_r0.lista_preguntas_final);
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngIf", ctx_r0.flag);
  }
}
function ConfigPracticaComponent_div_11_div_4_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 54);
    i0.ɵɵtext(1, " Solicitud Documento Ingresada: ");
    i0.ɵɵelement(2, "br");
    i0.ɵɵtext(3);
    i0.ɵɵelement(4, "br");
    i0.ɵɵtext(5);
    i0.ɵɵelement(6, "br");
    i0.ɵɵtext(7);
    i0.ɵɵelement(8, "br");
    i0.ɵɵelementStart(9, "form")(10, "button", 64);
    i0.ɵɵtext(11, " Eliminar Solicitud Documento ");
    i0.ɵɵelementEnd()()();
  }
  if (rf & 2) {
    const nombre_doc_r8 = ctx.$implicit;
    const i_r9 = ctx.index;
    const ctx_r0 = i0.ɵɵnextContext(2);
    i0.ɵɵadvance(3);
    i0.ɵɵtextInterpolate1(" Nombre: ", nombre_doc_r8, " ");
    i0.ɵɵadvance(2);
    i0.ɵɵtextInterpolate1(" Descripci\u00F3n: ", ctx_r0.lista_descripcion_solicitud_documentos[i_r9], " ");
    i0.ɵɵadvance(2);
    i0.ɵɵtextInterpolate1(" Tipo documento: ", ctx_r0.lista_tipo_solicitud_documentos[i_r9], " ");
  }
}
function ConfigPracticaComponent_div_11_Template(rf, ctx) {
  if (rf & 1) {
    const _r7 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "div", 77)(1, "div", 14)(2, "div", 15);
    i0.ɵɵtext(3, " Solicitud Documentos ");
    i0.ɵɵelementEnd();
    i0.ɵɵtemplate(4, ConfigPracticaComponent_div_11_div_4_Template, 12, 3, "div", 49);
    i0.ɵɵelementStart(5, "form")(6, "form");
    i0.ɵɵelement(7, "input", 78)(8, "textarea", 79);
    i0.ɵɵelementStart(9, "label", 80);
    i0.ɵɵtext(10, "Tipo de documento:");
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(11, "select", 81)(12, "option", 82);
    i0.ɵɵtext(13, "PDF");
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(14, "option", 83);
    i0.ɵɵtext(15, "JPG");
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(16, "option", 84);
    i0.ɵɵtext(17, "Excel");
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(18, "option", 85);
    i0.ɵɵtext(19, "Word");
    i0.ɵɵelementEnd()();
    i0.ɵɵelementStart(20, "button", 71);
    i0.ɵɵtext(21, " Agregar solicitud de documento ");
    i0.ɵɵelementEnd()()();
    i0.ɵɵelementStart(22, "div", 50);
    i0.ɵɵelement(23, "div", 51);
    i0.ɵɵelementStart(24, "button", 52);
    i0.ɵɵtext(25, " Volver ");
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(26, "button", 75);
    i0.ɵɵlistener("click", function ConfigPracticaComponent_div_11_Template_button_click_26_listener() {
      i0.ɵɵrestoreView(_r7);
      const ctx_r0 = i0.ɵɵnextContext();
      return i0.ɵɵresetView(ctx_r0.avanzarDesdeSolicitudDocumentos());
    });
    i0.ɵɵtext(27, " Siguiente ");
    i0.ɵɵelementEnd();
    i0.ɵɵelement(28, "div", 51);
    i0.ɵɵelementEnd()()();
  }
  if (rf & 2) {
    const ctx_r0 = i0.ɵɵnextContext();
    i0.ɵɵadvance(4);
    i0.ɵɵproperty("ngForOf", ctx_r0.lista_nombre_solicitud_documentos);
    i0.ɵɵadvance(16);
    i0.ɵɵproperty("ngStyle", i0.ɵɵpureFunction0(2, _c0));
  }
}
function ConfigPracticaComponent_div_12_div_6_div_1_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 57);
    i0.ɵɵtext(1);
    i0.ɵɵelement(2, "br")(3, "br")(4, "textarea", 58);
    i0.ɵɵelementEnd();
  }
  if (rf & 2) {
    const pregunta_encuesta_r11 = i0.ɵɵnextContext().$implicit;
    i0.ɵɵadvance();
    i0.ɵɵtextInterpolate1(" ", pregunta_encuesta_r11, " ");
  }
}
function ConfigPracticaComponent_div_12_div_6_div_2_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 57);
    i0.ɵɵtext(1);
    i0.ɵɵelementEnd();
  }
  if (rf & 2) {
    const pregunta_encuesta_r11 = i0.ɵɵnextContext().$implicit;
    i0.ɵɵadvance();
    i0.ɵɵtextInterpolate1(" ", pregunta_encuesta_r11, " ");
  }
}
function ConfigPracticaComponent_div_12_div_6_div_3_form_19_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "form")(1, "button", 64);
    i0.ɵɵtext(2, " Eliminar Pregunta ");
    i0.ɵɵelementEnd()();
  }
}
function ConfigPracticaComponent_div_12_div_6_div_3_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div")(1, "div", 60);
    i0.ɵɵelement(2, "div", 51);
    i0.ɵɵelementStart(3, "div", 61)(4, "table")(5, "tr")(6, "div")(7, "td");
    i0.ɵɵelement(8, "i", 62);
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(9, "td")(10, "label", 63);
    i0.ɵɵtext(11, "don");
    i0.ɵɵelementEnd()()();
    i0.ɵɵelementStart(12, "div")(13, "td");
    i0.ɵɵelement(14, "i", 62);
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(15, "td")(16, "label", 63);
    i0.ɵɵtext(17, "juan");
    i0.ɵɵelementEnd()()()()()();
    i0.ɵɵelement(18, "div", 51);
    i0.ɵɵelementEnd();
    i0.ɵɵtemplate(19, ConfigPracticaComponent_div_12_div_6_div_3_form_19_Template, 3, 0, "form", 20);
    i0.ɵɵelementEnd();
  }
  if (rf & 2) {
    const ctx_r0 = i0.ɵɵnextContext(3);
    i0.ɵɵadvance(19);
    i0.ɵɵproperty("ngIf", ctx_r0.flag);
  }
}
function ConfigPracticaComponent_div_12_div_6_div_4_form_1_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "form")(1, "button", 64);
    i0.ɵɵtext(2, " Eliminar Pregunta ");
    i0.ɵɵelementEnd()();
  }
}
function ConfigPracticaComponent_div_12_div_6_div_4_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div");
    i0.ɵɵtemplate(1, ConfigPracticaComponent_div_12_div_6_div_4_form_1_Template, 3, 0, "form", 20);
    i0.ɵɵelementEnd();
  }
  if (rf & 2) {
    const ctx_r0 = i0.ɵɵnextContext(3);
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngIf", ctx_r0.flag);
  }
}
function ConfigPracticaComponent_div_12_div_6_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 54);
    i0.ɵɵtemplate(1, ConfigPracticaComponent_div_12_div_6_div_1_Template, 5, 1, "div", 55)(2, ConfigPracticaComponent_div_12_div_6_div_2_Template, 2, 1, "div", 55)(3, ConfigPracticaComponent_div_12_div_6_div_3_Template, 20, 1, "div", 20)(4, ConfigPracticaComponent_div_12_div_6_div_4_Template, 2, 1, "div", 20);
    i0.ɵɵelementEnd();
  }
  if (rf & 2) {
    const i_r12 = ctx.index;
    const ctx_r0 = i0.ɵɵnextContext(2);
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngIf", ctx_r0.tipos_preguntas_encuesta[i_r12] == "abierta");
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngIf", ctx_r0.tipos_preguntas_encuesta[i_r12] == "casillas" || ctx_r0.tipos_preguntas_encuesta[i_r12] == "alternativas");
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngIf", ctx_r0.lista_opciones_preguntas_encuesta[i_r12] != "");
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngIf", ctx_r0.lista_opciones_preguntas_encuesta[i_r12] == "");
  }
}
function ConfigPracticaComponent_div_12_form_7_form_1_div_9_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelement(0, "div");
  }
}
function ConfigPracticaComponent_div_12_form_7_form_1_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "form", 17);
    i0.ɵɵelement(1, "input", 65);
    i0.ɵɵelementStart(2, "select", 66)(3, "option", 67);
    i0.ɵɵtext(4, "Seleccione el tipo de respuesta");
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(5, "option", 69);
    i0.ɵɵtext(6, "Casillas");
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(7, "option", 70);
    i0.ɵɵtext(8, "Alternativas");
    i0.ɵɵelementEnd()();
    i0.ɵɵtemplate(9, ConfigPracticaComponent_div_12_form_7_form_1_div_9_Template, 1, 0, "div", 20);
    i0.ɵɵelementStart(10, "button", 71);
    i0.ɵɵtext(11, "Agregar Pregunta");
    i0.ɵɵelementEnd()();
  }
  if (rf & 2) {
    const ctx_r0 = i0.ɵɵnextContext(3);
    i0.ɵɵadvance(9);
    i0.ɵɵproperty("ngIf", ctx_r0.tipo_pregunta == "abierta");
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngStyle", i0.ɵɵpureFunction0(2, _c0));
  }
}
function ConfigPracticaComponent_div_12_form_7_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "form");
    i0.ɵɵtemplate(1, ConfigPracticaComponent_div_12_form_7_form_1_Template, 12, 3, "form", 16);
    i0.ɵɵelementEnd();
  }
  if (rf & 2) {
    const ctx_r0 = i0.ɵɵnextContext(2);
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngIf", ctx_r0.flag);
  }
}
function ConfigPracticaComponent_div_12_Template(rf, ctx) {
  if (rf & 1) {
    const _r10 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "div", 86)(1, "div", 14)(2, "div", 15);
    i0.ɵɵtext(3, " Preguntas Encuesta Practicantes Post-Pr\u00E1ctica ");
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(4, "div", 87);
    i0.ɵɵtext(5, " Recuerde que al estudiante ya se le consulta sobre los ramos m\u00E1s \u00FAtiles en su carrera y se le pide que califique la empresa donde realiz\u00F3 su pr\u00E1ctica. ");
    i0.ɵɵelementEnd();
    i0.ɵɵtemplate(6, ConfigPracticaComponent_div_12_div_6_Template, 5, 4, "div", 49)(7, ConfigPracticaComponent_div_12_form_7_Template, 2, 1, "form", 20);
    i0.ɵɵelementStart(8, "div", 50);
    i0.ɵɵelement(9, "div", 51);
    i0.ɵɵelementStart(10, "button", 52);
    i0.ɵɵtext(11, " Volver ");
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(12, "button", 75);
    i0.ɵɵlistener("click", function ConfigPracticaComponent_div_12_Template_button_click_12_listener() {
      i0.ɵɵrestoreView(_r10);
      const ctx_r0 = i0.ɵɵnextContext();
      return i0.ɵɵresetView(ctx_r0.avanzarDesdePreguntasEncuesta());
    });
    i0.ɵɵtext(13, " Siguiente ");
    i0.ɵɵelementEnd();
    i0.ɵɵelement(14, "div", 51);
    i0.ɵɵelementEnd()()();
  }
  if (rf & 2) {
    const ctx_r0 = i0.ɵɵnextContext();
    i0.ɵɵadvance(6);
    i0.ɵɵproperty("ngForOf", ctx_r0.lista_preguntas_encuesta);
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngIf", ctx_r0.flag);
  }
}
function ConfigPracticaComponent_div_13_div_4_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 54);
    i0.ɵɵtext(1, " Competencia Ingresada: ");
    i0.ɵɵelement(2, "br");
    i0.ɵɵtext(3);
    i0.ɵɵelement(4, "br");
    i0.ɵɵelementStart(5, "form")(6, "button", 64);
    i0.ɵɵtext(7, " Eliminar Competencia ");
    i0.ɵɵelementEnd()()();
  }
  if (rf & 2) {
    const aptitud_r14 = ctx.$implicit;
    i0.ɵɵadvance(3);
    i0.ɵɵtextInterpolate1(" ", aptitud_r14, " ");
  }
}
function ConfigPracticaComponent_div_13_Template(rf, ctx) {
  if (rf & 1) {
    const _r13 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "div", 88)(1, "div", 14)(2, "div", 15);
    i0.ɵɵtext(3, " Ingrese las competencias que el supervisor evaluar\u00E1 del practicante ");
    i0.ɵɵelementEnd();
    i0.ɵɵtemplate(4, ConfigPracticaComponent_div_13_div_4_Template, 8, 1, "div", 49);
    i0.ɵɵelement(5, "br");
    i0.ɵɵelementStart(6, "form")(7, "form", 17);
    i0.ɵɵelement(8, "input", 89);
    i0.ɵɵelementStart(9, "button", 71);
    i0.ɵɵtext(10, "Agregar Competencia");
    i0.ɵɵelementEnd()()();
    i0.ɵɵelementStart(11, "div", 50);
    i0.ɵɵelement(12, "div", 51);
    i0.ɵɵelementStart(13, "button", 52);
    i0.ɵɵtext(14, " Volver ");
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(15, "button", 75);
    i0.ɵɵlistener("click", function ConfigPracticaComponent_div_13_Template_button_click_15_listener() {
      i0.ɵɵrestoreView(_r13);
      const ctx_r0 = i0.ɵɵnextContext();
      return i0.ɵɵresetView(ctx_r0.avanzarDesdeAptitud());
    });
    i0.ɵɵtext(16, " Siguiente ");
    i0.ɵɵelementEnd();
    i0.ɵɵelement(17, "div", 51);
    i0.ɵɵelementEnd()()();
  }
  if (rf & 2) {
    const ctx_r0 = i0.ɵɵnextContext();
    i0.ɵɵadvance(4);
    i0.ɵɵproperty("ngForOf", ctx_r0.lista_aptitudes);
    i0.ɵɵadvance(5);
    i0.ɵɵproperty("ngStyle", i0.ɵɵpureFunction0(2, _c0));
  }
}
function ConfigPracticaComponent_div_14_div_4_div_1_div_1_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 57);
    i0.ɵɵtext(1);
    i0.ɵɵelement(2, "br")(3, "br")(4, "textarea", 58);
    i0.ɵɵelementEnd();
  }
  if (rf & 2) {
    const pregunta_supervisor_r16 = i0.ɵɵnextContext(2).$implicit;
    i0.ɵɵadvance();
    i0.ɵɵtextInterpolate1(" ", pregunta_supervisor_r16, " ");
  }
}
function ConfigPracticaComponent_div_14_div_4_div_1_div_2_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 57);
    i0.ɵɵtext(1);
    i0.ɵɵelementEnd();
  }
  if (rf & 2) {
    const pregunta_supervisor_r16 = i0.ɵɵnextContext(2).$implicit;
    i0.ɵɵadvance();
    i0.ɵɵtextInterpolate1(" ", pregunta_supervisor_r16, " ");
  }
}
function ConfigPracticaComponent_div_14_div_4_div_1_div_3_form_19_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "form")(1, "button", 64);
    i0.ɵɵtext(2, " Eliminar Pregunta ");
    i0.ɵɵelementEnd()();
  }
}
function ConfigPracticaComponent_div_14_div_4_div_1_div_3_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div")(1, "div", 60);
    i0.ɵɵelement(2, "div", 51);
    i0.ɵɵelementStart(3, "div", 61)(4, "table")(5, "tr")(6, "div")(7, "td");
    i0.ɵɵelement(8, "i", 62);
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(9, "td")(10, "label", 63);
    i0.ɵɵtext(11, "don");
    i0.ɵɵelementEnd()()();
    i0.ɵɵelementStart(12, "div")(13, "td");
    i0.ɵɵelement(14, "i", 62);
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(15, "td")(16, "label", 63);
    i0.ɵɵtext(17, "juan");
    i0.ɵɵelementEnd()()()()()();
    i0.ɵɵelement(18, "div", 51);
    i0.ɵɵelementEnd();
    i0.ɵɵtemplate(19, ConfigPracticaComponent_div_14_div_4_div_1_div_3_form_19_Template, 3, 0, "form", 20);
    i0.ɵɵelementEnd();
  }
  if (rf & 2) {
    const ctx_r0 = i0.ɵɵnextContext(4);
    i0.ɵɵadvance(19);
    i0.ɵɵproperty("ngIf", ctx_r0.flag);
  }
}
function ConfigPracticaComponent_div_14_div_4_div_1_div_4_form_1_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "form")(1, "button", 64);
    i0.ɵɵtext(2, " Eliminar Pregunta ");
    i0.ɵɵelementEnd()();
  }
}
function ConfigPracticaComponent_div_14_div_4_div_1_div_4_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div");
    i0.ɵɵtemplate(1, ConfigPracticaComponent_div_14_div_4_div_1_div_4_form_1_Template, 3, 0, "form", 20);
    i0.ɵɵelementEnd();
  }
  if (rf & 2) {
    const ctx_r0 = i0.ɵɵnextContext(4);
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngIf", ctx_r0.flag);
  }
}
function ConfigPracticaComponent_div_14_div_4_div_1_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 54);
    i0.ɵɵtemplate(1, ConfigPracticaComponent_div_14_div_4_div_1_div_1_Template, 5, 1, "div", 55)(2, ConfigPracticaComponent_div_14_div_4_div_1_div_2_Template, 2, 1, "div", 55)(3, ConfigPracticaComponent_div_14_div_4_div_1_div_3_Template, 20, 1, "div", 20)(4, ConfigPracticaComponent_div_14_div_4_div_1_div_4_Template, 2, 1, "div", 20);
    i0.ɵɵelementEnd();
  }
  if (rf & 2) {
    const i_r17 = i0.ɵɵnextContext().index;
    const ctx_r0 = i0.ɵɵnextContext(2);
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngIf", ctx_r0.tipos_preguntas_supervisor[i_r17] == "abierta");
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngIf", ctx_r0.tipos_preguntas_supervisor[i_r17] == "casillas" || ctx_r0.tipos_preguntas_supervisor[i_r17] == "alternativas");
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngIf", ctx_r0.lista_opciones_preguntas_supervisor[i_r17] != "");
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngIf", ctx_r0.lista_opciones_preguntas_supervisor[i_r17] == "");
  }
}
function ConfigPracticaComponent_div_14_div_4_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div");
    i0.ɵɵtemplate(1, ConfigPracticaComponent_div_14_div_4_div_1_Template, 5, 4, "div", 92);
    i0.ɵɵelementEnd();
  }
  if (rf & 2) {
    const i_r17 = ctx.index;
    const ctx_r0 = i0.ɵɵnextContext(2);
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngIf", ctx_r0.tipos_preguntas_supervisor[i_r17] != "evaluacion");
  }
}
function ConfigPracticaComponent_div_14_form_6_form_1_div_11_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelement(0, "div");
  }
}
function ConfigPracticaComponent_div_14_form_6_form_1_div_12_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelement(0, "div");
  }
}
function ConfigPracticaComponent_div_14_form_6_form_1_div_13_mat_header_cell_5_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelement(0, "mat-header-cell");
  }
}
function ConfigPracticaComponent_div_14_form_6_form_1_div_13_mat_cell_6_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "mat-cell")(1, "mat-form-field");
    i0.ɵɵelement(2, "input", 73);
    i0.ɵɵelementEnd()();
  }
}
function ConfigPracticaComponent_div_14_form_6_form_1_div_13_mat_header_cell_8_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelement(0, "mat-header-cell");
  }
}
function ConfigPracticaComponent_div_14_form_6_form_1_div_13_mat_cell_9_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "mat-cell")(1, "button", 44)(2, "mat-icon", 45);
    i0.ɵɵtext(3, "Eliminar opci\u00F3n");
    i0.ɵɵelementEnd()()();
  }
}
function ConfigPracticaComponent_div_14_form_6_form_1_div_13_mat_header_row_10_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelement(0, "mat-header-row");
  }
}
function ConfigPracticaComponent_div_14_form_6_form_1_div_13_mat_row_11_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelement(0, "mat-row");
  }
}
function ConfigPracticaComponent_div_14_form_6_form_1_div_13_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div");
    i0.ɵɵelement(1, "br");
    i0.ɵɵelementStart(2, "mat-table");
    i0.ɵɵelementContainerStart(3)(4, 72);
    i0.ɵɵtemplate(5, ConfigPracticaComponent_div_14_form_6_form_1_div_13_mat_header_cell_5_Template, 1, 0, "mat-header-cell", 36)(6, ConfigPracticaComponent_div_14_form_6_form_1_div_13_mat_cell_6_Template, 3, 0, "mat-cell", 37);
    i0.ɵɵelementContainerEnd();
    i0.ɵɵelementContainerStart(7, 38);
    i0.ɵɵtemplate(8, ConfigPracticaComponent_div_14_form_6_form_1_div_13_mat_header_cell_8_Template, 1, 0, "mat-header-cell", 36)(9, ConfigPracticaComponent_div_14_form_6_form_1_div_13_mat_cell_9_Template, 4, 0, "mat-cell", 37);
    i0.ɵɵelementContainerEnd();
    i0.ɵɵtemplate(10, ConfigPracticaComponent_div_14_form_6_form_1_div_13_mat_header_row_10_Template, 1, 0, "mat-header-row", 39)(11, ConfigPracticaComponent_div_14_form_6_form_1_div_13_mat_row_11_Template, 1, 0, "mat-row", 40);
    i0.ɵɵelementContainerEnd();
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(12, "div", 41)(13, "button", 42);
    i0.ɵɵtext(14, "Agregar Opci\u00F3n");
    i0.ɵɵelementEnd()();
    i0.ɵɵelement(15, "br");
    i0.ɵɵelementEnd();
  }
  if (rf & 2) {
    const ctx_r0 = i0.ɵɵnextContext(4);
    i0.ɵɵadvance(10);
    i0.ɵɵproperty("matHeaderRowDef", ctx_r0.displayedColumnsOpcionesPregunta);
    i0.ɵɵadvance();
    i0.ɵɵproperty("matRowDefColumns", ctx_r0.displayedColumnsOpcionesPregunta);
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngStyle", i0.ɵɵpureFunction0(3, _c0));
  }
}
function ConfigPracticaComponent_div_14_form_6_form_1_div_14_mat_header_cell_5_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelement(0, "mat-header-cell");
  }
}
function ConfigPracticaComponent_div_14_form_6_form_1_div_14_mat_cell_6_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "mat-cell")(1, "mat-form-field");
    i0.ɵɵelement(2, "input", 73);
    i0.ɵɵelementEnd()();
  }
}
function ConfigPracticaComponent_div_14_form_6_form_1_div_14_mat_header_cell_8_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelement(0, "mat-header-cell");
  }
}
function ConfigPracticaComponent_div_14_form_6_form_1_div_14_mat_cell_9_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "mat-cell")(1, "button", 44)(2, "mat-icon", 45);
    i0.ɵɵtext(3, "Eliminar opci\u00F3n");
    i0.ɵɵelementEnd()()();
  }
}
function ConfigPracticaComponent_div_14_form_6_form_1_div_14_mat_header_row_10_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelement(0, "mat-header-row");
  }
}
function ConfigPracticaComponent_div_14_form_6_form_1_div_14_mat_row_11_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelement(0, "mat-row");
  }
}
function ConfigPracticaComponent_div_14_form_6_form_1_div_14_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div");
    i0.ɵɵelement(1, "br");
    i0.ɵɵelementStart(2, "mat-table");
    i0.ɵɵelementContainerStart(3)(4, 72);
    i0.ɵɵtemplate(5, ConfigPracticaComponent_div_14_form_6_form_1_div_14_mat_header_cell_5_Template, 1, 0, "mat-header-cell", 36)(6, ConfigPracticaComponent_div_14_form_6_form_1_div_14_mat_cell_6_Template, 3, 0, "mat-cell", 37);
    i0.ɵɵelementContainerEnd();
    i0.ɵɵelementContainerStart(7, 38);
    i0.ɵɵtemplate(8, ConfigPracticaComponent_div_14_form_6_form_1_div_14_mat_header_cell_8_Template, 1, 0, "mat-header-cell", 36)(9, ConfigPracticaComponent_div_14_form_6_form_1_div_14_mat_cell_9_Template, 4, 0, "mat-cell", 37);
    i0.ɵɵelementContainerEnd();
    i0.ɵɵtemplate(10, ConfigPracticaComponent_div_14_form_6_form_1_div_14_mat_header_row_10_Template, 1, 0, "mat-header-row", 39)(11, ConfigPracticaComponent_div_14_form_6_form_1_div_14_mat_row_11_Template, 1, 0, "mat-row", 40);
    i0.ɵɵelementContainerEnd();
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(12, "div", 41)(13, "button", 42);
    i0.ɵɵtext(14, "Agregar Opci\u00F3n");
    i0.ɵɵelementEnd()();
    i0.ɵɵelement(15, "br");
    i0.ɵɵelementEnd();
  }
  if (rf & 2) {
    const ctx_r0 = i0.ɵɵnextContext(4);
    i0.ɵɵadvance(10);
    i0.ɵɵproperty("matHeaderRowDef", ctx_r0.displayedColumnsOpcionesPregunta);
    i0.ɵɵadvance();
    i0.ɵɵproperty("matRowDefColumns", ctx_r0.displayedColumnsOpcionesPregunta);
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngStyle", i0.ɵɵpureFunction0(3, _c0));
  }
}
function ConfigPracticaComponent_div_14_form_6_form_1_div_15_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelement(0, "div");
  }
}
function ConfigPracticaComponent_div_14_form_6_form_1_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "form", 17);
    i0.ɵɵelement(1, "input", 65);
    i0.ɵɵelementStart(2, "select", 93)(3, "option", 67);
    i0.ɵɵtext(4, "Seleccione el tipo de respuesta");
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(5, "option", 68);
    i0.ɵɵtext(6, "Abierta");
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(7, "option", 69);
    i0.ɵɵtext(8, "Casillas");
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(9, "option", 70);
    i0.ɵɵtext(10, "Alternativas");
    i0.ɵɵelementEnd()();
    i0.ɵɵtemplate(11, ConfigPracticaComponent_div_14_form_6_form_1_div_11_Template, 1, 0, "div", 20)(12, ConfigPracticaComponent_div_14_form_6_form_1_div_12_Template, 1, 0, "div", 20)(13, ConfigPracticaComponent_div_14_form_6_form_1_div_13_Template, 16, 4, "div", 20)(14, ConfigPracticaComponent_div_14_form_6_form_1_div_14_Template, 16, 4, "div", 20)(15, ConfigPracticaComponent_div_14_form_6_form_1_div_15_Template, 1, 0, "div", 20);
    i0.ɵɵelementStart(16, "button", 71);
    i0.ɵɵtext(17, "Agregar Pregunta");
    i0.ɵɵelementEnd()();
  }
  if (rf & 2) {
    const ctx_r0 = i0.ɵɵnextContext(3);
    i0.ɵɵadvance(11);
    i0.ɵɵproperty("ngIf", ctx_r0.tipo_pregunta == "");
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngIf", ctx_r0.tipo_pregunta == "abierta");
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngIf", ctx_r0.tipo_pregunta == "casillas");
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngIf", ctx_r0.tipo_pregunta == "alternativas");
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngIf", ctx_r0.tipo_pregunta == "evaluacion");
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngStyle", i0.ɵɵpureFunction0(6, _c0));
  }
}
function ConfigPracticaComponent_div_14_form_6_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "form");
    i0.ɵɵtemplate(1, ConfigPracticaComponent_div_14_form_6_form_1_Template, 18, 7, "form", 16);
    i0.ɵɵelementEnd();
  }
  if (rf & 2) {
    const ctx_r0 = i0.ɵɵnextContext(2);
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngIf", ctx_r0.flag);
  }
}
function ConfigPracticaComponent_div_14_Template(rf, ctx) {
  if (rf & 1) {
    const _r15 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "div", 90)(1, "div", 14)(2, "div", 15);
    i0.ɵɵtext(3, " Preguntas para que supervisor eval\u00FAe al practicante ");
    i0.ɵɵelementEnd();
    i0.ɵɵtemplate(4, ConfigPracticaComponent_div_14_div_4_Template, 2, 1, "div", 91);
    i0.ɵɵelement(5, "br");
    i0.ɵɵtemplate(6, ConfigPracticaComponent_div_14_form_6_Template, 2, 1, "form", 20);
    i0.ɵɵelementStart(7, "div", 50);
    i0.ɵɵelement(8, "div", 51);
    i0.ɵɵelementStart(9, "button", 52);
    i0.ɵɵtext(10, " Volver ");
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(11, "button", 75);
    i0.ɵɵlistener("click", function ConfigPracticaComponent_div_14_Template_button_click_11_listener() {
      i0.ɵɵrestoreView(_r15);
      const ctx_r0 = i0.ɵɵnextContext();
      return i0.ɵɵresetView(ctx_r0.avanzarDesdePreguntasSupervisor());
    });
    i0.ɵɵtext(12, " Siguiente ");
    i0.ɵɵelementEnd();
    i0.ɵɵelement(13, "div", 51);
    i0.ɵɵelementEnd()()();
  }
  if (rf & 2) {
    const ctx_r0 = i0.ɵɵnextContext();
    i0.ɵɵadvance(4);
    i0.ɵɵproperty("ngForOf", ctx_r0.lista_preguntas_supervisor);
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngIf", ctx_r0.flag);
  }
}
function ConfigPracticaComponent_div_15_button_8_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "button", 53);
    i0.ɵɵtext(1, " Terminar ");
    i0.ɵɵelementEnd();
  }
}
function ConfigPracticaComponent_div_15_button_9_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "button", 99);
    i0.ɵɵtext(1, " Terminar ");
    i0.ɵɵelementEnd();
  }
}
function ConfigPracticaComponent_div_15_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 94)(1, "div", 95)(2, "div", 96);
    i0.ɵɵtext(3, " Fin configuraci\u00F3n pr\u00E1ctica ");
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(4, "div", 50);
    i0.ɵɵelement(5, "div", 51);
    i0.ɵɵelementStart(6, "button", 52);
    i0.ɵɵtext(7, " Volver ");
    i0.ɵɵelementEnd();
    i0.ɵɵtemplate(8, ConfigPracticaComponent_div_15_button_8_Template, 2, 0, "button", 97)(9, ConfigPracticaComponent_div_15_button_9_Template, 2, 0, "button", 98);
    i0.ɵɵelement(10, "div", 51);
    i0.ɵɵelementEnd()()();
  }
  if (rf & 2) {
    const ctx_r0 = i0.ɵɵnextContext();
    i0.ɵɵadvance(8);
    i0.ɵɵproperty("ngIf", ctx_r0.currentRoute == "/configurar/blanco");
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngIf", ctx_r0.currentRoute != "/configurar/blanco");
  }
}
class ConfigPracticaComponent {
  constructor(router) {
    this.router = router;
    this.importada = false;
    this.migracion_legal = true;
    this.ids_config_informe = [];
    this.flag = true;
    this.displayedColumnsOpcionesPregunta = ["opcion_pregunta", "eliminar"];
    this.displayedColumnsHoras = ["opcion_horas", "eliminar"];
    this.displayedColumnsMeses = ["opcion_meses", "eliminar"];
    this.cant_horas = [];
    this.cant_meses = [];
    //decide que se muestra en el html
    this.estado = "configuracion_general";
    this.habilitarHoras = false;
    this.habilitarMeses = false;
    this.lista_aptitudes = [];
    this.lista_preguntas_avance = [];
    this.tipos_preguntas_avance = [];
    this.lista_opciones_preguntas_avance = [];
    this.lista_preguntas_final = [];
    this.tipos_preguntas_final = [];
    this.lista_opciones_preguntas_final = [];
    this.lista_preguntas_encuesta = [];
    this.tipos_preguntas_encuesta = [];
    this.lista_opciones_preguntas_encuesta = [];
    this.lista_preguntas_supervisor = [];
    this.tipos_preguntas_supervisor = [];
    this.lista_opciones_preguntas_supervisor = [];
    this.lista_fija_preguntas_supervisor = [];
    this.lista_nombre_solicitud_documentos = [];
    this.lista_descripcion_solicitud_documentos = [];
    this.lista_tipo_solicitud_documentos = [];
  }
  ngAfterViewInit() {
    const tour = new shepherd_js_1.default.Tour({
      useModalOverlay: true,
      defaultStepOptions: {
        classes: 'shadow-md bg-purple-dark',
        scrollTo: true,
        cancelIcon: {
          enabled: true
        }
      }
    });
    const botones = [{
      classes: 'shepherd-button-secondary',
      text: 'Salir',
      action: tour.cancel
    }, {
      classes: 'shepherd-button-primary',
      text: 'Atrás',
      action: tour.back
    }, {
      classes: 'shepherd-button-primary',
      text: 'Siguiente',
      action: tour.next
    }];
    const titulo = 'Guía configuración de prácticas';
    tour.addSteps([{
      id: 'intro',
      beforeShowPromise: function () {
        return new Promise(function (resolve) {
          setTimeout(function () {
            window.scrollTo(0, 0);
            resolve(1);
          }, 500);
        });
      },
      buttons: [{
        classes: 'shepherd-button-secondary',
        text: 'Salir',
        action: tour.cancel
      }, {
        classes: 'shepherd-button-primary',
        text: 'Siguiente',
        action: tour.next
      }],
      cancelIcon: {
        enabled: true
      },
      highlightClass: 'highlight',
      title: titulo,
      text: ['Bienvenido a la configuración de prácticas.<br>Con esta guía usted aprenderá la información que Praxus ofrece para crear distintos formatos de práctica']
    }, {
      attachTo: {
        element: '#config-general',
        on: 'bottom'
      },
      buttons: [{
        classes: 'shepherd-button-secondary',
        text: 'Salir',
        action: tour.cancel
      }, {
        classes: 'shepherd-button-primary',
        text: 'Atrás',
        action: tour.back
      }, {
        classes: 'shepherd-button-primary',
        text: 'Siguiente',
        action: () => {
          this.estado = "informe_avance";
          tour.next();
        }
      }],
      highlightClass: 'highlight',
      title: titulo,
      text: ['Configuraciones generales de las prácticas que podrán elegir los alumnos, como el nombre, cantidad de horas y meses.']
    }, {
      beforeShowPromise: function () {
        return new Promise(function (resolve) {
          if (document.getElementById("informe-avance")) {
            return resolve(1);
          }
          const interval = setInterval(function () {
            const element = document.getElementById('informe-avance');
            if (element) {
              clearInterval(interval);
              return resolve(1);
            }
          }, 100);
        });
      },
      attachTo: {
        element: '#informe-avance',
        on: 'bottom'
      },
      buttons: [{
        classes: 'shepherd-button-secondary',
        text: 'Salir',
        action: tour.cancel
      }, {
        classes: 'shepherd-button-primary',
        text: 'Atrás',
        action: () => {
          this.estado = "configuracion_general", tour.back();
        }
      }, {
        classes: 'shepherd-button-primary',
        text: 'Siguiente',
        action: () => {
          this.estado = "informe_final";
          tour.next();
        }
      }],
      highlightClass: 'highlight',
      title: titulo,
      text: ['Esta sección solo aparecerá si se seleccionó la opción de informe de avance.<br>Aca se podrá agregar, editar y eliminar las preguntas que se le harán al estudiante en los informes de avance.']
    }, {
      beforeShowPromise: function () {
        return new Promise(function (resolve) {
          if (document.getElementById("informe-final")) {
            return resolve(1);
          }
          const interval = setInterval(function () {
            const element = document.getElementById('informe-final');
            if (element) {
              clearInterval(interval);
              return resolve(1);
            }
          }, 100);
        });
      },
      attachTo: {
        element: '#informe-final',
        on: 'bottom'
      },
      buttons: [{
        classes: 'shepherd-button-secondary',
        text: 'Salir',
        action: tour.cancel
      }, {
        classes: 'shepherd-button-primary',
        text: 'Atrás',
        action: () => {
          this.estado = "informe_avance", tour.back();
        }
      }, {
        classes: 'shepherd-button-primary',
        text: 'Siguiente',
        action: () => {
          this.estado = "solicitud_documentos";
          tour.next();
        }
      }],
      highlightClass: 'highlight',
      title: titulo,
      text: ['Esta sección solo aparecerá si se seleccionó la opción de informe final.<br>Aca se podrá agregar, editar y eliminar las preguntas que se le harán al estudiante en el informes final.']
    }, {
      beforeShowPromise: function () {
        return new Promise(function (resolve) {
          if (document.getElementById("sol-doc")) {
            return resolve(1);
          }
          const interval = setInterval(function () {
            const element = document.getElementById('sol-doc');
            if (element) {
              clearInterval(interval);
              return resolve(1);
            }
          }, 100);
        });
      },
      attachTo: {
        element: '#sol-doc',
        on: 'bottom'
      },
      buttons: [{
        classes: 'shepherd-button-secondary',
        text: 'Salir',
        action: tour.cancel
      }, {
        classes: 'shepherd-button-primary',
        text: 'Atrás',
        action: () => {
          this.estado = "informe_final", tour.back();
        }
      }, {
        classes: 'shepherd-button-primary',
        text: 'Siguiente',
        action: () => {
          this.estado = "encuesta_final";
          tour.next();
        }
      }],
      highlightClass: 'highlight',
      title: titulo,
      text: ['Aca podrá configurar el tipo de documentos que los alumnos deben subir antes de terminar la práctica.']
    }, {
      beforeShowPromise: function () {
        return new Promise(function (resolve) {
          if (document.getElementById("encuesta-fin")) {
            return resolve(1);
          }
          const interval = setInterval(function () {
            const element = document.getElementById('encuesta-fin');
            if (element) {
              clearInterval(interval);
              return resolve(1);
            }
          }, 100);
        });
      },
      attachTo: {
        element: '#encuesta-fin',
        on: 'bottom'
      },
      buttons: [{
        classes: 'shepherd-button-secondary',
        text: 'Salir',
        action: tour.cancel
      }, {
        classes: 'shepherd-button-primary',
        text: 'Atrás',
        action: () => {
          this.estado = "solicitud_documentos", tour.back();
        }
      }, {
        classes: 'shepherd-button-primary',
        text: 'Siguiente',
        action: () => {
          this.estado = "aptitudes";
          tour.next();
        }
      }],
      highlightClass: 'highlight',
      title: titulo,
      text: ['Estas son las preguntas que el estudiante deberá responder al finalizar la práctica.']
    }, {
      beforeShowPromise: function () {
        return new Promise(function (resolve) {
          if (document.getElementById("aptitud")) {
            return resolve(1);
          }
          const interval = setInterval(function () {
            const element = document.getElementById('aptitud');
            if (element) {
              clearInterval(interval);
              return resolve(1);
            }
          }, 100);
        });
      },
      attachTo: {
        element: '#aptitud',
        on: 'bottom'
      },
      buttons: [{
        classes: 'shepherd-button-secondary',
        text: 'Salir',
        action: tour.cancel
      }, {
        classes: 'shepherd-button-primary',
        text: 'Atrás',
        action: () => {
          this.estado = "encuesta_final", tour.back();
        }
      }, {
        classes: 'shepherd-button-primary',
        text: 'Siguiente',
        action: () => {
          this.estado = "preguntas_supervisor";
          tour.next();
        }
      }],
      highlightClass: 'highlight',
      title: titulo,
      text: ['Esta es una pregunta obligatoria que el supervisor contestará cuando el alumno termine su práctica. Usted debe ingresar las aptitudes que el supervisor tendrá que evaluar, como puntualidad, conocimiento, etc (del 1 al 5).']
    }, {
      beforeShowPromise: function () {
        return new Promise(function (resolve) {
          if (document.getElementById("preg-supervisor")) {
            return resolve(1);
          }
          const interval = setInterval(function () {
            const element = document.getElementById('preg-supervisor');
            if (element) {
              clearInterval(interval);
              return resolve(1);
            }
          }, 100);
        });
      },
      attachTo: {
        element: '#preg-supervisor',
        on: 'bottom'
      },
      buttons: [{
        classes: 'shepherd-button-secondary',
        text: 'Salir',
        action: tour.cancel
      }, {
        classes: 'shepherd-button-primary',
        text: 'Atrás',
        action: () => {
          this.estado = "aptitudes", tour.back();
        }
      }, {
        classes: 'shepherd-button-primary',
        text: 'Siguiente',
        action: () => {
          this.estado = "fin_configuracion";
          tour.next();
        }
      }],
      highlightClass: 'highlight',
      title: titulo,
      text: ['Estas son otras preguntas opcionales con las cuales el supervisor podrá evaluar al alumno.']
    }, {
      beforeShowPromise: function () {
        return new Promise(function (resolve) {
          if (document.getElementById("fin")) {
            return resolve(1);
          }
          const interval = setInterval(function () {
            const element = document.getElementById('fin');
            if (element) {
              clearInterval(interval);
              return resolve(1);
            }
          }, 100);
        });
      },
      attachTo: {
        element: '#fin',
        on: 'bottom'
      },
      buttons: [{
        classes: 'shepherd-button-primary',
        text: 'Atrás',
        action: () => {
          this.estado = "preguntas_supervisor", tour.back();
        }
      }, {
        classes: 'shepherd-button-primary',
        text: 'Finalizar',
        action: () => {
          window.location.href = "/configurar/blanco";
        }
      }],
      highlightClass: 'highlight',
      title: titulo,
      text: ['Una vez que se han configurado todas las opciones, se deben confirmar los cambios.']
    }]);
    tour.start();
  }
  avanzarDesdePreguntasAvance() {
    if (this.informeFinal == "si") {
      this.estado = "informe_final";
    } else {
      this.estado = "solicitud_documentos";
    }
    this.pregunta = "";
  }
  avanzarDesdePreguntasFinal() {
    this.estado = "solicitud_documentos";
  }
  avanzarDesdeSolicitudDocumentos() {
    this.estado = "encuesta_final";
  }
  avanzarDesdePreguntasEncuesta() {
    this.estado = "aptitudes";
  }
  avanzarDesdeAptitud() {
    this.estado = "preguntas_supervisor";
  }
  avanzarDesdePreguntasSupervisor() {
    this.estado = "fin_configuracion";
  }
  static {
    this.ɵfac = function ConfigPracticaComponent_Factory(__ngFactoryType__) {
      return new (__ngFactoryType__ || ConfigPracticaComponent)(i0.ɵɵdirectiveInject(i1.Router));
    };
  }
  static {
    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({
      type: ConfigPracticaComponent,
      selectors: [["app-config-practica"]],
      decls: 16,
      vars: 8,
      consts: [["id", "wrapper"], ["id", "content-wrapper", 1, "d-flex", "flex-column"], ["id", "content"], ["id", "content", 1, "main-content"], [1, "container-fluid"], ["class", "card shadow", "id", "config-general", 4, "ngIf"], ["class", "card shadow", "id", "informe-avance", 4, "ngIf"], ["class", "card shadow", "id", "informe-final", 4, "ngIf"], ["class", "card shadow", "id", "sol-doc", 4, "ngIf"], ["class", "card shadow", "id", "encuesta-fin", 4, "ngIf"], ["class", "card shadow", "id", "aptitud", 4, "ngIf"], ["class", "card shadow", "id", "preg-supervisor", 4, "ngIf"], ["class", "card shadow", "id", "fin", 4, "ngIf"], ["id", "config-general", 1, "card", "shadow"], [1, "card-body", "text-center"], [1, "h3", "mb-3", "font-weight-bold", "text-gray-800", "text-center"], ["class", "formulario", 4, "ngIf"], [1, "formulario"], ["type", "text", "placeholder", "Primera pr\u00E1ctica", 1, "form-control", "text-center", "input-center"], ["type", "checkbox", 2, "margin-right", "3px"], [4, "ngIf"], [1, "form-check", "form-check-inline"], ["type", "radio", "name", "frecuenciaInformes", "id", "informeDiario", "value", "diario", 1, "form-check-input"], ["for", "informeDiario", 1, "form-check-label"], ["type", "radio", "name", "frecuenciaInformes", "id", "infomreSemanal", "value", "semanal", 1, "form-check-input"], ["for", "infomreSemanal", 1, "form-check-label"], ["type", "radio", "name", "frecuenciaInformes", "id", "informeMensual", "value", "mensual", 1, "form-check-input"], ["for", "informeMensual", 1, "form-check-label"], ["type", "radio", "name", "frecuenciaInformes", "id", "sinAvance", "value", "sinAvance", 1, "form-check-input"], ["for", "sinAvance", 1, "form-check-label"], ["type", "radio", "name", "informeFinal", "id", "informeFinalSI", "value", "si", 1, "form-check-input"], ["for", "informeFinalSI", 1, "form-check-label"], ["type", "radio", "name", "informeFinal", "id", "informeFinalNO", "value", "no", 1, "form-check-input"], ["for", "informeFinalNO", 1, "form-check-label"], ["type", "submit", 1, "btn", "btn-primary", "btn-user", "btn-md"], ["matColumnDef", "opcion_horas"], [4, "matHeaderCellDef"], [4, "matCellDef"], ["matColumnDef", "eliminar"], [4, "matHeaderRowDef"], [4, "matRowDef", "matRowDefColumns"], [1, "button"], ["mat-raised-button", "", "type", "button", 3, "ngStyle"], ["matInput", "", "placeholder", "Agregar opci\u00F3n de horas"], ["type", "button", 1, "btn", "btn-secondary"], ["matSuffix", ""], ["matColumnDef", "opcion_meses"], ["matInput", "", "placeholder", "Agregar opci\u00F3n de meses"], ["id", "informe-avance", 1, "card", "shadow"], ["class", "pregunta", 4, "ngFor", "ngForOf"], [1, "row", "mt-5", "mb-3", "align-items-end"], [1, "col-4"], [1, "btn", "btn-primary", "btn-user", "btn-block", "btn-md", "col-2", 2, "margin-right", "20px"], [1, "btn", "btn-primary", "btn-user", "btn-block", "btn-md", "col-2"], [1, "pregunta"], ["class", "h5 mb-3 font-weight-bold text-gray-800 text-center", 4, "ngIf"], ["class", "form-check", 4, "ngIf"], [1, "h5", "mb-3", "font-weight-bold", "text-gray-800", "text-center"], ["cols", "30", "rows", "5", "placeholder", "Ingrese respuesta...", "disabled", "", 1, "form-control", "input-center", "text-area"], [1, "form-check"], [1, "row"], [1, "col-4", "d-flex", "justify-content-center"], [1, "far", "fa-circle", "mr-1"], [1, "form-check-label"], [1, "btn", "btn-secondary"], ["type", "text", "placeholder", "Ingresar Pregunta", 1, "form-control", "input-center"], ["name", "tipo", "id", "tipo", 1, "form-select", "form-select-sm", "mb-4", "input-center"], ["value", "0"], ["value", "1"], ["value", "2"], ["value", "3"], ["mat-raised-button", "", "type", "submit", 1, "btn-save", 3, "ngStyle"], ["matColumnDef", "opcion_pregunta"], ["matInput", "", "placeholder", "Escribir opci\u00F3n"], ["id", "informe-final", 1, "card", "shadow"], [1, "btn", "btn-primary", "btn-user", "btn-block", "btn-md", "col-2", 3, "click"], ["cols", "30", "rows", "5", "placeholder", "Ingrese respuesta...", "disabled", "", 1, "form-control", "text-area", "input-center", 2, "width", "auto"], ["id", "sol-doc", 1, "card", "shadow"], ["type", "text", "placeholder", "Nombre solicitud", 1, "form-control", "input-center"], ["rows", "3", "placeholder", "Descripci\u00F3n solicitud", 1, "form-control", "input-center", "text-area"], ["for", "dropdown"], ["id", "dropdown", "placeholder", "Tipo documento", 1, "form-select", "input-center"], ["value", "pdf"], ["value", "jpg"], ["value", "xlsx"], ["value", "docx"], ["id", "encuesta-fin", 1, "card", "shadow"], [1, "h5", "mb-3", "text-gray-800", "mx-auto", "w-50", "text-center"], ["id", "aptitud", 1, "card", "shadow"], ["type", "text", "placeholder", "Ingresar Competencia", 1, "form-control", "input-center"], ["id", "preg-supervisor", 1, "card", "shadow"], [4, "ngFor", "ngForOf"], ["class", "pregunta", 4, "ngIf"], ["name", "tipo", "id", "tipo", 1, "form-select", "form-select-sm", "input-center"], ["id", "fin", 1, "card", "shadow"], [1, "card-body"], [1, "h4", "mb-3", "font-weight-bold", "text-gray-800", "text-center"], ["class", "btn btn-primary btn-user btn-block btn-md col-2", 4, "ngIf"], ["data-toggle", "modal", "data-target", "#migrarModal", "class", "btn btn-primary btn-user btn-block btn-md col-2", 4, "ngIf"], ["data-toggle", "modal", "data-target", "#migrarModal", 1, "btn", "btn-primary", "btn-user", "btn-block", "btn-md", "col-2"]],
      template: function ConfigPracticaComponent_Template(rf, ctx) {
        if (rf & 1) {
          i0.ɵɵelementStart(0, "div", 0);
          i0.ɵɵelement(1, "app-barra-lateral-encargado");
          i0.ɵɵelementStart(2, "div", 1)(3, "div", 2);
          i0.ɵɵelement(4, "app-barra-superior");
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(5, "div", 1)(6, "div", 3)(7, "div", 4);
          i0.ɵɵtemplate(8, ConfigPracticaComponent_div_8_Template, 5, 1, "div", 5)(9, ConfigPracticaComponent_div_9_Template, 14, 2, "div", 6)(10, ConfigPracticaComponent_div_10_Template, 14, 2, "div", 7)(11, ConfigPracticaComponent_div_11_Template, 29, 3, "div", 8)(12, ConfigPracticaComponent_div_12_Template, 15, 2, "div", 9)(13, ConfigPracticaComponent_div_13_Template, 18, 3, "div", 10)(14, ConfigPracticaComponent_div_14_Template, 14, 2, "div", 11)(15, ConfigPracticaComponent_div_15_Template, 11, 2, "div", 12);
          i0.ɵɵelementEnd()()()()();
        }
        if (rf & 2) {
          i0.ɵɵadvance(8);
          i0.ɵɵproperty("ngIf", ctx.estado == "configuracion_general");
          i0.ɵɵadvance();
          i0.ɵɵproperty("ngIf", ctx.estado == "informe_avance");
          i0.ɵɵadvance();
          i0.ɵɵproperty("ngIf", ctx.estado == "informe_final");
          i0.ɵɵadvance();
          i0.ɵɵproperty("ngIf", ctx.estado == "solicitud_documentos");
          i0.ɵɵadvance();
          i0.ɵɵproperty("ngIf", ctx.estado == "encuesta_final");
          i0.ɵɵadvance();
          i0.ɵɵproperty("ngIf", ctx.estado == "aptitudes");
          i0.ɵɵadvance();
          i0.ɵɵproperty("ngIf", ctx.estado == "preguntas_supervisor");
          i0.ɵɵadvance();
          i0.ɵɵproperty("ngIf", ctx.estado == "fin_configuracion");
        }
      },
      dependencies: [i2.NgForOf, i2.NgIf, i2.NgStyle, i3.MatButton, i4.MatInput, i5.MatFormField, i5.MatSuffix, i6.ɵNgNoValidate, i6.NgSelectOption, i6.ɵNgSelectMultipleOption, i6.NgControlStatusGroup, i6.NgForm, i7.MatTable, i7.MatHeaderCellDef, i7.MatHeaderRowDef, i7.MatColumnDef, i7.MatCellDef, i7.MatRowDef, i7.MatHeaderCell, i7.MatCell, i7.MatHeaderRow, i7.MatRow, i8.BarraSuperiorComponent, i9.BarraLateralEncargadoComponent],
      styles: [".input-center[_ngcontent-%COMP%] {\n  width: auto;\n  margin: 0 auto;\n  margin-bottom: 5px;\n}\n\n.pregunta[_ngcontent-%COMP%] {\n  background-color: #f5f5f5;\n  padding: 10px;\n  border: 1px solid #e3e3e3;\n  margin: 10px;\n  margin-bottom: 10px;\n}\n\n.text-area[_ngcontent-%COMP%] {\n  height: 10%;\n  resize: none;\n  background-color: white;\n}\n\ntd[_ngcontent-%COMP%] {\n  text-align: center;\n}\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvdmlzdGFzL3dpemFyZHMvY29uZmlnLXByYWN0aWNhL2NvbmZpZy1wcmFjdGljYS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLFdBQUE7RUFDQSxjQUFBO0VBQ0Esa0JBQUE7QUFDSjs7QUFFQTtFQUNJLHlCQUFBO0VBQ0EsYUFBQTtFQUNBLHlCQUFBO0VBQ0EsWUFBQTtFQUNBLG1CQUFBO0FBQ0o7O0FBRUE7RUFDSSxXQUFBO0VBQ0EsWUFBQTtFQUNBLHVCQUFBO0FBQ0o7O0FBRUE7RUFDSSxrQkFBQTtBQUNKIiwic291cmNlc0NvbnRlbnQiOlsiLmlucHV0LWNlbnRlciB7XG4gICAgd2lkdGg6IGF1dG87XG4gICAgbWFyZ2luOiAwIGF1dG87XG4gICAgbWFyZ2luLWJvdHRvbTogNXB4O1xufVxuXG4ucHJlZ3VudGEge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNmNWY1ZjU7XG4gICAgcGFkZGluZzogMTBweDtcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjZTNlM2UzO1xuICAgIG1hcmdpbjogMTBweDtcbiAgICBtYXJnaW4tYm90dG9tOiAxMHB4O1xufVxuXG4udGV4dC1hcmVhIHtcbiAgICBoZWlnaHQ6IDEwJTtcbiAgICByZXNpemU6IG5vbmU7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XG59XG5cbnRkIHtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59Il0sInNvdXJjZVJvb3QiOiIifQ== */"]
    });
  }
}
exports.ConfigPracticaComponent = ConfigPracticaComponent;

/***/ }),

/***/ 36126:
/*!***********************************************************************************!*\
  !*** ./src/app/vistas/wizards/detalle-estudiante/detalle-estudiante.component.ts ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.DetalleEstudianteComponent = void 0;
const shepherd_js_1 = __webpack_require__(/*! shepherd.js */ 84242);
const i0 = __webpack_require__(/*! @angular/core */ 37580);
const i1 = __webpack_require__(/*! ../../../componentes/barra-superior/barra-superior.component */ 36370);
const i2 = __webpack_require__(/*! ../../../componentes/logout-modal/logout-modal.component */ 15562);
const i3 = __webpack_require__(/*! ../../../componentes/barra-lateral-encargado/barra-lateral-encargado.component */ 43560);
function DetalleEstudianteComponent_ng_template_244_Template(rf, ctx) {
  if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 73)(1, "span", 74);
    i0.ɵɵtext(2, "Loading...");
    i0.ɵɵelementEnd()();
  }
}
class DetalleEstudianteComponent {
  ngAfterViewInit() {
    const tour = new shepherd_js_1.default.Tour({
      useModalOverlay: true,
      defaultStepOptions: {
        classes: 'shadow-md bg-purple-dark',
        scrollTo: true,
        cancelIcon: {
          enabled: true
        }
      }
    });
    const botones = [{
      classes: 'shepherd-button-secondary',
      text: 'Salir',
      action: tour.cancel
    }, {
      classes: 'shepherd-button-primary',
      text: 'Atrás',
      action: tour.back
    }, {
      classes: 'shepherd-button-primary',
      text: 'Siguiente',
      action: tour.next
    }];
    const titulo = 'Guía de detalles de práctica';
    tour.addSteps([{
      id: 'intro',
      beforeShowPromise: function () {
        return new Promise(function (resolve) {
          setTimeout(function () {
            window.scrollTo(0, 0);
            resolve(1);
          }, 500);
        });
      },
      buttons: [{
        classes: 'shepherd-button-secondary',
        text: 'Salir',
        action: tour.cancel
      }, {
        classes: 'shepherd-button-primary',
        text: 'Siguiente',
        action: tour.next
      }],
      cancelIcon: {
        enabled: true
      },
      highlightClass: 'highlight',
      title: titulo,
      text: ['En esta sección usted podrá ver la información detallada de la práctica del estudiante.']
    }, {
      attachTo: {
        element: "#datos_generales",
        on: 'bottom'
      },
      buttons: botones,
      cancelIcon: {
        enabled: true
      },
      highlightClass: 'highlight',
      title: titulo,
      text: ['Tales como: Datos sobre la empresa y la práctica.']
    }, {
      attachTo: {
        element: "#acciones",
        on: 'bottom'
      },
      buttons: botones,
      cancelIcon: {
        enabled: true
      },
      highlightClass: 'highlight',
      title: titulo,
      text: ['Acciones importantes.']
    }, {
      attachTo: {
        element: "#info_general",
        on: 'bottom'
      },
      buttons: botones,
      cancelIcon: {
        enabled: true
      },
      highlightClass: 'highlight',
      title: titulo,
      text: ['Información general de la práctica.']
    }, {
      attachTo: {
        element: "#informes",
        on: 'bottom'
      },
      buttons: botones,
      cancelIcon: {
        enabled: true
      },
      highlightClass: 'highlight',
      title: titulo,
      text: ['Informes realizados por el estudiante.']
    }, {
      attachTo: {
        element: "#archivos",
        on: 'bottom'
      },
      buttons: botones,
      cancelIcon: {
        enabled: true
      },
      highlightClass: 'highlight',
      title: titulo,
      text: ['Documentos solicitados al estudiante y junto a la opción de descargarlos si fueron subidos a la plataforma.']
    }, {
      attachTo: {
        element: "#evaluacion",
        on: 'bottom'
      },
      buttons: botones,
      cancelIcon: {
        enabled: true
      },
      highlightClass: 'highlight',
      title: titulo,
      text: ['Las evaluaciones del supervisor en caso de estar disponibles.']
    }, {
      attachTo: {
        element: "#resena",
        on: 'bottom'
      },
      buttons: botones,
      cancelIcon: {
        enabled: true
      },
      highlightClass: 'highlight',
      title: titulo,
      text: ['Las respuestas del supervisor en caso de estar disponibles.']
    }, {
      attachTo: {
        element: "#consistencias",
        on: 'bottom'
      },
      buttons: botones,
      cancelIcon: {
        enabled: true
      },
      highlightClass: 'highlight',
      title: titulo,
      text: ['Los textos más relevantes del estudiante y del supervisor.']
    }, {
      id: 'end',
      buttons: [{
        classes: 'shepherd-button-secondary',
        text: 'Salir',
        action: tour.cancel
      }, {
        classes: 'shepherd-button-primary',
        text: 'Atrás',
        action: tour.back
      }, {
        classes: 'shepherd-button-success',
        text: 'Finalizar Tour',
        action: () => {
          window.location.href = "/practicas";
        }
      }],
      cancelIcon: {
        enabled: true
      },
      highlightClass: 'highlight',
      title: titulo,
      text: ['Gracias por preferir Praxus. No dude en volver a consultar la guía en caso de dudas.']
    }]);
    tour.start();
  }
  static {
    this.ɵfac = function DetalleEstudianteComponent_Factory(__ngFactoryType__) {
      return new (__ngFactoryType__ || DetalleEstudianteComponent)();
    };
  }
  static {
    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({
      type: DetalleEstudianteComponent,
      selectors: [["app-detalle-estudiante"]],
      decls: 305,
      vars: 0,
      consts: [["pdfTable2", ""], ["supervisor_data", ""], ["id", "page-top"], ["id", "wrapper"], ["id", "content-wrapper", 1, "d-flex", "flex-column"], ["id", "content", 1, "main-content"], ["id", "pdfTable2", 1, "container-fluid"], [1, "row"], [1, "col-lg-9"], [1, "h3", "mb-2", "text-gray-800"], [1, "col-lg-1", "d-flex", "justify-content-end", "align-items-center"], ["type", "button", 1, "btn", "btn-primary", "btn-md", "btn-block"], [1, "col-lg-2", "d-flex", "justify-content-end", "align-items-center"], ["id", "datos_generales", 1, "row"], [1, "col-xl-3", "col-md-6", "mb-4"], [1, "card", "border-left-primary", "shadow", "h-100", "py-2"], [1, "card-body"], [1, "row", "no-gutters", "align-items-center"], [1, "col", "mr-2"], [1, "text-xs", "font-weight-bold", "text-primary", "text-uppercase", "mb-1"], [1, "h5", "mb-0", "font-weight-bold", "text-gray-800"], [1, "col-auto"], [1, "card", "border-left-success", "shadow", "h-100", "py-2"], [1, "text-xs", "font-weight-bold", "text-success", "text-uppercase", "mb-1"], [1, "card", "border-left-warning", "shadow", "h-100", "py-2"], [1, "text-xs", "font-weight-bold", "text-warning", "text-uppercase", "mb-1"], [1, "card", "border-left-info", "shadow", "h-100", "py-2"], [1, "text-xs", "font-weight-bold", "text-info", "text-uppercase", "mb-1"], ["id", "acciones", 1, "row"], [1, "col-12", "col-lg-4", 2, "margin-bottom", "20px"], ["type", "button", 1, "btn", "btn-success", "btn-lg", "btn-block"], ["type", "button", 1, "btn", "btn-secondary", "btn-lg", "btn-block"], [1, "btn", "btn-primary", "btn-lg", "btn-block"], [1, "col-lg-12"], ["id", "info_general", 1, "card", "shadow", "mb-4"], ["href", "#collapseCardGeneral", "data-toggle", "collapse", "role", "button", "aria-expanded", "true", "aria-controls", "collapseCardGeneral", 1, "d-block", "card-header", "py-3"], [1, "m-0", "font-weight-bold", "text-primary"], ["id", "collapseCardGeneral", 1, "collapse", "show"], [1, "col-6"], ["id", "informes", 1, "col-lg-6"], [1, "card", "shadow", "mb-4"], ["href", "#collapseCardInformes", "data-toggle", "collapse", "role", "button", "aria-expanded", "true", "aria-controls", "collapseCardInformes", 1, "d-block", "card-header", "py-3"], ["id", "collapseCardInformes", 1, "collapse", "show"], [1, "overflow-auto"], [1, "table-responsive"], ["id", "dataTable", "width", "100%", "cellspacing", "0", 1, "table", "table-bordered", "hoverTable"], [1, "nostyle"], [1, "btn", "btn-primary", "btn-sm", "btn-block"], [1, "col-lg-6"], ["id", "archivos", 1, "card", "shadow", "mb-4"], ["href", "#collapseCardArchivos", "data-toggle", "collapse", "role", "button", "aria-expanded", "true", "aria-controls", "collapseCardArchivos", 1, "d-block", "card-header", "py-3"], ["id", "collapseCardArchivos", 1, "collapse", "show"], ["id", "evaluacion", 1, "col-lg-6"], ["href", "#collapseCardEvaluacion", "data-toggle", "collapse", "role", "button", "aria-expanded", "true", "aria-controls", "collapseCardEvaluacion", 1, "d-block", "card-header", "py-3"], ["id", "collapseCardEvaluacion", 1, "collapse", "show"], ["id", "resena", 1, "card", "shadow", "mb-4"], ["href", "#collapseCardSupervisor", "data-toggle", "collapse", "role", "button", "aria-expanded", "true", "aria-controls", "collapseCardSupervisor", 1, "d-block", "card-header", "py-3"], ["id", "collapseCardSupervisor", 1, "collapse", "show"], [2, "vertical-align", "middle"], ["id", "consistencias", 1, "col-lg-12"], ["href", "#collapseCardConsistencias", "data-toggle", "collapse", "role", "button", "aria-expanded", "true", "aria-controls", "collapseCardConsistencias", 1, "d-block", "card-header", "py-3"], ["id", "collapseCardConsistencias", 1, "collapse", "show"], [1, "overflow-auto_consistencia"], [1, "row", 2, "max-width", "100%"], [1, "col-xl-3"], [1, "col-xl-2", "col-md-6", "mb-4"], [1, "col-xl-2"], [1, "col-xl-1"], [1, "col-xl-5"], ["id", "resumen_informes"], ["id", "resumen_supervisor"], ["href", "#page-top", 1, "scroll-to-top", "rounded"], [1, "fas", "fa-angle-up"], ["role", "status", 1, "spinner-border"], [1, "sr-only"]],
      template: function DetalleEstudianteComponent_Template(rf, ctx) {
        if (rf & 1) {
          i0.ɵɵelementStart(0, "body", 2)(1, "div", 3);
          i0.ɵɵelement(2, "app-barra-lateral-encargado");
          i0.ɵɵelementStart(3, "div", 4)(4, "div", 5);
          i0.ɵɵelement(5, "app-barra-superior");
          i0.ɵɵelementStart(6, "div", 6, 0)(8, "div", 7)(9, "div", 8)(10, "h1", 9);
          i0.ɵɵtext(11, " Eduardo Lazo ");
          i0.ɵɵelement(12, "br");
          i0.ɵɵtext(13, " Pr\u00E1ctica Profesional");
          i0.ɵɵelementEnd()();
          i0.ɵɵelementStart(14, "div", 10)(15, "button", 11);
          i0.ɵɵtext(16, "Volver");
          i0.ɵɵelementEnd()();
          i0.ɵɵelementStart(17, "div", 12)(18, "button", 11);
          i0.ɵɵtext(19, "Descargar Resumen PDF");
          i0.ɵɵelementEnd()()();
          i0.ɵɵelement(20, "br");
          i0.ɵɵelementStart(21, "div", 13)(22, "div", 14)(23, "div", 15)(24, "div", 16)(25, "div", 17)(26, "div", 18)(27, "div", 19);
          i0.ɵɵtext(28, " Estado");
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(29, "div", 20);
          i0.ɵɵtext(30, " Evaluada ");
          i0.ɵɵelementEnd()();
          i0.ɵɵelement(31, "div", 21);
          i0.ɵɵelementEnd()()()();
          i0.ɵɵelementStart(32, "div", 14)(33, "div", 22)(34, "div", 16)(35, "div", 17)(36, "div", 18)(37, "div", 23);
          i0.ɵɵtext(38, " Empresa");
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(39, "div", 20);
          i0.ɵɵtext(40, "Microsoft");
          i0.ɵɵelementEnd()();
          i0.ɵɵelement(41, "div", 21);
          i0.ɵɵelementEnd()()()();
          i0.ɵɵelementStart(42, "div", 14)(43, "div", 24)(44, "div", 16)(45, "div", 17)(46, "div", 18)(47, "div", 25);
          i0.ɵɵtext(48, " Supervisor");
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(49, "div", 20);
          i0.ɵɵtext(50, " Alan Brito");
          i0.ɵɵelementEnd()();
          i0.ɵɵelement(51, "div", 21);
          i0.ɵɵelementEnd()()()();
          i0.ɵɵelementStart(52, "div", 14)(53, "div", 26)(54, "div", 16)(55, "div", 17)(56, "div", 18)(57, "div", 27);
          i0.ɵɵtext(58, " Modalidad");
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(59, "div", 20);
          i0.ɵɵtext(60, "meses");
          i0.ɵɵelementEnd()();
          i0.ɵɵelement(61, "div", 21);
          i0.ɵɵelementEnd()()()()();
          i0.ɵɵelementStart(62, "div", 28)(63, "div", 29)(64, "button", 30);
          i0.ɵɵtext(65, " Aprobar ");
          i0.ɵɵelementEnd()();
          i0.ɵɵelementStart(66, "div", 29)(67, "button", 31);
          i0.ɵɵtext(68, " Reprobar ");
          i0.ɵɵelementEnd()();
          i0.ɵɵelementStart(69, "div", 29)(70, "button", 32);
          i0.ɵɵtext(71, "Solicitar Archivo Extra");
          i0.ɵɵelementEnd()()();
          i0.ɵɵelementStart(72, "div", 7)(73, "div", 33)(74, "div", 34)(75, "a", 35)(76, "h6", 36);
          i0.ɵɵtext(77, "Informaci\u00F3n General");
          i0.ɵɵelementEnd()();
          i0.ɵɵelementStart(78, "div", 37)(79, "div", 16)(80, "div", 7)(81, "div", 38);
          i0.ɵɵtext(82, " Correo Estudiante: ");
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(83, "div", 38);
          i0.ɵɵtext(84, " correo_estudiante@dominio.cl ");
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(85, "div", 38);
          i0.ɵɵtext(86, " Correo Supervisor: ");
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(87, "div", 38);
          i0.ɵɵtext(88, " correo_supervisor@dominio.cl ");
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(89, "div", 38);
          i0.ɵɵtext(90, " Horas Trabajadas: ");
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(91, "div", 38);
          i0.ɵɵtext(92, " 180 ");
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(93, "div", 38);
          i0.ɵɵtext(94, " Fecha Inicio: ");
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(95, "div", 38);
          i0.ɵɵtext(96, " 01/06/2023 ");
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(97, "div", 38);
          i0.ɵɵtext(98, " Fecha Termino: ");
          i0.ɵɵelementEnd()()()()()()();
          i0.ɵɵelementStart(99, "div", 7)(100, "div", 39)(101, "div", 40)(102, "a", 41)(103, "h6", 36);
          i0.ɵɵtext(104, "Informes Realizados");
          i0.ɵɵelementEnd()();
          i0.ɵɵelementStart(105, "div", 42)(106, "div", 16)(107, "div", 43)(108, "div", 44)(109, "table", 45)(110, "thead")(111, "tr")(112, "th");
          i0.ɵɵtext(113, "Tipo");
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(114, "th");
          i0.ɵɵtext(115, "Horas Trabajadas");
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(116, "th");
          i0.ɵɵtext(117, "Fecha Subido");
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(118, "th");
          i0.ɵɵtext(119, "Ver Informe");
          i0.ɵɵelementEnd()()();
          i0.ɵɵelementStart(120, "tbody")(121, "tr")(122, "td");
          i0.ɵɵtext(123, "informe avance");
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(124, "td");
          i0.ɵɵtext(125, "100");
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(126, "td");
          i0.ɵɵtext(127, "30/06/2023");
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(128, "td")(129, "a", 46)(130, "button", 47);
          i0.ɵɵtext(131, " Ver Informe ");
          i0.ɵɵelementEnd()()()();
          i0.ɵɵelementStart(132, "tr")(133, "td");
          i0.ɵɵtext(134, "informe final");
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(135, "td");
          i0.ɵɵtext(136, "20");
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(137, "td");
          i0.ɵɵtext(138, "30/07/2023");
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(139, "td")(140, "a", 46)(141, "button", 47);
          i0.ɵɵtext(142, " Ver Informe ");
          i0.ɵɵelementEnd()()()()()()()()()()()();
          i0.ɵɵelementStart(143, "div", 48)(144, "div", 49)(145, "a", 50)(146, "h6", 36);
          i0.ɵɵtext(147, "Solicitudes de Archivos");
          i0.ɵɵelementEnd()();
          i0.ɵɵelementStart(148, "div", 51)(149, "div", 16)(150, "div", 43)(151, "div", 44)(152, "table", 45)(153, "thead")(154, "tr")(155, "th");
          i0.ɵɵtext(156, "Archivo");
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(157, "th");
          i0.ɵɵtext(158, "Formato");
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(159, "th");
          i0.ɵɵtext(160, "Tipo Solicitud");
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(161, "th");
          i0.ɵɵtext(162, "Descargar");
          i0.ɵɵelementEnd()()();
          i0.ɵɵelementStart(163, "tbody")(164, "tr")(165, "td");
          i0.ɵɵtext(166, "Boleta honorarios Junio");
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(167, "td");
          i0.ɵɵtext(168, "pdf");
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(169, "td");
          i0.ɵɵtext(170, "Normal");
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(171, "td")(172, "button", 47);
          i0.ɵɵtext(173, "Descargar");
          i0.ɵɵelementEnd()()();
          i0.ɵɵelementStart(174, "tr")(175, "td");
          i0.ɵɵtext(176, "Seguro firmado por la empresa");
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(177, "td");
          i0.ɵɵtext(178, "pdf,png");
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(179, "td");
          i0.ɵɵtext(180, "Extra");
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(181, "td")(182, "b");
          i0.ɵɵtext(183, "No subido a\u00FAn");
          i0.ɵɵelementEnd()()()()()()()()()()()();
          i0.ɵɵelementStart(184, "div", 7)(185, "div", 52)(186, "div", 40)(187, "a", 53)(188, "h6", 36);
          i0.ɵɵtext(189, "Evaluaci\u00F3n del Supervisor");
          i0.ɵɵelementEnd()();
          i0.ɵɵelementStart(190, "div", 54)(191, "div", 16)(192, "div", 43)(193, "div", 44)(194, "table", 45)(195, "thead")(196, "tr")(197, "th");
          i0.ɵɵtext(198, "Competencia");
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(199, "th");
          i0.ɵɵtext(200, "Evaluaci\u00F3n");
          i0.ɵɵelementEnd()()();
          i0.ɵɵelementStart(201, "tbody")(202, "tr")(203, "th");
          i0.ɵɵtext(204, "Esforzado");
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(205, "th");
          i0.ɵɵtext(206, "5");
          i0.ɵɵelementEnd()();
          i0.ɵɵelementStart(207, "tr")(208, "th");
          i0.ɵɵtext(209, "Puntual");
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(210, "th");
          i0.ɵɵtext(211, "4");
          i0.ɵɵelementEnd()();
          i0.ɵɵelementStart(212, "tr")(213, "th");
          i0.ɵɵtext(214, "Responsable");
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(215, "th");
          i0.ɵɵtext(216, "4");
          i0.ɵɵelementEnd()();
          i0.ɵɵelementStart(217, "tr")(218, "th");
          i0.ɵɵtext(219, "Promedio");
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(220, "th");
          i0.ɵɵtext(221, "4,33");
          i0.ɵɵelementEnd()()()()()()()()()();
          i0.ɵɵelementStart(222, "div", 48)(223, "div", 55)(224, "a", 56)(225, "h6", 36);
          i0.ɵɵtext(226, "Rese\u00F1as del Supervisor");
          i0.ɵɵelementEnd()();
          i0.ɵɵelementStart(227, "div", 57)(228, "div", 16)(229, "div", 43)(230, "div", 44)(231, "table", 45)(232, "thead")(233, "tr")(234, "th");
          i0.ɵɵtext(235, "Enunciado");
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(236, "th");
          i0.ɵɵtext(237, "Respuesta");
          i0.ɵɵelementEnd()()();
          i0.ɵɵelementStart(238, "tbody")(239, "tr")(240, "td", 58);
          i0.ɵɵtext(241, "Resuma las actividades del practicante");
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(242, "td", 58);
          i0.ɵɵtext(243, " Es practicante realiz\u00F3 todo tipo de tareas en terreno y oficina. Se desempe\u00F1\u00F3 de manera excelente en todas las tareas que se le asignaron. ");
          i0.ɵɵelementEnd()()()()()()();
          i0.ɵɵtemplate(244, DetalleEstudianteComponent_ng_template_244_Template, 3, 0, "ng-template", null, 1, i0.ɵɵtemplateRefExtractor);
          i0.ɵɵelementEnd()()()();
          i0.ɵɵelementStart(246, "div", 7)(247, "div", 59)(248, "div", 40)(249, "a", 60)(250, "h6", 36);
          i0.ɵɵtext(251, "Consistencia de Informes");
          i0.ɵɵelementEnd()();
          i0.ɵɵelementStart(252, "div", 61)(253, "div", 16)(254, "div", 62)(255, "div", 63);
          i0.ɵɵelement(256, "div", 64);
          i0.ɵɵelementStart(257, "div", 65)(258, "div", 22)(259, "div", 16)(260, "div", 17)(261, "div", 18)(262, "div", 23);
          i0.ɵɵtext(263, " Consistencia Informe");
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(264, "div", 20);
          i0.ɵɵtext(265, " 23% ");
          i0.ɵɵelementEnd()();
          i0.ɵɵelement(266, "div", 21);
          i0.ɵɵelementEnd()()()();
          i0.ɵɵelement(267, "div", 66);
          i0.ɵɵelementStart(268, "div", 65)(269, "div", 22)(270, "div", 16)(271, "div", 17)(272, "div", 18)(273, "div", 23);
          i0.ɵɵtext(274, " Consistencia Nota");
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(275, "div", 20);
          i0.ɵɵtext(276, " 54%");
          i0.ɵɵelementEnd()();
          i0.ɵɵelement(277, "div", 21);
          i0.ɵɵelementEnd()()()()();
          i0.ɵɵelementStart(278, "div", 7);
          i0.ɵɵelement(279, "div", 67);
          i0.ɵɵelementStart(280, "div", 68)(281, "div", 44)(282, "table", 45)(283, "thead")(284, "tr")(285, "th");
          i0.ɵɵtext(286, "Textos m\u00E1s relevantes del Alumno");
          i0.ɵɵelementEnd()()();
          i0.ɵɵelementStart(287, "tbody")(288, "tr")(289, "td", 69);
          i0.ɵɵtext(290, " No hay informaci\u00F3n disponible. ");
          i0.ɵɵelementEnd()()()()()();
          i0.ɵɵelementStart(291, "div", 68)(292, "div", 44)(293, "table", 45)(294, "thead")(295, "tr")(296, "th");
          i0.ɵɵtext(297, "Textos m\u00E1s relevantes del Supervisor");
          i0.ɵɵelementEnd()()();
          i0.ɵɵelementStart(298, "tbody")(299, "tr")(300, "td", 70);
          i0.ɵɵtext(301, " No hay informaci\u00F3n disponible. ");
          i0.ɵɵelementEnd()()()()()()()()()()()()()()()()();
          i0.ɵɵelementStart(302, "a", 71);
          i0.ɵɵelement(303, "i", 72);
          i0.ɵɵelementEnd();
          i0.ɵɵelement(304, "app-logout-modal");
          i0.ɵɵelementEnd();
        }
      },
      dependencies: [i1.BarraSuperiorComponent, i2.LogoutModalComponent, i3.BarraLateralEncargadoComponent],
      styles: [".overflow-auto[_ngcontent-%COMP%] {\n  max-height: 200px;\n  font-size: medium;\n}\n\n.overflow-auto_consistencia[_ngcontent-%COMP%] {\n  max-height: 300px;\n  font-size: medium;\n}\n\n.m-0[_ngcontent-%COMP%] {\n  font-size: medium;\n}\n\na.nostyle[_ngcontent-%COMP%]:link {\n  text-decoration: inherit;\n  color: inherit;\n  cursor: auto;\n}\n\na.nostyle[_ngcontent-%COMP%]:visited {\n  text-decoration: inherit;\n  color: inherit;\n  cursor: auto;\n}\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvdmlzdGFzL3dpemFyZHMvZGV0YWxsZS1lc3R1ZGlhbnRlL2RldGFsbGUtZXN0dWRpYW50ZS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGlCQUFBO0VBQ0EsaUJBQUE7QUFDSjs7QUFFQTtFQUNJLGlCQUFBO0VBQ0EsaUJBQUE7QUFDSjs7QUFFQTtFQUNJLGlCQUFBO0FBQ0o7O0FBRUE7RUFDSSx3QkFBQTtFQUNBLGNBQUE7RUFDQSxZQUFBO0FBQ0o7O0FBRUE7RUFDSSx3QkFBQTtFQUNBLGNBQUE7RUFDQSxZQUFBO0FBQ0oiLCJzb3VyY2VzQ29udGVudCI6WyIub3ZlcmZsb3ctYXV0byB7XG4gICAgbWF4LWhlaWdodDogMjAwcHg7XG4gICAgZm9udC1zaXplOiBtZWRpdW07XG59XG5cbi5vdmVyZmxvdy1hdXRvX2NvbnNpc3RlbmNpYSB7XG4gICAgbWF4LWhlaWdodDogMzAwcHg7XG4gICAgZm9udC1zaXplOiBtZWRpdW07XG59XG5cbi5tLTAge1xuICAgIGZvbnQtc2l6ZTogbWVkaXVtO1xufVxuXG5hLm5vc3R5bGU6bGluayB7XG4gICAgdGV4dC1kZWNvcmF0aW9uOiBpbmhlcml0O1xuICAgIGNvbG9yOiBpbmhlcml0O1xuICAgIGN1cnNvcjogYXV0bztcbn1cblxuYS5ub3N0eWxlOnZpc2l0ZWQge1xuICAgIHRleHQtZGVjb3JhdGlvbjogaW5oZXJpdDtcbiAgICBjb2xvcjogaW5oZXJpdDtcbiAgICBjdXJzb3I6IGF1dG87XG59Il0sInNvdXJjZVJvb3QiOiIifQ== */"]
    });
  }
}
exports.DetalleEstudianteComponent = DetalleEstudianteComponent;

/***/ }),

/***/ 69688:
/*!*******************************************************************************************************!*\
  !*** ./src/app/vistas/wizards/info-y-evaluacion-estudiante/info-y-evaluacion-estudiante.component.ts ***!
  \*******************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.InfoYEvaluacionEstudianteComponent = void 0;
const shepherd_js_1 = __webpack_require__(/*! shepherd.js */ 84242);
const i0 = __webpack_require__(/*! @angular/core */ 37580);
const i1 = __webpack_require__(/*! @angular/router */ 95072);
const i2 = __webpack_require__(/*! ../../../componentes/barra-superior/barra-superior.component */ 36370);
const i3 = __webpack_require__(/*! ../../../componentes/logout-modal/logout-modal.component */ 15562);
const i4 = __webpack_require__(/*! ../../../componentes/barra-lateral-encargado/barra-lateral-encargado.component */ 43560);
class InfoYEvaluacionEstudianteComponent {
  constructor(router) {
    this.router = router;
    this.texto_consistencia_informe = "Indica qué tan relacionados están los informes del\n" + "estudiante con lo que escribió su supervisor.\n" + "Para más información, haga click en el botón.";
    this.texto_consistencia_evaluacion = "Indica qué tan relacionada está la evaluación escrita del\n" + "supervisor, con las notas que este mismo le haya puesto.\n" + "Para más información, haga click en el botón.";
    this.texto_interpretacion_nota = "Texto que ayuda a entender qué significa el puntaje\n" + "de consistencia evaluación obtenido.\n";
    this.texto_interpretacion_informes = "Texto que ayuda a entender qué significa el puntaje\n" + "de consistencia informes obtenido.\n";
    this.texto_indice_repeticion = "Es un valor que indica qué tanto contenido de los informes es texto repetido\n" + "Para más información, haga click en el botón.";
    this.texto_promedio_evaluacion = "Es un valor que indica en promedio las aptitudes del estudiante evaluadas por el supervisor";
  }
  ngAfterViewInit() {
    const tour = new shepherd_js_1.default.Tour({
      useModalOverlay: true,
      defaultStepOptions: {
        classes: 'shadow-md bg-purple-dark',
        scrollTo: true,
        cancelIcon: {
          enabled: true
        }
      }
    });
    const botones = [{
      classes: 'shepherd-button-secondary',
      text: 'Salir',
      action: tour.cancel
    }, {
      classes: 'shepherd-button-primary',
      text: 'Atrás',
      action: tour.back
    }, {
      classes: 'shepherd-button-primary',
      text: 'Siguiente',
      action: tour.next
    }];
    const titulo = 'Guía de evaluación de estudiante';
    tour.addSteps([{
      id: 'intro',
      beforeShowPromise: function () {
        return new Promise(function (resolve) {
          setTimeout(function () {
            window.scrollTo(0, 0);
            resolve(1);
          }, 500);
        });
      },
      buttons: [{
        classes: 'shepherd-button-secondary',
        text: 'Salir',
        action: tour.cancel
      }, {
        classes: 'shepherd-button-primary',
        text: 'Siguiente',
        action: tour.next
      }],
      cancelIcon: {
        enabled: true
      },
      highlightClass: 'highlight',
      title: titulo,
      text: ['Bienvenido al sistema de Evaluación de Praxus.<br>Con esta guía usted aprenderá la información que Praxus ofrece para evaluar de mejor manera a los estudiantes.']
    }, {
      id: '1',
      attachTo: {
        element: '#dataTable',
        on: 'bottom'
      },
      buttons: botones,
      highlightClass: 'highlight',
      title: titulo,
      text: ['En esta tabla se muestra la información principal sobre la prácticas de los estudiantes.']
    }, {
      id: '2',
      attachTo: {
        element: '#dataTable',
        on: 'bottom'
      },
      buttons: botones,
      highlightClass: 'highlight',
      title: titulo,
      text: ['Datos importantes, como el nombre, rut y otros datos recolectados por nuestro sistema.']
    }, {
      attachTo: {
        element: '#infobox',
        on: 'bottom'
      },
      buttons: botones,
      highlightClass: 'highlight',
      title: titulo,
      text: ['Al posar el mouse sobre el botón de información, se desplegará una ventana con información sobre el dato de la columna.<br>Al hacer clic podrá ver información extendida sobre aquel dato.']
    }, {
      attachTo: {
        element: '#col_evaluar',
        on: 'bottom'
      },
      buttons: botones,
      highlightClass: 'highlight',
      title: titulo,
      text: ['Una vez la práctica haya sido evaluada, usted podrá revisar los antecedentes y decidir si aprueba o reprueba esta práctica.']
    }, {
      attachTo: {
        element: '#fila',
        on: 'bottom'
      },
      buttons: [{
        classes: 'shepherd-button-secondary',
        text: 'Salir',
        action: tour.cancel
      }, {
        classes: 'shepherd-button-primary',
        text: 'Atrás',
        action: tour.back
      }, {
        classes: 'shepherd-button-primary',
        text: 'Siguiente vista',
        action: () => {
          window.location.href = "/guias/detalle-estudiante";
        }
      }],
      highlightClass: 'highlight',
      title: titulo,
      text: ['Al hacer clic en una fila usted podrá ver los detalles del estudiante.']
    }]);
    tour.start();
  }
  redirecting() {
    this.router.navigate(["/consistencia"]);
  }
  static {
    this.ɵfac = function InfoYEvaluacionEstudianteComponent_Factory(__ngFactoryType__) {
      return new (__ngFactoryType__ || InfoYEvaluacionEstudianteComponent)(i0.ɵɵdirectiveInject(i1.Router));
    };
  }
  static {
    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({
      type: InfoYEvaluacionEstudianteComponent,
      selectors: [["app-info-y-evaluacion-estudiante"]],
      decls: 127,
      vars: 6,
      consts: [["id", "wrapper"], ["id", "content-wrapper", 1, "d-flex", "flex-column"], ["id", "content", 1, "main-content"], [1, "container-fluid"], [1, "h2", "mb-2", "font-weight-bold", "text-gray-800"], [1, "mb-4"], [1, "card", "shadow", "mb-4"], [1, "card-body"], [1, "table-responsive"], ["id", "dataTable", "width", "100%", "cellspacing", "0", 1, "table", "table-striped", "table-bordered", "table-hover"], [2, "vertical-align", "bottom"], ["id", "infobox", "data-toggle", "tooltip", "data-placement", "bottom", 1, "pointer", 3, "title"], [1, "fas", "fa-info-circle"], ["data-toggle", "tooltip", "data-placement", "bottom", 1, "pointer", 3, "title"], [1, "table-item", 2, "vertical-align", "middle"], [2, "vertical-align", "middle"], ["id", "fila"], ["id", "col_evaluar", 2, "vertical-align", "middle"], [1, "container"], [1, "btn", "btn-success", "btn-md", "btn-block"], [1, "btn", "btn-secondary", "btn-md", "btn-block"], ["href", "#page-top", 1, "scroll-to-top", "rounded"], [1, "fas", "fa-angle-up"]],
      template: function InfoYEvaluacionEstudianteComponent_Template(rf, ctx) {
        if (rf & 1) {
          i0.ɵɵelementStart(0, "div", 0);
          i0.ɵɵelement(1, "app-barra-lateral-encargado");
          i0.ɵɵelementStart(2, "div", 1)(3, "div", 2);
          i0.ɵɵelement(4, "app-barra-superior");
          i0.ɵɵelementStart(5, "div", 3)(6, "div", 4);
          i0.ɵɵtext(7, "Pr\u00E1cticas");
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(8, "p", 5);
          i0.ɵɵtext(9, "Aqu\u00ED se pueden ver todas las pr\u00E1cticas que est\u00E1n siendo cursadas actualmente");
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(10, "div", 6)(11, "div", 7)(12, "div", 8)(13, "table", 9)(14, "thead")(15, "tr")(16, "th", 10);
          i0.ɵɵtext(17, "Nombre Estudiante");
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(18, "th", 10);
          i0.ɵɵtext(19, "Rut");
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(20, "th", 10);
          i0.ɵɵtext(21, "Tipo Pr\u00E1ctica");
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(22, "th", 10);
          i0.ɵɵtext(23, "Estado");
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(24, "th", 10);
          i0.ɵɵtext(25, "\u00CDndice Repetici\u00F3n ");
          i0.ɵɵelementStart(26, "a", 11);
          i0.ɵɵelement(27, "i", 12);
          i0.ɵɵelementEnd()();
          i0.ɵɵelementStart(28, "th", 10);
          i0.ɵɵtext(29, "Consistencia Informes ");
          i0.ɵɵelementStart(30, "a", 13);
          i0.ɵɵelement(31, "i", 12);
          i0.ɵɵelementEnd()();
          i0.ɵɵelementStart(32, "th", 10);
          i0.ɵɵtext(33, "Consistencia Evaluaci\u00F3n ");
          i0.ɵɵelementStart(34, "a", 13);
          i0.ɵɵelement(35, "i", 12);
          i0.ɵɵelementEnd()();
          i0.ɵɵelementStart(36, "th", 10);
          i0.ɵɵtext(37, "Interpretaci\u00F3n Informes ");
          i0.ɵɵelementStart(38, "a", 13);
          i0.ɵɵelement(39, "i", 12);
          i0.ɵɵelementEnd()();
          i0.ɵɵelementStart(40, "th", 10);
          i0.ɵɵtext(41, "Interpretaci\u00F3n Nota ");
          i0.ɵɵelementStart(42, "a", 13);
          i0.ɵɵelement(43, "i", 12);
          i0.ɵɵelementEnd()();
          i0.ɵɵelementStart(44, "th", 10);
          i0.ɵɵtext(45, "Promedio Evaluaci\u00F3n ");
          i0.ɵɵelementStart(46, "a", 13);
          i0.ɵɵelement(47, "i", 12);
          i0.ɵɵelementEnd()();
          i0.ɵɵelementStart(48, "th", 10);
          i0.ɵɵtext(49, "Aprobaci\u00F3n");
          i0.ɵɵelementEnd()()();
          i0.ɵɵelementStart(50, "tbody")(51, "tr")(52, "td", 14);
          i0.ɵɵtext(53, " Fidel Castro ");
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(54, "td", 14);
          i0.ɵɵtext(55, " 123-1 ");
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(56, "td", 14);
          i0.ɵɵtext(57, " Revoluci\u00F3n industrial 1 ");
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(58, "td", 14);
          i0.ɵɵtext(59, " Evaluada ");
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(60, "td", 14);
          i0.ɵɵtext(61, " 60% ");
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(62, "td", 14);
          i0.ɵɵtext(63, " 77% ");
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(64, "td", 14);
          i0.ɵɵtext(65, " 90%");
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(66, "td", 14);
          i0.ɵɵtext(67, " Los informes del estudiante son consistentes con los del supervisor ");
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(68, "td", 14);
          i0.ɵɵtext(69, " El puntaje de la evaluaci\u00F3n es similar la detectada en el informe ");
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(70, "td", 14);
          i0.ɵɵtext(71, " 1,25 ");
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(72, "td", 15);
          i0.ɵɵtext(73, " Reprobado ");
          i0.ɵɵelementEnd()();
          i0.ɵɵelementStart(74, "tr", 16)(75, "td", 14);
          i0.ɵɵtext(76, " \u6BDB\u6FA4\u6771 ");
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(77, "td", 14);
          i0.ɵɵtext(78, " 168326-k ");
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(79, "td", 14);
          i0.ɵɵtext(80, " Revoluci\u00F3n industrial 1 ");
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(81, "td", 14);
          i0.ɵɵtext(82, " Evaluada ");
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(83, "td", 14);
          i0.ɵɵtext(84, " 64% ");
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(85, "td", 14);
          i0.ɵɵtext(86, " 45% ");
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(87, "td", 14);
          i0.ɵɵtext(88, " 55% ");
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(89, "td", 14);
          i0.ɵɵtext(90, " Los informes del estudiante son consistentes con los del supervisor ");
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(91, "td", 14);
          i0.ɵɵtext(92, " El puntaje de la evaluaci\u00F3n est\u00E1 alejada de la detectada por la plataforma ");
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(93, "td", 14);
          i0.ɵɵtext(94, " 3,7 ");
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(95, "td", 17)(96, "div", 18)(97, "button", 19);
          i0.ɵɵtext(98, "Aprobar");
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(99, "button", 20);
          i0.ɵɵtext(100, "Reprobar");
          i0.ɵɵelementEnd()()()();
          i0.ɵɵelementStart(101, "tr")(102, "td", 14);
          i0.ɵɵtext(103, " I\u00F3sif Stalin ");
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(104, "td", 14);
          i0.ɵɵtext(105, " 666-1 ");
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(106, "td", 14);
          i0.ɵɵtext(107, " Pr\u00E1ctica profesional ");
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(108, "td", 14);
          i0.ɵɵtext(109, " En curso ");
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(110, "td", 14);
          i0.ɵɵtext(111, " - ");
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(112, "td", 14);
          i0.ɵɵtext(113, " - ");
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(114, "td", 14);
          i0.ɵɵtext(115, " - ");
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(116, "td", 14);
          i0.ɵɵtext(117, " - ");
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(118, "td", 14);
          i0.ɵɵtext(119, " - ");
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(120, "td", 14);
          i0.ɵɵtext(121, " - ");
          i0.ɵɵelementEnd();
          i0.ɵɵelementStart(122, "td", 15);
          i0.ɵɵtext(123, " Esperando evaluaci\u00F3n del supervisor ");
          i0.ɵɵelementEnd()()()()()()()()()()();
          i0.ɵɵelementStart(124, "a", 21);
          i0.ɵɵelement(125, "i", 22);
          i0.ɵɵelementEnd();
          i0.ɵɵelement(126, "app-logout-modal");
        }
        if (rf & 2) {
          i0.ɵɵadvance(26);
          i0.ɵɵpropertyInterpolate("title", ctx.texto_indice_repeticion);
          i0.ɵɵadvance(4);
          i0.ɵɵpropertyInterpolate("title", ctx.texto_consistencia_informe);
          i0.ɵɵadvance(4);
          i0.ɵɵpropertyInterpolate("title", ctx.texto_consistencia_evaluacion);
          i0.ɵɵadvance(4);
          i0.ɵɵpropertyInterpolate("title", ctx.texto_interpretacion_informes);
          i0.ɵɵadvance(4);
          i0.ɵɵpropertyInterpolate("title", ctx.texto_interpretacion_nota);
          i0.ɵɵadvance(4);
          i0.ɵɵpropertyInterpolate("title", ctx.texto_promedio_evaluacion);
        }
      },
      dependencies: [i2.BarraSuperiorComponent, i3.LogoutModalComponent, i4.BarraLateralEncargadoComponent],
      styles: ["/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */"]
    });
  }
}
exports.InfoYEvaluacionEstudianteComponent = InfoYEvaluacionEstudianteComponent;

/***/ }),

/***/ 6965:
/*!************************************************!*\
  !*** ./src/environments/environment.common.ts ***!
  \************************************************/
/***/ ((__unused_webpack_module, exports) => {



Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.commonEnv = void 0;
exports.commonEnv = {
  ruta_practicas: 'practicas',
  ruta_alumno: 'alumno',
  ruta_login: 'login',
  ruta_supervisor: 'supervisor',
  ruta_registro: 'registro',
  ruta_documento_extra: "documento_extra",
  ruta_documento: "documento",
  ruta_informe: "informe",
  ruta_reset_pass: "resetPass",
  url_back: 'https://praxusback.hopto.org:3000',
  url_back_chat: 'https://praxusback.hopto.org:5000',
  url_front: 'https://praxus.hopto.org',
  estado_practica: {
    no_iniciada: 'No iniciada',
    en_curso: 'En curso',
    finalizada: 'Finalizada',
    reprobada: 'Reprobada',
    aprobada: 'Aprobada',
    evaluada: 'Evaluada',
    esperando_confirmacion: 'Esperando confirmacion'
  }
};

/***/ }),

/***/ 45312:
/*!*****************************************!*\
  !*** ./src/environments/environment.ts ***!
  \*****************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.environment = void 0;
const environment_common_1 = __webpack_require__(/*! ./environment.common */ 6965);
const env = {
  url_back: 'http://localhost:3000',
  url_back_chat: 'http://localhost:5000',
  url_front: 'http://localhost:4200'
};
exports.environment = Object.assign(environment_common_1.commonEnv, env);

/***/ }),

/***/ 84429:
/*!*********************!*\
  !*** ./src/main.ts ***!
  \*********************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



/// <reference types="@angular/localize" />
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
const __NgCli_bootstrap_1 = __webpack_require__(/*! @angular/platform-browser */ 80436);
const app_module_1 = __webpack_require__(/*! ./app/app.module */ 50635);
__NgCli_bootstrap_1.platformBrowser().bootstrapModule(app_module_1.AppModule).catch(err => console.error(err));

/***/ })

},
/******/ __webpack_require__ => { // webpackRuntimeModules
/******/ var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
/******/ __webpack_require__.O(0, ["vendor"], () => (__webpack_exec__(1643), __webpack_exec__(84429)));
/******/ var __webpack_exports__ = __webpack_require__.O();
/******/ }
]);
//# sourceMappingURL=main.js.map